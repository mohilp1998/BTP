-- VHDL produced by vc2vhdl from virtual circuit (vc) description 
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity add_round_key is -- 
  generic (tag_length : integer); 
  port ( -- 
    k_0 : in  std_logic_vector(31 downto 0);
    k_1 : in  std_logic_vector(31 downto 0);
    k_2 : in  std_logic_vector(31 downto 0);
    k_3 : in  std_logic_vector(31 downto 0);
    w_0 : in  std_logic_vector(31 downto 0);
    w_1 : in  std_logic_vector(31 downto 0);
    w_2 : in  std_logic_vector(31 downto 0);
    w_3 : in  std_logic_vector(31 downto 0);
    round_num : in  std_logic_vector(7 downto 0);
    nk_0 : out  std_logic_vector(31 downto 0);
    nk_1 : out  std_logic_vector(31 downto 0);
    nk_2 : out  std_logic_vector(31 downto 0);
    nk_3 : out  std_logic_vector(31 downto 0);
    nw_0 : out  std_logic_vector(31 downto 0);
    nw_1 : out  std_logic_vector(31 downto 0);
    nw_2 : out  std_logic_vector(31 downto 0);
    nw_3 : out  std_logic_vector(31 downto 0);
    memory_space_1_lr_req : out  std_logic_vector(0 downto 0);
    memory_space_1_lr_ack : in   std_logic_vector(0 downto 0);
    memory_space_1_lr_addr : out  std_logic_vector(3 downto 0);
    memory_space_1_lr_tag :  out  std_logic_vector(17 downto 0);
    memory_space_1_lc_req : out  std_logic_vector(0 downto 0);
    memory_space_1_lc_ack : in   std_logic_vector(0 downto 0);
    memory_space_1_lc_data : in   std_logic_vector(31 downto 0);
    memory_space_1_lc_tag :  in  std_logic_vector(0 downto 0);
    sbox_transform_call_reqs : out  std_logic_vector(0 downto 0);
    sbox_transform_call_acks : in   std_logic_vector(0 downto 0);
    sbox_transform_call_data : out  std_logic_vector(7 downto 0);
    sbox_transform_call_tag  :  out  std_logic_vector(2 downto 0);
    sbox_transform_return_reqs : out  std_logic_vector(0 downto 0);
    sbox_transform_return_acks : in   std_logic_vector(0 downto 0);
    sbox_transform_return_data : in   std_logic_vector(7 downto 0);
    sbox_transform_return_tag :  in   std_logic_vector(2 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity add_round_key;
architecture add_round_key_arch of add_round_key is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 264)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 256)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal k_0_buffer :  std_logic_vector(31 downto 0);
  signal k_0_update_enable: Boolean;
  signal k_1_buffer :  std_logic_vector(31 downto 0);
  signal k_1_update_enable: Boolean;
  signal k_2_buffer :  std_logic_vector(31 downto 0);
  signal k_2_update_enable: Boolean;
  signal k_3_buffer :  std_logic_vector(31 downto 0);
  signal k_3_update_enable: Boolean;
  signal w_0_buffer :  std_logic_vector(31 downto 0);
  signal w_0_update_enable: Boolean;
  signal w_1_buffer :  std_logic_vector(31 downto 0);
  signal w_1_update_enable: Boolean;
  signal w_2_buffer :  std_logic_vector(31 downto 0);
  signal w_2_update_enable: Boolean;
  signal w_3_buffer :  std_logic_vector(31 downto 0);
  signal w_3_update_enable: Boolean;
  signal round_num_buffer :  std_logic_vector(7 downto 0);
  signal round_num_update_enable: Boolean;
  -- output port buffer signals
  signal nk_0_buffer :  std_logic_vector(31 downto 0);
  signal nk_0_update_enable: Boolean;
  signal nk_1_buffer :  std_logic_vector(31 downto 0);
  signal nk_1_update_enable: Boolean;
  signal nk_2_buffer :  std_logic_vector(31 downto 0);
  signal nk_2_update_enable: Boolean;
  signal nk_3_buffer :  std_logic_vector(31 downto 0);
  signal nk_3_update_enable: Boolean;
  signal nw_0_buffer :  std_logic_vector(31 downto 0);
  signal nw_0_update_enable: Boolean;
  signal nw_1_buffer :  std_logic_vector(31 downto 0);
  signal nw_1_update_enable: Boolean;
  signal nw_2_buffer :  std_logic_vector(31 downto 0);
  signal nw_2_update_enable: Boolean;
  signal nw_3_buffer :  std_logic_vector(31 downto 0);
  signal nw_3_update_enable: Boolean;
  signal add_round_key_CP_125_start: Boolean;
  signal add_round_key_CP_125_symbol: Boolean;
  -- volatile/operator module components. 
  component sbox_transform is -- 
    generic (tag_length : integer); 
    port ( -- 
      num_0 : in  std_logic_vector(7 downto 0);
      num_1 : out  std_logic_vector(7 downto 0);
      memory_space_2_lr_req : out  std_logic_vector(0 downto 0);
      memory_space_2_lr_ack : in   std_logic_vector(0 downto 0);
      memory_space_2_lr_addr : out  std_logic_vector(7 downto 0);
      memory_space_2_lr_tag :  out  std_logic_vector(17 downto 0);
      memory_space_2_lc_req : out  std_logic_vector(0 downto 0);
      memory_space_2_lc_ack : in   std_logic_vector(0 downto 0);
      memory_space_2_lc_data : in   std_logic_vector(7 downto 0);
      memory_space_2_lc_tag :  in  std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal call_stmt_115_call_req_0 : boolean;
  signal call_stmt_115_call_ack_0 : boolean;
  signal call_stmt_115_call_req_1 : boolean;
  signal call_stmt_115_call_ack_1 : boolean;
  signal XOR_u32_u32_80_inst_req_0 : boolean;
  signal XOR_u32_u32_80_inst_ack_0 : boolean;
  signal XOR_u32_u32_80_inst_req_1 : boolean;
  signal XOR_u32_u32_80_inst_ack_1 : boolean;
  signal XOR_u32_u32_85_inst_req_0 : boolean;
  signal XOR_u32_u32_85_inst_ack_0 : boolean;
  signal XOR_u32_u32_85_inst_req_1 : boolean;
  signal XOR_u32_u32_85_inst_ack_1 : boolean;
  signal XOR_u32_u32_90_inst_req_0 : boolean;
  signal XOR_u32_u32_90_inst_ack_0 : boolean;
  signal XOR_u32_u32_90_inst_req_1 : boolean;
  signal XOR_u32_u32_90_inst_ack_1 : boolean;
  signal XOR_u32_u32_95_inst_req_0 : boolean;
  signal XOR_u32_u32_95_inst_ack_0 : boolean;
  signal XOR_u32_u32_95_inst_req_1 : boolean;
  signal XOR_u32_u32_95_inst_ack_1 : boolean;
  signal slice_99_inst_req_0 : boolean;
  signal slice_99_inst_ack_0 : boolean;
  signal slice_99_inst_req_1 : boolean;
  signal slice_99_inst_ack_1 : boolean;
  signal slice_103_inst_req_0 : boolean;
  signal slice_103_inst_ack_0 : boolean;
  signal slice_103_inst_req_1 : boolean;
  signal slice_103_inst_ack_1 : boolean;
  signal slice_107_inst_req_0 : boolean;
  signal slice_107_inst_ack_0 : boolean;
  signal slice_107_inst_req_1 : boolean;
  signal slice_107_inst_ack_1 : boolean;
  signal slice_111_inst_req_0 : boolean;
  signal slice_111_inst_ack_0 : boolean;
  signal slice_111_inst_req_1 : boolean;
  signal slice_111_inst_ack_1 : boolean;
  signal call_stmt_118_call_req_0 : boolean;
  signal call_stmt_118_call_ack_0 : boolean;
  signal call_stmt_118_call_req_1 : boolean;
  signal call_stmt_118_call_ack_1 : boolean;
  signal call_stmt_121_call_req_0 : boolean;
  signal call_stmt_121_call_ack_0 : boolean;
  signal call_stmt_121_call_req_1 : boolean;
  signal call_stmt_121_call_ack_1 : boolean;
  signal call_stmt_124_call_req_0 : boolean;
  signal call_stmt_124_call_ack_0 : boolean;
  signal call_stmt_124_call_req_1 : boolean;
  signal call_stmt_124_call_ack_1 : boolean;
  signal CONCAT_u8_u16_128_inst_req_0 : boolean;
  signal CONCAT_u8_u16_128_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_128_inst_req_1 : boolean;
  signal CONCAT_u8_u16_128_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_133_inst_req_0 : boolean;
  signal CONCAT_u8_u16_133_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_133_inst_req_1 : boolean;
  signal CONCAT_u8_u16_133_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_138_inst_req_0 : boolean;
  signal CONCAT_u16_u32_138_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_138_inst_req_1 : boolean;
  signal CONCAT_u16_u32_138_inst_ack_1 : boolean;
  signal array_obj_ref_142_load_0_req_0 : boolean;
  signal array_obj_ref_142_load_0_ack_0 : boolean;
  signal array_obj_ref_142_load_0_req_1 : boolean;
  signal array_obj_ref_142_load_0_ack_1 : boolean;
  signal XOR_u32_u32_147_inst_req_0 : boolean;
  signal XOR_u32_u32_147_inst_ack_0 : boolean;
  signal XOR_u32_u32_147_inst_req_1 : boolean;
  signal XOR_u32_u32_147_inst_ack_1 : boolean;
  signal XOR_u32_u32_152_inst_req_0 : boolean;
  signal XOR_u32_u32_152_inst_ack_0 : boolean;
  signal XOR_u32_u32_152_inst_req_1 : boolean;
  signal XOR_u32_u32_152_inst_ack_1 : boolean;
  signal XOR_u32_u32_157_inst_req_0 : boolean;
  signal XOR_u32_u32_157_inst_ack_0 : boolean;
  signal XOR_u32_u32_157_inst_req_1 : boolean;
  signal XOR_u32_u32_157_inst_ack_1 : boolean;
  signal XOR_u32_u32_162_inst_req_0 : boolean;
  signal XOR_u32_u32_162_inst_ack_0 : boolean;
  signal XOR_u32_u32_162_inst_req_1 : boolean;
  signal XOR_u32_u32_162_inst_ack_1 : boolean;
  signal XOR_u32_u32_167_inst_req_0 : boolean;
  signal XOR_u32_u32_167_inst_ack_0 : boolean;
  signal XOR_u32_u32_167_inst_req_1 : boolean;
  signal XOR_u32_u32_167_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "add_round_key_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 264) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(31 downto 0) <= k_0;
  k_0_buffer <= in_buffer_data_out(31 downto 0);
  in_buffer_data_in(63 downto 32) <= k_1;
  k_1_buffer <= in_buffer_data_out(63 downto 32);
  in_buffer_data_in(95 downto 64) <= k_2;
  k_2_buffer <= in_buffer_data_out(95 downto 64);
  in_buffer_data_in(127 downto 96) <= k_3;
  k_3_buffer <= in_buffer_data_out(127 downto 96);
  in_buffer_data_in(159 downto 128) <= w_0;
  w_0_buffer <= in_buffer_data_out(159 downto 128);
  in_buffer_data_in(191 downto 160) <= w_1;
  w_1_buffer <= in_buffer_data_out(191 downto 160);
  in_buffer_data_in(223 downto 192) <= w_2;
  w_2_buffer <= in_buffer_data_out(223 downto 192);
  in_buffer_data_in(255 downto 224) <= w_3;
  w_3_buffer <= in_buffer_data_out(255 downto 224);
  in_buffer_data_in(263 downto 256) <= round_num;
  round_num_buffer <= in_buffer_data_out(263 downto 256);
  in_buffer_data_in(tag_length + 263 downto 264) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 263 downto 264);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  add_round_key_CP_125_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "add_round_key_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 256) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(31 downto 0) <= nk_0_buffer;
  nk_0 <= out_buffer_data_out(31 downto 0);
  out_buffer_data_in(63 downto 32) <= nk_1_buffer;
  nk_1 <= out_buffer_data_out(63 downto 32);
  out_buffer_data_in(95 downto 64) <= nk_2_buffer;
  nk_2 <= out_buffer_data_out(95 downto 64);
  out_buffer_data_in(127 downto 96) <= nk_3_buffer;
  nk_3 <= out_buffer_data_out(127 downto 96);
  out_buffer_data_in(159 downto 128) <= nw_0_buffer;
  nw_0 <= out_buffer_data_out(159 downto 128);
  out_buffer_data_in(191 downto 160) <= nw_1_buffer;
  nw_1 <= out_buffer_data_out(191 downto 160);
  out_buffer_data_in(223 downto 192) <= nw_2_buffer;
  nw_2 <= out_buffer_data_out(223 downto 192);
  out_buffer_data_in(255 downto 224) <= nw_3_buffer;
  nw_3 <= out_buffer_data_out(255 downto 224);
  out_buffer_data_in(tag_length + 255 downto 256) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 255 downto 256);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= add_round_key_CP_125_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= add_round_key_CP_125_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= add_round_key_CP_125_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  add_round_key_CP_125: Block -- control-path 
    signal add_round_key_CP_125_elements: BooleanArray(47 downto 0);
    -- 
  begin -- 
    add_round_key_CP_125_elements(0) <= add_round_key_CP_125_start;
    add_round_key_CP_125_symbol <= add_round_key_CP_125_elements(47);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	42 
    -- CP-element group 0: 	37 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	40 
    -- CP-element group 0: 	44 
    -- CP-element group 0: 	46 
    -- CP-element group 0: 	35 
    -- CP-element group 0: 	5 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	7 
    -- CP-element group 0: 	8 
    -- CP-element group 0: 	9 
    -- CP-element group 0: 	10 
    -- CP-element group 0: 	11 
    -- CP-element group 0: 	12 
    -- CP-element group 0: 	13 
    -- CP-element group 0: 	14 
    -- CP-element group 0: 	15 
    -- CP-element group 0: 	16 
    -- CP-element group 0: 	18 
    -- CP-element group 0: 	20 
    -- CP-element group 0: 	22 
    -- CP-element group 0: 	24 
    -- CP-element group 0: 	27 
    -- CP-element group 0: 	30 
    -- CP-element group 0: 	33 
    -- CP-element group 0: 	34 
    -- CP-element group 0:  members (122) 
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_115_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_115_Update/ccr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_118_update_start_
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_80_sample_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_80_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_80_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_80_Sample/rr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_80_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_80_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_85_sample_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_85_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_85_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_85_Sample/rr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_85_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_85_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_90_sample_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_90_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_90_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_90_Sample/rr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_90_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_90_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_95_sample_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_95_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_95_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_95_Sample/rr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_95_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_95_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_99_sample_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_99_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_99_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_99_Sample/rr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_99_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_99_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_103_sample_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_103_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_103_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_103_Sample/rr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_103_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_103_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_107_sample_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_107_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_107_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_107_Sample/rr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_107_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_107_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_111_sample_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_111_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_111_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_111_Sample/rr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_111_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/slice_111_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_115_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_118_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_118_Update/ccr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_121_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_121_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_121_Update/ccr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_124_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_124_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_124_Update/ccr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_128_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_128_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_128_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_133_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_133_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_133_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u16_u32_138_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u16_u32_138_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u16_u32_138_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_sample_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_word_address_calculated
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_root_address_calculated
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_offset_calculated
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_index_resized_0
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_index_scaled_0
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_index_computed_0
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_index_resize_0/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_index_resize_0/$exit
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_index_resize_0/index_resize_req
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_index_resize_0/index_resize_ack
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_index_scale_0/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_index_scale_0/$exit
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_index_scale_0/scale_rename_req
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_index_scale_0/scale_rename_ack
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_final_index_sum_regn/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_final_index_sum_regn/$exit
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_final_index_sum_regn/req
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_final_index_sum_regn/ack
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_base_plus_offset/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_base_plus_offset/$exit
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_base_plus_offset/sum_rename_req
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_base_plus_offset/sum_rename_ack
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_word_addrgen/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_word_addrgen/$exit
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_word_addrgen/root_register_req
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_word_addrgen/root_register_ack
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Sample/word_access_start/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Sample/word_access_start/word_0/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Sample/word_access_start/word_0/rr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Update/word_access_complete/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Update/word_access_complete/word_0/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Update/word_access_complete/word_0/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_147_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_147_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_147_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_152_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_152_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_152_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_157_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_157_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_157_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_162_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_162_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_162_Update/cr
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_167_update_start_
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_167_Update/$entry
      -- CP-element group 0: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_167_Update/cr
      -- 
    cr_458_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_458_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_162_inst_req_1); -- 
    cr_416_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_416_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_147_inst_req_1); -- 
    cr_430_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_430_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_152_inst_req_1); -- 
    cr_143_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_143_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_80_inst_req_1); -- 
    rr_152_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_152_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_85_inst_req_0); -- 
    cr_157_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_157_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_85_inst_req_1); -- 
    rr_166_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_166_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_90_inst_req_0); -- 
    cr_171_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_171_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_90_inst_req_1); -- 
    cr_444_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_444_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_157_inst_req_1); -- 
    cr_472_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_472_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_167_inst_req_1); -- 
    rr_138_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_138_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_80_inst_req_0); -- 
    rr_180_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_180_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_95_inst_req_0); -- 
    cr_185_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_185_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => XOR_u32_u32_95_inst_req_1); -- 
    rr_194_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_194_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => slice_99_inst_req_0); -- 
    cr_199_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_199_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => slice_99_inst_req_1); -- 
    rr_208_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_208_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => slice_103_inst_req_0); -- 
    cr_213_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_213_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => slice_103_inst_req_1); -- 
    rr_222_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_222_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => slice_107_inst_req_0); -- 
    cr_227_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_227_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => slice_107_inst_req_1); -- 
    rr_236_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_236_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => slice_111_inst_req_0); -- 
    cr_241_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_241_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => slice_111_inst_req_1); -- 
    ccr_255_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_255_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => call_stmt_115_call_req_1); -- 
    ccr_269_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_269_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => call_stmt_118_call_req_1); -- 
    ccr_283_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_283_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => call_stmt_121_call_req_1); -- 
    ccr_297_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_297_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => call_stmt_124_call_req_1); -- 
    cr_311_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_311_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => CONCAT_u8_u16_128_inst_req_1); -- 
    cr_325_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_325_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => CONCAT_u8_u16_133_inst_req_1); -- 
    cr_339_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_339_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => CONCAT_u16_u32_138_inst_req_1); -- 
    cr_397_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_397_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => array_obj_ref_142_load_0_req_1); -- 
    rr_386_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_386_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(0), ack => array_obj_ref_142_load_0_req_0); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_80_sample_completed_
      -- CP-element group 1: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_80_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_80_Sample/ra
      -- 
    ra_139_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_80_inst_ack_0, ack => add_round_key_CP_125_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	47 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_80_update_completed_
      -- CP-element group 2: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_80_Update/$exit
      -- CP-element group 2: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_80_Update/ca
      -- 
    ca_144_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_80_inst_ack_1, ack => add_round_key_CP_125_elements(2)); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_85_sample_completed_
      -- CP-element group 3: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_85_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_85_Sample/ra
      -- 
    ra_153_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_85_inst_ack_0, ack => add_round_key_CP_125_elements(3)); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	47 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_85_update_completed_
      -- CP-element group 4: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_85_Update/$exit
      -- CP-element group 4: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_85_Update/ca
      -- 
    ca_158_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_85_inst_ack_1, ack => add_round_key_CP_125_elements(4)); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	0 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_90_sample_completed_
      -- CP-element group 5: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_90_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_90_Sample/ra
      -- 
    ra_167_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_90_inst_ack_0, ack => add_round_key_CP_125_elements(5)); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	47 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_90_update_completed_
      -- CP-element group 6: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_90_Update/$exit
      -- CP-element group 6: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_90_Update/ca
      -- 
    ca_172_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_90_inst_ack_1, ack => add_round_key_CP_125_elements(6)); -- 
    -- CP-element group 7:  transition  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	0 
    -- CP-element group 7: successors 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_95_sample_completed_
      -- CP-element group 7: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_95_Sample/$exit
      -- CP-element group 7: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_95_Sample/ra
      -- 
    ra_181_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_95_inst_ack_0, ack => add_round_key_CP_125_elements(7)); -- 
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	0 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	47 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_95_update_completed_
      -- CP-element group 8: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_95_Update/$exit
      -- CP-element group 8: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_95_Update/ca
      -- 
    ca_186_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_95_inst_ack_1, ack => add_round_key_CP_125_elements(8)); -- 
    -- CP-element group 9:  transition  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	0 
    -- CP-element group 9: successors 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 assign_stmt_81_to_assign_stmt_168/slice_99_sample_completed_
      -- CP-element group 9: 	 assign_stmt_81_to_assign_stmt_168/slice_99_Sample/$exit
      -- CP-element group 9: 	 assign_stmt_81_to_assign_stmt_168/slice_99_Sample/ra
      -- 
    ra_195_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_99_inst_ack_0, ack => add_round_key_CP_125_elements(9)); -- 
    -- CP-element group 10:  transition  input  output  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	0 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	17 
    -- CP-element group 10:  members (6) 
      -- CP-element group 10: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_115_Sample/crr
      -- CP-element group 10: 	 assign_stmt_81_to_assign_stmt_168/slice_99_update_completed_
      -- CP-element group 10: 	 assign_stmt_81_to_assign_stmt_168/slice_99_Update/$exit
      -- CP-element group 10: 	 assign_stmt_81_to_assign_stmt_168/slice_99_Update/ca
      -- CP-element group 10: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_115_sample_start_
      -- CP-element group 10: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_115_Sample/$entry
      -- 
    ca_200_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_99_inst_ack_1, ack => add_round_key_CP_125_elements(10)); -- 
    crr_250_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_250_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(10), ack => call_stmt_115_call_req_0); -- 
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	0 
    -- CP-element group 11: successors 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 assign_stmt_81_to_assign_stmt_168/slice_103_sample_completed_
      -- CP-element group 11: 	 assign_stmt_81_to_assign_stmt_168/slice_103_Sample/$exit
      -- CP-element group 11: 	 assign_stmt_81_to_assign_stmt_168/slice_103_Sample/ra
      -- 
    ra_209_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_103_inst_ack_0, ack => add_round_key_CP_125_elements(11)); -- 
    -- CP-element group 12:  transition  input  output  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	0 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	19 
    -- CP-element group 12:  members (6) 
      -- CP-element group 12: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_118_sample_start_
      -- CP-element group 12: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_118_Sample/$entry
      -- CP-element group 12: 	 assign_stmt_81_to_assign_stmt_168/slice_103_update_completed_
      -- CP-element group 12: 	 assign_stmt_81_to_assign_stmt_168/slice_103_Update/$exit
      -- CP-element group 12: 	 assign_stmt_81_to_assign_stmt_168/slice_103_Update/ca
      -- CP-element group 12: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_118_Sample/crr
      -- 
    ca_214_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_103_inst_ack_1, ack => add_round_key_CP_125_elements(12)); -- 
    crr_264_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_264_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(12), ack => call_stmt_118_call_req_0); -- 
    -- CP-element group 13:  transition  input  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	0 
    -- CP-element group 13: successors 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 assign_stmt_81_to_assign_stmt_168/slice_107_sample_completed_
      -- CP-element group 13: 	 assign_stmt_81_to_assign_stmt_168/slice_107_Sample/$exit
      -- CP-element group 13: 	 assign_stmt_81_to_assign_stmt_168/slice_107_Sample/ra
      -- 
    ra_223_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_107_inst_ack_0, ack => add_round_key_CP_125_elements(13)); -- 
    -- CP-element group 14:  transition  input  output  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	0 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	21 
    -- CP-element group 14:  members (6) 
      -- CP-element group 14: 	 assign_stmt_81_to_assign_stmt_168/slice_107_update_completed_
      -- CP-element group 14: 	 assign_stmt_81_to_assign_stmt_168/slice_107_Update/$exit
      -- CP-element group 14: 	 assign_stmt_81_to_assign_stmt_168/slice_107_Update/ca
      -- CP-element group 14: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_121_sample_start_
      -- CP-element group 14: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_121_Sample/$entry
      -- CP-element group 14: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_121_Sample/crr
      -- 
    ca_228_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_107_inst_ack_1, ack => add_round_key_CP_125_elements(14)); -- 
    crr_278_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_278_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(14), ack => call_stmt_121_call_req_0); -- 
    -- CP-element group 15:  transition  input  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	0 
    -- CP-element group 15: successors 
    -- CP-element group 15:  members (3) 
      -- CP-element group 15: 	 assign_stmt_81_to_assign_stmt_168/slice_111_sample_completed_
      -- CP-element group 15: 	 assign_stmt_81_to_assign_stmt_168/slice_111_Sample/$exit
      -- CP-element group 15: 	 assign_stmt_81_to_assign_stmt_168/slice_111_Sample/ra
      -- 
    ra_237_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_111_inst_ack_0, ack => add_round_key_CP_125_elements(15)); -- 
    -- CP-element group 16:  transition  input  output  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	0 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	23 
    -- CP-element group 16:  members (6) 
      -- CP-element group 16: 	 assign_stmt_81_to_assign_stmt_168/slice_111_update_completed_
      -- CP-element group 16: 	 assign_stmt_81_to_assign_stmt_168/slice_111_Update/$exit
      -- CP-element group 16: 	 assign_stmt_81_to_assign_stmt_168/slice_111_Update/ca
      -- CP-element group 16: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_124_sample_start_
      -- CP-element group 16: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_124_Sample/$entry
      -- CP-element group 16: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_124_Sample/crr
      -- 
    ca_242_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_111_inst_ack_1, ack => add_round_key_CP_125_elements(16)); -- 
    crr_292_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_292_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(16), ack => call_stmt_124_call_req_0); -- 
    -- CP-element group 17:  transition  input  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	10 
    -- CP-element group 17: successors 
    -- CP-element group 17:  members (3) 
      -- CP-element group 17: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_115_Sample/cra
      -- CP-element group 17: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_115_sample_completed_
      -- CP-element group 17: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_115_Sample/$exit
      -- 
    cra_251_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 17_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_115_call_ack_0, ack => add_round_key_CP_125_elements(17)); -- 
    -- CP-element group 18:  transition  input  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	0 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	28 
    -- CP-element group 18:  members (3) 
      -- CP-element group 18: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_115_Update/$exit
      -- CP-element group 18: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_115_Update/cca
      -- CP-element group 18: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_115_update_completed_
      -- 
    cca_256_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_115_call_ack_1, ack => add_round_key_CP_125_elements(18)); -- 
    -- CP-element group 19:  transition  input  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	12 
    -- CP-element group 19: successors 
    -- CP-element group 19:  members (3) 
      -- CP-element group 19: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_118_sample_completed_
      -- CP-element group 19: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_118_Sample/$exit
      -- CP-element group 19: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_118_Sample/cra
      -- 
    cra_265_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_118_call_ack_0, ack => add_round_key_CP_125_elements(19)); -- 
    -- CP-element group 20:  transition  input  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	0 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	25 
    -- CP-element group 20:  members (3) 
      -- CP-element group 20: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_118_update_completed_
      -- CP-element group 20: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_118_Update/$exit
      -- CP-element group 20: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_118_Update/cca
      -- 
    cca_270_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 20_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_118_call_ack_1, ack => add_round_key_CP_125_elements(20)); -- 
    -- CP-element group 21:  transition  input  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	14 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (3) 
      -- CP-element group 21: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_121_sample_completed_
      -- CP-element group 21: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_121_Sample/$exit
      -- CP-element group 21: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_121_Sample/cra
      -- 
    cra_279_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_121_call_ack_0, ack => add_round_key_CP_125_elements(21)); -- 
    -- CP-element group 22:  transition  input  bypass 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	0 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	25 
    -- CP-element group 22:  members (3) 
      -- CP-element group 22: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_121_update_completed_
      -- CP-element group 22: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_121_Update/$exit
      -- CP-element group 22: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_121_Update/cca
      -- 
    cca_284_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 22_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_121_call_ack_1, ack => add_round_key_CP_125_elements(22)); -- 
    -- CP-element group 23:  transition  input  bypass 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	16 
    -- CP-element group 23: successors 
    -- CP-element group 23:  members (3) 
      -- CP-element group 23: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_124_sample_completed_
      -- CP-element group 23: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_124_Sample/$exit
      -- CP-element group 23: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_124_Sample/cra
      -- 
    cra_293_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 23_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_124_call_ack_0, ack => add_round_key_CP_125_elements(23)); -- 
    -- CP-element group 24:  transition  input  bypass 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	0 
    -- CP-element group 24: successors 
    -- CP-element group 24: 	28 
    -- CP-element group 24:  members (3) 
      -- CP-element group 24: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_124_update_completed_
      -- CP-element group 24: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_124_Update/$exit
      -- CP-element group 24: 	 assign_stmt_81_to_assign_stmt_168/call_stmt_124_Update/cca
      -- 
    cca_298_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_124_call_ack_1, ack => add_round_key_CP_125_elements(24)); -- 
    -- CP-element group 25:  join  transition  output  bypass 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	20 
    -- CP-element group 25: 	22 
    -- CP-element group 25: successors 
    -- CP-element group 25: 	26 
    -- CP-element group 25:  members (3) 
      -- CP-element group 25: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_128_sample_start_
      -- CP-element group 25: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_128_Sample/$entry
      -- CP-element group 25: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_128_Sample/rr
      -- 
    rr_306_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_306_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(25), ack => CONCAT_u8_u16_128_inst_req_0); -- 
    add_round_key_cp_element_group_25: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "add_round_key_cp_element_group_25"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= add_round_key_CP_125_elements(20) & add_round_key_CP_125_elements(22);
      gj_add_round_key_cp_element_group_25 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => add_round_key_CP_125_elements(25), clk => clk, reset => reset); --
    end block;
    -- CP-element group 26:  transition  input  bypass 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	25 
    -- CP-element group 26: successors 
    -- CP-element group 26:  members (3) 
      -- CP-element group 26: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_128_sample_completed_
      -- CP-element group 26: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_128_Sample/$exit
      -- CP-element group 26: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_128_Sample/ra
      -- 
    ra_307_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 26_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_128_inst_ack_0, ack => add_round_key_CP_125_elements(26)); -- 
    -- CP-element group 27:  transition  input  bypass 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	0 
    -- CP-element group 27: successors 
    -- CP-element group 27: 	31 
    -- CP-element group 27:  members (3) 
      -- CP-element group 27: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_128_update_completed_
      -- CP-element group 27: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_128_Update/$exit
      -- CP-element group 27: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_128_Update/ca
      -- 
    ca_312_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 27_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_128_inst_ack_1, ack => add_round_key_CP_125_elements(27)); -- 
    -- CP-element group 28:  join  transition  output  bypass 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	18 
    -- CP-element group 28: 	24 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	29 
    -- CP-element group 28:  members (3) 
      -- CP-element group 28: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_133_sample_start_
      -- CP-element group 28: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_133_Sample/$entry
      -- CP-element group 28: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_133_Sample/rr
      -- 
    rr_320_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_320_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(28), ack => CONCAT_u8_u16_133_inst_req_0); -- 
    add_round_key_cp_element_group_28: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "add_round_key_cp_element_group_28"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= add_round_key_CP_125_elements(18) & add_round_key_CP_125_elements(24);
      gj_add_round_key_cp_element_group_28 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => add_round_key_CP_125_elements(28), clk => clk, reset => reset); --
    end block;
    -- CP-element group 29:  transition  input  bypass 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	28 
    -- CP-element group 29: successors 
    -- CP-element group 29:  members (3) 
      -- CP-element group 29: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_133_sample_completed_
      -- CP-element group 29: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_133_Sample/$exit
      -- CP-element group 29: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_133_Sample/ra
      -- 
    ra_321_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 29_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_133_inst_ack_0, ack => add_round_key_CP_125_elements(29)); -- 
    -- CP-element group 30:  transition  input  bypass 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	0 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	31 
    -- CP-element group 30:  members (3) 
      -- CP-element group 30: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_133_update_completed_
      -- CP-element group 30: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_133_Update/$exit
      -- CP-element group 30: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u8_u16_133_Update/ca
      -- 
    ca_326_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 30_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_133_inst_ack_1, ack => add_round_key_CP_125_elements(30)); -- 
    -- CP-element group 31:  join  transition  output  bypass 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	27 
    -- CP-element group 31: 	30 
    -- CP-element group 31: successors 
    -- CP-element group 31: 	32 
    -- CP-element group 31:  members (3) 
      -- CP-element group 31: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u16_u32_138_sample_start_
      -- CP-element group 31: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u16_u32_138_Sample/$entry
      -- CP-element group 31: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u16_u32_138_Sample/rr
      -- 
    rr_334_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_334_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(31), ack => CONCAT_u16_u32_138_inst_req_0); -- 
    add_round_key_cp_element_group_31: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "add_round_key_cp_element_group_31"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= add_round_key_CP_125_elements(27) & add_round_key_CP_125_elements(30);
      gj_add_round_key_cp_element_group_31 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => add_round_key_CP_125_elements(31), clk => clk, reset => reset); --
    end block;
    -- CP-element group 32:  transition  input  bypass 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	31 
    -- CP-element group 32: successors 
    -- CP-element group 32:  members (3) 
      -- CP-element group 32: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u16_u32_138_sample_completed_
      -- CP-element group 32: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u16_u32_138_Sample/$exit
      -- CP-element group 32: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u16_u32_138_Sample/ra
      -- 
    ra_335_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 32_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_138_inst_ack_0, ack => add_round_key_CP_125_elements(32)); -- 
    -- CP-element group 33:  transition  input  output  bypass 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	0 
    -- CP-element group 33: successors 
    -- CP-element group 33: 	36 
    -- CP-element group 33:  members (6) 
      -- CP-element group 33: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u16_u32_138_update_completed_
      -- CP-element group 33: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u16_u32_138_Update/$exit
      -- CP-element group 33: 	 assign_stmt_81_to_assign_stmt_168/CONCAT_u16_u32_138_Update/ca
      -- CP-element group 33: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_147_sample_start_
      -- CP-element group 33: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_147_Sample/$entry
      -- CP-element group 33: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_147_Sample/rr
      -- 
    ca_340_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 33_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_138_inst_ack_1, ack => add_round_key_CP_125_elements(33)); -- 
    rr_411_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_411_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(33), ack => XOR_u32_u32_147_inst_req_0); -- 
    -- CP-element group 34:  transition  input  bypass 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	0 
    -- CP-element group 34: successors 
    -- CP-element group 34:  members (5) 
      -- CP-element group 34: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_sample_completed_
      -- CP-element group 34: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Sample/$exit
      -- CP-element group 34: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Sample/word_access_start/$exit
      -- CP-element group 34: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Sample/word_access_start/word_0/$exit
      -- CP-element group 34: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Sample/word_access_start/word_0/ra
      -- 
    ra_387_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_142_load_0_ack_0, ack => add_round_key_CP_125_elements(34)); -- 
    -- CP-element group 35:  transition  input  bypass 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	0 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	38 
    -- CP-element group 35:  members (9) 
      -- CP-element group 35: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_update_completed_
      -- CP-element group 35: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Update/$exit
      -- CP-element group 35: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Update/word_access_complete/$exit
      -- CP-element group 35: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Update/word_access_complete/word_0/$exit
      -- CP-element group 35: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Update/word_access_complete/word_0/ca
      -- CP-element group 35: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Update/array_obj_ref_142_Merge/$entry
      -- CP-element group 35: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Update/array_obj_ref_142_Merge/$exit
      -- CP-element group 35: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Update/array_obj_ref_142_Merge/merge_req
      -- CP-element group 35: 	 assign_stmt_81_to_assign_stmt_168/array_obj_ref_142_Update/array_obj_ref_142_Merge/merge_ack
      -- 
    ca_398_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 35_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_142_load_0_ack_1, ack => add_round_key_CP_125_elements(35)); -- 
    -- CP-element group 36:  transition  input  bypass 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	33 
    -- CP-element group 36: successors 
    -- CP-element group 36:  members (3) 
      -- CP-element group 36: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_147_sample_completed_
      -- CP-element group 36: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_147_Sample/$exit
      -- CP-element group 36: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_147_Sample/ra
      -- 
    ra_412_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_147_inst_ack_0, ack => add_round_key_CP_125_elements(36)); -- 
    -- CP-element group 37:  transition  input  bypass 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	0 
    -- CP-element group 37: successors 
    -- CP-element group 37: 	38 
    -- CP-element group 37:  members (3) 
      -- CP-element group 37: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_147_update_completed_
      -- CP-element group 37: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_147_Update/$exit
      -- CP-element group 37: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_147_Update/ca
      -- 
    ca_417_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_147_inst_ack_1, ack => add_round_key_CP_125_elements(37)); -- 
    -- CP-element group 38:  join  transition  output  bypass 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	37 
    -- CP-element group 38: 	35 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	39 
    -- CP-element group 38:  members (3) 
      -- CP-element group 38: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_152_sample_start_
      -- CP-element group 38: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_152_Sample/$entry
      -- CP-element group 38: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_152_Sample/rr
      -- 
    rr_425_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_425_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(38), ack => XOR_u32_u32_152_inst_req_0); -- 
    add_round_key_cp_element_group_38: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "add_round_key_cp_element_group_38"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= add_round_key_CP_125_elements(37) & add_round_key_CP_125_elements(35);
      gj_add_round_key_cp_element_group_38 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => add_round_key_CP_125_elements(38), clk => clk, reset => reset); --
    end block;
    -- CP-element group 39:  transition  input  bypass 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	38 
    -- CP-element group 39: successors 
    -- CP-element group 39:  members (3) 
      -- CP-element group 39: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_152_sample_completed_
      -- CP-element group 39: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_152_Sample/$exit
      -- CP-element group 39: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_152_Sample/ra
      -- 
    ra_426_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 39_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_152_inst_ack_0, ack => add_round_key_CP_125_elements(39)); -- 
    -- CP-element group 40:  transition  input  output  bypass 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	0 
    -- CP-element group 40: successors 
    -- CP-element group 40: 	41 
    -- CP-element group 40:  members (6) 
      -- CP-element group 40: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_152_update_completed_
      -- CP-element group 40: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_152_Update/$exit
      -- CP-element group 40: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_152_Update/ca
      -- CP-element group 40: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_157_sample_start_
      -- CP-element group 40: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_157_Sample/$entry
      -- CP-element group 40: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_157_Sample/rr
      -- 
    ca_431_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 40_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_152_inst_ack_1, ack => add_round_key_CP_125_elements(40)); -- 
    rr_439_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_439_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(40), ack => XOR_u32_u32_157_inst_req_0); -- 
    -- CP-element group 41:  transition  input  bypass 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	40 
    -- CP-element group 41: successors 
    -- CP-element group 41:  members (3) 
      -- CP-element group 41: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_157_sample_completed_
      -- CP-element group 41: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_157_Sample/$exit
      -- CP-element group 41: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_157_Sample/ra
      -- 
    ra_440_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 41_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_157_inst_ack_0, ack => add_round_key_CP_125_elements(41)); -- 
    -- CP-element group 42:  transition  input  output  bypass 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	0 
    -- CP-element group 42: successors 
    -- CP-element group 42: 	43 
    -- CP-element group 42:  members (6) 
      -- CP-element group 42: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_157_update_completed_
      -- CP-element group 42: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_157_Update/$exit
      -- CP-element group 42: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_157_Update/ca
      -- CP-element group 42: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_162_sample_start_
      -- CP-element group 42: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_162_Sample/$entry
      -- CP-element group 42: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_162_Sample/rr
      -- 
    ca_445_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 42_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_157_inst_ack_1, ack => add_round_key_CP_125_elements(42)); -- 
    rr_453_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_453_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(42), ack => XOR_u32_u32_162_inst_req_0); -- 
    -- CP-element group 43:  transition  input  bypass 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	42 
    -- CP-element group 43: successors 
    -- CP-element group 43:  members (3) 
      -- CP-element group 43: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_162_sample_completed_
      -- CP-element group 43: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_162_Sample/$exit
      -- CP-element group 43: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_162_Sample/ra
      -- 
    ra_454_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 43_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_162_inst_ack_0, ack => add_round_key_CP_125_elements(43)); -- 
    -- CP-element group 44:  transition  input  output  bypass 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	0 
    -- CP-element group 44: successors 
    -- CP-element group 44: 	45 
    -- CP-element group 44:  members (6) 
      -- CP-element group 44: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_162_update_completed_
      -- CP-element group 44: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_162_Update/$exit
      -- CP-element group 44: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_162_Update/ca
      -- CP-element group 44: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_167_sample_start_
      -- CP-element group 44: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_167_Sample/$entry
      -- CP-element group 44: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_167_Sample/rr
      -- 
    ca_459_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 44_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_162_inst_ack_1, ack => add_round_key_CP_125_elements(44)); -- 
    rr_467_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_467_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => add_round_key_CP_125_elements(44), ack => XOR_u32_u32_167_inst_req_0); -- 
    -- CP-element group 45:  transition  input  bypass 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	44 
    -- CP-element group 45: successors 
    -- CP-element group 45:  members (3) 
      -- CP-element group 45: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_167_sample_completed_
      -- CP-element group 45: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_167_Sample/$exit
      -- CP-element group 45: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_167_Sample/ra
      -- 
    ra_468_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 45_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_167_inst_ack_0, ack => add_round_key_CP_125_elements(45)); -- 
    -- CP-element group 46:  transition  input  bypass 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	0 
    -- CP-element group 46: successors 
    -- CP-element group 46: 	47 
    -- CP-element group 46:  members (3) 
      -- CP-element group 46: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_167_update_completed_
      -- CP-element group 46: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_167_Update/$exit
      -- CP-element group 46: 	 assign_stmt_81_to_assign_stmt_168/XOR_u32_u32_167_Update/ca
      -- 
    ca_473_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 46_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_167_inst_ack_1, ack => add_round_key_CP_125_elements(46)); -- 
    -- CP-element group 47:  join  transition  bypass 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	2 
    -- CP-element group 47: 	4 
    -- CP-element group 47: 	46 
    -- CP-element group 47: 	6 
    -- CP-element group 47: 	8 
    -- CP-element group 47: successors 
    -- CP-element group 47:  members (2) 
      -- CP-element group 47: 	 $exit
      -- CP-element group 47: 	 assign_stmt_81_to_assign_stmt_168/$exit
      -- 
    add_round_key_cp_element_group_47: block -- 
      constant place_capacities: IntegerArray(0 to 4) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_markings: IntegerArray(0 to 4)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0);
      constant place_delays: IntegerArray(0 to 4) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0);
      constant joinName: string(1 to 33) := "add_round_key_cp_element_group_47"; 
      signal preds: BooleanArray(1 to 5); -- 
    begin -- 
      preds <= add_round_key_CP_125_elements(2) & add_round_key_CP_125_elements(4) & add_round_key_CP_125_elements(46) & add_round_key_CP_125_elements(6) & add_round_key_CP_125_elements(8);
      gj_add_round_key_cp_element_group_47 : generic_join generic map(name => joinName, number_of_predecessors => 5, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => add_round_key_CP_125_elements(47), clk => clk, reset => reset); --
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal R_round_num_141_resized : std_logic_vector(3 downto 0);
    signal R_round_num_141_scaled : std_logic_vector(3 downto 0);
    signal a_0_100 : std_logic_vector(7 downto 0);
    signal a_1_104 : std_logic_vector(7 downto 0);
    signal a_2_108 : std_logic_vector(7 downto 0);
    signal a_3_112 : std_logic_vector(7 downto 0);
    signal array_obj_ref_142_data_0 : std_logic_vector(31 downto 0);
    signal array_obj_ref_142_final_offset : std_logic_vector(3 downto 0);
    signal array_obj_ref_142_offset_scale_factor_0 : std_logic_vector(3 downto 0);
    signal array_obj_ref_142_resized_base_address : std_logic_vector(3 downto 0);
    signal array_obj_ref_142_root_address : std_logic_vector(3 downto 0);
    signal array_obj_ref_142_word_address_0 : std_logic_vector(3 downto 0);
    signal array_obj_ref_142_word_offset_0 : std_logic_vector(3 downto 0);
    signal b_0_115 : std_logic_vector(7 downto 0);
    signal b_1_118 : std_logic_vector(7 downto 0);
    signal b_2_121 : std_logic_vector(7 downto 0);
    signal b_3_124 : std_logic_vector(7 downto 0);
    signal nk_0_t1_148 : std_logic_vector(31 downto 0);
    signal t_0_139 : std_logic_vector(31 downto 0);
    signal t_0_t1_129 : std_logic_vector(15 downto 0);
    signal t_0_t2_134 : std_logic_vector(15 downto 0);
    signal temp_0_143 : std_logic_vector(31 downto 0);
    -- 
  begin -- 
    array_obj_ref_142_offset_scale_factor_0 <= "0001";
    array_obj_ref_142_resized_base_address <= "0000";
    array_obj_ref_142_word_offset_0 <= "0000";
    slice_103_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_103_inst_req_0;
      slice_103_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_103_inst_req_1;
      slice_103_inst_ack_1<= update_ack(0);
      slice_103_inst: SliceSplitProtocol generic map(name => "slice_103_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => k_3_buffer, dout => a_1_104, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_107_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_107_inst_req_0;
      slice_107_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_107_inst_req_1;
      slice_107_inst_ack_1<= update_ack(0);
      slice_107_inst: SliceSplitProtocol generic map(name => "slice_107_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => k_3_buffer, dout => a_2_108, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_111_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_111_inst_req_0;
      slice_111_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_111_inst_req_1;
      slice_111_inst_ack_1<= update_ack(0);
      slice_111_inst: SliceSplitProtocol generic map(name => "slice_111_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => k_3_buffer, dout => a_3_112, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_99_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_99_inst_req_0;
      slice_99_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_99_inst_req_1;
      slice_99_inst_ack_1<= update_ack(0);
      slice_99_inst: SliceSplitProtocol generic map(name => "slice_99_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => k_3_buffer, dout => a_0_100, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    -- equivalence array_obj_ref_142_addr_0
    process(array_obj_ref_142_root_address) --
      variable iv : std_logic_vector(3 downto 0);
      variable ov : std_logic_vector(3 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_142_root_address;
      ov(3 downto 0) := iv;
      array_obj_ref_142_word_address_0 <= ov(3 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_142_gather_scatter
    process(array_obj_ref_142_data_0) --
      variable iv : std_logic_vector(31 downto 0);
      variable ov : std_logic_vector(31 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_142_data_0;
      ov(31 downto 0) := iv;
      temp_0_143 <= ov(31 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_142_index_0_rename
    process(R_round_num_141_resized) --
      variable iv : std_logic_vector(3 downto 0);
      variable ov : std_logic_vector(3 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_round_num_141_resized;
      ov(3 downto 0) := iv;
      R_round_num_141_scaled <= ov(3 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_142_index_0_resize
    process(round_num_buffer) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(3 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := round_num_buffer;
      ov := iv(3 downto 0);
      R_round_num_141_resized <= ov(3 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_142_index_offset
    process(R_round_num_141_scaled) --
      variable iv : std_logic_vector(3 downto 0);
      variable ov : std_logic_vector(3 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_round_num_141_scaled;
      ov(3 downto 0) := iv;
      array_obj_ref_142_final_offset <= ov(3 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_142_root_address_inst
    process(array_obj_ref_142_final_offset) --
      variable iv : std_logic_vector(3 downto 0);
      variable ov : std_logic_vector(3 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_142_final_offset;
      ov(3 downto 0) := iv;
      array_obj_ref_142_root_address <= ov(3 downto 0);
      --
    end process;
    -- shared split operator group (0) : CONCAT_u16_u32_138_inst 
    ApConcat_group_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= t_0_t1_129 & t_0_t2_134;
      t_0_139 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_138_inst_req_0;
      CONCAT_u16_u32_138_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_138_inst_req_1;
      CONCAT_u16_u32_138_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_0_gI: SplitGuardInterface generic map(name => "ApConcat_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : CONCAT_u8_u16_128_inst 
    ApConcat_group_1: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= b_1_118 & b_2_121;
      t_0_t1_129 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_128_inst_req_0;
      CONCAT_u8_u16_128_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_128_inst_req_1;
      CONCAT_u8_u16_128_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_1_gI: SplitGuardInterface generic map(name => "ApConcat_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- shared split operator group (2) : CONCAT_u8_u16_133_inst 
    ApConcat_group_2: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= b_3_124 & b_0_115;
      t_0_t2_134 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_133_inst_req_0;
      CONCAT_u8_u16_133_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_133_inst_req_1;
      CONCAT_u8_u16_133_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_2_gI: SplitGuardInterface generic map(name => "ApConcat_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_2",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 2
    -- shared split operator group (3) : XOR_u32_u32_147_inst 
    ApIntXor_group_3: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= t_0_139 & k_0_buffer;
      nk_0_t1_148 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_147_inst_req_0;
      XOR_u32_u32_147_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_147_inst_req_1;
      XOR_u32_u32_147_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_3_gI: SplitGuardInterface generic map(name => "ApIntXor_group_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_3",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 3
    -- shared split operator group (4) : XOR_u32_u32_152_inst 
    ApIntXor_group_4: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= nk_0_t1_148 & temp_0_143;
      nk_0_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_152_inst_req_0;
      XOR_u32_u32_152_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_152_inst_req_1;
      XOR_u32_u32_152_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_4_gI: SplitGuardInterface generic map(name => "ApIntXor_group_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_4",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 4
    -- shared split operator group (5) : XOR_u32_u32_157_inst 
    ApIntXor_group_5: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= nk_0_buffer & k_1_buffer;
      nk_1_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_157_inst_req_0;
      XOR_u32_u32_157_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_157_inst_req_1;
      XOR_u32_u32_157_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_5_gI: SplitGuardInterface generic map(name => "ApIntXor_group_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_5",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 5
    -- shared split operator group (6) : XOR_u32_u32_162_inst 
    ApIntXor_group_6: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= nk_1_buffer & k_2_buffer;
      nk_2_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_162_inst_req_0;
      XOR_u32_u32_162_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_162_inst_req_1;
      XOR_u32_u32_162_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_6_gI: SplitGuardInterface generic map(name => "ApIntXor_group_6_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_6",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 6
    -- shared split operator group (7) : XOR_u32_u32_167_inst 
    ApIntXor_group_7: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= nk_2_buffer & k_3_buffer;
      nk_3_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_167_inst_req_0;
      XOR_u32_u32_167_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_167_inst_req_1;
      XOR_u32_u32_167_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_7_gI: SplitGuardInterface generic map(name => "ApIntXor_group_7_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_7",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 7
    -- shared split operator group (8) : XOR_u32_u32_80_inst 
    ApIntXor_group_8: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= k_0_buffer & w_0_buffer;
      nw_0_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_80_inst_req_0;
      XOR_u32_u32_80_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_80_inst_req_1;
      XOR_u32_u32_80_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_8_gI: SplitGuardInterface generic map(name => "ApIntXor_group_8_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_8",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 8
    -- shared split operator group (9) : XOR_u32_u32_85_inst 
    ApIntXor_group_9: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= k_1_buffer & w_1_buffer;
      nw_1_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_85_inst_req_0;
      XOR_u32_u32_85_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_85_inst_req_1;
      XOR_u32_u32_85_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_9_gI: SplitGuardInterface generic map(name => "ApIntXor_group_9_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_9",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 9
    -- shared split operator group (10) : XOR_u32_u32_90_inst 
    ApIntXor_group_10: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= k_2_buffer & w_2_buffer;
      nw_2_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_90_inst_req_0;
      XOR_u32_u32_90_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_90_inst_req_1;
      XOR_u32_u32_90_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_10_gI: SplitGuardInterface generic map(name => "ApIntXor_group_10_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_10",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 10
    -- shared split operator group (11) : XOR_u32_u32_95_inst 
    ApIntXor_group_11: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= k_3_buffer & w_3_buffer;
      nw_3_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_95_inst_req_0;
      XOR_u32_u32_95_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_95_inst_req_1;
      XOR_u32_u32_95_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_11_gI: SplitGuardInterface generic map(name => "ApIntXor_group_11_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_11",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 11
    -- shared load operator group (0) : array_obj_ref_142_load_0 
    LoadGroup0: Block -- 
      signal data_in: std_logic_vector(3 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated: BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= array_obj_ref_142_load_0_req_0;
      array_obj_ref_142_load_0_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= array_obj_ref_142_load_0_req_1;
      array_obj_ref_142_load_0_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      LoadGroup0_gI: SplitGuardInterface generic map(name => "LoadGroup0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= array_obj_ref_142_word_address_0;
      array_obj_ref_142_data_0 <= data_out(31 downto 0);
      LoadReq: LoadReqSharedWithInputBuffers -- 
        generic map ( name => "LoadGroup0", addr_width => 4,
        num_reqs => 1,
        tag_length => 1,
        time_stamp_width => 17,
        min_clock_period => false,
        input_buffering => inBUFs, 
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          mreq => memory_space_1_lr_req(0),
          mack => memory_space_1_lr_ack(0),
          maddr => memory_space_1_lr_addr(3 downto 0),
          mtag => memory_space_1_lr_tag(17 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      LoadComplete: LoadCompleteShared -- 
        generic map ( name => "LoadGroup0 load-complete ",
        data_width => 32,
        num_reqs => 1,
        tag_length => 1,
        detailed_buffering_per_output => outBUFs, 
        no_arbitration => false)
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          mreq => memory_space_1_lc_req(0),
          mack => memory_space_1_lc_ack(0),
          mdata => memory_space_1_lc_data(31 downto 0),
          mtag => memory_space_1_lc_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- load group 0
    -- shared call operator group (0) : call_stmt_115_call call_stmt_118_call call_stmt_121_call call_stmt_124_call 
    sbox_transform_call_group_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 3 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 3 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant inBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant outBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2);
      -- 
    begin -- 
      reqL_unguarded(3) <= call_stmt_115_call_req_0;
      reqL_unguarded(2) <= call_stmt_118_call_req_0;
      reqL_unguarded(1) <= call_stmt_121_call_req_0;
      reqL_unguarded(0) <= call_stmt_124_call_req_0;
      call_stmt_115_call_ack_0 <= ackL_unguarded(3);
      call_stmt_118_call_ack_0 <= ackL_unguarded(2);
      call_stmt_121_call_ack_0 <= ackL_unguarded(1);
      call_stmt_124_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(3) <= call_stmt_115_call_req_1;
      reqR_unguarded(2) <= call_stmt_118_call_req_1;
      reqR_unguarded(1) <= call_stmt_121_call_req_1;
      reqR_unguarded(0) <= call_stmt_124_call_req_1;
      call_stmt_115_call_ack_1 <= ackR_unguarded(3);
      call_stmt_118_call_ack_1 <= ackR_unguarded(2);
      call_stmt_121_call_ack_1 <= ackR_unguarded(1);
      call_stmt_124_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      sbox_transform_call_group_0_accessRegulator_0: access_regulator_base generic map (name => "sbox_transform_call_group_0_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      sbox_transform_call_group_0_accessRegulator_1: access_regulator_base generic map (name => "sbox_transform_call_group_0_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      sbox_transform_call_group_0_accessRegulator_2: access_regulator_base generic map (name => "sbox_transform_call_group_0_accessRegulator_2", num_slots => 1) -- 
        port map (req => reqL_unregulated(2), -- 
          ack => ackL_unregulated(2),
          regulated_req => reqL(2),
          regulated_ack => ackL(2),
          release_req => reqR(2),
          release_ack => ackR(2),
          clk => clk, reset => reset); -- 
      sbox_transform_call_group_0_accessRegulator_3: access_regulator_base generic map (name => "sbox_transform_call_group_0_accessRegulator_3", num_slots => 1) -- 
        port map (req => reqL_unregulated(3), -- 
          ack => ackL_unregulated(3),
          regulated_req => reqL(3),
          regulated_ack => ackL(3),
          release_req => reqR(3),
          release_ack => ackR(3),
          clk => clk, reset => reset); -- 
      sbox_transform_call_group_0_gI: SplitGuardInterface generic map(name => "sbox_transform_call_group_0_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= a_0_100 & a_1_104 & a_2_108 & a_3_112;
      b_0_115 <= data_out(31 downto 24);
      b_1_118 <= data_out(23 downto 16);
      b_2_121 <= data_out(15 downto 8);
      b_3_124 <= data_out(7 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 32,
        owidth => 8,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 3,
        nreqs => 4,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => sbox_transform_call_reqs(0),
          ackR => sbox_transform_call_acks(0),
          dataR => sbox_transform_call_data(7 downto 0),
          tagR => sbox_transform_call_tag(2 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 8,
          owidth => 32,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 3,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 4) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => sbox_transform_return_acks(0), -- cross-over
          ackL => sbox_transform_return_reqs(0), -- cross-over
          dataL => sbox_transform_return_data(7 downto 0),
          tagL => sbox_transform_return_tag(2 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- 
  end Block; -- data_path
  -- 
end add_round_key_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity checksum is -- 
  generic (tag_length : integer); 
  port ( -- 
    m_0 : in  std_logic_vector(7 downto 0);
    c_0 : out  std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity checksum;
architecture checksum_arch of checksum is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 8)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 1)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal m_0_buffer :  std_logic_vector(7 downto 0);
  signal m_0_update_enable: Boolean;
  -- output port buffer signals
  signal c_0_buffer :  std_logic_vector(0 downto 0);
  signal c_0_update_enable: Boolean;
  signal checksum_CP_474_start: Boolean;
  signal checksum_CP_474_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal XOR_u1_u1_228_inst_ack_1 : boolean;
  signal XOR_u1_u1_223_inst_ack_0 : boolean;
  signal XOR_u1_u1_223_inst_req_0 : boolean;
  signal XOR_u1_u1_228_inst_ack_0 : boolean;
  signal XOR_u1_u1_228_inst_req_1 : boolean;
  signal XOR_u1_u1_228_inst_req_0 : boolean;
  signal XOR_u1_u1_238_inst_ack_1 : boolean;
  signal XOR_u1_u1_238_inst_req_1 : boolean;
  signal XOR_u1_u1_238_inst_ack_0 : boolean;
  signal XOR_u1_u1_238_inst_req_0 : boolean;
  signal XOR_u1_u1_233_inst_ack_0 : boolean;
  signal XOR_u1_u1_233_inst_req_0 : boolean;
  signal XOR_u1_u1_218_inst_ack_1 : boolean;
  signal XOR_u1_u1_218_inst_req_1 : boolean;
  signal XOR_u1_u1_223_inst_ack_1 : boolean;
  signal XOR_u1_u1_223_inst_req_1 : boolean;
  signal XOR_u1_u1_233_inst_ack_1 : boolean;
  signal XOR_u1_u1_233_inst_req_1 : boolean;
  signal slice_175_inst_req_0 : boolean;
  signal slice_175_inst_ack_0 : boolean;
  signal slice_175_inst_req_1 : boolean;
  signal slice_175_inst_ack_1 : boolean;
  signal slice_179_inst_req_0 : boolean;
  signal slice_179_inst_ack_0 : boolean;
  signal slice_179_inst_req_1 : boolean;
  signal slice_179_inst_ack_1 : boolean;
  signal slice_183_inst_req_0 : boolean;
  signal slice_183_inst_ack_0 : boolean;
  signal slice_183_inst_req_1 : boolean;
  signal slice_183_inst_ack_1 : boolean;
  signal slice_187_inst_req_0 : boolean;
  signal slice_187_inst_ack_0 : boolean;
  signal slice_187_inst_req_1 : boolean;
  signal slice_187_inst_ack_1 : boolean;
  signal slice_191_inst_req_0 : boolean;
  signal slice_191_inst_ack_0 : boolean;
  signal slice_191_inst_req_1 : boolean;
  signal slice_191_inst_ack_1 : boolean;
  signal slice_195_inst_req_0 : boolean;
  signal slice_195_inst_ack_0 : boolean;
  signal slice_195_inst_req_1 : boolean;
  signal slice_195_inst_ack_1 : boolean;
  signal slice_199_inst_req_0 : boolean;
  signal slice_199_inst_ack_0 : boolean;
  signal slice_199_inst_req_1 : boolean;
  signal slice_199_inst_ack_1 : boolean;
  signal slice_203_inst_req_0 : boolean;
  signal slice_203_inst_ack_0 : boolean;
  signal slice_203_inst_req_1 : boolean;
  signal slice_203_inst_ack_1 : boolean;
  signal XOR_u1_u1_208_inst_req_0 : boolean;
  signal XOR_u1_u1_208_inst_ack_0 : boolean;
  signal XOR_u1_u1_208_inst_req_1 : boolean;
  signal XOR_u1_u1_208_inst_ack_1 : boolean;
  signal XOR_u1_u1_213_inst_req_0 : boolean;
  signal XOR_u1_u1_213_inst_ack_0 : boolean;
  signal XOR_u1_u1_213_inst_req_1 : boolean;
  signal XOR_u1_u1_213_inst_ack_1 : boolean;
  signal XOR_u1_u1_218_inst_req_0 : boolean;
  signal XOR_u1_u1_218_inst_ack_0 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "checksum_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 8) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(7 downto 0) <= m_0;
  m_0_buffer <= in_buffer_data_out(7 downto 0);
  in_buffer_data_in(tag_length + 7 downto 8) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 7 downto 8);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  checksum_CP_474_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "checksum_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 1) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(0 downto 0) <= c_0_buffer;
  c_0 <= out_buffer_data_out(0 downto 0);
  out_buffer_data_in(tag_length + 0 downto 1) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 0 downto 1);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= checksum_CP_474_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= checksum_CP_474_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= checksum_CP_474_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  checksum_CP_474: Block -- control-path 
    signal checksum_CP_474_elements: BooleanArray(37 downto 0);
    -- 
  begin -- 
    checksum_CP_474_elements(0) <= checksum_CP_474_start;
    checksum_CP_474_symbol <= checksum_CP_474_elements(37);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	5 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	7 
    -- CP-element group 0: 	8 
    -- CP-element group 0: 	9 
    -- CP-element group 0: 	10 
    -- CP-element group 0: 	11 
    -- CP-element group 0: 	12 
    -- CP-element group 0: 	13 
    -- CP-element group 0: 	14 
    -- CP-element group 0: 	15 
    -- CP-element group 0: 	16 
    -- CP-element group 0: 	19 
    -- CP-element group 0: 	22 
    -- CP-element group 0: 	25 
    -- CP-element group 0: 	28 
    -- CP-element group 0: 	31 
    -- CP-element group 0: 	34 
    -- CP-element group 0: 	37 
    -- CP-element group 0:  members (71) 
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_233_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_228_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_223_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_228_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_238_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_238_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_238_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_218_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_218_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_233_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_228_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_223_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_223_Update/$entry
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_175_sample_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_175_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_175_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_233_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_175_Sample/rr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_175_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_175_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_179_sample_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_179_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_179_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_179_Sample/rr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_179_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_179_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_183_sample_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_183_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_183_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_183_Sample/rr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_183_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_183_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_187_sample_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_187_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_187_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_187_Sample/rr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_187_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_187_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_191_sample_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_191_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_191_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_191_Sample/rr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_191_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_191_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_195_sample_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_195_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_195_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_195_Sample/rr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_195_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_195_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_199_sample_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_199_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_199_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_199_Sample/rr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_199_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_199_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_203_sample_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_203_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_203_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_203_Sample/rr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_203_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/slice_203_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_208_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_208_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_208_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_213_update_start_
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_213_Update/$entry
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_213_Update/cr
      -- CP-element group 0: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_218_update_start_
      -- 
    rr_487_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_487_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_175_inst_req_0); -- 
    cr_492_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_492_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_175_inst_req_1); -- 
    rr_501_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_501_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_179_inst_req_0); -- 
    cr_506_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_506_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_179_inst_req_1); -- 
    rr_515_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_515_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_183_inst_req_0); -- 
    cr_520_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_520_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_183_inst_req_1); -- 
    rr_529_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_529_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_187_inst_req_0); -- 
    cr_534_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_534_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_187_inst_req_1); -- 
    rr_543_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_543_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_191_inst_req_0); -- 
    cr_548_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_548_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_191_inst_req_1); -- 
    rr_557_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_557_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_195_inst_req_0); -- 
    cr_562_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_562_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_195_inst_req_1); -- 
    rr_571_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_571_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_199_inst_req_0); -- 
    cr_576_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_576_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_199_inst_req_1); -- 
    rr_585_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_585_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_203_inst_req_0); -- 
    cr_590_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_590_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => slice_203_inst_req_1); -- 
    cr_604_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_604_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => XOR_u1_u1_208_inst_req_1); -- 
    cr_618_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_618_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => XOR_u1_u1_213_inst_req_1); -- 
    cr_632_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_632_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => XOR_u1_u1_218_inst_req_1); -- 
    cr_646_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_646_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => XOR_u1_u1_223_inst_req_1); -- 
    cr_660_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_660_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => XOR_u1_u1_228_inst_req_1); -- 
    cr_674_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_674_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => XOR_u1_u1_233_inst_req_1); -- 
    cr_688_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_688_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(0), ack => XOR_u1_u1_238_inst_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_176_to_assign_stmt_239/slice_175_sample_completed_
      -- CP-element group 1: 	 assign_stmt_176_to_assign_stmt_239/slice_175_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_176_to_assign_stmt_239/slice_175_Sample/ra
      -- 
    ra_488_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_175_inst_ack_0, ack => checksum_CP_474_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	17 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 assign_stmt_176_to_assign_stmt_239/slice_175_update_completed_
      -- CP-element group 2: 	 assign_stmt_176_to_assign_stmt_239/slice_175_Update/$exit
      -- CP-element group 2: 	 assign_stmt_176_to_assign_stmt_239/slice_175_Update/ca
      -- 
    ca_493_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_175_inst_ack_1, ack => checksum_CP_474_elements(2)); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 assign_stmt_176_to_assign_stmt_239/slice_179_sample_completed_
      -- CP-element group 3: 	 assign_stmt_176_to_assign_stmt_239/slice_179_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_176_to_assign_stmt_239/slice_179_Sample/ra
      -- 
    ra_502_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_179_inst_ack_0, ack => checksum_CP_474_elements(3)); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	17 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_176_to_assign_stmt_239/slice_179_update_completed_
      -- CP-element group 4: 	 assign_stmt_176_to_assign_stmt_239/slice_179_Update/$exit
      -- CP-element group 4: 	 assign_stmt_176_to_assign_stmt_239/slice_179_Update/ca
      -- 
    ca_507_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_179_inst_ack_1, ack => checksum_CP_474_elements(4)); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	0 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_176_to_assign_stmt_239/slice_183_sample_completed_
      -- CP-element group 5: 	 assign_stmt_176_to_assign_stmt_239/slice_183_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_176_to_assign_stmt_239/slice_183_Sample/ra
      -- 
    ra_516_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_183_inst_ack_0, ack => checksum_CP_474_elements(5)); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	20 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_176_to_assign_stmt_239/slice_183_update_completed_
      -- CP-element group 6: 	 assign_stmt_176_to_assign_stmt_239/slice_183_Update/$exit
      -- CP-element group 6: 	 assign_stmt_176_to_assign_stmt_239/slice_183_Update/ca
      -- 
    ca_521_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_183_inst_ack_1, ack => checksum_CP_474_elements(6)); -- 
    -- CP-element group 7:  transition  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	0 
    -- CP-element group 7: successors 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 assign_stmt_176_to_assign_stmt_239/slice_187_sample_completed_
      -- CP-element group 7: 	 assign_stmt_176_to_assign_stmt_239/slice_187_Sample/$exit
      -- CP-element group 7: 	 assign_stmt_176_to_assign_stmt_239/slice_187_Sample/ra
      -- 
    ra_530_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_187_inst_ack_0, ack => checksum_CP_474_elements(7)); -- 
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	0 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	20 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 assign_stmt_176_to_assign_stmt_239/slice_187_update_completed_
      -- CP-element group 8: 	 assign_stmt_176_to_assign_stmt_239/slice_187_Update/$exit
      -- CP-element group 8: 	 assign_stmt_176_to_assign_stmt_239/slice_187_Update/ca
      -- 
    ca_535_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_187_inst_ack_1, ack => checksum_CP_474_elements(8)); -- 
    -- CP-element group 9:  transition  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	0 
    -- CP-element group 9: successors 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 assign_stmt_176_to_assign_stmt_239/slice_191_sample_completed_
      -- CP-element group 9: 	 assign_stmt_176_to_assign_stmt_239/slice_191_Sample/$exit
      -- CP-element group 9: 	 assign_stmt_176_to_assign_stmt_239/slice_191_Sample/ra
      -- 
    ra_544_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_191_inst_ack_0, ack => checksum_CP_474_elements(9)); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	0 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	23 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 assign_stmt_176_to_assign_stmt_239/slice_191_update_completed_
      -- CP-element group 10: 	 assign_stmt_176_to_assign_stmt_239/slice_191_Update/$exit
      -- CP-element group 10: 	 assign_stmt_176_to_assign_stmt_239/slice_191_Update/ca
      -- 
    ca_549_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_191_inst_ack_1, ack => checksum_CP_474_elements(10)); -- 
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	0 
    -- CP-element group 11: successors 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 assign_stmt_176_to_assign_stmt_239/slice_195_sample_completed_
      -- CP-element group 11: 	 assign_stmt_176_to_assign_stmt_239/slice_195_Sample/$exit
      -- CP-element group 11: 	 assign_stmt_176_to_assign_stmt_239/slice_195_Sample/ra
      -- 
    ra_558_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_195_inst_ack_0, ack => checksum_CP_474_elements(11)); -- 
    -- CP-element group 12:  transition  input  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	0 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	23 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 assign_stmt_176_to_assign_stmt_239/slice_195_update_completed_
      -- CP-element group 12: 	 assign_stmt_176_to_assign_stmt_239/slice_195_Update/$exit
      -- CP-element group 12: 	 assign_stmt_176_to_assign_stmt_239/slice_195_Update/ca
      -- 
    ca_563_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_195_inst_ack_1, ack => checksum_CP_474_elements(12)); -- 
    -- CP-element group 13:  transition  input  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	0 
    -- CP-element group 13: successors 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 assign_stmt_176_to_assign_stmt_239/slice_199_sample_completed_
      -- CP-element group 13: 	 assign_stmt_176_to_assign_stmt_239/slice_199_Sample/$exit
      -- CP-element group 13: 	 assign_stmt_176_to_assign_stmt_239/slice_199_Sample/ra
      -- 
    ra_572_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_199_inst_ack_0, ack => checksum_CP_474_elements(13)); -- 
    -- CP-element group 14:  transition  input  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	0 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	26 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 assign_stmt_176_to_assign_stmt_239/slice_199_update_completed_
      -- CP-element group 14: 	 assign_stmt_176_to_assign_stmt_239/slice_199_Update/$exit
      -- CP-element group 14: 	 assign_stmt_176_to_assign_stmt_239/slice_199_Update/ca
      -- 
    ca_577_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_199_inst_ack_1, ack => checksum_CP_474_elements(14)); -- 
    -- CP-element group 15:  transition  input  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	0 
    -- CP-element group 15: successors 
    -- CP-element group 15:  members (3) 
      -- CP-element group 15: 	 assign_stmt_176_to_assign_stmt_239/slice_203_sample_completed_
      -- CP-element group 15: 	 assign_stmt_176_to_assign_stmt_239/slice_203_Sample/$exit
      -- CP-element group 15: 	 assign_stmt_176_to_assign_stmt_239/slice_203_Sample/ra
      -- 
    ra_586_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_203_inst_ack_0, ack => checksum_CP_474_elements(15)); -- 
    -- CP-element group 16:  transition  input  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	0 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	26 
    -- CP-element group 16:  members (3) 
      -- CP-element group 16: 	 assign_stmt_176_to_assign_stmt_239/slice_203_update_completed_
      -- CP-element group 16: 	 assign_stmt_176_to_assign_stmt_239/slice_203_Update/$exit
      -- CP-element group 16: 	 assign_stmt_176_to_assign_stmt_239/slice_203_Update/ca
      -- 
    ca_591_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_203_inst_ack_1, ack => checksum_CP_474_elements(16)); -- 
    -- CP-element group 17:  join  transition  output  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	2 
    -- CP-element group 17: 	4 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	18 
    -- CP-element group 17:  members (3) 
      -- CP-element group 17: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_208_sample_start_
      -- CP-element group 17: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_208_Sample/$entry
      -- CP-element group 17: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_208_Sample/rr
      -- 
    rr_599_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_599_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(17), ack => XOR_u1_u1_208_inst_req_0); -- 
    checksum_cp_element_group_17: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 28) := "checksum_cp_element_group_17"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_CP_474_elements(2) & checksum_CP_474_elements(4);
      gj_checksum_cp_element_group_17 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_CP_474_elements(17), clk => clk, reset => reset); --
    end block;
    -- CP-element group 18:  transition  input  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	17 
    -- CP-element group 18: successors 
    -- CP-element group 18:  members (3) 
      -- CP-element group 18: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_208_sample_completed_
      -- CP-element group 18: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_208_Sample/$exit
      -- CP-element group 18: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_208_Sample/ra
      -- 
    ra_600_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_208_inst_ack_0, ack => checksum_CP_474_elements(18)); -- 
    -- CP-element group 19:  transition  input  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	0 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	29 
    -- CP-element group 19:  members (3) 
      -- CP-element group 19: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_208_update_completed_
      -- CP-element group 19: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_208_Update/$exit
      -- CP-element group 19: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_208_Update/ca
      -- 
    ca_605_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_208_inst_ack_1, ack => checksum_CP_474_elements(19)); -- 
    -- CP-element group 20:  join  transition  output  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	6 
    -- CP-element group 20: 	8 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	21 
    -- CP-element group 20:  members (3) 
      -- CP-element group 20: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_213_sample_start_
      -- CP-element group 20: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_213_Sample/$entry
      -- CP-element group 20: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_213_Sample/rr
      -- 
    rr_613_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_613_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(20), ack => XOR_u1_u1_213_inst_req_0); -- 
    checksum_cp_element_group_20: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 28) := "checksum_cp_element_group_20"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_CP_474_elements(6) & checksum_CP_474_elements(8);
      gj_checksum_cp_element_group_20 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_CP_474_elements(20), clk => clk, reset => reset); --
    end block;
    -- CP-element group 21:  transition  input  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	20 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (3) 
      -- CP-element group 21: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_213_sample_completed_
      -- CP-element group 21: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_213_Sample/$exit
      -- CP-element group 21: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_213_Sample/ra
      -- 
    ra_614_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_213_inst_ack_0, ack => checksum_CP_474_elements(21)); -- 
    -- CP-element group 22:  transition  input  bypass 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	0 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	29 
    -- CP-element group 22:  members (3) 
      -- CP-element group 22: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_213_update_completed_
      -- CP-element group 22: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_213_Update/$exit
      -- CP-element group 22: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_213_Update/ca
      -- 
    ca_619_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 22_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_213_inst_ack_1, ack => checksum_CP_474_elements(22)); -- 
    -- CP-element group 23:  join  transition  output  bypass 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	10 
    -- CP-element group 23: 	12 
    -- CP-element group 23: successors 
    -- CP-element group 23: 	24 
    -- CP-element group 23:  members (3) 
      -- CP-element group 23: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_218_sample_start_
      -- CP-element group 23: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_218_Sample/$entry
      -- CP-element group 23: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_218_Sample/rr
      -- 
    rr_627_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_627_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(23), ack => XOR_u1_u1_218_inst_req_0); -- 
    checksum_cp_element_group_23: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 28) := "checksum_cp_element_group_23"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_CP_474_elements(10) & checksum_CP_474_elements(12);
      gj_checksum_cp_element_group_23 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_CP_474_elements(23), clk => clk, reset => reset); --
    end block;
    -- CP-element group 24:  transition  input  bypass 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	23 
    -- CP-element group 24: successors 
    -- CP-element group 24:  members (3) 
      -- CP-element group 24: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_218_sample_completed_
      -- CP-element group 24: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_218_Sample/$exit
      -- CP-element group 24: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_218_Sample/ra
      -- 
    ra_628_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_218_inst_ack_0, ack => checksum_CP_474_elements(24)); -- 
    -- CP-element group 25:  transition  input  bypass 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	0 
    -- CP-element group 25: successors 
    -- CP-element group 25: 	32 
    -- CP-element group 25:  members (3) 
      -- CP-element group 25: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_218_Update/ca
      -- CP-element group 25: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_218_Update/$exit
      -- CP-element group 25: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_218_update_completed_
      -- 
    ca_633_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_218_inst_ack_1, ack => checksum_CP_474_elements(25)); -- 
    -- CP-element group 26:  join  transition  output  bypass 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	14 
    -- CP-element group 26: 	16 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	27 
    -- CP-element group 26:  members (3) 
      -- CP-element group 26: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_223_Sample/$entry
      -- CP-element group 26: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_223_Sample/rr
      -- CP-element group 26: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_223_sample_start_
      -- 
    rr_641_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_641_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(26), ack => XOR_u1_u1_223_inst_req_0); -- 
    checksum_cp_element_group_26: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 28) := "checksum_cp_element_group_26"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_CP_474_elements(14) & checksum_CP_474_elements(16);
      gj_checksum_cp_element_group_26 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_CP_474_elements(26), clk => clk, reset => reset); --
    end block;
    -- CP-element group 27:  transition  input  bypass 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	26 
    -- CP-element group 27: successors 
    -- CP-element group 27:  members (3) 
      -- CP-element group 27: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_223_Sample/ra
      -- CP-element group 27: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_223_Sample/$exit
      -- CP-element group 27: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_223_sample_completed_
      -- 
    ra_642_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 27_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_223_inst_ack_0, ack => checksum_CP_474_elements(27)); -- 
    -- CP-element group 28:  transition  input  bypass 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	0 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	32 
    -- CP-element group 28:  members (3) 
      -- CP-element group 28: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_223_update_completed_
      -- CP-element group 28: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_223_Update/ca
      -- CP-element group 28: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_223_Update/$exit
      -- 
    ca_647_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 28_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_223_inst_ack_1, ack => checksum_CP_474_elements(28)); -- 
    -- CP-element group 29:  join  transition  output  bypass 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	19 
    -- CP-element group 29: 	22 
    -- CP-element group 29: successors 
    -- CP-element group 29: 	30 
    -- CP-element group 29:  members (3) 
      -- CP-element group 29: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_228_Sample/$entry
      -- CP-element group 29: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_228_Sample/rr
      -- CP-element group 29: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_228_sample_start_
      -- 
    rr_655_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_655_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(29), ack => XOR_u1_u1_228_inst_req_0); -- 
    checksum_cp_element_group_29: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 28) := "checksum_cp_element_group_29"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_CP_474_elements(19) & checksum_CP_474_elements(22);
      gj_checksum_cp_element_group_29 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_CP_474_elements(29), clk => clk, reset => reset); --
    end block;
    -- CP-element group 30:  transition  input  bypass 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	29 
    -- CP-element group 30: successors 
    -- CP-element group 30:  members (3) 
      -- CP-element group 30: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_228_Sample/ra
      -- CP-element group 30: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_228_Sample/$exit
      -- CP-element group 30: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_228_sample_completed_
      -- 
    ra_656_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 30_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_228_inst_ack_0, ack => checksum_CP_474_elements(30)); -- 
    -- CP-element group 31:  transition  input  bypass 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	0 
    -- CP-element group 31: successors 
    -- CP-element group 31: 	35 
    -- CP-element group 31:  members (3) 
      -- CP-element group 31: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_228_Update/ca
      -- CP-element group 31: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_228_Update/$exit
      -- CP-element group 31: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_228_update_completed_
      -- 
    ca_661_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 31_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_228_inst_ack_1, ack => checksum_CP_474_elements(31)); -- 
    -- CP-element group 32:  join  transition  output  bypass 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	25 
    -- CP-element group 32: 	28 
    -- CP-element group 32: successors 
    -- CP-element group 32: 	33 
    -- CP-element group 32:  members (3) 
      -- CP-element group 32: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_233_sample_start_
      -- CP-element group 32: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_233_Sample/rr
      -- CP-element group 32: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_233_Sample/$entry
      -- 
    rr_669_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_669_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(32), ack => XOR_u1_u1_233_inst_req_0); -- 
    checksum_cp_element_group_32: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 28) := "checksum_cp_element_group_32"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_CP_474_elements(25) & checksum_CP_474_elements(28);
      gj_checksum_cp_element_group_32 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_CP_474_elements(32), clk => clk, reset => reset); --
    end block;
    -- CP-element group 33:  transition  input  bypass 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	32 
    -- CP-element group 33: successors 
    -- CP-element group 33:  members (3) 
      -- CP-element group 33: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_233_sample_completed_
      -- CP-element group 33: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_233_Sample/ra
      -- CP-element group 33: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_233_Sample/$exit
      -- 
    ra_670_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 33_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_233_inst_ack_0, ack => checksum_CP_474_elements(33)); -- 
    -- CP-element group 34:  transition  input  bypass 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	0 
    -- CP-element group 34: successors 
    -- CP-element group 34: 	35 
    -- CP-element group 34:  members (3) 
      -- CP-element group 34: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_233_update_completed_
      -- CP-element group 34: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_233_Update/ca
      -- CP-element group 34: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_233_Update/$exit
      -- 
    ca_675_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_233_inst_ack_1, ack => checksum_CP_474_elements(34)); -- 
    -- CP-element group 35:  join  transition  output  bypass 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	31 
    -- CP-element group 35: 	34 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	36 
    -- CP-element group 35:  members (3) 
      -- CP-element group 35: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_238_Sample/rr
      -- CP-element group 35: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_238_Sample/$entry
      -- CP-element group 35: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_238_sample_start_
      -- 
    rr_683_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_683_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_CP_474_elements(35), ack => XOR_u1_u1_238_inst_req_0); -- 
    checksum_cp_element_group_35: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 28) := "checksum_cp_element_group_35"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_CP_474_elements(31) & checksum_CP_474_elements(34);
      gj_checksum_cp_element_group_35 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_CP_474_elements(35), clk => clk, reset => reset); --
    end block;
    -- CP-element group 36:  transition  input  bypass 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	35 
    -- CP-element group 36: successors 
    -- CP-element group 36:  members (3) 
      -- CP-element group 36: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_238_Sample/ra
      -- CP-element group 36: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_238_Sample/$exit
      -- CP-element group 36: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_238_sample_completed_
      -- 
    ra_684_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_238_inst_ack_0, ack => checksum_CP_474_elements(36)); -- 
    -- CP-element group 37:  transition  input  bypass 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	0 
    -- CP-element group 37: successors 
    -- CP-element group 37:  members (5) 
      -- CP-element group 37: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_238_Update/ca
      -- CP-element group 37: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_238_Update/$exit
      -- CP-element group 37: 	 assign_stmt_176_to_assign_stmt_239/XOR_u1_u1_238_update_completed_
      -- CP-element group 37: 	 $exit
      -- CP-element group 37: 	 assign_stmt_176_to_assign_stmt_239/$exit
      -- 
    ca_689_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u1_u1_238_inst_ack_1, ack => checksum_CP_474_elements(37)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal a_0_176 : std_logic_vector(0 downto 0);
    signal a_1_180 : std_logic_vector(0 downto 0);
    signal a_2_184 : std_logic_vector(0 downto 0);
    signal a_3_188 : std_logic_vector(0 downto 0);
    signal a_4_192 : std_logic_vector(0 downto 0);
    signal a_5_196 : std_logic_vector(0 downto 0);
    signal a_6_200 : std_logic_vector(0 downto 0);
    signal a_7_204 : std_logic_vector(0 downto 0);
    signal c_0_t1_209 : std_logic_vector(0 downto 0);
    signal c_0_t2_214 : std_logic_vector(0 downto 0);
    signal c_0_t3_219 : std_logic_vector(0 downto 0);
    signal c_0_t4_224 : std_logic_vector(0 downto 0);
    signal c_0_t5_229 : std_logic_vector(0 downto 0);
    signal c_0_t6_234 : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    slice_175_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_175_inst_req_0;
      slice_175_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_175_inst_req_1;
      slice_175_inst_ack_1<= update_ack(0);
      slice_175_inst: SliceSplitProtocol generic map(name => "slice_175_inst", in_data_width => 8, high_index => 7, low_index => 7, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => m_0_buffer, dout => a_0_176, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_179_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_179_inst_req_0;
      slice_179_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_179_inst_req_1;
      slice_179_inst_ack_1<= update_ack(0);
      slice_179_inst: SliceSplitProtocol generic map(name => "slice_179_inst", in_data_width => 8, high_index => 6, low_index => 6, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => m_0_buffer, dout => a_1_180, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_183_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_183_inst_req_0;
      slice_183_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_183_inst_req_1;
      slice_183_inst_ack_1<= update_ack(0);
      slice_183_inst: SliceSplitProtocol generic map(name => "slice_183_inst", in_data_width => 8, high_index => 5, low_index => 5, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => m_0_buffer, dout => a_2_184, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_187_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_187_inst_req_0;
      slice_187_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_187_inst_req_1;
      slice_187_inst_ack_1<= update_ack(0);
      slice_187_inst: SliceSplitProtocol generic map(name => "slice_187_inst", in_data_width => 8, high_index => 4, low_index => 4, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => m_0_buffer, dout => a_3_188, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_191_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_191_inst_req_0;
      slice_191_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_191_inst_req_1;
      slice_191_inst_ack_1<= update_ack(0);
      slice_191_inst: SliceSplitProtocol generic map(name => "slice_191_inst", in_data_width => 8, high_index => 3, low_index => 3, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => m_0_buffer, dout => a_4_192, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_195_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_195_inst_req_0;
      slice_195_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_195_inst_req_1;
      slice_195_inst_ack_1<= update_ack(0);
      slice_195_inst: SliceSplitProtocol generic map(name => "slice_195_inst", in_data_width => 8, high_index => 2, low_index => 2, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => m_0_buffer, dout => a_5_196, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_199_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_199_inst_req_0;
      slice_199_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_199_inst_req_1;
      slice_199_inst_ack_1<= update_ack(0);
      slice_199_inst: SliceSplitProtocol generic map(name => "slice_199_inst", in_data_width => 8, high_index => 1, low_index => 1, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => m_0_buffer, dout => a_6_200, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_203_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_203_inst_req_0;
      slice_203_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_203_inst_req_1;
      slice_203_inst_ack_1<= update_ack(0);
      slice_203_inst: SliceSplitProtocol generic map(name => "slice_203_inst", in_data_width => 8, high_index => 0, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => m_0_buffer, dout => a_7_204, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    -- shared split operator group (0) : XOR_u1_u1_208_inst 
    ApIntXor_group_0: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= a_0_176 & a_1_180;
      c_0_t1_209 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u1_u1_208_inst_req_0;
      XOR_u1_u1_208_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u1_u1_208_inst_req_1;
      XOR_u1_u1_208_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_0_gI: SplitGuardInterface generic map(name => "ApIntXor_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : XOR_u1_u1_213_inst 
    ApIntXor_group_1: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= a_2_184 & a_3_188;
      c_0_t2_214 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u1_u1_213_inst_req_0;
      XOR_u1_u1_213_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u1_u1_213_inst_req_1;
      XOR_u1_u1_213_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_1_gI: SplitGuardInterface generic map(name => "ApIntXor_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- shared split operator group (2) : XOR_u1_u1_218_inst 
    ApIntXor_group_2: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= a_4_192 & a_5_196;
      c_0_t3_219 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u1_u1_218_inst_req_0;
      XOR_u1_u1_218_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u1_u1_218_inst_req_1;
      XOR_u1_u1_218_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_2_gI: SplitGuardInterface generic map(name => "ApIntXor_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_2",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 2
    -- shared split operator group (3) : XOR_u1_u1_223_inst 
    ApIntXor_group_3: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= a_6_200 & a_7_204;
      c_0_t4_224 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u1_u1_223_inst_req_0;
      XOR_u1_u1_223_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u1_u1_223_inst_req_1;
      XOR_u1_u1_223_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_3_gI: SplitGuardInterface generic map(name => "ApIntXor_group_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_3",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 3
    -- shared split operator group (4) : XOR_u1_u1_228_inst 
    ApIntXor_group_4: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_0_t1_209 & c_0_t2_214;
      c_0_t5_229 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u1_u1_228_inst_req_0;
      XOR_u1_u1_228_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u1_u1_228_inst_req_1;
      XOR_u1_u1_228_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_4_gI: SplitGuardInterface generic map(name => "ApIntXor_group_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_4",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 4
    -- shared split operator group (5) : XOR_u1_u1_233_inst 
    ApIntXor_group_5: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_0_t3_219 & c_0_t4_224;
      c_0_t6_234 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u1_u1_233_inst_req_0;
      XOR_u1_u1_233_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u1_u1_233_inst_req_1;
      XOR_u1_u1_233_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_5_gI: SplitGuardInterface generic map(name => "ApIntXor_group_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_5",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 5
    -- shared split operator group (6) : XOR_u1_u1_238_inst 
    ApIntXor_group_6: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_0_t5_229 & c_0_t6_234;
      c_0_buffer <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u1_u1_238_inst_req_0;
      XOR_u1_u1_238_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u1_u1_238_inst_req_1;
      XOR_u1_u1_238_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_6_gI: SplitGuardInterface generic map(name => "ApIntXor_group_6_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_6",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 6
    -- 
  end Block; -- data_path
  -- 
end checksum_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity checksum_calculation is -- 
  generic (tag_length : integer); 
  port ( -- 
    m_0 : in  std_logic_vector(7 downto 0);
    m_1 : in  std_logic_vector(7 downto 0);
    m_2 : in  std_logic_vector(7 downto 0);
    m_3 : in  std_logic_vector(7 downto 0);
    m_4 : in  std_logic_vector(7 downto 0);
    m_5 : in  std_logic_vector(7 downto 0);
    m_6 : in  std_logic_vector(7 downto 0);
    m_7 : in  std_logic_vector(7 downto 0);
    m_8 : in  std_logic_vector(7 downto 0);
    m_9 : in  std_logic_vector(7 downto 0);
    m_10 : in  std_logic_vector(7 downto 0);
    m_11 : in  std_logic_vector(7 downto 0);
    m_12 : in  std_logic_vector(7 downto 0);
    m_13 : in  std_logic_vector(7 downto 0);
    m_14 : out  std_logic_vector(7 downto 0);
    m_15 : out  std_logic_vector(7 downto 0);
    checksum_call_reqs : out  std_logic_vector(0 downto 0);
    checksum_call_acks : in   std_logic_vector(0 downto 0);
    checksum_call_data : out  std_logic_vector(7 downto 0);
    checksum_call_tag  :  out  std_logic_vector(3 downto 0);
    checksum_return_reqs : out  std_logic_vector(0 downto 0);
    checksum_return_acks : in   std_logic_vector(0 downto 0);
    checksum_return_data : in   std_logic_vector(0 downto 0);
    checksum_return_tag :  in   std_logic_vector(3 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity checksum_calculation;
architecture checksum_calculation_arch of checksum_calculation is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 112)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 16)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal m_0_buffer :  std_logic_vector(7 downto 0);
  signal m_0_update_enable: Boolean;
  signal m_1_buffer :  std_logic_vector(7 downto 0);
  signal m_1_update_enable: Boolean;
  signal m_2_buffer :  std_logic_vector(7 downto 0);
  signal m_2_update_enable: Boolean;
  signal m_3_buffer :  std_logic_vector(7 downto 0);
  signal m_3_update_enable: Boolean;
  signal m_4_buffer :  std_logic_vector(7 downto 0);
  signal m_4_update_enable: Boolean;
  signal m_5_buffer :  std_logic_vector(7 downto 0);
  signal m_5_update_enable: Boolean;
  signal m_6_buffer :  std_logic_vector(7 downto 0);
  signal m_6_update_enable: Boolean;
  signal m_7_buffer :  std_logic_vector(7 downto 0);
  signal m_7_update_enable: Boolean;
  signal m_8_buffer :  std_logic_vector(7 downto 0);
  signal m_8_update_enable: Boolean;
  signal m_9_buffer :  std_logic_vector(7 downto 0);
  signal m_9_update_enable: Boolean;
  signal m_10_buffer :  std_logic_vector(7 downto 0);
  signal m_10_update_enable: Boolean;
  signal m_11_buffer :  std_logic_vector(7 downto 0);
  signal m_11_update_enable: Boolean;
  signal m_12_buffer :  std_logic_vector(7 downto 0);
  signal m_12_update_enable: Boolean;
  signal m_13_buffer :  std_logic_vector(7 downto 0);
  signal m_13_update_enable: Boolean;
  -- output port buffer signals
  signal m_14_buffer :  std_logic_vector(7 downto 0);
  signal m_14_update_enable: Boolean;
  signal m_15_buffer :  std_logic_vector(7 downto 0);
  signal m_15_update_enable: Boolean;
  signal checksum_calculation_CP_690_start: Boolean;
  signal checksum_calculation_CP_690_symbol: Boolean;
  -- volatile/operator module components. 
  component checksum is -- 
    generic (tag_length : integer); 
    port ( -- 
      m_0 : in  std_logic_vector(7 downto 0);
      c_0 : out  std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal call_stmt_284_call_ack_1 : boolean;
  signal call_stmt_299_call_ack_1 : boolean;
  signal CONCAT_u1_u2_303_inst_req_1 : boolean;
  signal call_stmt_266_call_ack_0 : boolean;
  signal call_stmt_266_call_req_0 : boolean;
  signal CONCAT_u1_u2_303_inst_ack_1 : boolean;
  signal call_stmt_290_call_ack_1 : boolean;
  signal call_stmt_290_call_req_1 : boolean;
  signal call_stmt_278_call_ack_0 : boolean;
  signal call_stmt_278_call_req_0 : boolean;
  signal CONCAT_u1_u2_308_inst_req_1 : boolean;
  signal call_stmt_296_call_ack_1 : boolean;
  signal call_stmt_296_call_req_1 : boolean;
  signal call_stmt_299_call_ack_0 : boolean;
  signal call_stmt_260_call_ack_1 : boolean;
  signal call_stmt_269_call_ack_0 : boolean;
  signal call_stmt_269_call_req_0 : boolean;
  signal call_stmt_260_call_ack_0 : boolean;
  signal call_stmt_290_call_ack_0 : boolean;
  signal call_stmt_287_call_ack_0 : boolean;
  signal CONCAT_u1_u2_313_inst_req_1 : boolean;
  signal CONCAT_u2_u4_323_inst_req_0 : boolean;
  signal CONCAT_u2_u4_323_inst_ack_0 : boolean;
  signal CONCAT_u2_u4_328_inst_req_0 : boolean;
  signal CONCAT_u2_u4_328_inst_ack_0 : boolean;
  signal CONCAT_u2_u4_328_inst_req_1 : boolean;
  signal CONCAT_u2_u4_328_inst_ack_1 : boolean;
  signal CONCAT_u1_u2_313_inst_req_0 : boolean;
  signal CONCAT_u1_u2_313_inst_ack_0 : boolean;
  signal call_stmt_296_call_req_0 : boolean;
  signal call_stmt_281_call_ack_1 : boolean;
  signal CONCAT_u1_u2_308_inst_ack_0 : boolean;
  signal CONCAT_u1_u2_308_inst_req_0 : boolean;
  signal call_stmt_269_call_ack_1 : boolean;
  signal call_stmt_269_call_req_1 : boolean;
  signal CONCAT_u1_u2_303_inst_ack_0 : boolean;
  signal CONCAT_u1_u2_303_inst_req_0 : boolean;
  signal CONCAT_u1_u2_318_inst_req_1 : boolean;
  signal CONCAT_u1_u2_318_inst_ack_1 : boolean;
  signal CONCAT_u1_u2_318_inst_ack_0 : boolean;
  signal CONCAT_u1_u2_318_inst_req_0 : boolean;
  signal CONCAT_u2_u4_323_inst_req_1 : boolean;
  signal CONCAT_u2_u4_323_inst_ack_1 : boolean;
  signal call_stmt_272_call_ack_1 : boolean;
  signal call_stmt_284_call_ack_0 : boolean;
  signal call_stmt_284_call_req_0 : boolean;
  signal call_stmt_272_call_req_1 : boolean;
  signal call_stmt_260_call_req_0 : boolean;
  signal call_stmt_275_call_ack_1 : boolean;
  signal call_stmt_275_call_req_1 : boolean;
  signal call_stmt_278_call_ack_1 : boolean;
  signal call_stmt_278_call_req_1 : boolean;
  signal call_stmt_275_call_ack_0 : boolean;
  signal call_stmt_275_call_req_0 : boolean;
  signal call_stmt_266_call_ack_1 : boolean;
  signal call_stmt_266_call_req_1 : boolean;
  signal CONCAT_u1_u2_308_inst_ack_1 : boolean;
  signal call_stmt_296_call_ack_0 : boolean;
  signal call_stmt_293_call_ack_1 : boolean;
  signal call_stmt_293_call_req_1 : boolean;
  signal call_stmt_287_call_ack_1 : boolean;
  signal call_stmt_287_call_req_1 : boolean;
  signal call_stmt_281_call_ack_0 : boolean;
  signal call_stmt_293_call_ack_0 : boolean;
  signal call_stmt_260_call_req_1 : boolean;
  signal call_stmt_299_call_req_0 : boolean;
  signal call_stmt_299_call_req_1 : boolean;
  signal call_stmt_287_call_req_0 : boolean;
  signal call_stmt_290_call_req_0 : boolean;
  signal call_stmt_263_call_ack_1 : boolean;
  signal call_stmt_293_call_req_0 : boolean;
  signal call_stmt_263_call_req_1 : boolean;
  signal CONCAT_u1_u2_313_inst_ack_1 : boolean;
  signal call_stmt_284_call_req_1 : boolean;
  signal call_stmt_281_call_req_1 : boolean;
  signal call_stmt_263_call_ack_0 : boolean;
  signal call_stmt_272_call_ack_0 : boolean;
  signal call_stmt_263_call_req_0 : boolean;
  signal call_stmt_272_call_req_0 : boolean;
  signal call_stmt_281_call_req_0 : boolean;
  signal CONCAT_u4_u8_333_inst_req_0 : boolean;
  signal CONCAT_u4_u8_333_inst_ack_0 : boolean;
  signal CONCAT_u4_u8_333_inst_req_1 : boolean;
  signal CONCAT_u4_u8_333_inst_ack_1 : boolean;
  signal CONCAT_u1_u2_343_inst_req_0 : boolean;
  signal CONCAT_u1_u2_343_inst_ack_0 : boolean;
  signal CONCAT_u1_u2_343_inst_req_1 : boolean;
  signal CONCAT_u1_u2_343_inst_ack_1 : boolean;
  signal CONCAT_u1_u2_348_inst_req_0 : boolean;
  signal CONCAT_u1_u2_348_inst_ack_0 : boolean;
  signal CONCAT_u1_u2_348_inst_req_1 : boolean;
  signal CONCAT_u1_u2_348_inst_ack_1 : boolean;
  signal CONCAT_u1_u2_353_inst_req_0 : boolean;
  signal CONCAT_u1_u2_353_inst_ack_0 : boolean;
  signal CONCAT_u1_u2_353_inst_req_1 : boolean;
  signal CONCAT_u1_u2_353_inst_ack_1 : boolean;
  signal CONCAT_u2_u4_358_inst_req_0 : boolean;
  signal CONCAT_u2_u4_358_inst_ack_0 : boolean;
  signal CONCAT_u2_u4_358_inst_req_1 : boolean;
  signal CONCAT_u2_u4_358_inst_ack_1 : boolean;
  signal CONCAT_u2_u4_363_inst_req_0 : boolean;
  signal CONCAT_u2_u4_363_inst_ack_0 : boolean;
  signal CONCAT_u2_u4_363_inst_req_1 : boolean;
  signal CONCAT_u2_u4_363_inst_ack_1 : boolean;
  signal CONCAT_u4_u8_368_inst_req_0 : boolean;
  signal CONCAT_u4_u8_368_inst_ack_0 : boolean;
  signal CONCAT_u4_u8_368_inst_req_1 : boolean;
  signal CONCAT_u4_u8_368_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "checksum_calculation_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 112) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(7 downto 0) <= m_0;
  m_0_buffer <= in_buffer_data_out(7 downto 0);
  in_buffer_data_in(15 downto 8) <= m_1;
  m_1_buffer <= in_buffer_data_out(15 downto 8);
  in_buffer_data_in(23 downto 16) <= m_2;
  m_2_buffer <= in_buffer_data_out(23 downto 16);
  in_buffer_data_in(31 downto 24) <= m_3;
  m_3_buffer <= in_buffer_data_out(31 downto 24);
  in_buffer_data_in(39 downto 32) <= m_4;
  m_4_buffer <= in_buffer_data_out(39 downto 32);
  in_buffer_data_in(47 downto 40) <= m_5;
  m_5_buffer <= in_buffer_data_out(47 downto 40);
  in_buffer_data_in(55 downto 48) <= m_6;
  m_6_buffer <= in_buffer_data_out(55 downto 48);
  in_buffer_data_in(63 downto 56) <= m_7;
  m_7_buffer <= in_buffer_data_out(63 downto 56);
  in_buffer_data_in(71 downto 64) <= m_8;
  m_8_buffer <= in_buffer_data_out(71 downto 64);
  in_buffer_data_in(79 downto 72) <= m_9;
  m_9_buffer <= in_buffer_data_out(79 downto 72);
  in_buffer_data_in(87 downto 80) <= m_10;
  m_10_buffer <= in_buffer_data_out(87 downto 80);
  in_buffer_data_in(95 downto 88) <= m_11;
  m_11_buffer <= in_buffer_data_out(95 downto 88);
  in_buffer_data_in(103 downto 96) <= m_12;
  m_12_buffer <= in_buffer_data_out(103 downto 96);
  in_buffer_data_in(111 downto 104) <= m_13;
  m_13_buffer <= in_buffer_data_out(111 downto 104);
  in_buffer_data_in(tag_length + 111 downto 112) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 111 downto 112);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  checksum_calculation_CP_690_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "checksum_calculation_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 16) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(7 downto 0) <= m_14_buffer;
  m_14 <= out_buffer_data_out(7 downto 0);
  out_buffer_data_in(15 downto 8) <= m_15_buffer;
  m_15 <= out_buffer_data_out(15 downto 8);
  out_buffer_data_in(tag_length + 15 downto 16) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 15 downto 16);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= checksum_calculation_CP_690_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= checksum_calculation_CP_690_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= checksum_calculation_CP_690_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  checksum_calculation_CP_690: Block -- control-path 
    signal checksum_calculation_CP_690_elements: BooleanArray(67 downto 0);
    -- 
  begin -- 
    checksum_calculation_CP_690_elements(0) <= checksum_calculation_CP_690_start;
    checksum_calculation_CP_690_symbol <= checksum_calculation_CP_690_elements(67);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	5 
    -- CP-element group 0: 	43 
    -- CP-element group 0: 	46 
    -- CP-element group 0: 	49 
    -- CP-element group 0: 	37 
    -- CP-element group 0: 	40 
    -- CP-element group 0: 	52 
    -- CP-element group 0: 	55 
    -- CP-element group 0: 	58 
    -- CP-element group 0: 	60 
    -- CP-element group 0: 	63 
    -- CP-element group 0: 	66 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	7 
    -- CP-element group 0: 	8 
    -- CP-element group 0: 	9 
    -- CP-element group 0: 	10 
    -- CP-element group 0: 	11 
    -- CP-element group 0: 	12 
    -- CP-element group 0: 	13 
    -- CP-element group 0: 	14 
    -- CP-element group 0: 	15 
    -- CP-element group 0: 	16 
    -- CP-element group 0: 	17 
    -- CP-element group 0: 	18 
    -- CP-element group 0: 	19 
    -- CP-element group 0: 	20 
    -- CP-element group 0: 	21 
    -- CP-element group 0: 	22 
    -- CP-element group 0: 	23 
    -- CP-element group 0: 	24 
    -- CP-element group 0: 	25 
    -- CP-element group 0: 	26 
    -- CP-element group 0: 	27 
    -- CP-element group 0: 	28 
    -- CP-element group 0: 	31 
    -- CP-element group 0: 	34 
    -- CP-element group 0:  members (125) 
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_284_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_284_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_313_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_266_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_303_Update/cr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_272_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_266_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_272_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_287_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_290_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_290_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_278_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_278_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_308_Update/cr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_278_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_296_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_296_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_290_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_290_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_299_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_296_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_269_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_272_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_313_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_313_Update/cr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_323_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_260_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_260_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_328_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_328_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_328_Update/cr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_296_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_263_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_281_Update/$entry
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_308_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_278_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_278_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_266_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_303_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_303_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_269_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_269_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_318_Update/cr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_318_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_323_Update/cr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_263_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_284_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_287_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_263_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_272_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_269_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_260_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_269_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_269_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_260_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_275_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_278_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_275_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_275_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_308_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_275_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_275_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_266_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_275_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_296_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_296_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_293_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_293_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_287_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_287_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_287_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_293_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_260_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_281_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_299_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_281_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_299_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_299_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_266_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_299_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_293_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_293_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_263_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_281_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_287_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_290_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_290_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_266_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_293_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_263_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_323_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_318_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_284_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_299_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_281_Update/ccr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_260_sample_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_272_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_284_Sample/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_263_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_272_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_284_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/call_stmt_281_Sample/crr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_333_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_333_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_333_Update/cr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_343_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_343_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_343_Update/cr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_348_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_348_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_348_Update/cr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_353_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_353_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_353_Update/cr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_358_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_358_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_358_Update/cr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_363_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_363_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_363_Update/cr
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_368_update_start_
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_368_Update/$entry
      -- CP-element group 0: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_368_Update/cr
      -- 
    crr_703_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_703_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_260_call_req_0); -- 
    cr_932_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_932_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u1_u2_313_inst_req_1); -- 
    ccr_708_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_708_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_260_call_req_1); -- 
    crr_717_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_717_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_263_call_req_0); -- 
    ccr_722_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_722_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_263_call_req_1); -- 
    crr_731_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_731_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_266_call_req_0); -- 
    ccr_736_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_736_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_266_call_req_1); -- 
    cr_974_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_974_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u2_u4_328_inst_req_1); -- 
    cr_988_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_988_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u4_u8_333_inst_req_1); -- 
    cr_1002_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1002_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u1_u2_343_inst_req_1); -- 
    cr_946_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_946_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u1_u2_318_inst_req_1); -- 
    cr_960_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_960_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u2_u4_323_inst_req_1); -- 
    cr_1016_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1016_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u1_u2_348_inst_req_1); -- 
    cr_1030_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1030_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u1_u2_353_inst_req_1); -- 
    cr_1044_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1044_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u2_u4_358_inst_req_1); -- 
    cr_1058_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1058_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u2_u4_363_inst_req_1); -- 
    cr_1072_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1072_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u4_u8_368_inst_req_1); -- 
    crr_745_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_745_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_269_call_req_0); -- 
    ccr_750_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_750_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_269_call_req_1); -- 
    crr_759_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_759_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_272_call_req_0); -- 
    ccr_764_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_764_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_272_call_req_1); -- 
    crr_773_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_773_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_275_call_req_0); -- 
    ccr_778_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_778_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_275_call_req_1); -- 
    crr_787_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_787_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_278_call_req_0); -- 
    ccr_792_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_792_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_278_call_req_1); -- 
    crr_801_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_801_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_281_call_req_0); -- 
    ccr_806_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_806_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_281_call_req_1); -- 
    crr_815_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_815_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_284_call_req_0); -- 
    ccr_820_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_820_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_284_call_req_1); -- 
    crr_829_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_829_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_287_call_req_0); -- 
    ccr_834_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_834_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_287_call_req_1); -- 
    crr_843_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_843_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_290_call_req_0); -- 
    ccr_848_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_848_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_290_call_req_1); -- 
    crr_857_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_857_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_293_call_req_0); -- 
    ccr_862_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_862_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_293_call_req_1); -- 
    crr_871_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_871_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_296_call_req_0); -- 
    ccr_876_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_876_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_296_call_req_1); -- 
    crr_885_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_885_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_299_call_req_0); -- 
    ccr_890_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_890_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => call_stmt_299_call_req_1); -- 
    cr_904_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_904_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u1_u2_303_inst_req_1); -- 
    cr_918_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_918_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(0), ack => CONCAT_u1_u2_308_inst_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 call_stmt_260_to_assign_stmt_369/call_stmt_260_Sample/cra
      -- CP-element group 1: 	 call_stmt_260_to_assign_stmt_369/call_stmt_260_sample_completed_
      -- CP-element group 1: 	 call_stmt_260_to_assign_stmt_369/call_stmt_260_Sample/$exit
      -- 
    cra_704_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_260_call_ack_0, ack => checksum_calculation_CP_690_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	38 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 call_stmt_260_to_assign_stmt_369/call_stmt_260_update_completed_
      -- CP-element group 2: 	 call_stmt_260_to_assign_stmt_369/call_stmt_260_Update/cca
      -- CP-element group 2: 	 call_stmt_260_to_assign_stmt_369/call_stmt_260_Update/$exit
      -- 
    cca_709_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_260_call_ack_1, ack => checksum_calculation_CP_690_elements(2)); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 call_stmt_260_to_assign_stmt_369/call_stmt_263_sample_completed_
      -- CP-element group 3: 	 call_stmt_260_to_assign_stmt_369/call_stmt_263_Sample/cra
      -- CP-element group 3: 	 call_stmt_260_to_assign_stmt_369/call_stmt_263_Sample/$exit
      -- 
    cra_718_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_263_call_ack_0, ack => checksum_calculation_CP_690_elements(3)); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	38 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 call_stmt_260_to_assign_stmt_369/call_stmt_263_Update/$exit
      -- CP-element group 4: 	 call_stmt_260_to_assign_stmt_369/call_stmt_263_update_completed_
      -- CP-element group 4: 	 call_stmt_260_to_assign_stmt_369/call_stmt_263_Update/cca
      -- 
    cca_723_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_263_call_ack_1, ack => checksum_calculation_CP_690_elements(4)); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	0 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 call_stmt_260_to_assign_stmt_369/call_stmt_266_Sample/cra
      -- CP-element group 5: 	 call_stmt_260_to_assign_stmt_369/call_stmt_266_Sample/$exit
      -- CP-element group 5: 	 call_stmt_260_to_assign_stmt_369/call_stmt_266_sample_completed_
      -- 
    cra_732_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_266_call_ack_0, ack => checksum_calculation_CP_690_elements(5)); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	35 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 call_stmt_260_to_assign_stmt_369/call_stmt_266_update_completed_
      -- CP-element group 6: 	 call_stmt_260_to_assign_stmt_369/call_stmt_266_Update/cca
      -- CP-element group 6: 	 call_stmt_260_to_assign_stmt_369/call_stmt_266_Update/$exit
      -- 
    cca_737_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_266_call_ack_1, ack => checksum_calculation_CP_690_elements(6)); -- 
    -- CP-element group 7:  transition  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	0 
    -- CP-element group 7: successors 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 call_stmt_260_to_assign_stmt_369/call_stmt_269_Sample/cra
      -- CP-element group 7: 	 call_stmt_260_to_assign_stmt_369/call_stmt_269_Sample/$exit
      -- CP-element group 7: 	 call_stmt_260_to_assign_stmt_369/call_stmt_269_sample_completed_
      -- 
    cra_746_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_269_call_ack_0, ack => checksum_calculation_CP_690_elements(7)); -- 
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	0 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	35 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 call_stmt_260_to_assign_stmt_369/call_stmt_269_Update/cca
      -- CP-element group 8: 	 call_stmt_260_to_assign_stmt_369/call_stmt_269_Update/$exit
      -- CP-element group 8: 	 call_stmt_260_to_assign_stmt_369/call_stmt_269_update_completed_
      -- 
    cca_751_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_269_call_ack_1, ack => checksum_calculation_CP_690_elements(8)); -- 
    -- CP-element group 9:  transition  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	0 
    -- CP-element group 9: successors 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 call_stmt_260_to_assign_stmt_369/call_stmt_272_Sample/$exit
      -- CP-element group 9: 	 call_stmt_260_to_assign_stmt_369/call_stmt_272_sample_completed_
      -- CP-element group 9: 	 call_stmt_260_to_assign_stmt_369/call_stmt_272_Sample/cra
      -- 
    cra_760_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_272_call_ack_0, ack => checksum_calculation_CP_690_elements(9)); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	0 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	32 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 call_stmt_260_to_assign_stmt_369/call_stmt_272_update_completed_
      -- CP-element group 10: 	 call_stmt_260_to_assign_stmt_369/call_stmt_272_Update/cca
      -- CP-element group 10: 	 call_stmt_260_to_assign_stmt_369/call_stmt_272_Update/$exit
      -- 
    cca_765_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_272_call_ack_1, ack => checksum_calculation_CP_690_elements(10)); -- 
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	0 
    -- CP-element group 11: successors 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 call_stmt_260_to_assign_stmt_369/call_stmt_275_Sample/cra
      -- CP-element group 11: 	 call_stmt_260_to_assign_stmt_369/call_stmt_275_Sample/$exit
      -- CP-element group 11: 	 call_stmt_260_to_assign_stmt_369/call_stmt_275_sample_completed_
      -- 
    cra_774_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_275_call_ack_0, ack => checksum_calculation_CP_690_elements(11)); -- 
    -- CP-element group 12:  transition  input  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	0 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	32 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 call_stmt_260_to_assign_stmt_369/call_stmt_275_Update/cca
      -- CP-element group 12: 	 call_stmt_260_to_assign_stmt_369/call_stmt_275_Update/$exit
      -- CP-element group 12: 	 call_stmt_260_to_assign_stmt_369/call_stmt_275_update_completed_
      -- 
    cca_779_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_275_call_ack_1, ack => checksum_calculation_CP_690_elements(12)); -- 
    -- CP-element group 13:  transition  input  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	0 
    -- CP-element group 13: successors 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 call_stmt_260_to_assign_stmt_369/call_stmt_278_Sample/cra
      -- CP-element group 13: 	 call_stmt_260_to_assign_stmt_369/call_stmt_278_Sample/$exit
      -- CP-element group 13: 	 call_stmt_260_to_assign_stmt_369/call_stmt_278_sample_completed_
      -- 
    cra_788_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_278_call_ack_0, ack => checksum_calculation_CP_690_elements(13)); -- 
    -- CP-element group 14:  transition  input  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	0 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	29 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 call_stmt_260_to_assign_stmt_369/call_stmt_278_update_completed_
      -- CP-element group 14: 	 call_stmt_260_to_assign_stmt_369/call_stmt_278_Update/cca
      -- CP-element group 14: 	 call_stmt_260_to_assign_stmt_369/call_stmt_278_Update/$exit
      -- 
    cca_793_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_278_call_ack_1, ack => checksum_calculation_CP_690_elements(14)); -- 
    -- CP-element group 15:  transition  input  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	0 
    -- CP-element group 15: successors 
    -- CP-element group 15:  members (3) 
      -- CP-element group 15: 	 call_stmt_260_to_assign_stmt_369/call_stmt_281_Sample/cra
      -- CP-element group 15: 	 call_stmt_260_to_assign_stmt_369/call_stmt_281_sample_completed_
      -- CP-element group 15: 	 call_stmt_260_to_assign_stmt_369/call_stmt_281_Sample/$exit
      -- 
    cra_802_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_281_call_ack_0, ack => checksum_calculation_CP_690_elements(15)); -- 
    -- CP-element group 16:  transition  input  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	0 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	29 
    -- CP-element group 16:  members (3) 
      -- CP-element group 16: 	 call_stmt_260_to_assign_stmt_369/call_stmt_281_Update/$exit
      -- CP-element group 16: 	 call_stmt_260_to_assign_stmt_369/call_stmt_281_Update/cca
      -- CP-element group 16: 	 call_stmt_260_to_assign_stmt_369/call_stmt_281_update_completed_
      -- 
    cca_807_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_281_call_ack_1, ack => checksum_calculation_CP_690_elements(16)); -- 
    -- CP-element group 17:  transition  input  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	0 
    -- CP-element group 17: successors 
    -- CP-element group 17:  members (3) 
      -- CP-element group 17: 	 call_stmt_260_to_assign_stmt_369/call_stmt_284_sample_completed_
      -- CP-element group 17: 	 call_stmt_260_to_assign_stmt_369/call_stmt_284_Sample/cra
      -- CP-element group 17: 	 call_stmt_260_to_assign_stmt_369/call_stmt_284_Sample/$exit
      -- 
    cra_816_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 17_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_284_call_ack_0, ack => checksum_calculation_CP_690_elements(17)); -- 
    -- CP-element group 18:  transition  input  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	0 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	56 
    -- CP-element group 18:  members (3) 
      -- CP-element group 18: 	 call_stmt_260_to_assign_stmt_369/call_stmt_284_Update/cca
      -- CP-element group 18: 	 call_stmt_260_to_assign_stmt_369/call_stmt_284_Update/$exit
      -- CP-element group 18: 	 call_stmt_260_to_assign_stmt_369/call_stmt_284_update_completed_
      -- 
    cca_821_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_284_call_ack_1, ack => checksum_calculation_CP_690_elements(18)); -- 
    -- CP-element group 19:  transition  input  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	0 
    -- CP-element group 19: successors 
    -- CP-element group 19:  members (3) 
      -- CP-element group 19: 	 call_stmt_260_to_assign_stmt_369/call_stmt_287_sample_completed_
      -- CP-element group 19: 	 call_stmt_260_to_assign_stmt_369/call_stmt_287_Sample/cra
      -- CP-element group 19: 	 call_stmt_260_to_assign_stmt_369/call_stmt_287_Sample/$exit
      -- 
    cra_830_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_287_call_ack_0, ack => checksum_calculation_CP_690_elements(19)); -- 
    -- CP-element group 20:  transition  input  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	0 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	56 
    -- CP-element group 20:  members (3) 
      -- CP-element group 20: 	 call_stmt_260_to_assign_stmt_369/call_stmt_287_update_completed_
      -- CP-element group 20: 	 call_stmt_260_to_assign_stmt_369/call_stmt_287_Update/cca
      -- CP-element group 20: 	 call_stmt_260_to_assign_stmt_369/call_stmt_287_Update/$exit
      -- 
    cca_835_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 20_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_287_call_ack_1, ack => checksum_calculation_CP_690_elements(20)); -- 
    -- CP-element group 21:  transition  input  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	0 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (3) 
      -- CP-element group 21: 	 call_stmt_260_to_assign_stmt_369/call_stmt_290_sample_completed_
      -- CP-element group 21: 	 call_stmt_260_to_assign_stmt_369/call_stmt_290_Sample/cra
      -- CP-element group 21: 	 call_stmt_260_to_assign_stmt_369/call_stmt_290_Sample/$exit
      -- 
    cra_844_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_290_call_ack_0, ack => checksum_calculation_CP_690_elements(21)); -- 
    -- CP-element group 22:  transition  input  bypass 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	0 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	53 
    -- CP-element group 22:  members (3) 
      -- CP-element group 22: 	 call_stmt_260_to_assign_stmt_369/call_stmt_290_Update/cca
      -- CP-element group 22: 	 call_stmt_260_to_assign_stmt_369/call_stmt_290_update_completed_
      -- CP-element group 22: 	 call_stmt_260_to_assign_stmt_369/call_stmt_290_Update/$exit
      -- 
    cca_849_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 22_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_290_call_ack_1, ack => checksum_calculation_CP_690_elements(22)); -- 
    -- CP-element group 23:  transition  input  bypass 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	0 
    -- CP-element group 23: successors 
    -- CP-element group 23:  members (3) 
      -- CP-element group 23: 	 call_stmt_260_to_assign_stmt_369/call_stmt_293_Sample/cra
      -- CP-element group 23: 	 call_stmt_260_to_assign_stmt_369/call_stmt_293_Sample/$exit
      -- CP-element group 23: 	 call_stmt_260_to_assign_stmt_369/call_stmt_293_sample_completed_
      -- 
    cra_858_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 23_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_293_call_ack_0, ack => checksum_calculation_CP_690_elements(23)); -- 
    -- CP-element group 24:  transition  input  bypass 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	0 
    -- CP-element group 24: successors 
    -- CP-element group 24: 	53 
    -- CP-element group 24:  members (3) 
      -- CP-element group 24: 	 call_stmt_260_to_assign_stmt_369/call_stmt_293_Update/cca
      -- CP-element group 24: 	 call_stmt_260_to_assign_stmt_369/call_stmt_293_Update/$exit
      -- CP-element group 24: 	 call_stmt_260_to_assign_stmt_369/call_stmt_293_update_completed_
      -- 
    cca_863_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_293_call_ack_1, ack => checksum_calculation_CP_690_elements(24)); -- 
    -- CP-element group 25:  transition  input  bypass 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	0 
    -- CP-element group 25: successors 
    -- CP-element group 25:  members (3) 
      -- CP-element group 25: 	 call_stmt_260_to_assign_stmt_369/call_stmt_296_sample_completed_
      -- CP-element group 25: 	 call_stmt_260_to_assign_stmt_369/call_stmt_296_Sample/cra
      -- CP-element group 25: 	 call_stmt_260_to_assign_stmt_369/call_stmt_296_Sample/$exit
      -- 
    cra_872_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_296_call_ack_0, ack => checksum_calculation_CP_690_elements(25)); -- 
    -- CP-element group 26:  transition  input  bypass 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	0 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	50 
    -- CP-element group 26:  members (3) 
      -- CP-element group 26: 	 call_stmt_260_to_assign_stmt_369/call_stmt_296_Update/cca
      -- CP-element group 26: 	 call_stmt_260_to_assign_stmt_369/call_stmt_296_Update/$exit
      -- CP-element group 26: 	 call_stmt_260_to_assign_stmt_369/call_stmt_296_update_completed_
      -- 
    cca_877_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 26_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_296_call_ack_1, ack => checksum_calculation_CP_690_elements(26)); -- 
    -- CP-element group 27:  transition  input  bypass 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	0 
    -- CP-element group 27: successors 
    -- CP-element group 27:  members (3) 
      -- CP-element group 27: 	 call_stmt_260_to_assign_stmt_369/call_stmt_299_Sample/cra
      -- CP-element group 27: 	 call_stmt_260_to_assign_stmt_369/call_stmt_299_Sample/$exit
      -- CP-element group 27: 	 call_stmt_260_to_assign_stmt_369/call_stmt_299_sample_completed_
      -- 
    cra_886_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 27_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_299_call_ack_0, ack => checksum_calculation_CP_690_elements(27)); -- 
    -- CP-element group 28:  transition  input  bypass 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	0 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	50 
    -- CP-element group 28:  members (3) 
      -- CP-element group 28: 	 call_stmt_260_to_assign_stmt_369/call_stmt_299_Update/cca
      -- CP-element group 28: 	 call_stmt_260_to_assign_stmt_369/call_stmt_299_update_completed_
      -- CP-element group 28: 	 call_stmt_260_to_assign_stmt_369/call_stmt_299_Update/$exit
      -- 
    cca_891_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 28_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_299_call_ack_1, ack => checksum_calculation_CP_690_elements(28)); -- 
    -- CP-element group 29:  join  transition  output  bypass 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	14 
    -- CP-element group 29: 	16 
    -- CP-element group 29: successors 
    -- CP-element group 29: 	30 
    -- CP-element group 29:  members (3) 
      -- CP-element group 29: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_303_sample_start_
      -- CP-element group 29: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_303_Sample/$entry
      -- CP-element group 29: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_303_Sample/rr
      -- 
    rr_899_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_899_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(29), ack => CONCAT_u1_u2_303_inst_req_0); -- 
    checksum_calculation_cp_element_group_29: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_29"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(14) & checksum_calculation_CP_690_elements(16);
      gj_checksum_calculation_cp_element_group_29 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(29), clk => clk, reset => reset); --
    end block;
    -- CP-element group 30:  transition  input  bypass 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	29 
    -- CP-element group 30: successors 
    -- CP-element group 30:  members (3) 
      -- CP-element group 30: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_303_sample_completed_
      -- CP-element group 30: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_303_Sample/$exit
      -- CP-element group 30: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_303_Sample/ra
      -- 
    ra_900_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 30_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_303_inst_ack_0, ack => checksum_calculation_CP_690_elements(30)); -- 
    -- CP-element group 31:  transition  input  bypass 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	0 
    -- CP-element group 31: successors 
    -- CP-element group 31: 	41 
    -- CP-element group 31:  members (3) 
      -- CP-element group 31: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_303_Update/ca
      -- CP-element group 31: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_303_update_completed_
      -- CP-element group 31: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_303_Update/$exit
      -- 
    ca_905_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 31_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_303_inst_ack_1, ack => checksum_calculation_CP_690_elements(31)); -- 
    -- CP-element group 32:  join  transition  output  bypass 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	10 
    -- CP-element group 32: 	12 
    -- CP-element group 32: successors 
    -- CP-element group 32: 	33 
    -- CP-element group 32:  members (3) 
      -- CP-element group 32: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_308_Sample/rr
      -- CP-element group 32: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_308_Sample/$entry
      -- CP-element group 32: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_308_sample_start_
      -- 
    rr_913_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_913_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(32), ack => CONCAT_u1_u2_308_inst_req_0); -- 
    checksum_calculation_cp_element_group_32: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_32"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(10) & checksum_calculation_CP_690_elements(12);
      gj_checksum_calculation_cp_element_group_32 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(32), clk => clk, reset => reset); --
    end block;
    -- CP-element group 33:  transition  input  bypass 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	32 
    -- CP-element group 33: successors 
    -- CP-element group 33:  members (3) 
      -- CP-element group 33: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_308_Sample/ra
      -- CP-element group 33: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_308_Sample/$exit
      -- CP-element group 33: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_308_sample_completed_
      -- 
    ra_914_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 33_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_308_inst_ack_0, ack => checksum_calculation_CP_690_elements(33)); -- 
    -- CP-element group 34:  transition  input  bypass 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	0 
    -- CP-element group 34: successors 
    -- CP-element group 34: 	41 
    -- CP-element group 34:  members (3) 
      -- CP-element group 34: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_308_Update/$exit
      -- CP-element group 34: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_308_update_completed_
      -- CP-element group 34: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_308_Update/ca
      -- 
    ca_919_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_308_inst_ack_1, ack => checksum_calculation_CP_690_elements(34)); -- 
    -- CP-element group 35:  join  transition  output  bypass 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	6 
    -- CP-element group 35: 	8 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	36 
    -- CP-element group 35:  members (3) 
      -- CP-element group 35: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_313_sample_start_
      -- CP-element group 35: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_313_Sample/rr
      -- CP-element group 35: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_313_Sample/$entry
      -- 
    rr_927_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_927_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(35), ack => CONCAT_u1_u2_313_inst_req_0); -- 
    checksum_calculation_cp_element_group_35: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_35"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(6) & checksum_calculation_CP_690_elements(8);
      gj_checksum_calculation_cp_element_group_35 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(35), clk => clk, reset => reset); --
    end block;
    -- CP-element group 36:  transition  input  bypass 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	35 
    -- CP-element group 36: successors 
    -- CP-element group 36:  members (3) 
      -- CP-element group 36: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_313_sample_completed_
      -- CP-element group 36: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_313_Sample/ra
      -- CP-element group 36: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_313_Sample/$exit
      -- 
    ra_928_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_313_inst_ack_0, ack => checksum_calculation_CP_690_elements(36)); -- 
    -- CP-element group 37:  transition  input  bypass 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	0 
    -- CP-element group 37: successors 
    -- CP-element group 37: 	44 
    -- CP-element group 37:  members (3) 
      -- CP-element group 37: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_313_Update/$exit
      -- CP-element group 37: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_313_Update/ca
      -- CP-element group 37: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_313_update_completed_
      -- 
    ca_933_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_313_inst_ack_1, ack => checksum_calculation_CP_690_elements(37)); -- 
    -- CP-element group 38:  join  transition  output  bypass 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	2 
    -- CP-element group 38: 	4 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	39 
    -- CP-element group 38:  members (3) 
      -- CP-element group 38: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_318_Sample/$entry
      -- CP-element group 38: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_318_Sample/rr
      -- CP-element group 38: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_318_sample_start_
      -- 
    rr_941_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_941_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(38), ack => CONCAT_u1_u2_318_inst_req_0); -- 
    checksum_calculation_cp_element_group_38: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_38"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(2) & checksum_calculation_CP_690_elements(4);
      gj_checksum_calculation_cp_element_group_38 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(38), clk => clk, reset => reset); --
    end block;
    -- CP-element group 39:  transition  input  bypass 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	38 
    -- CP-element group 39: successors 
    -- CP-element group 39:  members (3) 
      -- CP-element group 39: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_318_Sample/ra
      -- CP-element group 39: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_318_Sample/$exit
      -- CP-element group 39: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_318_sample_completed_
      -- 
    ra_942_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 39_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_318_inst_ack_0, ack => checksum_calculation_CP_690_elements(39)); -- 
    -- CP-element group 40:  transition  input  bypass 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	0 
    -- CP-element group 40: successors 
    -- CP-element group 40: 	44 
    -- CP-element group 40:  members (3) 
      -- CP-element group 40: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_318_Update/ca
      -- CP-element group 40: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_318_Update/$exit
      -- CP-element group 40: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_318_update_completed_
      -- 
    ca_947_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 40_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_318_inst_ack_1, ack => checksum_calculation_CP_690_elements(40)); -- 
    -- CP-element group 41:  join  transition  output  bypass 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	31 
    -- CP-element group 41: 	34 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	42 
    -- CP-element group 41:  members (3) 
      -- CP-element group 41: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_323_Sample/rr
      -- CP-element group 41: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_323_Sample/$entry
      -- CP-element group 41: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_323_sample_start_
      -- 
    rr_955_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_955_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(41), ack => CONCAT_u2_u4_323_inst_req_0); -- 
    checksum_calculation_cp_element_group_41: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_41"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(31) & checksum_calculation_CP_690_elements(34);
      gj_checksum_calculation_cp_element_group_41 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(41), clk => clk, reset => reset); --
    end block;
    -- CP-element group 42:  transition  input  bypass 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	41 
    -- CP-element group 42: successors 
    -- CP-element group 42:  members (3) 
      -- CP-element group 42: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_323_Sample/ra
      -- CP-element group 42: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_323_Sample/$exit
      -- CP-element group 42: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_323_sample_completed_
      -- 
    ra_956_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 42_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u2_u4_323_inst_ack_0, ack => checksum_calculation_CP_690_elements(42)); -- 
    -- CP-element group 43:  transition  input  bypass 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	0 
    -- CP-element group 43: successors 
    -- CP-element group 43: 	47 
    -- CP-element group 43:  members (3) 
      -- CP-element group 43: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_323_Update/$exit
      -- CP-element group 43: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_323_Update/ca
      -- CP-element group 43: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_323_update_completed_
      -- 
    ca_961_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 43_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u2_u4_323_inst_ack_1, ack => checksum_calculation_CP_690_elements(43)); -- 
    -- CP-element group 44:  join  transition  output  bypass 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	37 
    -- CP-element group 44: 	40 
    -- CP-element group 44: successors 
    -- CP-element group 44: 	45 
    -- CP-element group 44:  members (3) 
      -- CP-element group 44: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_328_Sample/$entry
      -- CP-element group 44: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_328_Sample/rr
      -- CP-element group 44: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_328_sample_start_
      -- 
    rr_969_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_969_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(44), ack => CONCAT_u2_u4_328_inst_req_0); -- 
    checksum_calculation_cp_element_group_44: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_44"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(37) & checksum_calculation_CP_690_elements(40);
      gj_checksum_calculation_cp_element_group_44 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(44), clk => clk, reset => reset); --
    end block;
    -- CP-element group 45:  transition  input  bypass 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	44 
    -- CP-element group 45: successors 
    -- CP-element group 45:  members (3) 
      -- CP-element group 45: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_328_Sample/$exit
      -- CP-element group 45: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_328_Sample/ra
      -- CP-element group 45: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_328_sample_completed_
      -- 
    ra_970_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 45_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u2_u4_328_inst_ack_0, ack => checksum_calculation_CP_690_elements(45)); -- 
    -- CP-element group 46:  transition  input  bypass 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	0 
    -- CP-element group 46: successors 
    -- CP-element group 46: 	47 
    -- CP-element group 46:  members (3) 
      -- CP-element group 46: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_328_update_completed_
      -- CP-element group 46: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_328_Update/$exit
      -- CP-element group 46: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_328_Update/ca
      -- 
    ca_975_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 46_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u2_u4_328_inst_ack_1, ack => checksum_calculation_CP_690_elements(46)); -- 
    -- CP-element group 47:  join  transition  output  bypass 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	43 
    -- CP-element group 47: 	46 
    -- CP-element group 47: successors 
    -- CP-element group 47: 	48 
    -- CP-element group 47:  members (3) 
      -- CP-element group 47: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_333_sample_start_
      -- CP-element group 47: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_333_Sample/$entry
      -- CP-element group 47: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_333_Sample/rr
      -- 
    rr_983_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_983_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(47), ack => CONCAT_u4_u8_333_inst_req_0); -- 
    checksum_calculation_cp_element_group_47: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_47"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(43) & checksum_calculation_CP_690_elements(46);
      gj_checksum_calculation_cp_element_group_47 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(47), clk => clk, reset => reset); --
    end block;
    -- CP-element group 48:  transition  input  bypass 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	47 
    -- CP-element group 48: successors 
    -- CP-element group 48:  members (3) 
      -- CP-element group 48: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_333_sample_completed_
      -- CP-element group 48: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_333_Sample/$exit
      -- CP-element group 48: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_333_Sample/ra
      -- 
    ra_984_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 48_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u4_u8_333_inst_ack_0, ack => checksum_calculation_CP_690_elements(48)); -- 
    -- CP-element group 49:  transition  input  bypass 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: 	0 
    -- CP-element group 49: successors 
    -- CP-element group 49: 	67 
    -- CP-element group 49:  members (3) 
      -- CP-element group 49: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_333_update_completed_
      -- CP-element group 49: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_333_Update/$exit
      -- CP-element group 49: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_333_Update/ca
      -- 
    ca_989_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 49_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u4_u8_333_inst_ack_1, ack => checksum_calculation_CP_690_elements(49)); -- 
    -- CP-element group 50:  join  transition  output  bypass 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	26 
    -- CP-element group 50: 	28 
    -- CP-element group 50: successors 
    -- CP-element group 50: 	51 
    -- CP-element group 50:  members (3) 
      -- CP-element group 50: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_343_sample_start_
      -- CP-element group 50: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_343_Sample/$entry
      -- CP-element group 50: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_343_Sample/rr
      -- 
    rr_997_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_997_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(50), ack => CONCAT_u1_u2_343_inst_req_0); -- 
    checksum_calculation_cp_element_group_50: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_50"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(26) & checksum_calculation_CP_690_elements(28);
      gj_checksum_calculation_cp_element_group_50 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(50), clk => clk, reset => reset); --
    end block;
    -- CP-element group 51:  transition  input  bypass 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	50 
    -- CP-element group 51: successors 
    -- CP-element group 51:  members (3) 
      -- CP-element group 51: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_343_sample_completed_
      -- CP-element group 51: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_343_Sample/$exit
      -- CP-element group 51: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_343_Sample/ra
      -- 
    ra_998_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 51_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_343_inst_ack_0, ack => checksum_calculation_CP_690_elements(51)); -- 
    -- CP-element group 52:  transition  input  output  bypass 
    -- CP-element group 52: predecessors 
    -- CP-element group 52: 	0 
    -- CP-element group 52: successors 
    -- CP-element group 52: 	59 
    -- CP-element group 52:  members (6) 
      -- CP-element group 52: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_343_update_completed_
      -- CP-element group 52: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_343_Update/$exit
      -- CP-element group 52: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_343_Update/ca
      -- CP-element group 52: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_358_sample_start_
      -- CP-element group 52: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_358_Sample/$entry
      -- CP-element group 52: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_358_Sample/rr
      -- 
    ca_1003_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 52_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_343_inst_ack_1, ack => checksum_calculation_CP_690_elements(52)); -- 
    rr_1039_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1039_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(52), ack => CONCAT_u2_u4_358_inst_req_0); -- 
    -- CP-element group 53:  join  transition  output  bypass 
    -- CP-element group 53: predecessors 
    -- CP-element group 53: 	22 
    -- CP-element group 53: 	24 
    -- CP-element group 53: successors 
    -- CP-element group 53: 	54 
    -- CP-element group 53:  members (3) 
      -- CP-element group 53: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_348_sample_start_
      -- CP-element group 53: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_348_Sample/$entry
      -- CP-element group 53: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_348_Sample/rr
      -- 
    rr_1011_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1011_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(53), ack => CONCAT_u1_u2_348_inst_req_0); -- 
    checksum_calculation_cp_element_group_53: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_53"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(22) & checksum_calculation_CP_690_elements(24);
      gj_checksum_calculation_cp_element_group_53 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(53), clk => clk, reset => reset); --
    end block;
    -- CP-element group 54:  transition  input  bypass 
    -- CP-element group 54: predecessors 
    -- CP-element group 54: 	53 
    -- CP-element group 54: successors 
    -- CP-element group 54:  members (3) 
      -- CP-element group 54: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_348_sample_completed_
      -- CP-element group 54: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_348_Sample/$exit
      -- CP-element group 54: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_348_Sample/ra
      -- 
    ra_1012_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 54_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_348_inst_ack_0, ack => checksum_calculation_CP_690_elements(54)); -- 
    -- CP-element group 55:  transition  input  bypass 
    -- CP-element group 55: predecessors 
    -- CP-element group 55: 	0 
    -- CP-element group 55: successors 
    -- CP-element group 55: 	61 
    -- CP-element group 55:  members (3) 
      -- CP-element group 55: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_348_update_completed_
      -- CP-element group 55: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_348_Update/$exit
      -- CP-element group 55: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_348_Update/ca
      -- 
    ca_1017_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 55_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_348_inst_ack_1, ack => checksum_calculation_CP_690_elements(55)); -- 
    -- CP-element group 56:  join  transition  output  bypass 
    -- CP-element group 56: predecessors 
    -- CP-element group 56: 	18 
    -- CP-element group 56: 	20 
    -- CP-element group 56: successors 
    -- CP-element group 56: 	57 
    -- CP-element group 56:  members (3) 
      -- CP-element group 56: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_353_sample_start_
      -- CP-element group 56: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_353_Sample/$entry
      -- CP-element group 56: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_353_Sample/rr
      -- 
    rr_1025_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1025_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(56), ack => CONCAT_u1_u2_353_inst_req_0); -- 
    checksum_calculation_cp_element_group_56: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_56"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(18) & checksum_calculation_CP_690_elements(20);
      gj_checksum_calculation_cp_element_group_56 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(56), clk => clk, reset => reset); --
    end block;
    -- CP-element group 57:  transition  input  bypass 
    -- CP-element group 57: predecessors 
    -- CP-element group 57: 	56 
    -- CP-element group 57: successors 
    -- CP-element group 57:  members (3) 
      -- CP-element group 57: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_353_sample_completed_
      -- CP-element group 57: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_353_Sample/$exit
      -- CP-element group 57: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_353_Sample/ra
      -- 
    ra_1026_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 57_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_353_inst_ack_0, ack => checksum_calculation_CP_690_elements(57)); -- 
    -- CP-element group 58:  transition  input  bypass 
    -- CP-element group 58: predecessors 
    -- CP-element group 58: 	0 
    -- CP-element group 58: successors 
    -- CP-element group 58: 	61 
    -- CP-element group 58:  members (3) 
      -- CP-element group 58: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_353_update_completed_
      -- CP-element group 58: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_353_Update/$exit
      -- CP-element group 58: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u1_u2_353_Update/ca
      -- 
    ca_1031_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 58_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u2_353_inst_ack_1, ack => checksum_calculation_CP_690_elements(58)); -- 
    -- CP-element group 59:  transition  input  bypass 
    -- CP-element group 59: predecessors 
    -- CP-element group 59: 	52 
    -- CP-element group 59: successors 
    -- CP-element group 59:  members (3) 
      -- CP-element group 59: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_358_sample_completed_
      -- CP-element group 59: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_358_Sample/$exit
      -- CP-element group 59: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_358_Sample/ra
      -- 
    ra_1040_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 59_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u2_u4_358_inst_ack_0, ack => checksum_calculation_CP_690_elements(59)); -- 
    -- CP-element group 60:  transition  input  bypass 
    -- CP-element group 60: predecessors 
    -- CP-element group 60: 	0 
    -- CP-element group 60: successors 
    -- CP-element group 60: 	64 
    -- CP-element group 60:  members (3) 
      -- CP-element group 60: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_358_update_completed_
      -- CP-element group 60: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_358_Update/$exit
      -- CP-element group 60: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_358_Update/ca
      -- 
    ca_1045_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 60_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u2_u4_358_inst_ack_1, ack => checksum_calculation_CP_690_elements(60)); -- 
    -- CP-element group 61:  join  transition  output  bypass 
    -- CP-element group 61: predecessors 
    -- CP-element group 61: 	55 
    -- CP-element group 61: 	58 
    -- CP-element group 61: successors 
    -- CP-element group 61: 	62 
    -- CP-element group 61:  members (3) 
      -- CP-element group 61: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_363_sample_start_
      -- CP-element group 61: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_363_Sample/$entry
      -- CP-element group 61: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_363_Sample/rr
      -- 
    rr_1053_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1053_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(61), ack => CONCAT_u2_u4_363_inst_req_0); -- 
    checksum_calculation_cp_element_group_61: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_61"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(55) & checksum_calculation_CP_690_elements(58);
      gj_checksum_calculation_cp_element_group_61 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(61), clk => clk, reset => reset); --
    end block;
    -- CP-element group 62:  transition  input  bypass 
    -- CP-element group 62: predecessors 
    -- CP-element group 62: 	61 
    -- CP-element group 62: successors 
    -- CP-element group 62:  members (3) 
      -- CP-element group 62: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_363_sample_completed_
      -- CP-element group 62: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_363_Sample/$exit
      -- CP-element group 62: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_363_Sample/ra
      -- 
    ra_1054_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 62_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u2_u4_363_inst_ack_0, ack => checksum_calculation_CP_690_elements(62)); -- 
    -- CP-element group 63:  transition  input  bypass 
    -- CP-element group 63: predecessors 
    -- CP-element group 63: 	0 
    -- CP-element group 63: successors 
    -- CP-element group 63: 	64 
    -- CP-element group 63:  members (3) 
      -- CP-element group 63: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_363_update_completed_
      -- CP-element group 63: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_363_Update/$exit
      -- CP-element group 63: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u2_u4_363_Update/ca
      -- 
    ca_1059_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 63_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u2_u4_363_inst_ack_1, ack => checksum_calculation_CP_690_elements(63)); -- 
    -- CP-element group 64:  join  transition  output  bypass 
    -- CP-element group 64: predecessors 
    -- CP-element group 64: 	60 
    -- CP-element group 64: 	63 
    -- CP-element group 64: successors 
    -- CP-element group 64: 	65 
    -- CP-element group 64:  members (3) 
      -- CP-element group 64: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_368_sample_start_
      -- CP-element group 64: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_368_Sample/$entry
      -- CP-element group 64: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_368_Sample/rr
      -- 
    rr_1067_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1067_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => checksum_calculation_CP_690_elements(64), ack => CONCAT_u4_u8_368_inst_req_0); -- 
    checksum_calculation_cp_element_group_64: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_64"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(60) & checksum_calculation_CP_690_elements(63);
      gj_checksum_calculation_cp_element_group_64 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(64), clk => clk, reset => reset); --
    end block;
    -- CP-element group 65:  transition  input  bypass 
    -- CP-element group 65: predecessors 
    -- CP-element group 65: 	64 
    -- CP-element group 65: successors 
    -- CP-element group 65:  members (3) 
      -- CP-element group 65: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_368_sample_completed_
      -- CP-element group 65: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_368_Sample/$exit
      -- CP-element group 65: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_368_Sample/ra
      -- 
    ra_1068_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 65_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u4_u8_368_inst_ack_0, ack => checksum_calculation_CP_690_elements(65)); -- 
    -- CP-element group 66:  transition  input  bypass 
    -- CP-element group 66: predecessors 
    -- CP-element group 66: 	0 
    -- CP-element group 66: successors 
    -- CP-element group 66: 	67 
    -- CP-element group 66:  members (3) 
      -- CP-element group 66: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_368_update_completed_
      -- CP-element group 66: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_368_Update/$exit
      -- CP-element group 66: 	 call_stmt_260_to_assign_stmt_369/CONCAT_u4_u8_368_Update/ca
      -- 
    ca_1073_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 66_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u4_u8_368_inst_ack_1, ack => checksum_calculation_CP_690_elements(66)); -- 
    -- CP-element group 67:  join  transition  bypass 
    -- CP-element group 67: predecessors 
    -- CP-element group 67: 	49 
    -- CP-element group 67: 	66 
    -- CP-element group 67: successors 
    -- CP-element group 67:  members (2) 
      -- CP-element group 67: 	 $exit
      -- CP-element group 67: 	 call_stmt_260_to_assign_stmt_369/$exit
      -- 
    checksum_calculation_cp_element_group_67: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 40) := "checksum_calculation_cp_element_group_67"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= checksum_calculation_CP_690_elements(49) & checksum_calculation_CP_690_elements(66);
      gj_checksum_calculation_cp_element_group_67 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => checksum_calculation_CP_690_elements(67), clk => clk, reset => reset); --
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal c_0_260 : std_logic_vector(0 downto 0);
    signal c_10_290 : std_logic_vector(0 downto 0);
    signal c_11_293 : std_logic_vector(0 downto 0);
    signal c_12_296 : std_logic_vector(0 downto 0);
    signal c_13_299 : std_logic_vector(0 downto 0);
    signal c_1_263 : std_logic_vector(0 downto 0);
    signal c_2_266 : std_logic_vector(0 downto 0);
    signal c_3_269 : std_logic_vector(0 downto 0);
    signal c_4_272 : std_logic_vector(0 downto 0);
    signal c_5_275 : std_logic_vector(0 downto 0);
    signal c_6_278 : std_logic_vector(0 downto 0);
    signal c_7_281 : std_logic_vector(0 downto 0);
    signal c_8_284 : std_logic_vector(0 downto 0);
    signal c_9_287 : std_logic_vector(0 downto 0);
    signal m_14_t1_304 : std_logic_vector(1 downto 0);
    signal m_14_t2_309 : std_logic_vector(1 downto 0);
    signal m_14_t3_314 : std_logic_vector(1 downto 0);
    signal m_14_t4_319 : std_logic_vector(1 downto 0);
    signal m_14_t5_324 : std_logic_vector(3 downto 0);
    signal m_14_t6_329 : std_logic_vector(3 downto 0);
    signal m_15_t1_339 : std_logic_vector(1 downto 0);
    signal m_15_t2_344 : std_logic_vector(1 downto 0);
    signal m_15_t3_349 : std_logic_vector(1 downto 0);
    signal m_15_t4_354 : std_logic_vector(1 downto 0);
    signal m_15_t5_359 : std_logic_vector(3 downto 0);
    signal m_15_t6_364 : std_logic_vector(3 downto 0);
    -- 
  begin -- 
    m_15_t1_339 <= "00";
    -- shared split operator group (0) : CONCAT_u1_u2_303_inst 
    ApConcat_group_0: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(1 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_7_281 & c_6_278;
      m_14_t1_304 <= data_out(1 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u1_u2_303_inst_req_0;
      CONCAT_u1_u2_303_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u1_u2_303_inst_req_1;
      CONCAT_u1_u2_303_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_0_gI: SplitGuardInterface generic map(name => "ApConcat_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 2,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : CONCAT_u1_u2_308_inst 
    ApConcat_group_1: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(1 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_5_275 & c_4_272;
      m_14_t2_309 <= data_out(1 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u1_u2_308_inst_req_0;
      CONCAT_u1_u2_308_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u1_u2_308_inst_req_1;
      CONCAT_u1_u2_308_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_1_gI: SplitGuardInterface generic map(name => "ApConcat_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 2,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- shared split operator group (2) : CONCAT_u1_u2_313_inst 
    ApConcat_group_2: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(1 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_3_269 & c_2_266;
      m_14_t3_314 <= data_out(1 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u1_u2_313_inst_req_0;
      CONCAT_u1_u2_313_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u1_u2_313_inst_req_1;
      CONCAT_u1_u2_313_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_2_gI: SplitGuardInterface generic map(name => "ApConcat_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_2",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 2,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 2
    -- shared split operator group (3) : CONCAT_u1_u2_318_inst 
    ApConcat_group_3: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(1 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_1_263 & c_0_260;
      m_14_t4_319 <= data_out(1 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u1_u2_318_inst_req_0;
      CONCAT_u1_u2_318_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u1_u2_318_inst_req_1;
      CONCAT_u1_u2_318_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_3_gI: SplitGuardInterface generic map(name => "ApConcat_group_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_3",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 2,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 3
    -- shared split operator group (4) : CONCAT_u1_u2_343_inst 
    ApConcat_group_4: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(1 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_13_299 & c_12_296;
      m_15_t2_344 <= data_out(1 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u1_u2_343_inst_req_0;
      CONCAT_u1_u2_343_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u1_u2_343_inst_req_1;
      CONCAT_u1_u2_343_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_4_gI: SplitGuardInterface generic map(name => "ApConcat_group_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_4",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 2,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 4
    -- shared split operator group (5) : CONCAT_u1_u2_348_inst 
    ApConcat_group_5: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(1 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_11_293 & c_10_290;
      m_15_t3_349 <= data_out(1 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u1_u2_348_inst_req_0;
      CONCAT_u1_u2_348_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u1_u2_348_inst_req_1;
      CONCAT_u1_u2_348_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_5_gI: SplitGuardInterface generic map(name => "ApConcat_group_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_5",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 2,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 5
    -- shared split operator group (6) : CONCAT_u1_u2_353_inst 
    ApConcat_group_6: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(1 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_9_287 & c_8_284;
      m_15_t4_354 <= data_out(1 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u1_u2_353_inst_req_0;
      CONCAT_u1_u2_353_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u1_u2_353_inst_req_1;
      CONCAT_u1_u2_353_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_6_gI: SplitGuardInterface generic map(name => "ApConcat_group_6_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_6",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 2,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 6
    -- shared split operator group (7) : CONCAT_u2_u4_323_inst 
    ApConcat_group_7: Block -- 
      signal data_in: std_logic_vector(3 downto 0);
      signal data_out: std_logic_vector(3 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_14_t1_304 & m_14_t2_309;
      m_14_t5_324 <= data_out(3 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u2_u4_323_inst_req_0;
      CONCAT_u2_u4_323_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u2_u4_323_inst_req_1;
      CONCAT_u2_u4_323_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_7_gI: SplitGuardInterface generic map(name => "ApConcat_group_7_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_7",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 2,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 2, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 4,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 7
    -- shared split operator group (8) : CONCAT_u2_u4_328_inst 
    ApConcat_group_8: Block -- 
      signal data_in: std_logic_vector(3 downto 0);
      signal data_out: std_logic_vector(3 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_14_t3_314 & m_14_t4_319;
      m_14_t6_329 <= data_out(3 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u2_u4_328_inst_req_0;
      CONCAT_u2_u4_328_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u2_u4_328_inst_req_1;
      CONCAT_u2_u4_328_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_8_gI: SplitGuardInterface generic map(name => "ApConcat_group_8_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_8",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 2,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 2, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 4,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 8
    -- shared split operator group (9) : CONCAT_u2_u4_358_inst 
    ApConcat_group_9: Block -- 
      signal data_in: std_logic_vector(3 downto 0);
      signal data_out: std_logic_vector(3 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_15_t1_339 & m_15_t2_344;
      m_15_t5_359 <= data_out(3 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u2_u4_358_inst_req_0;
      CONCAT_u2_u4_358_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u2_u4_358_inst_req_1;
      CONCAT_u2_u4_358_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_9_gI: SplitGuardInterface generic map(name => "ApConcat_group_9_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_9",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 2,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 2, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 4,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 9
    -- shared split operator group (10) : CONCAT_u2_u4_363_inst 
    ApConcat_group_10: Block -- 
      signal data_in: std_logic_vector(3 downto 0);
      signal data_out: std_logic_vector(3 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_15_t3_349 & m_15_t4_354;
      m_15_t6_364 <= data_out(3 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u2_u4_363_inst_req_0;
      CONCAT_u2_u4_363_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u2_u4_363_inst_req_1;
      CONCAT_u2_u4_363_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_10_gI: SplitGuardInterface generic map(name => "ApConcat_group_10_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_10",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 2,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 2, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 4,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 10
    -- shared split operator group (11) : CONCAT_u4_u8_333_inst 
    ApConcat_group_11: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_14_t5_324 & m_14_t6_329;
      m_14_buffer <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u4_u8_333_inst_req_0;
      CONCAT_u4_u8_333_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u4_u8_333_inst_req_1;
      CONCAT_u4_u8_333_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_11_gI: SplitGuardInterface generic map(name => "ApConcat_group_11_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_11",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 4,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 4, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 11
    -- shared split operator group (12) : CONCAT_u4_u8_368_inst 
    ApConcat_group_12: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_15_t5_359 & m_15_t6_364;
      m_15_buffer <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u4_u8_368_inst_req_0;
      CONCAT_u4_u8_368_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u4_u8_368_inst_req_1;
      CONCAT_u4_u8_368_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_12_gI: SplitGuardInterface generic map(name => "ApConcat_group_12_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_12",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 4,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 4, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 12
    -- shared call operator group (0) : call_stmt_260_call call_stmt_263_call call_stmt_266_call call_stmt_269_call call_stmt_272_call call_stmt_275_call call_stmt_278_call call_stmt_281_call call_stmt_284_call call_stmt_287_call call_stmt_290_call call_stmt_293_call call_stmt_296_call call_stmt_299_call 
    checksum_call_group_0: Block -- 
      signal data_in: std_logic_vector(111 downto 0);
      signal data_out: std_logic_vector(13 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 13 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 13 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 13 downto 0);
      signal guard_vector : std_logic_vector( 13 downto 0);
      constant inBUFs : IntegerArray(13 downto 0) := (13 => 1, 12 => 1, 11 => 1, 10 => 1, 9 => 1, 8 => 1, 7 => 1, 6 => 1, 5 => 1, 4 => 1, 3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant outBUFs : IntegerArray(13 downto 0) := (13 => 1, 12 => 1, 11 => 1, 10 => 1, 9 => 1, 8 => 1, 7 => 1, 6 => 1, 5 => 1, 4 => 1, 3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(13 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false, 4 => false, 5 => false, 6 => false, 7 => false, 8 => false, 9 => false, 10 => false, 11 => false, 12 => false, 13 => false);
      constant guardBuffering: IntegerArray(13 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2, 4 => 2, 5 => 2, 6 => 2, 7 => 2, 8 => 2, 9 => 2, 10 => 2, 11 => 2, 12 => 2, 13 => 2);
      -- 
    begin -- 
      reqL_unguarded(13) <= call_stmt_260_call_req_0;
      reqL_unguarded(12) <= call_stmt_263_call_req_0;
      reqL_unguarded(11) <= call_stmt_266_call_req_0;
      reqL_unguarded(10) <= call_stmt_269_call_req_0;
      reqL_unguarded(9) <= call_stmt_272_call_req_0;
      reqL_unguarded(8) <= call_stmt_275_call_req_0;
      reqL_unguarded(7) <= call_stmt_278_call_req_0;
      reqL_unguarded(6) <= call_stmt_281_call_req_0;
      reqL_unguarded(5) <= call_stmt_284_call_req_0;
      reqL_unguarded(4) <= call_stmt_287_call_req_0;
      reqL_unguarded(3) <= call_stmt_290_call_req_0;
      reqL_unguarded(2) <= call_stmt_293_call_req_0;
      reqL_unguarded(1) <= call_stmt_296_call_req_0;
      reqL_unguarded(0) <= call_stmt_299_call_req_0;
      call_stmt_260_call_ack_0 <= ackL_unguarded(13);
      call_stmt_263_call_ack_0 <= ackL_unguarded(12);
      call_stmt_266_call_ack_0 <= ackL_unguarded(11);
      call_stmt_269_call_ack_0 <= ackL_unguarded(10);
      call_stmt_272_call_ack_0 <= ackL_unguarded(9);
      call_stmt_275_call_ack_0 <= ackL_unguarded(8);
      call_stmt_278_call_ack_0 <= ackL_unguarded(7);
      call_stmt_281_call_ack_0 <= ackL_unguarded(6);
      call_stmt_284_call_ack_0 <= ackL_unguarded(5);
      call_stmt_287_call_ack_0 <= ackL_unguarded(4);
      call_stmt_290_call_ack_0 <= ackL_unguarded(3);
      call_stmt_293_call_ack_0 <= ackL_unguarded(2);
      call_stmt_296_call_ack_0 <= ackL_unguarded(1);
      call_stmt_299_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(13) <= call_stmt_260_call_req_1;
      reqR_unguarded(12) <= call_stmt_263_call_req_1;
      reqR_unguarded(11) <= call_stmt_266_call_req_1;
      reqR_unguarded(10) <= call_stmt_269_call_req_1;
      reqR_unguarded(9) <= call_stmt_272_call_req_1;
      reqR_unguarded(8) <= call_stmt_275_call_req_1;
      reqR_unguarded(7) <= call_stmt_278_call_req_1;
      reqR_unguarded(6) <= call_stmt_281_call_req_1;
      reqR_unguarded(5) <= call_stmt_284_call_req_1;
      reqR_unguarded(4) <= call_stmt_287_call_req_1;
      reqR_unguarded(3) <= call_stmt_290_call_req_1;
      reqR_unguarded(2) <= call_stmt_293_call_req_1;
      reqR_unguarded(1) <= call_stmt_296_call_req_1;
      reqR_unguarded(0) <= call_stmt_299_call_req_1;
      call_stmt_260_call_ack_1 <= ackR_unguarded(13);
      call_stmt_263_call_ack_1 <= ackR_unguarded(12);
      call_stmt_266_call_ack_1 <= ackR_unguarded(11);
      call_stmt_269_call_ack_1 <= ackR_unguarded(10);
      call_stmt_272_call_ack_1 <= ackR_unguarded(9);
      call_stmt_275_call_ack_1 <= ackR_unguarded(8);
      call_stmt_278_call_ack_1 <= ackR_unguarded(7);
      call_stmt_281_call_ack_1 <= ackR_unguarded(6);
      call_stmt_284_call_ack_1 <= ackR_unguarded(5);
      call_stmt_287_call_ack_1 <= ackR_unguarded(4);
      call_stmt_290_call_ack_1 <= ackR_unguarded(3);
      call_stmt_293_call_ack_1 <= ackR_unguarded(2);
      call_stmt_296_call_ack_1 <= ackR_unguarded(1);
      call_stmt_299_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      guard_vector(4)  <=  '1';
      guard_vector(5)  <=  '1';
      guard_vector(6)  <=  '1';
      guard_vector(7)  <=  '1';
      guard_vector(8)  <=  '1';
      guard_vector(9)  <=  '1';
      guard_vector(10)  <=  '1';
      guard_vector(11)  <=  '1';
      guard_vector(12)  <=  '1';
      guard_vector(13)  <=  '1';
      checksum_call_group_0_accessRegulator_0: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_1: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_2: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_2", num_slots => 1) -- 
        port map (req => reqL_unregulated(2), -- 
          ack => ackL_unregulated(2),
          regulated_req => reqL(2),
          regulated_ack => ackL(2),
          release_req => reqR(2),
          release_ack => ackR(2),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_3: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_3", num_slots => 1) -- 
        port map (req => reqL_unregulated(3), -- 
          ack => ackL_unregulated(3),
          regulated_req => reqL(3),
          regulated_ack => ackL(3),
          release_req => reqR(3),
          release_ack => ackR(3),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_4: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_4", num_slots => 1) -- 
        port map (req => reqL_unregulated(4), -- 
          ack => ackL_unregulated(4),
          regulated_req => reqL(4),
          regulated_ack => ackL(4),
          release_req => reqR(4),
          release_ack => ackR(4),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_5: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_5", num_slots => 1) -- 
        port map (req => reqL_unregulated(5), -- 
          ack => ackL_unregulated(5),
          regulated_req => reqL(5),
          regulated_ack => ackL(5),
          release_req => reqR(5),
          release_ack => ackR(5),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_6: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_6", num_slots => 1) -- 
        port map (req => reqL_unregulated(6), -- 
          ack => ackL_unregulated(6),
          regulated_req => reqL(6),
          regulated_ack => ackL(6),
          release_req => reqR(6),
          release_ack => ackR(6),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_7: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_7", num_slots => 1) -- 
        port map (req => reqL_unregulated(7), -- 
          ack => ackL_unregulated(7),
          regulated_req => reqL(7),
          regulated_ack => ackL(7),
          release_req => reqR(7),
          release_ack => ackR(7),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_8: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_8", num_slots => 1) -- 
        port map (req => reqL_unregulated(8), -- 
          ack => ackL_unregulated(8),
          regulated_req => reqL(8),
          regulated_ack => ackL(8),
          release_req => reqR(8),
          release_ack => ackR(8),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_9: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_9", num_slots => 1) -- 
        port map (req => reqL_unregulated(9), -- 
          ack => ackL_unregulated(9),
          regulated_req => reqL(9),
          regulated_ack => ackL(9),
          release_req => reqR(9),
          release_ack => ackR(9),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_10: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_10", num_slots => 1) -- 
        port map (req => reqL_unregulated(10), -- 
          ack => ackL_unregulated(10),
          regulated_req => reqL(10),
          regulated_ack => ackL(10),
          release_req => reqR(10),
          release_ack => ackR(10),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_11: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_11", num_slots => 1) -- 
        port map (req => reqL_unregulated(11), -- 
          ack => ackL_unregulated(11),
          regulated_req => reqL(11),
          regulated_ack => ackL(11),
          release_req => reqR(11),
          release_ack => ackR(11),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_12: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_12", num_slots => 1) -- 
        port map (req => reqL_unregulated(12), -- 
          ack => ackL_unregulated(12),
          regulated_req => reqL(12),
          regulated_ack => ackL(12),
          release_req => reqR(12),
          release_ack => ackR(12),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_accessRegulator_13: access_regulator_base generic map (name => "checksum_call_group_0_accessRegulator_13", num_slots => 1) -- 
        port map (req => reqL_unregulated(13), -- 
          ack => ackL_unregulated(13),
          regulated_req => reqL(13),
          regulated_ack => ackL(13),
          release_req => reqR(13),
          release_ack => ackR(13),
          clk => clk, reset => reset); -- 
      checksum_call_group_0_gI: SplitGuardInterface generic map(name => "checksum_call_group_0_gI", nreqs => 14, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= m_0_buffer & m_1_buffer & m_2_buffer & m_3_buffer & m_4_buffer & m_5_buffer & m_6_buffer & m_7_buffer & m_8_buffer & m_9_buffer & m_10_buffer & m_11_buffer & m_12_buffer & m_13_buffer;
      c_0_260 <= data_out(13 downto 13);
      c_1_263 <= data_out(12 downto 12);
      c_2_266 <= data_out(11 downto 11);
      c_3_269 <= data_out(10 downto 10);
      c_4_272 <= data_out(9 downto 9);
      c_5_275 <= data_out(8 downto 8);
      c_6_278 <= data_out(7 downto 7);
      c_7_281 <= data_out(6 downto 6);
      c_8_284 <= data_out(5 downto 5);
      c_9_287 <= data_out(4 downto 4);
      c_10_290 <= data_out(3 downto 3);
      c_11_293 <= data_out(2 downto 2);
      c_12_296 <= data_out(1 downto 1);
      c_13_299 <= data_out(0 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 112,
        owidth => 8,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 4,
        nreqs => 14,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => checksum_call_reqs(0),
          ackR => checksum_call_acks(0),
          dataR => checksum_call_data(7 downto 0),
          tagR => checksum_call_tag(3 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 1,
          owidth => 14,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 4,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 14) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => checksum_return_acks(0), -- cross-over
          ackL => checksum_return_reqs(0), -- cross-over
          dataL => checksum_return_data(0 downto 0),
          tagL => checksum_return_tag(3 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- 
  end Block; -- data_path
  -- 
end checksum_calculation_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity counter_encry is -- 
  generic (tag_length : integer); 
  port ( -- 
    k0_0 : in  std_logic_vector(31 downto 0);
    k0_1 : in  std_logic_vector(31 downto 0);
    k0_2 : in  std_logic_vector(31 downto 0);
    k0_3 : in  std_logic_vector(31 downto 0);
    counter : in  std_logic_vector(127 downto 0);
    lw7_0 : out  std_logic_vector(31 downto 0);
    lw7_1 : out  std_logic_vector(31 downto 0);
    lw7_2 : out  std_logic_vector(31 downto 0);
    lw7_3 : out  std_logic_vector(31 downto 0);
    add_round_key_call_reqs : out  std_logic_vector(0 downto 0);
    add_round_key_call_acks : in   std_logic_vector(0 downto 0);
    add_round_key_call_data : out  std_logic_vector(263 downto 0);
    add_round_key_call_tag  :  out  std_logic_vector(1 downto 0);
    add_round_key_return_reqs : out  std_logic_vector(0 downto 0);
    add_round_key_return_acks : in   std_logic_vector(0 downto 0);
    add_round_key_return_data : in   std_logic_vector(255 downto 0);
    add_round_key_return_tag :  in   std_logic_vector(1 downto 0);
    shift_row_call_reqs : out  std_logic_vector(0 downto 0);
    shift_row_call_acks : in   std_logic_vector(0 downto 0);
    shift_row_call_data : out  std_logic_vector(127 downto 0);
    shift_row_call_tag  :  out  std_logic_vector(1 downto 0);
    shift_row_return_reqs : out  std_logic_vector(0 downto 0);
    shift_row_return_acks : in   std_logic_vector(0 downto 0);
    shift_row_return_data : in   std_logic_vector(127 downto 0);
    shift_row_return_tag :  in   std_logic_vector(1 downto 0);
    mix_column_call_reqs : out  std_logic_vector(0 downto 0);
    mix_column_call_acks : in   std_logic_vector(0 downto 0);
    mix_column_call_data : out  std_logic_vector(31 downto 0);
    mix_column_call_tag  :  out  std_logic_vector(2 downto 0);
    mix_column_return_reqs : out  std_logic_vector(0 downto 0);
    mix_column_return_acks : in   std_logic_vector(0 downto 0);
    mix_column_return_data : in   std_logic_vector(31 downto 0);
    mix_column_return_tag :  in   std_logic_vector(2 downto 0);
    sbox_transformation_call_reqs : out  std_logic_vector(0 downto 0);
    sbox_transformation_call_acks : in   std_logic_vector(0 downto 0);
    sbox_transformation_call_data : out  std_logic_vector(31 downto 0);
    sbox_transformation_call_tag  :  out  std_logic_vector(3 downto 0);
    sbox_transformation_return_reqs : out  std_logic_vector(0 downto 0);
    sbox_transformation_return_acks : in   std_logic_vector(0 downto 0);
    sbox_transformation_return_data : in   std_logic_vector(31 downto 0);
    sbox_transformation_return_tag :  in   std_logic_vector(3 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity counter_encry;
architecture counter_encry_arch of counter_encry is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 256)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 128)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal k0_0_buffer :  std_logic_vector(31 downto 0);
  signal k0_0_update_enable: Boolean;
  signal k0_1_buffer :  std_logic_vector(31 downto 0);
  signal k0_1_update_enable: Boolean;
  signal k0_2_buffer :  std_logic_vector(31 downto 0);
  signal k0_2_update_enable: Boolean;
  signal k0_3_buffer :  std_logic_vector(31 downto 0);
  signal k0_3_update_enable: Boolean;
  signal counter_buffer :  std_logic_vector(127 downto 0);
  signal counter_update_enable: Boolean;
  -- output port buffer signals
  signal lw7_0_buffer :  std_logic_vector(31 downto 0);
  signal lw7_0_update_enable: Boolean;
  signal lw7_1_buffer :  std_logic_vector(31 downto 0);
  signal lw7_1_update_enable: Boolean;
  signal lw7_2_buffer :  std_logic_vector(31 downto 0);
  signal lw7_2_update_enable: Boolean;
  signal lw7_3_buffer :  std_logic_vector(31 downto 0);
  signal lw7_3_update_enable: Boolean;
  signal counter_encry_CP_2078_start: Boolean;
  signal counter_encry_CP_2078_symbol: Boolean;
  -- volatile/operator module components. 
  component add_round_key is -- 
    generic (tag_length : integer); 
    port ( -- 
      k_0 : in  std_logic_vector(31 downto 0);
      k_1 : in  std_logic_vector(31 downto 0);
      k_2 : in  std_logic_vector(31 downto 0);
      k_3 : in  std_logic_vector(31 downto 0);
      w_0 : in  std_logic_vector(31 downto 0);
      w_1 : in  std_logic_vector(31 downto 0);
      w_2 : in  std_logic_vector(31 downto 0);
      w_3 : in  std_logic_vector(31 downto 0);
      round_num : in  std_logic_vector(7 downto 0);
      nk_0 : out  std_logic_vector(31 downto 0);
      nk_1 : out  std_logic_vector(31 downto 0);
      nk_2 : out  std_logic_vector(31 downto 0);
      nk_3 : out  std_logic_vector(31 downto 0);
      nw_0 : out  std_logic_vector(31 downto 0);
      nw_1 : out  std_logic_vector(31 downto 0);
      nw_2 : out  std_logic_vector(31 downto 0);
      nw_3 : out  std_logic_vector(31 downto 0);
      memory_space_1_lr_req : out  std_logic_vector(0 downto 0);
      memory_space_1_lr_ack : in   std_logic_vector(0 downto 0);
      memory_space_1_lr_addr : out  std_logic_vector(3 downto 0);
      memory_space_1_lr_tag :  out  std_logic_vector(17 downto 0);
      memory_space_1_lc_req : out  std_logic_vector(0 downto 0);
      memory_space_1_lc_ack : in   std_logic_vector(0 downto 0);
      memory_space_1_lc_data : in   std_logic_vector(31 downto 0);
      memory_space_1_lc_tag :  in  std_logic_vector(0 downto 0);
      sbox_transform_call_reqs : out  std_logic_vector(0 downto 0);
      sbox_transform_call_acks : in   std_logic_vector(0 downto 0);
      sbox_transform_call_data : out  std_logic_vector(7 downto 0);
      sbox_transform_call_tag  :  out  std_logic_vector(2 downto 0);
      sbox_transform_return_reqs : out  std_logic_vector(0 downto 0);
      sbox_transform_return_acks : in   std_logic_vector(0 downto 0);
      sbox_transform_return_data : in   std_logic_vector(7 downto 0);
      sbox_transform_return_tag :  in   std_logic_vector(2 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component shift_row is -- 
    generic (tag_length : integer); 
    port ( -- 
      w_0 : in  std_logic_vector(31 downto 0);
      w_1 : in  std_logic_vector(31 downto 0);
      w_2 : in  std_logic_vector(31 downto 0);
      w_3 : in  std_logic_vector(31 downto 0);
      nw_0 : out  std_logic_vector(31 downto 0);
      nw_1 : out  std_logic_vector(31 downto 0);
      nw_2 : out  std_logic_vector(31 downto 0);
      nw_3 : out  std_logic_vector(31 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component mix_column is -- 
    generic (tag_length : integer); 
    port ( -- 
      w : in  std_logic_vector(31 downto 0);
      nw : out  std_logic_vector(31 downto 0);
      two_mult_call_reqs : out  std_logic_vector(0 downto 0);
      two_mult_call_acks : in   std_logic_vector(0 downto 0);
      two_mult_call_data : out  std_logic_vector(7 downto 0);
      two_mult_call_tag  :  out  std_logic_vector(2 downto 0);
      two_mult_return_reqs : out  std_logic_vector(0 downto 0);
      two_mult_return_acks : in   std_logic_vector(0 downto 0);
      two_mult_return_data : in   std_logic_vector(7 downto 0);
      two_mult_return_tag :  in   std_logic_vector(2 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component sbox_transformation is -- 
    generic (tag_length : integer); 
    port ( -- 
      w : in  std_logic_vector(31 downto 0);
      nw : out  std_logic_vector(31 downto 0);
      sbox_transform_call_reqs : out  std_logic_vector(0 downto 0);
      sbox_transform_call_acks : in   std_logic_vector(0 downto 0);
      sbox_transform_call_data : out  std_logic_vector(7 downto 0);
      sbox_transform_call_tag  :  out  std_logic_vector(2 downto 0);
      sbox_transform_return_reqs : out  std_logic_vector(0 downto 0);
      sbox_transform_return_acks : in   std_logic_vector(0 downto 0);
      sbox_transform_return_data : in   std_logic_vector(7 downto 0);
      sbox_transform_return_tag :  in   std_logic_vector(2 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal w1_2_749_766_buf_ack_0 : boolean;
  signal call_stmt_812_call_ack_1 : boolean;
  signal call_stmt_821_call_req_0 : boolean;
  signal call_stmt_839_call_req_1 : boolean;
  signal call_stmt_821_call_req_1 : boolean;
  signal if_stmt_840_branch_ack_1 : boolean;
  signal w1_1_749_762_buf_ack_0 : boolean;
  signal call_stmt_839_call_ack_1 : boolean;
  signal phi_stmt_776_req_0 : boolean;
  signal call_stmt_821_call_ack_0 : boolean;
  signal call_stmt_818_call_req_0 : boolean;
  signal call_stmt_818_call_ack_0 : boolean;
  signal w1_3_749_770_buf_ack_0 : boolean;
  signal phi_stmt_752_req_0 : boolean;
  signal call_stmt_818_call_req_1 : boolean;
  signal call_stmt_818_call_ack_1 : boolean;
  signal w1_2_749_766_buf_req_0 : boolean;
  signal w1_1_749_762_buf_req_0 : boolean;
  signal if_stmt_840_branch_ack_0 : boolean;
  signal k1_0_749_774_buf_req_1 : boolean;
  signal w1_3_749_770_buf_req_0 : boolean;
  signal call_stmt_821_call_ack_1 : boolean;
  signal k1_2_749_782_buf_req_0 : boolean;
  signal k1_0_749_774_buf_ack_0 : boolean;
  signal k1_0_749_774_buf_req_0 : boolean;
  signal if_stmt_840_branch_req_0 : boolean;
  signal k1_1_749_778_buf_req_1 : boolean;
  signal k1_1_749_778_buf_ack_0 : boolean;
  signal k1_1_749_778_buf_req_0 : boolean;
  signal phi_stmt_756_req_0 : boolean;
  signal w1_0_749_758_buf_ack_1 : boolean;
  signal w1_0_749_758_buf_req_1 : boolean;
  signal phi_stmt_772_req_0 : boolean;
  signal w1_0_749_758_buf_ack_0 : boolean;
  signal k1_0_749_774_buf_ack_1 : boolean;
  signal w1_0_749_758_buf_req_0 : boolean;
  signal k1_1_749_778_buf_ack_1 : boolean;
  signal lw4_0_839_759_buf_ack_0 : boolean;
  signal lw4_0_839_759_buf_req_1 : boolean;
  signal k1_2_749_782_buf_ack_1 : boolean;
  signal phi_stmt_780_req_0 : boolean;
  signal k1_2_749_782_buf_req_1 : boolean;
  signal roundnxt_848_755_buf_ack_1 : boolean;
  signal phi_stmt_752_req_1 : boolean;
  signal roundnxt_848_755_buf_req_1 : boolean;
  signal roundnxt_848_755_buf_req_0 : boolean;
  signal roundnxt_848_755_buf_ack_0 : boolean;
  signal k1_3_749_786_buf_req_1 : boolean;
  signal k1_3_749_786_buf_ack_1 : boolean;
  signal phi_stmt_784_req_0 : boolean;
  signal k1_3_749_786_buf_ack_0 : boolean;
  signal k1_3_749_786_buf_req_0 : boolean;
  signal lw4_0_839_759_buf_req_0 : boolean;
  signal k1_2_749_782_buf_ack_0 : boolean;
  signal ADD_u8_u8_847_inst_ack_1 : boolean;
  signal ADD_u8_u8_847_inst_req_1 : boolean;
  signal call_stmt_815_call_ack_1 : boolean;
  signal call_stmt_815_call_req_1 : boolean;
  signal phi_stmt_764_req_0 : boolean;
  signal phi_stmt_760_req_0 : boolean;
  signal w1_2_749_766_buf_ack_1 : boolean;
  signal phi_stmt_768_req_0 : boolean;
  signal ADD_u8_u8_847_inst_ack_0 : boolean;
  signal w1_1_749_762_buf_ack_1 : boolean;
  signal w1_2_749_766_buf_req_1 : boolean;
  signal w1_3_749_770_buf_ack_1 : boolean;
  signal ADD_u8_u8_847_inst_req_0 : boolean;
  signal call_stmt_815_call_ack_0 : boolean;
  signal w1_1_749_762_buf_req_1 : boolean;
  signal w1_3_749_770_buf_req_1 : boolean;
  signal call_stmt_815_call_req_0 : boolean;
  signal call_stmt_839_call_ack_0 : boolean;
  signal call_stmt_839_call_req_0 : boolean;
  signal W_text_713_inst_req_0 : boolean;
  signal W_text_713_inst_ack_0 : boolean;
  signal W_text_713_inst_req_1 : boolean;
  signal W_text_713_inst_ack_1 : boolean;
  signal slice_718_inst_req_0 : boolean;
  signal slice_718_inst_ack_0 : boolean;
  signal slice_718_inst_req_1 : boolean;
  signal slice_718_inst_ack_1 : boolean;
  signal slice_722_inst_req_0 : boolean;
  signal slice_722_inst_ack_0 : boolean;
  signal slice_722_inst_req_1 : boolean;
  signal slice_722_inst_ack_1 : boolean;
  signal slice_726_inst_req_0 : boolean;
  signal slice_726_inst_ack_0 : boolean;
  signal slice_726_inst_req_1 : boolean;
  signal slice_726_inst_ack_1 : boolean;
  signal slice_730_inst_req_0 : boolean;
  signal slice_730_inst_ack_0 : boolean;
  signal slice_730_inst_req_1 : boolean;
  signal slice_730_inst_ack_1 : boolean;
  signal call_stmt_749_call_req_0 : boolean;
  signal call_stmt_749_call_ack_0 : boolean;
  signal call_stmt_749_call_req_1 : boolean;
  signal call_stmt_749_call_ack_1 : boolean;
  signal call_stmt_791_call_req_0 : boolean;
  signal call_stmt_791_call_ack_0 : boolean;
  signal call_stmt_791_call_req_1 : boolean;
  signal call_stmt_791_call_ack_1 : boolean;
  signal call_stmt_794_call_req_0 : boolean;
  signal call_stmt_794_call_ack_0 : boolean;
  signal call_stmt_794_call_req_1 : boolean;
  signal call_stmt_794_call_ack_1 : boolean;
  signal call_stmt_797_call_req_0 : boolean;
  signal call_stmt_797_call_ack_0 : boolean;
  signal call_stmt_797_call_req_1 : boolean;
  signal call_stmt_797_call_ack_1 : boolean;
  signal call_stmt_800_call_req_0 : boolean;
  signal call_stmt_800_call_ack_0 : boolean;
  signal call_stmt_800_call_req_1 : boolean;
  signal call_stmt_800_call_ack_1 : boolean;
  signal call_stmt_809_call_req_0 : boolean;
  signal call_stmt_809_call_ack_0 : boolean;
  signal call_stmt_809_call_req_1 : boolean;
  signal call_stmt_809_call_ack_1 : boolean;
  signal call_stmt_812_call_req_0 : boolean;
  signal call_stmt_812_call_ack_0 : boolean;
  signal call_stmt_812_call_req_1 : boolean;
  signal lw4_0_839_759_buf_ack_1 : boolean;
  signal phi_stmt_756_req_1 : boolean;
  signal lw4_1_839_763_buf_req_0 : boolean;
  signal lw4_1_839_763_buf_ack_0 : boolean;
  signal lw4_1_839_763_buf_req_1 : boolean;
  signal lw4_1_839_763_buf_ack_1 : boolean;
  signal phi_stmt_760_req_1 : boolean;
  signal lw4_2_839_767_buf_req_0 : boolean;
  signal lw4_2_839_767_buf_ack_0 : boolean;
  signal lw4_2_839_767_buf_req_1 : boolean;
  signal lw4_2_839_767_buf_ack_1 : boolean;
  signal phi_stmt_764_req_1 : boolean;
  signal lw4_3_839_771_buf_req_0 : boolean;
  signal lw4_3_839_771_buf_ack_0 : boolean;
  signal lw4_3_839_771_buf_req_1 : boolean;
  signal lw4_3_839_771_buf_ack_1 : boolean;
  signal phi_stmt_768_req_1 : boolean;
  signal k3_0_839_775_buf_req_0 : boolean;
  signal k3_0_839_775_buf_ack_0 : boolean;
  signal k3_0_839_775_buf_req_1 : boolean;
  signal k3_0_839_775_buf_ack_1 : boolean;
  signal phi_stmt_772_req_1 : boolean;
  signal k3_1_839_779_buf_req_0 : boolean;
  signal k3_1_839_779_buf_ack_0 : boolean;
  signal k3_1_839_779_buf_req_1 : boolean;
  signal k3_1_839_779_buf_ack_1 : boolean;
  signal phi_stmt_776_req_1 : boolean;
  signal k3_2_839_783_buf_req_0 : boolean;
  signal k3_2_839_783_buf_ack_0 : boolean;
  signal k3_2_839_783_buf_req_1 : boolean;
  signal k3_2_839_783_buf_ack_1 : boolean;
  signal phi_stmt_780_req_1 : boolean;
  signal k3_3_839_787_buf_req_0 : boolean;
  signal k3_3_839_787_buf_ack_0 : boolean;
  signal k3_3_839_787_buf_req_1 : boolean;
  signal k3_3_839_787_buf_ack_1 : boolean;
  signal phi_stmt_784_req_1 : boolean;
  signal phi_stmt_752_ack_0 : boolean;
  signal phi_stmt_756_ack_0 : boolean;
  signal phi_stmt_760_ack_0 : boolean;
  signal phi_stmt_764_ack_0 : boolean;
  signal phi_stmt_768_ack_0 : boolean;
  signal phi_stmt_772_ack_0 : boolean;
  signal phi_stmt_776_ack_0 : boolean;
  signal phi_stmt_780_ack_0 : boolean;
  signal phi_stmt_784_ack_0 : boolean;
  signal call_stmt_854_call_req_0 : boolean;
  signal call_stmt_854_call_ack_0 : boolean;
  signal call_stmt_854_call_req_1 : boolean;
  signal call_stmt_854_call_ack_1 : boolean;
  signal call_stmt_857_call_req_0 : boolean;
  signal call_stmt_857_call_ack_0 : boolean;
  signal call_stmt_857_call_req_1 : boolean;
  signal call_stmt_857_call_ack_1 : boolean;
  signal call_stmt_860_call_req_0 : boolean;
  signal call_stmt_860_call_ack_0 : boolean;
  signal call_stmt_860_call_req_1 : boolean;
  signal call_stmt_860_call_ack_1 : boolean;
  signal call_stmt_863_call_req_0 : boolean;
  signal call_stmt_863_call_ack_0 : boolean;
  signal call_stmt_863_call_req_1 : boolean;
  signal call_stmt_863_call_ack_1 : boolean;
  signal call_stmt_872_call_req_0 : boolean;
  signal call_stmt_872_call_ack_0 : boolean;
  signal call_stmt_872_call_req_1 : boolean;
  signal call_stmt_872_call_ack_1 : boolean;
  signal call_stmt_890_call_req_0 : boolean;
  signal call_stmt_890_call_ack_0 : boolean;
  signal call_stmt_890_call_req_1 : boolean;
  signal call_stmt_890_call_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "counter_encry_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 256) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(31 downto 0) <= k0_0;
  k0_0_buffer <= in_buffer_data_out(31 downto 0);
  in_buffer_data_in(63 downto 32) <= k0_1;
  k0_1_buffer <= in_buffer_data_out(63 downto 32);
  in_buffer_data_in(95 downto 64) <= k0_2;
  k0_2_buffer <= in_buffer_data_out(95 downto 64);
  in_buffer_data_in(127 downto 96) <= k0_3;
  k0_3_buffer <= in_buffer_data_out(127 downto 96);
  in_buffer_data_in(255 downto 128) <= counter;
  counter_buffer <= in_buffer_data_out(255 downto 128);
  in_buffer_data_in(tag_length + 255 downto 256) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 255 downto 256);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  counter_encry_CP_2078_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "counter_encry_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 128) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(31 downto 0) <= lw7_0_buffer;
  lw7_0 <= out_buffer_data_out(31 downto 0);
  out_buffer_data_in(63 downto 32) <= lw7_1_buffer;
  lw7_1 <= out_buffer_data_out(63 downto 32);
  out_buffer_data_in(95 downto 64) <= lw7_2_buffer;
  lw7_2 <= out_buffer_data_out(95 downto 64);
  out_buffer_data_in(127 downto 96) <= lw7_3_buffer;
  lw7_3 <= out_buffer_data_out(127 downto 96);
  out_buffer_data_in(tag_length + 127 downto 128) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 127 downto 128);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= counter_encry_CP_2078_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= counter_encry_CP_2078_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= counter_encry_CP_2078_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  counter_encry_CP_2078: Block -- control-path 
    signal counter_encry_CP_2078_elements: BooleanArray(117 downto 0);
    -- 
  begin -- 
    counter_encry_CP_2078_elements(0) <= counter_encry_CP_2078_start;
    counter_encry_CP_2078_symbol <= counter_encry_CP_2078_elements(117);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	8 
    -- CP-element group 0: 	10 
    -- CP-element group 0: 	13 
    -- CP-element group 0:  members (23) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/$entry
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/assign_stmt_715_sample_start_
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/assign_stmt_715_update_start_
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/assign_stmt_715_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/assign_stmt_715_Sample/req
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/assign_stmt_715_Update/$entry
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/assign_stmt_715_Update/req
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/slice_718_update_start_
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/slice_718_Update/$entry
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/slice_718_Update/cr
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/slice_722_update_start_
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/slice_722_Update/$entry
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/slice_722_Update/cr
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/slice_726_update_start_
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/slice_726_Update/$entry
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/slice_726_Update/cr
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/slice_730_update_start_
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/slice_730_Update/$entry
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/slice_730_Update/cr
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/call_stmt_749_update_start_
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/call_stmt_749_Update/$entry
      -- CP-element group 0: 	 assign_stmt_715_to_call_stmt_749/call_stmt_749_Update/ccr
      -- 
    req_2091_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2091_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(0), ack => W_text_713_inst_req_0); -- 
    req_2096_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2096_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(0), ack => W_text_713_inst_req_1); -- 
    cr_2110_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2110_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(0), ack => slice_718_inst_req_1); -- 
    cr_2124_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2124_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(0), ack => slice_722_inst_req_1); -- 
    cr_2138_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2138_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(0), ack => slice_726_inst_req_1); -- 
    cr_2152_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2152_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(0), ack => slice_730_inst_req_1); -- 
    ccr_2166_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2166_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(0), ack => call_stmt_749_call_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_715_to_call_stmt_749/assign_stmt_715_sample_completed_
      -- CP-element group 1: 	 assign_stmt_715_to_call_stmt_749/assign_stmt_715_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_715_to_call_stmt_749/assign_stmt_715_Sample/ack
      -- 
    ack_2092_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_text_713_inst_ack_0, ack => counter_encry_CP_2078_elements(1)); -- 
    -- CP-element group 2:  fork  transition  input  output  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	3 
    -- CP-element group 2: 	5 
    -- CP-element group 2: 	7 
    -- CP-element group 2: 	9 
    -- CP-element group 2:  members (15) 
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/assign_stmt_715_update_completed_
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/assign_stmt_715_Update/$exit
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/assign_stmt_715_Update/ack
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/slice_718_sample_start_
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/slice_718_Sample/$entry
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/slice_718_Sample/rr
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/slice_722_sample_start_
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/slice_722_Sample/$entry
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/slice_722_Sample/rr
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/slice_726_sample_start_
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/slice_726_Sample/$entry
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/slice_726_Sample/rr
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/slice_730_sample_start_
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/slice_730_Sample/$entry
      -- CP-element group 2: 	 assign_stmt_715_to_call_stmt_749/slice_730_Sample/rr
      -- 
    ack_2097_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_text_713_inst_ack_1, ack => counter_encry_CP_2078_elements(2)); -- 
    rr_2105_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2105_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(2), ack => slice_718_inst_req_0); -- 
    rr_2119_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2119_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(2), ack => slice_722_inst_req_0); -- 
    rr_2133_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2133_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(2), ack => slice_726_inst_req_0); -- 
    rr_2147_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2147_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(2), ack => slice_730_inst_req_0); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	2 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 assign_stmt_715_to_call_stmt_749/slice_718_sample_completed_
      -- CP-element group 3: 	 assign_stmt_715_to_call_stmt_749/slice_718_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_715_to_call_stmt_749/slice_718_Sample/ra
      -- 
    ra_2106_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_718_inst_ack_0, ack => counter_encry_CP_2078_elements(3)); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	11 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_715_to_call_stmt_749/slice_718_update_completed_
      -- CP-element group 4: 	 assign_stmt_715_to_call_stmt_749/slice_718_Update/$exit
      -- CP-element group 4: 	 assign_stmt_715_to_call_stmt_749/slice_718_Update/ca
      -- 
    ca_2111_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_718_inst_ack_1, ack => counter_encry_CP_2078_elements(4)); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	2 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_715_to_call_stmt_749/slice_722_sample_completed_
      -- CP-element group 5: 	 assign_stmt_715_to_call_stmt_749/slice_722_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_715_to_call_stmt_749/slice_722_Sample/ra
      -- 
    ra_2120_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_722_inst_ack_0, ack => counter_encry_CP_2078_elements(5)); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	11 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_715_to_call_stmt_749/slice_722_update_completed_
      -- CP-element group 6: 	 assign_stmt_715_to_call_stmt_749/slice_722_Update/$exit
      -- CP-element group 6: 	 assign_stmt_715_to_call_stmt_749/slice_722_Update/ca
      -- 
    ca_2125_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_722_inst_ack_1, ack => counter_encry_CP_2078_elements(6)); -- 
    -- CP-element group 7:  transition  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	2 
    -- CP-element group 7: successors 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 assign_stmt_715_to_call_stmt_749/slice_726_sample_completed_
      -- CP-element group 7: 	 assign_stmt_715_to_call_stmt_749/slice_726_Sample/$exit
      -- CP-element group 7: 	 assign_stmt_715_to_call_stmt_749/slice_726_Sample/ra
      -- 
    ra_2134_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_726_inst_ack_0, ack => counter_encry_CP_2078_elements(7)); -- 
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	0 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	11 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 assign_stmt_715_to_call_stmt_749/slice_726_update_completed_
      -- CP-element group 8: 	 assign_stmt_715_to_call_stmt_749/slice_726_Update/$exit
      -- CP-element group 8: 	 assign_stmt_715_to_call_stmt_749/slice_726_Update/ca
      -- 
    ca_2139_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_726_inst_ack_1, ack => counter_encry_CP_2078_elements(8)); -- 
    -- CP-element group 9:  transition  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	2 
    -- CP-element group 9: successors 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 assign_stmt_715_to_call_stmt_749/slice_730_sample_completed_
      -- CP-element group 9: 	 assign_stmt_715_to_call_stmt_749/slice_730_Sample/$exit
      -- CP-element group 9: 	 assign_stmt_715_to_call_stmt_749/slice_730_Sample/ra
      -- 
    ra_2148_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_730_inst_ack_0, ack => counter_encry_CP_2078_elements(9)); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	0 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	11 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 assign_stmt_715_to_call_stmt_749/slice_730_update_completed_
      -- CP-element group 10: 	 assign_stmt_715_to_call_stmt_749/slice_730_Update/$exit
      -- CP-element group 10: 	 assign_stmt_715_to_call_stmt_749/slice_730_Update/ca
      -- 
    ca_2153_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_730_inst_ack_1, ack => counter_encry_CP_2078_elements(10)); -- 
    -- CP-element group 11:  join  transition  output  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	4 
    -- CP-element group 11: 	6 
    -- CP-element group 11: 	8 
    -- CP-element group 11: 	10 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	12 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 assign_stmt_715_to_call_stmt_749/call_stmt_749_sample_start_
      -- CP-element group 11: 	 assign_stmt_715_to_call_stmt_749/call_stmt_749_Sample/$entry
      -- CP-element group 11: 	 assign_stmt_715_to_call_stmt_749/call_stmt_749_Sample/crr
      -- 
    crr_2161_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2161_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(11), ack => call_stmt_749_call_req_0); -- 
    counter_encry_cp_element_group_11: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_11"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(4) & counter_encry_CP_2078_elements(6) & counter_encry_CP_2078_elements(8) & counter_encry_CP_2078_elements(10);
      gj_counter_encry_cp_element_group_11 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(11), clk => clk, reset => reset); --
    end block;
    -- CP-element group 12:  transition  input  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	11 
    -- CP-element group 12: successors 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 assign_stmt_715_to_call_stmt_749/call_stmt_749_sample_completed_
      -- CP-element group 12: 	 assign_stmt_715_to_call_stmt_749/call_stmt_749_Sample/$exit
      -- CP-element group 12: 	 assign_stmt_715_to_call_stmt_749/call_stmt_749_Sample/cra
      -- 
    cra_2162_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_749_call_ack_0, ack => counter_encry_CP_2078_elements(12)); -- 
    -- CP-element group 13:  branch  fork  transition  place  input  output  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	0 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	41 
    -- CP-element group 13: 	42 
    -- CP-element group 13: 	44 
    -- CP-element group 13: 	45 
    -- CP-element group 13: 	47 
    -- CP-element group 13: 	48 
    -- CP-element group 13: 	50 
    -- CP-element group 13: 	51 
    -- CP-element group 13: 	53 
    -- CP-element group 13: 	54 
    -- CP-element group 13: 	56 
    -- CP-element group 13: 	57 
    -- CP-element group 13: 	59 
    -- CP-element group 13: 	60 
    -- CP-element group 13: 	62 
    -- CP-element group 13: 	63 
    -- CP-element group 13: 	40 
    -- CP-element group 13:  members (67) 
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Sample/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Update/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Sample/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_sources/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_752/phi_stmt_752_sources/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Sample/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Sample/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Sample/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Sample/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Update/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Update/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Sample/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Sample/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Sample/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Sample/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_sources/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_sources/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Sample/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Update/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Update/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_sources/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Sample/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Sample/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Update/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_sources/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Update/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Sample/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Update/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Update/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_sources/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Update/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Update/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Sample/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Sample/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_sources/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751_dead_link/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_sources/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Update/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Update/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Update/req
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Update/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Update/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_752/$entry
      -- CP-element group 13: 	 assign_stmt_715_to_call_stmt_749/$exit
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/$entry
      -- CP-element group 13: 	 assign_stmt_715_to_call_stmt_749/call_stmt_749_update_completed_
      -- CP-element group 13: 	 assign_stmt_715_to_call_stmt_749/call_stmt_749_Update/$exit
      -- CP-element group 13: 	 assign_stmt_715_to_call_stmt_749/call_stmt_749_Update/cca
      -- CP-element group 13: 	 branch_block_stmt_750/$entry
      -- CP-element group 13: 	 branch_block_stmt_750/branch_block_stmt_750__entry__
      -- CP-element group 13: 	 branch_block_stmt_750/merge_stmt_751__entry__
      -- 
    cca_2167_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_749_call_ack_1, ack => counter_encry_CP_2078_elements(13)); -- 
    req_2445_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2445_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => w1_2_749_766_buf_req_0); -- 
    req_2425_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2425_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => w1_1_749_762_buf_req_0); -- 
    req_2490_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2490_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => k1_0_749_774_buf_req_1); -- 
    req_2465_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2465_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => w1_3_749_770_buf_req_0); -- 
    req_2525_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2525_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => k1_2_749_782_buf_req_0); -- 
    req_2485_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2485_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => k1_0_749_774_buf_req_0); -- 
    req_2510_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2510_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => k1_1_749_778_buf_req_1); -- 
    req_2505_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2505_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => k1_1_749_778_buf_req_0); -- 
    req_2410_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2410_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => w1_0_749_758_buf_req_1); -- 
    req_2405_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2405_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => w1_0_749_758_buf_req_0); -- 
    req_2530_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2530_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => k1_2_749_782_buf_req_1); -- 
    req_2550_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2550_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => k1_3_749_786_buf_req_1); -- 
    req_2545_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2545_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => k1_3_749_786_buf_req_0); -- 
    req_2450_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2450_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => w1_2_749_766_buf_req_1); -- 
    req_2430_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2430_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => w1_1_749_762_buf_req_1); -- 
    req_2470_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2470_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(13), ack => w1_3_749_770_buf_req_1); -- 
    -- CP-element group 14:  transition  input  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	104 
    -- CP-element group 14: successors 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_791_sample_completed_
      -- CP-element group 14: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_791_Sample/$exit
      -- CP-element group 14: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_791_Sample/cra
      -- 
    cra_2190_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_791_call_ack_0, ack => counter_encry_CP_2078_elements(14)); -- 
    -- CP-element group 15:  transition  input  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	104 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	22 
    -- CP-element group 15:  members (3) 
      -- CP-element group 15: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_791_update_completed_
      -- CP-element group 15: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_791_Update/$exit
      -- CP-element group 15: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_791_Update/cca
      -- 
    cca_2195_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_791_call_ack_1, ack => counter_encry_CP_2078_elements(15)); -- 
    -- CP-element group 16:  transition  input  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	104 
    -- CP-element group 16: successors 
    -- CP-element group 16:  members (3) 
      -- CP-element group 16: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_794_sample_completed_
      -- CP-element group 16: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_794_Sample/$exit
      -- CP-element group 16: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_794_Sample/cra
      -- 
    cra_2204_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_794_call_ack_0, ack => counter_encry_CP_2078_elements(16)); -- 
    -- CP-element group 17:  transition  input  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	104 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	22 
    -- CP-element group 17:  members (3) 
      -- CP-element group 17: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_794_update_completed_
      -- CP-element group 17: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_794_Update/$exit
      -- CP-element group 17: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_794_Update/cca
      -- 
    cca_2209_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 17_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_794_call_ack_1, ack => counter_encry_CP_2078_elements(17)); -- 
    -- CP-element group 18:  transition  input  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	104 
    -- CP-element group 18: successors 
    -- CP-element group 18:  members (3) 
      -- CP-element group 18: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_797_sample_completed_
      -- CP-element group 18: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_797_Sample/$exit
      -- CP-element group 18: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_797_Sample/cra
      -- 
    cra_2218_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_797_call_ack_0, ack => counter_encry_CP_2078_elements(18)); -- 
    -- CP-element group 19:  transition  input  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	104 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	22 
    -- CP-element group 19:  members (3) 
      -- CP-element group 19: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_797_update_completed_
      -- CP-element group 19: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_797_Update/$exit
      -- CP-element group 19: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_797_Update/cca
      -- 
    cca_2223_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_797_call_ack_1, ack => counter_encry_CP_2078_elements(19)); -- 
    -- CP-element group 20:  transition  input  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	104 
    -- CP-element group 20: successors 
    -- CP-element group 20:  members (3) 
      -- CP-element group 20: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_800_sample_completed_
      -- CP-element group 20: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_800_Sample/$exit
      -- CP-element group 20: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_800_Sample/cra
      -- 
    cra_2232_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 20_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_800_call_ack_0, ack => counter_encry_CP_2078_elements(20)); -- 
    -- CP-element group 21:  transition  input  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	104 
    -- CP-element group 21: successors 
    -- CP-element group 21: 	22 
    -- CP-element group 21:  members (3) 
      -- CP-element group 21: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_800_update_completed_
      -- CP-element group 21: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_800_Update/$exit
      -- CP-element group 21: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_800_Update/cca
      -- 
    cca_2237_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_800_call_ack_1, ack => counter_encry_CP_2078_elements(21)); -- 
    -- CP-element group 22:  join  transition  output  bypass 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	15 
    -- CP-element group 22: 	17 
    -- CP-element group 22: 	19 
    -- CP-element group 22: 	21 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	23 
    -- CP-element group 22:  members (3) 
      -- CP-element group 22: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_809_sample_start_
      -- CP-element group 22: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_809_Sample/$entry
      -- CP-element group 22: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_809_Sample/crr
      -- 
    crr_2245_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2245_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(22), ack => call_stmt_809_call_req_0); -- 
    counter_encry_cp_element_group_22: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_22"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(15) & counter_encry_CP_2078_elements(17) & counter_encry_CP_2078_elements(19) & counter_encry_CP_2078_elements(21);
      gj_counter_encry_cp_element_group_22 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(22), clk => clk, reset => reset); --
    end block;
    -- CP-element group 23:  transition  input  bypass 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	22 
    -- CP-element group 23: successors 
    -- CP-element group 23:  members (3) 
      -- CP-element group 23: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_809_sample_completed_
      -- CP-element group 23: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_809_Sample/$exit
      -- CP-element group 23: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_809_Sample/cra
      -- 
    cra_2246_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 23_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_809_call_ack_0, ack => counter_encry_CP_2078_elements(23)); -- 
    -- CP-element group 24:  fork  transition  input  output  bypass 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	104 
    -- CP-element group 24: successors 
    -- CP-element group 24: 	25 
    -- CP-element group 24: 	27 
    -- CP-element group 24: 	29 
    -- CP-element group 24: 	31 
    -- CP-element group 24:  members (15) 
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_821_Sample/$entry
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_821_Sample/crr
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_815_sample_start_
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_818_Sample/$entry
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_818_Sample/crr
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_821_sample_start_
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_818_sample_start_
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_815_Sample/crr
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_815_Sample/$entry
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_809_update_completed_
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_809_Update/$exit
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_809_Update/cca
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_812_sample_start_
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_812_Sample/$entry
      -- CP-element group 24: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_812_Sample/crr
      -- 
    cca_2251_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_809_call_ack_1, ack => counter_encry_CP_2078_elements(24)); -- 
    crr_2259_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2259_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(24), ack => call_stmt_812_call_req_0); -- 
    crr_2273_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2273_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(24), ack => call_stmt_815_call_req_0); -- 
    crr_2287_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2287_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(24), ack => call_stmt_818_call_req_0); -- 
    crr_2301_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2301_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(24), ack => call_stmt_821_call_req_0); -- 
    -- CP-element group 25:  transition  input  bypass 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	24 
    -- CP-element group 25: successors 
    -- CP-element group 25:  members (3) 
      -- CP-element group 25: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_812_sample_completed_
      -- CP-element group 25: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_812_Sample/$exit
      -- CP-element group 25: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_812_Sample/cra
      -- 
    cra_2260_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_812_call_ack_0, ack => counter_encry_CP_2078_elements(25)); -- 
    -- CP-element group 26:  transition  input  bypass 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	104 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	33 
    -- CP-element group 26:  members (3) 
      -- CP-element group 26: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_812_Update/cca
      -- CP-element group 26: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_812_update_completed_
      -- CP-element group 26: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_812_Update/$exit
      -- 
    cca_2265_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 26_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_812_call_ack_1, ack => counter_encry_CP_2078_elements(26)); -- 
    -- CP-element group 27:  transition  input  bypass 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	24 
    -- CP-element group 27: successors 
    -- CP-element group 27:  members (3) 
      -- CP-element group 27: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_815_sample_completed_
      -- CP-element group 27: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_815_Sample/cra
      -- CP-element group 27: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_815_Sample/$exit
      -- 
    cra_2274_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 27_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_815_call_ack_0, ack => counter_encry_CP_2078_elements(27)); -- 
    -- CP-element group 28:  transition  input  bypass 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	104 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	33 
    -- CP-element group 28:  members (3) 
      -- CP-element group 28: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_815_Update/cca
      -- CP-element group 28: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_815_Update/$exit
      -- CP-element group 28: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_815_update_completed_
      -- 
    cca_2279_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 28_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_815_call_ack_1, ack => counter_encry_CP_2078_elements(28)); -- 
    -- CP-element group 29:  transition  input  bypass 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	24 
    -- CP-element group 29: successors 
    -- CP-element group 29:  members (3) 
      -- CP-element group 29: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_818_Sample/$exit
      -- CP-element group 29: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_818_Sample/cra
      -- CP-element group 29: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_818_sample_completed_
      -- 
    cra_2288_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 29_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_818_call_ack_0, ack => counter_encry_CP_2078_elements(29)); -- 
    -- CP-element group 30:  transition  input  bypass 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	104 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	33 
    -- CP-element group 30:  members (3) 
      -- CP-element group 30: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_818_update_completed_
      -- CP-element group 30: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_818_Update/$exit
      -- CP-element group 30: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_818_Update/cca
      -- 
    cca_2293_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 30_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_818_call_ack_1, ack => counter_encry_CP_2078_elements(30)); -- 
    -- CP-element group 31:  transition  input  bypass 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	24 
    -- CP-element group 31: successors 
    -- CP-element group 31:  members (3) 
      -- CP-element group 31: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_821_Sample/$exit
      -- CP-element group 31: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_821_sample_completed_
      -- CP-element group 31: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_821_Sample/cra
      -- 
    cra_2302_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 31_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_821_call_ack_0, ack => counter_encry_CP_2078_elements(31)); -- 
    -- CP-element group 32:  transition  input  bypass 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	104 
    -- CP-element group 32: successors 
    -- CP-element group 32: 	33 
    -- CP-element group 32:  members (3) 
      -- CP-element group 32: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_821_Update/$exit
      -- CP-element group 32: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_821_update_completed_
      -- CP-element group 32: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_821_Update/cca
      -- 
    cca_2307_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 32_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_821_call_ack_1, ack => counter_encry_CP_2078_elements(32)); -- 
    -- CP-element group 33:  join  transition  output  bypass 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	26 
    -- CP-element group 33: 	28 
    -- CP-element group 33: 	30 
    -- CP-element group 33: 	32 
    -- CP-element group 33: successors 
    -- CP-element group 33: 	34 
    -- CP-element group 33:  members (3) 
      -- CP-element group 33: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_839_sample_start_
      -- CP-element group 33: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_839_Sample/crr
      -- CP-element group 33: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_839_Sample/$entry
      -- 
    crr_2315_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2315_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(33), ack => call_stmt_839_call_req_0); -- 
    counter_encry_cp_element_group_33: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_33"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(26) & counter_encry_CP_2078_elements(28) & counter_encry_CP_2078_elements(30) & counter_encry_CP_2078_elements(32);
      gj_counter_encry_cp_element_group_33 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(33), clk => clk, reset => reset); --
    end block;
    -- CP-element group 34:  transition  input  bypass 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	33 
    -- CP-element group 34: successors 
    -- CP-element group 34:  members (3) 
      -- CP-element group 34: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_839_Sample/cra
      -- CP-element group 34: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_839_Sample/$exit
      -- CP-element group 34: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_839_sample_completed_
      -- 
    cra_2316_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_839_call_ack_0, ack => counter_encry_CP_2078_elements(34)); -- 
    -- CP-element group 35:  branch  transition  place  input  output  bypass 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	104 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	36 
    -- CP-element group 35: 	37 
    -- CP-element group 35:  members (27) 
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_if_link/$entry
      -- CP-element group 35: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_839_Update/$exit
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/$entry
      -- CP-element group 35: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_839_Update/cca
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_else_link/$entry
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/branch_req
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/SplitProtocol/Update/ca
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/SplitProtocol/Update/cr
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/SplitProtocol/Update/$exit
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/SplitProtocol/Update/$entry
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/SplitProtocol/Sample/ra
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/SplitProtocol/Sample/rr
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/SplitProtocol/Sample/$exit
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/SplitProtocol/Sample/$entry
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/SplitProtocol/$exit
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/SplitProtocol/$entry
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/ULT_u8_u1_843_inputs/$exit
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/ULT_u8_u1_843_inputs/$entry
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/$exit
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/ULT_u8_u1_843/$entry
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_eval_test/$exit
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840_dead_link/$entry
      -- CP-element group 35: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_839_update_completed_
      -- CP-element group 35: 	 branch_block_stmt_750/ULT_u8_u1_843_place
      -- CP-element group 35: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839__exit__
      -- CP-element group 35: 	 branch_block_stmt_750/if_stmt_840__entry__
      -- CP-element group 35: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/$exit
      -- 
    cca_2321_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 35_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_839_call_ack_1, ack => counter_encry_CP_2078_elements(35)); -- 
    branch_req_2348_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_2348_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(35), ack => if_stmt_840_branch_req_0); -- 
    -- CP-element group 36:  fork  transition  place  input  output  bypass 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	35 
    -- CP-element group 36: successors 
    -- CP-element group 36: 	38 
    -- CP-element group 36: 	39 
    -- CP-element group 36:  members (10) 
      -- CP-element group 36: 	 branch_block_stmt_750/if_stmt_840_if_link/$exit
      -- CP-element group 36: 	 branch_block_stmt_750/if_stmt_840_if_link/if_choice_transition
      -- CP-element group 36: 	 branch_block_stmt_750/assign_stmt_848/$entry
      -- CP-element group 36: 	 branch_block_stmt_750/assign_stmt_848/ADD_u8_u8_847_update_start_
      -- CP-element group 36: 	 branch_block_stmt_750/assign_stmt_848/ADD_u8_u8_847_Update/cr
      -- CP-element group 36: 	 branch_block_stmt_750/assign_stmt_848/ADD_u8_u8_847_Update/$entry
      -- CP-element group 36: 	 branch_block_stmt_750/assign_stmt_848/ADD_u8_u8_847_Sample/rr
      -- CP-element group 36: 	 branch_block_stmt_750/assign_stmt_848/ADD_u8_u8_847_Sample/$entry
      -- CP-element group 36: 	 branch_block_stmt_750/assign_stmt_848/ADD_u8_u8_847_sample_start_
      -- CP-element group 36: 	 branch_block_stmt_750/assign_stmt_848__entry__
      -- 
    if_choice_transition_2353_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_840_branch_ack_1, ack => counter_encry_CP_2078_elements(36)); -- 
    cr_2376_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2376_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(36), ack => ADD_u8_u8_847_inst_req_1); -- 
    rr_2371_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2371_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(36), ack => ADD_u8_u8_847_inst_req_0); -- 
    -- CP-element group 37:  merge  fork  transition  place  input  output  bypass 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	35 
    -- CP-element group 37: successors 
    -- CP-element group 37: 	105 
    -- CP-element group 37: 	106 
    -- CP-element group 37: 	107 
    -- CP-element group 37: 	108 
    -- CP-element group 37: 	109 
    -- CP-element group 37: 	110 
    -- CP-element group 37: 	111 
    -- CP-element group 37: 	112 
    -- CP-element group 37: 	115 
    -- CP-element group 37: 	117 
    -- CP-element group 37:  members (36) 
      -- CP-element group 37: 	 branch_block_stmt_750/if_stmt_840_else_link/$exit
      -- CP-element group 37: 	 branch_block_stmt_750/if_stmt_840_else_link/else_choice_transition
      -- CP-element group 37: 	 branch_block_stmt_750/$exit
      -- CP-element group 37: 	 branch_block_stmt_750/branch_block_stmt_750__exit__
      -- CP-element group 37: 	 branch_block_stmt_750/if_stmt_840__exit__
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/$entry
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_854_sample_start_
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_854_update_start_
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_854_Sample/$entry
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_854_Sample/crr
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_854_Update/$entry
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_854_Update/ccr
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_857_sample_start_
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_857_update_start_
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_857_Sample/$entry
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_857_Sample/crr
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_857_Update/$entry
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_857_Update/ccr
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_860_sample_start_
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_860_update_start_
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_860_Sample/$entry
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_860_Sample/crr
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_860_Update/$entry
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_860_Update/ccr
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_863_sample_start_
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_863_update_start_
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_863_Sample/$entry
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_863_Sample/crr
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_863_Update/$entry
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_863_Update/ccr
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_872_update_start_
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_872_Update/$entry
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_872_Update/ccr
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_890_update_start_
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_890_Update/$entry
      -- CP-element group 37: 	 call_stmt_854_to_call_stmt_890/call_stmt_890_Update/ccr
      -- 
    else_choice_transition_2357_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_840_branch_ack_0, ack => counter_encry_CP_2078_elements(37)); -- 
    crr_2759_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2759_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(37), ack => call_stmt_854_call_req_0); -- 
    ccr_2764_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2764_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(37), ack => call_stmt_854_call_req_1); -- 
    crr_2773_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2773_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(37), ack => call_stmt_857_call_req_0); -- 
    ccr_2778_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2778_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(37), ack => call_stmt_857_call_req_1); -- 
    crr_2787_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2787_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(37), ack => call_stmt_860_call_req_0); -- 
    ccr_2792_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2792_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(37), ack => call_stmt_860_call_req_1); -- 
    crr_2801_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2801_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(37), ack => call_stmt_863_call_req_0); -- 
    ccr_2806_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2806_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(37), ack => call_stmt_863_call_req_1); -- 
    ccr_2820_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2820_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(37), ack => call_stmt_872_call_req_1); -- 
    ccr_2834_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2834_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(37), ack => call_stmt_890_call_req_1); -- 
    -- CP-element group 38:  transition  input  bypass 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	36 
    -- CP-element group 38: successors 
    -- CP-element group 38:  members (3) 
      -- CP-element group 38: 	 branch_block_stmt_750/assign_stmt_848/ADD_u8_u8_847_Sample/ra
      -- CP-element group 38: 	 branch_block_stmt_750/assign_stmt_848/ADD_u8_u8_847_Sample/$exit
      -- CP-element group 38: 	 branch_block_stmt_750/assign_stmt_848/ADD_u8_u8_847_sample_completed_
      -- 
    ra_2372_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 38_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_847_inst_ack_0, ack => counter_encry_CP_2078_elements(38)); -- 
    -- CP-element group 39:  fork  transition  place  input  output  bypass 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	36 
    -- CP-element group 39: successors 
    -- CP-element group 39: 	66 
    -- CP-element group 39: 	67 
    -- CP-element group 39: 	69 
    -- CP-element group 39: 	70 
    -- CP-element group 39: 	72 
    -- CP-element group 39: 	73 
    -- CP-element group 39: 	75 
    -- CP-element group 39: 	76 
    -- CP-element group 39: 	78 
    -- CP-element group 39: 	79 
    -- CP-element group 39: 	81 
    -- CP-element group 39: 	82 
    -- CP-element group 39: 	84 
    -- CP-element group 39: 	85 
    -- CP-element group 39: 	87 
    -- CP-element group 39: 	88 
    -- CP-element group 39: 	90 
    -- CP-element group 39: 	91 
    -- CP-element group 39:  members (70) 
      -- CP-element group 39: 	 branch_block_stmt_750/assign_stmt_848/ADD_u8_u8_847_update_completed_
      -- CP-element group 39: 	 branch_block_stmt_750/assign_stmt_848/$exit
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Update/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Update/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_sources/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_sources/Interlock/Update/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_sources/Interlock/Update/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_sources/Interlock/Sample/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_sources/Interlock/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_sources/Interlock/Sample/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_sources/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Sample/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Sample/req
      -- CP-element group 39: 	 branch_block_stmt_750/assign_stmt_848/ADD_u8_u8_847_Update/ca
      -- CP-element group 39: 	 branch_block_stmt_750/assign_stmt_848/ADD_u8_u8_847_Update/$exit
      -- CP-element group 39: 	 branch_block_stmt_750/loopback
      -- CP-element group 39: 	 branch_block_stmt_750/assign_stmt_848__exit__
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_sources/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Sample/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Sample/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Update/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Update/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_sources/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Sample/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Sample/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Update/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Update/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_sources/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Sample/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Sample/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Update/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Update/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_sources/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Sample/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Sample/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Update/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Update/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_sources/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Sample/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Sample/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Update/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Update/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_sources/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Sample/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Sample/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Update/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Update/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_sources/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Sample/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Sample/req
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Update/$entry
      -- CP-element group 39: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Update/req
      -- 
    ca_2377_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 39_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_847_inst_ack_1, ack => counter_encry_CP_2078_elements(39)); -- 
    req_2593_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2593_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => lw4_0_839_759_buf_req_1); -- 
    req_2573_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2573_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => roundnxt_848_755_buf_req_1); -- 
    req_2568_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2568_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => roundnxt_848_755_buf_req_0); -- 
    req_2588_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2588_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => lw4_0_839_759_buf_req_0); -- 
    req_2608_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2608_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => lw4_1_839_763_buf_req_0); -- 
    req_2613_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2613_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => lw4_1_839_763_buf_req_1); -- 
    req_2628_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2628_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => lw4_2_839_767_buf_req_0); -- 
    req_2633_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2633_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => lw4_2_839_767_buf_req_1); -- 
    req_2648_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2648_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => lw4_3_839_771_buf_req_0); -- 
    req_2653_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2653_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => lw4_3_839_771_buf_req_1); -- 
    req_2668_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2668_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => k3_0_839_775_buf_req_0); -- 
    req_2673_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2673_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => k3_0_839_775_buf_req_1); -- 
    req_2688_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2688_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => k3_1_839_779_buf_req_0); -- 
    req_2693_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2693_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => k3_1_839_779_buf_req_1); -- 
    req_2708_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2708_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => k3_2_839_783_buf_req_0); -- 
    req_2713_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2713_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => k3_2_839_783_buf_req_1); -- 
    req_2728_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2728_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => k3_3_839_787_buf_req_0); -- 
    req_2733_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2733_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(39), ack => k3_3_839_787_buf_req_1); -- 
    -- CP-element group 40:  transition  output  delay-element  bypass 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	13 
    -- CP-element group 40: successors 
    -- CP-element group 40: 	65 
    -- CP-element group 40:  members (4) 
      -- CP-element group 40: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_752/phi_stmt_752_sources/R_one_754_konst_delay_trans
      -- CP-element group 40: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_752/phi_stmt_752_sources/$exit
      -- CP-element group 40: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_752/phi_stmt_752_req
      -- CP-element group 40: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_752/$exit
      -- 
    phi_stmt_752_req_2392_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_752_req_2392_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(40), ack => phi_stmt_752_req_0); -- 
    -- Element group counter_encry_CP_2078_elements(40) is a control-delay.
    cp_element_40_delay: control_delay_element  generic map(name => " 40_delay", delay_value => 1)  port map(req => counter_encry_CP_2078_elements(13), ack => counter_encry_CP_2078_elements(40), clk => clk, reset =>reset);
    -- CP-element group 41:  transition  input  bypass 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	13 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	43 
    -- CP-element group 41:  members (2) 
      -- CP-element group 41: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Sample/ack
      -- CP-element group 41: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Sample/$exit
      -- 
    ack_2406_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 41_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => w1_0_749_758_buf_ack_0, ack => counter_encry_CP_2078_elements(41)); -- 
    -- CP-element group 42:  transition  input  bypass 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	13 
    -- CP-element group 42: successors 
    -- CP-element group 42: 	43 
    -- CP-element group 42:  members (2) 
      -- CP-element group 42: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Update/ack
      -- CP-element group 42: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Update/$exit
      -- 
    ack_2411_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 42_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => w1_0_749_758_buf_ack_1, ack => counter_encry_CP_2078_elements(42)); -- 
    -- CP-element group 43:  join  transition  output  bypass 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	41 
    -- CP-element group 43: 	42 
    -- CP-element group 43: successors 
    -- CP-element group 43: 	65 
    -- CP-element group 43:  members (4) 
      -- CP-element group 43: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/$exit
      -- CP-element group 43: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_req
      -- CP-element group 43: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/$exit
      -- CP-element group 43: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_756/phi_stmt_756_sources/$exit
      -- 
    phi_stmt_756_req_2412_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_756_req_2412_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(43), ack => phi_stmt_756_req_0); -- 
    counter_encry_cp_element_group_43: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_43"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(41) & counter_encry_CP_2078_elements(42);
      gj_counter_encry_cp_element_group_43 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(43), clk => clk, reset => reset); --
    end block;
    -- CP-element group 44:  transition  input  bypass 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	13 
    -- CP-element group 44: successors 
    -- CP-element group 44: 	46 
    -- CP-element group 44:  members (2) 
      -- CP-element group 44: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Sample/ack
      -- CP-element group 44: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Sample/$exit
      -- 
    ack_2426_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 44_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => w1_1_749_762_buf_ack_0, ack => counter_encry_CP_2078_elements(44)); -- 
    -- CP-element group 45:  transition  input  bypass 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	13 
    -- CP-element group 45: successors 
    -- CP-element group 45: 	46 
    -- CP-element group 45:  members (2) 
      -- CP-element group 45: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Update/ack
      -- CP-element group 45: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Update/$exit
      -- 
    ack_2431_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 45_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => w1_1_749_762_buf_ack_1, ack => counter_encry_CP_2078_elements(45)); -- 
    -- CP-element group 46:  join  transition  output  bypass 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	44 
    -- CP-element group 46: 	45 
    -- CP-element group 46: successors 
    -- CP-element group 46: 	65 
    -- CP-element group 46:  members (4) 
      -- CP-element group 46: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/$exit
      -- CP-element group 46: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_sources/$exit
      -- CP-element group 46: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/$exit
      -- CP-element group 46: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_760/phi_stmt_760_req
      -- 
    phi_stmt_760_req_2432_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_760_req_2432_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(46), ack => phi_stmt_760_req_0); -- 
    counter_encry_cp_element_group_46: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_46"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(44) & counter_encry_CP_2078_elements(45);
      gj_counter_encry_cp_element_group_46 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(46), clk => clk, reset => reset); --
    end block;
    -- CP-element group 47:  transition  input  bypass 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	13 
    -- CP-element group 47: successors 
    -- CP-element group 47: 	49 
    -- CP-element group 47:  members (2) 
      -- CP-element group 47: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Sample/ack
      -- CP-element group 47: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Sample/$exit
      -- 
    ack_2446_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 47_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => w1_2_749_766_buf_ack_0, ack => counter_encry_CP_2078_elements(47)); -- 
    -- CP-element group 48:  transition  input  bypass 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	13 
    -- CP-element group 48: successors 
    -- CP-element group 48: 	49 
    -- CP-element group 48:  members (2) 
      -- CP-element group 48: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Update/ack
      -- CP-element group 48: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Update/$exit
      -- 
    ack_2451_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 48_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => w1_2_749_766_buf_ack_1, ack => counter_encry_CP_2078_elements(48)); -- 
    -- CP-element group 49:  join  transition  output  bypass 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: 	47 
    -- CP-element group 49: 	48 
    -- CP-element group 49: successors 
    -- CP-element group 49: 	65 
    -- CP-element group 49:  members (4) 
      -- CP-element group 49: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/$exit
      -- CP-element group 49: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/$exit
      -- CP-element group 49: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_req
      -- CP-element group 49: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_764/phi_stmt_764_sources/$exit
      -- 
    phi_stmt_764_req_2452_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_764_req_2452_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(49), ack => phi_stmt_764_req_0); -- 
    counter_encry_cp_element_group_49: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_49"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(47) & counter_encry_CP_2078_elements(48);
      gj_counter_encry_cp_element_group_49 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(49), clk => clk, reset => reset); --
    end block;
    -- CP-element group 50:  transition  input  bypass 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	13 
    -- CP-element group 50: successors 
    -- CP-element group 50: 	52 
    -- CP-element group 50:  members (2) 
      -- CP-element group 50: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Sample/ack
      -- CP-element group 50: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Sample/$exit
      -- 
    ack_2466_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 50_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => w1_3_749_770_buf_ack_0, ack => counter_encry_CP_2078_elements(50)); -- 
    -- CP-element group 51:  transition  input  bypass 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	13 
    -- CP-element group 51: successors 
    -- CP-element group 51: 	52 
    -- CP-element group 51:  members (2) 
      -- CP-element group 51: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Update/ack
      -- CP-element group 51: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Update/$exit
      -- 
    ack_2471_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 51_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => w1_3_749_770_buf_ack_1, ack => counter_encry_CP_2078_elements(51)); -- 
    -- CP-element group 52:  join  transition  output  bypass 
    -- CP-element group 52: predecessors 
    -- CP-element group 52: 	50 
    -- CP-element group 52: 	51 
    -- CP-element group 52: successors 
    -- CP-element group 52: 	65 
    -- CP-element group 52:  members (4) 
      -- CP-element group 52: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_sources/$exit
      -- CP-element group 52: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/$exit
      -- CP-element group 52: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_req
      -- CP-element group 52: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/$exit
      -- 
    phi_stmt_768_req_2472_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_768_req_2472_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(52), ack => phi_stmt_768_req_0); -- 
    counter_encry_cp_element_group_52: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_52"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(50) & counter_encry_CP_2078_elements(51);
      gj_counter_encry_cp_element_group_52 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(52), clk => clk, reset => reset); --
    end block;
    -- CP-element group 53:  transition  input  bypass 
    -- CP-element group 53: predecessors 
    -- CP-element group 53: 	13 
    -- CP-element group 53: successors 
    -- CP-element group 53: 	55 
    -- CP-element group 53:  members (2) 
      -- CP-element group 53: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Sample/$exit
      -- CP-element group 53: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Sample/ack
      -- 
    ack_2486_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 53_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k1_0_749_774_buf_ack_0, ack => counter_encry_CP_2078_elements(53)); -- 
    -- CP-element group 54:  transition  input  bypass 
    -- CP-element group 54: predecessors 
    -- CP-element group 54: 	13 
    -- CP-element group 54: successors 
    -- CP-element group 54: 	55 
    -- CP-element group 54:  members (2) 
      -- CP-element group 54: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Update/$exit
      -- CP-element group 54: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Update/ack
      -- 
    ack_2491_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 54_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k1_0_749_774_buf_ack_1, ack => counter_encry_CP_2078_elements(54)); -- 
    -- CP-element group 55:  join  transition  output  bypass 
    -- CP-element group 55: predecessors 
    -- CP-element group 55: 	53 
    -- CP-element group 55: 	54 
    -- CP-element group 55: successors 
    -- CP-element group 55: 	65 
    -- CP-element group 55:  members (4) 
      -- CP-element group 55: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_req
      -- CP-element group 55: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_sources/$exit
      -- CP-element group 55: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/$exit
      -- CP-element group 55: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/$exit
      -- 
    phi_stmt_772_req_2492_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_772_req_2492_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(55), ack => phi_stmt_772_req_0); -- 
    counter_encry_cp_element_group_55: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_55"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(53) & counter_encry_CP_2078_elements(54);
      gj_counter_encry_cp_element_group_55 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(55), clk => clk, reset => reset); --
    end block;
    -- CP-element group 56:  transition  input  bypass 
    -- CP-element group 56: predecessors 
    -- CP-element group 56: 	13 
    -- CP-element group 56: successors 
    -- CP-element group 56: 	58 
    -- CP-element group 56:  members (2) 
      -- CP-element group 56: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Sample/ack
      -- CP-element group 56: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Sample/$exit
      -- 
    ack_2506_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 56_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k1_1_749_778_buf_ack_0, ack => counter_encry_CP_2078_elements(56)); -- 
    -- CP-element group 57:  transition  input  bypass 
    -- CP-element group 57: predecessors 
    -- CP-element group 57: 	13 
    -- CP-element group 57: successors 
    -- CP-element group 57: 	58 
    -- CP-element group 57:  members (2) 
      -- CP-element group 57: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Update/$exit
      -- CP-element group 57: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Update/ack
      -- 
    ack_2511_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 57_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k1_1_749_778_buf_ack_1, ack => counter_encry_CP_2078_elements(57)); -- 
    -- CP-element group 58:  join  transition  output  bypass 
    -- CP-element group 58: predecessors 
    -- CP-element group 58: 	56 
    -- CP-element group 58: 	57 
    -- CP-element group 58: successors 
    -- CP-element group 58: 	65 
    -- CP-element group 58:  members (4) 
      -- CP-element group 58: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_req
      -- CP-element group 58: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/$exit
      -- CP-element group 58: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/phi_stmt_776_sources/$exit
      -- CP-element group 58: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_776/$exit
      -- 
    phi_stmt_776_req_2512_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_776_req_2512_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(58), ack => phi_stmt_776_req_0); -- 
    counter_encry_cp_element_group_58: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_58"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(56) & counter_encry_CP_2078_elements(57);
      gj_counter_encry_cp_element_group_58 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(58), clk => clk, reset => reset); --
    end block;
    -- CP-element group 59:  transition  input  bypass 
    -- CP-element group 59: predecessors 
    -- CP-element group 59: 	13 
    -- CP-element group 59: successors 
    -- CP-element group 59: 	61 
    -- CP-element group 59:  members (2) 
      -- CP-element group 59: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Sample/$exit
      -- CP-element group 59: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Sample/ack
      -- 
    ack_2526_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 59_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k1_2_749_782_buf_ack_0, ack => counter_encry_CP_2078_elements(59)); -- 
    -- CP-element group 60:  transition  input  bypass 
    -- CP-element group 60: predecessors 
    -- CP-element group 60: 	13 
    -- CP-element group 60: successors 
    -- CP-element group 60: 	61 
    -- CP-element group 60:  members (2) 
      -- CP-element group 60: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Update/ack
      -- CP-element group 60: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Update/$exit
      -- 
    ack_2531_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 60_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k1_2_749_782_buf_ack_1, ack => counter_encry_CP_2078_elements(60)); -- 
    -- CP-element group 61:  join  transition  output  bypass 
    -- CP-element group 61: predecessors 
    -- CP-element group 61: 	59 
    -- CP-element group 61: 	60 
    -- CP-element group 61: successors 
    -- CP-element group 61: 	65 
    -- CP-element group 61:  members (4) 
      -- CP-element group 61: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/$exit
      -- CP-element group 61: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_sources/$exit
      -- CP-element group 61: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_req
      -- CP-element group 61: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/$exit
      -- 
    phi_stmt_780_req_2532_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_780_req_2532_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(61), ack => phi_stmt_780_req_0); -- 
    counter_encry_cp_element_group_61: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_61"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(59) & counter_encry_CP_2078_elements(60);
      gj_counter_encry_cp_element_group_61 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(61), clk => clk, reset => reset); --
    end block;
    -- CP-element group 62:  transition  input  bypass 
    -- CP-element group 62: predecessors 
    -- CP-element group 62: 	13 
    -- CP-element group 62: successors 
    -- CP-element group 62: 	64 
    -- CP-element group 62:  members (2) 
      -- CP-element group 62: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Sample/ack
      -- CP-element group 62: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Sample/$exit
      -- 
    ack_2546_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 62_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k1_3_749_786_buf_ack_0, ack => counter_encry_CP_2078_elements(62)); -- 
    -- CP-element group 63:  transition  input  bypass 
    -- CP-element group 63: predecessors 
    -- CP-element group 63: 	13 
    -- CP-element group 63: successors 
    -- CP-element group 63: 	64 
    -- CP-element group 63:  members (2) 
      -- CP-element group 63: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Update/ack
      -- CP-element group 63: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Update/$exit
      -- 
    ack_2551_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 63_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k1_3_749_786_buf_ack_1, ack => counter_encry_CP_2078_elements(63)); -- 
    -- CP-element group 64:  join  transition  output  bypass 
    -- CP-element group 64: predecessors 
    -- CP-element group 64: 	62 
    -- CP-element group 64: 	63 
    -- CP-element group 64: successors 
    -- CP-element group 64: 	65 
    -- CP-element group 64:  members (4) 
      -- CP-element group 64: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/$exit
      -- CP-element group 64: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_req
      -- CP-element group 64: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_sources/$exit
      -- CP-element group 64: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/$exit
      -- 
    phi_stmt_784_req_2552_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_784_req_2552_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(64), ack => phi_stmt_784_req_0); -- 
    counter_encry_cp_element_group_64: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_64"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(62) & counter_encry_CP_2078_elements(63);
      gj_counter_encry_cp_element_group_64 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(64), clk => clk, reset => reset); --
    end block;
    -- CP-element group 65:  join  transition  bypass 
    -- CP-element group 65: predecessors 
    -- CP-element group 65: 	43 
    -- CP-element group 65: 	46 
    -- CP-element group 65: 	49 
    -- CP-element group 65: 	52 
    -- CP-element group 65: 	55 
    -- CP-element group 65: 	58 
    -- CP-element group 65: 	61 
    -- CP-element group 65: 	64 
    -- CP-element group 65: 	40 
    -- CP-element group 65: successors 
    -- CP-element group 65: 	94 
    -- CP-element group 65:  members (1) 
      -- CP-element group 65: 	 branch_block_stmt_750/merge_stmt_751__entry___PhiReq/$exit
      -- 
    counter_encry_cp_element_group_65: block -- 
      constant place_capacities: IntegerArray(0 to 8) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1,8 => 1);
      constant place_markings: IntegerArray(0 to 8)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0);
      constant place_delays: IntegerArray(0 to 8) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_65"; 
      signal preds: BooleanArray(1 to 9); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(43) & counter_encry_CP_2078_elements(46) & counter_encry_CP_2078_elements(49) & counter_encry_CP_2078_elements(52) & counter_encry_CP_2078_elements(55) & counter_encry_CP_2078_elements(58) & counter_encry_CP_2078_elements(61) & counter_encry_CP_2078_elements(64) & counter_encry_CP_2078_elements(40);
      gj_counter_encry_cp_element_group_65 : generic_join generic map(name => joinName, number_of_predecessors => 9, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(65), clk => clk, reset => reset); --
    end block;
    -- CP-element group 66:  transition  input  bypass 
    -- CP-element group 66: predecessors 
    -- CP-element group 66: 	39 
    -- CP-element group 66: successors 
    -- CP-element group 66: 	68 
    -- CP-element group 66:  members (2) 
      -- CP-element group 66: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_sources/Interlock/Sample/$exit
      -- CP-element group 66: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_sources/Interlock/Sample/ack
      -- 
    ack_2569_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 66_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => roundnxt_848_755_buf_ack_0, ack => counter_encry_CP_2078_elements(66)); -- 
    -- CP-element group 67:  transition  input  bypass 
    -- CP-element group 67: predecessors 
    -- CP-element group 67: 	39 
    -- CP-element group 67: successors 
    -- CP-element group 67: 	68 
    -- CP-element group 67:  members (2) 
      -- CP-element group 67: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_sources/Interlock/Update/ack
      -- CP-element group 67: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_sources/Interlock/Update/$exit
      -- 
    ack_2574_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 67_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => roundnxt_848_755_buf_ack_1, ack => counter_encry_CP_2078_elements(67)); -- 
    -- CP-element group 68:  join  transition  output  bypass 
    -- CP-element group 68: predecessors 
    -- CP-element group 68: 	66 
    -- CP-element group 68: 	67 
    -- CP-element group 68: successors 
    -- CP-element group 68: 	93 
    -- CP-element group 68:  members (4) 
      -- CP-element group 68: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_req
      -- CP-element group 68: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_sources/Interlock/$exit
      -- CP-element group 68: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/$exit
      -- CP-element group 68: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_752/phi_stmt_752_sources/$exit
      -- 
    phi_stmt_752_req_2575_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_752_req_2575_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(68), ack => phi_stmt_752_req_1); -- 
    counter_encry_cp_element_group_68: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_68"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(66) & counter_encry_CP_2078_elements(67);
      gj_counter_encry_cp_element_group_68 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(68), clk => clk, reset => reset); --
    end block;
    -- CP-element group 69:  transition  input  bypass 
    -- CP-element group 69: predecessors 
    -- CP-element group 69: 	39 
    -- CP-element group 69: successors 
    -- CP-element group 69: 	71 
    -- CP-element group 69:  members (2) 
      -- CP-element group 69: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Sample/ack
      -- CP-element group 69: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Sample/$exit
      -- 
    ack_2589_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 69_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => lw4_0_839_759_buf_ack_0, ack => counter_encry_CP_2078_elements(69)); -- 
    -- CP-element group 70:  transition  input  bypass 
    -- CP-element group 70: predecessors 
    -- CP-element group 70: 	39 
    -- CP-element group 70: successors 
    -- CP-element group 70: 	71 
    -- CP-element group 70:  members (2) 
      -- CP-element group 70: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Update/$exit
      -- CP-element group 70: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/Update/ack
      -- 
    ack_2594_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 70_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => lw4_0_839_759_buf_ack_1, ack => counter_encry_CP_2078_elements(70)); -- 
    -- CP-element group 71:  join  transition  output  bypass 
    -- CP-element group 71: predecessors 
    -- CP-element group 71: 	69 
    -- CP-element group 71: 	70 
    -- CP-element group 71: successors 
    -- CP-element group 71: 	93 
    -- CP-element group 71:  members (4) 
      -- CP-element group 71: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_sources/$exit
      -- CP-element group 71: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_sources/Interlock/$exit
      -- CP-element group 71: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/$exit
      -- CP-element group 71: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_756/phi_stmt_756_req
      -- 
    phi_stmt_756_req_2595_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_756_req_2595_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(71), ack => phi_stmt_756_req_1); -- 
    counter_encry_cp_element_group_71: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_71"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(69) & counter_encry_CP_2078_elements(70);
      gj_counter_encry_cp_element_group_71 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(71), clk => clk, reset => reset); --
    end block;
    -- CP-element group 72:  transition  input  bypass 
    -- CP-element group 72: predecessors 
    -- CP-element group 72: 	39 
    -- CP-element group 72: successors 
    -- CP-element group 72: 	74 
    -- CP-element group 72:  members (2) 
      -- CP-element group 72: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Sample/$exit
      -- CP-element group 72: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Sample/ack
      -- 
    ack_2609_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 72_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => lw4_1_839_763_buf_ack_0, ack => counter_encry_CP_2078_elements(72)); -- 
    -- CP-element group 73:  transition  input  bypass 
    -- CP-element group 73: predecessors 
    -- CP-element group 73: 	39 
    -- CP-element group 73: successors 
    -- CP-element group 73: 	74 
    -- CP-element group 73:  members (2) 
      -- CP-element group 73: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Update/$exit
      -- CP-element group 73: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/Update/ack
      -- 
    ack_2614_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 73_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => lw4_1_839_763_buf_ack_1, ack => counter_encry_CP_2078_elements(73)); -- 
    -- CP-element group 74:  join  transition  output  bypass 
    -- CP-element group 74: predecessors 
    -- CP-element group 74: 	72 
    -- CP-element group 74: 	73 
    -- CP-element group 74: successors 
    -- CP-element group 74: 	93 
    -- CP-element group 74:  members (4) 
      -- CP-element group 74: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/$exit
      -- CP-element group 74: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_sources/$exit
      -- CP-element group 74: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_sources/Interlock/$exit
      -- CP-element group 74: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_760/phi_stmt_760_req
      -- 
    phi_stmt_760_req_2615_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_760_req_2615_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(74), ack => phi_stmt_760_req_1); -- 
    counter_encry_cp_element_group_74: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_74"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(72) & counter_encry_CP_2078_elements(73);
      gj_counter_encry_cp_element_group_74 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(74), clk => clk, reset => reset); --
    end block;
    -- CP-element group 75:  transition  input  bypass 
    -- CP-element group 75: predecessors 
    -- CP-element group 75: 	39 
    -- CP-element group 75: successors 
    -- CP-element group 75: 	77 
    -- CP-element group 75:  members (2) 
      -- CP-element group 75: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Sample/$exit
      -- CP-element group 75: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Sample/ack
      -- 
    ack_2629_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 75_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => lw4_2_839_767_buf_ack_0, ack => counter_encry_CP_2078_elements(75)); -- 
    -- CP-element group 76:  transition  input  bypass 
    -- CP-element group 76: predecessors 
    -- CP-element group 76: 	39 
    -- CP-element group 76: successors 
    -- CP-element group 76: 	77 
    -- CP-element group 76:  members (2) 
      -- CP-element group 76: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Update/$exit
      -- CP-element group 76: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/Update/ack
      -- 
    ack_2634_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 76_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => lw4_2_839_767_buf_ack_1, ack => counter_encry_CP_2078_elements(76)); -- 
    -- CP-element group 77:  join  transition  output  bypass 
    -- CP-element group 77: predecessors 
    -- CP-element group 77: 	75 
    -- CP-element group 77: 	76 
    -- CP-element group 77: successors 
    -- CP-element group 77: 	93 
    -- CP-element group 77:  members (4) 
      -- CP-element group 77: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/$exit
      -- CP-element group 77: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_sources/$exit
      -- CP-element group 77: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_sources/Interlock/$exit
      -- CP-element group 77: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_764/phi_stmt_764_req
      -- 
    phi_stmt_764_req_2635_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_764_req_2635_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(77), ack => phi_stmt_764_req_1); -- 
    counter_encry_cp_element_group_77: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_77"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(75) & counter_encry_CP_2078_elements(76);
      gj_counter_encry_cp_element_group_77 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(77), clk => clk, reset => reset); --
    end block;
    -- CP-element group 78:  transition  input  bypass 
    -- CP-element group 78: predecessors 
    -- CP-element group 78: 	39 
    -- CP-element group 78: successors 
    -- CP-element group 78: 	80 
    -- CP-element group 78:  members (2) 
      -- CP-element group 78: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Sample/$exit
      -- CP-element group 78: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Sample/ack
      -- 
    ack_2649_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 78_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => lw4_3_839_771_buf_ack_0, ack => counter_encry_CP_2078_elements(78)); -- 
    -- CP-element group 79:  transition  input  bypass 
    -- CP-element group 79: predecessors 
    -- CP-element group 79: 	39 
    -- CP-element group 79: successors 
    -- CP-element group 79: 	80 
    -- CP-element group 79:  members (2) 
      -- CP-element group 79: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Update/$exit
      -- CP-element group 79: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/Update/ack
      -- 
    ack_2654_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 79_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => lw4_3_839_771_buf_ack_1, ack => counter_encry_CP_2078_elements(79)); -- 
    -- CP-element group 80:  join  transition  output  bypass 
    -- CP-element group 80: predecessors 
    -- CP-element group 80: 	78 
    -- CP-element group 80: 	79 
    -- CP-element group 80: successors 
    -- CP-element group 80: 	93 
    -- CP-element group 80:  members (4) 
      -- CP-element group 80: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/$exit
      -- CP-element group 80: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_sources/$exit
      -- CP-element group 80: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_sources/Interlock/$exit
      -- CP-element group 80: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_768/phi_stmt_768_req
      -- 
    phi_stmt_768_req_2655_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_768_req_2655_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(80), ack => phi_stmt_768_req_1); -- 
    counter_encry_cp_element_group_80: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_80"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(78) & counter_encry_CP_2078_elements(79);
      gj_counter_encry_cp_element_group_80 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(80), clk => clk, reset => reset); --
    end block;
    -- CP-element group 81:  transition  input  bypass 
    -- CP-element group 81: predecessors 
    -- CP-element group 81: 	39 
    -- CP-element group 81: successors 
    -- CP-element group 81: 	83 
    -- CP-element group 81:  members (2) 
      -- CP-element group 81: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Sample/$exit
      -- CP-element group 81: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Sample/ack
      -- 
    ack_2669_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 81_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k3_0_839_775_buf_ack_0, ack => counter_encry_CP_2078_elements(81)); -- 
    -- CP-element group 82:  transition  input  bypass 
    -- CP-element group 82: predecessors 
    -- CP-element group 82: 	39 
    -- CP-element group 82: successors 
    -- CP-element group 82: 	83 
    -- CP-element group 82:  members (2) 
      -- CP-element group 82: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Update/$exit
      -- CP-element group 82: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/Update/ack
      -- 
    ack_2674_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 82_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k3_0_839_775_buf_ack_1, ack => counter_encry_CP_2078_elements(82)); -- 
    -- CP-element group 83:  join  transition  output  bypass 
    -- CP-element group 83: predecessors 
    -- CP-element group 83: 	81 
    -- CP-element group 83: 	82 
    -- CP-element group 83: successors 
    -- CP-element group 83: 	93 
    -- CP-element group 83:  members (4) 
      -- CP-element group 83: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/$exit
      -- CP-element group 83: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_sources/$exit
      -- CP-element group 83: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_sources/Interlock/$exit
      -- CP-element group 83: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_772/phi_stmt_772_req
      -- 
    phi_stmt_772_req_2675_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_772_req_2675_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(83), ack => phi_stmt_772_req_1); -- 
    counter_encry_cp_element_group_83: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_83"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(81) & counter_encry_CP_2078_elements(82);
      gj_counter_encry_cp_element_group_83 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(83), clk => clk, reset => reset); --
    end block;
    -- CP-element group 84:  transition  input  bypass 
    -- CP-element group 84: predecessors 
    -- CP-element group 84: 	39 
    -- CP-element group 84: successors 
    -- CP-element group 84: 	86 
    -- CP-element group 84:  members (2) 
      -- CP-element group 84: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Sample/$exit
      -- CP-element group 84: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Sample/ack
      -- 
    ack_2689_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 84_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k3_1_839_779_buf_ack_0, ack => counter_encry_CP_2078_elements(84)); -- 
    -- CP-element group 85:  transition  input  bypass 
    -- CP-element group 85: predecessors 
    -- CP-element group 85: 	39 
    -- CP-element group 85: successors 
    -- CP-element group 85: 	86 
    -- CP-element group 85:  members (2) 
      -- CP-element group 85: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Update/$exit
      -- CP-element group 85: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/Update/ack
      -- 
    ack_2694_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 85_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k3_1_839_779_buf_ack_1, ack => counter_encry_CP_2078_elements(85)); -- 
    -- CP-element group 86:  join  transition  output  bypass 
    -- CP-element group 86: predecessors 
    -- CP-element group 86: 	84 
    -- CP-element group 86: 	85 
    -- CP-element group 86: successors 
    -- CP-element group 86: 	93 
    -- CP-element group 86:  members (4) 
      -- CP-element group 86: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/$exit
      -- CP-element group 86: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_sources/$exit
      -- CP-element group 86: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_sources/Interlock/$exit
      -- CP-element group 86: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_776/phi_stmt_776_req
      -- 
    phi_stmt_776_req_2695_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_776_req_2695_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(86), ack => phi_stmt_776_req_1); -- 
    counter_encry_cp_element_group_86: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_86"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(84) & counter_encry_CP_2078_elements(85);
      gj_counter_encry_cp_element_group_86 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(86), clk => clk, reset => reset); --
    end block;
    -- CP-element group 87:  transition  input  bypass 
    -- CP-element group 87: predecessors 
    -- CP-element group 87: 	39 
    -- CP-element group 87: successors 
    -- CP-element group 87: 	89 
    -- CP-element group 87:  members (2) 
      -- CP-element group 87: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Sample/$exit
      -- CP-element group 87: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Sample/ack
      -- 
    ack_2709_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 87_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k3_2_839_783_buf_ack_0, ack => counter_encry_CP_2078_elements(87)); -- 
    -- CP-element group 88:  transition  input  bypass 
    -- CP-element group 88: predecessors 
    -- CP-element group 88: 	39 
    -- CP-element group 88: successors 
    -- CP-element group 88: 	89 
    -- CP-element group 88:  members (2) 
      -- CP-element group 88: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Update/$exit
      -- CP-element group 88: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/Update/ack
      -- 
    ack_2714_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 88_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k3_2_839_783_buf_ack_1, ack => counter_encry_CP_2078_elements(88)); -- 
    -- CP-element group 89:  join  transition  output  bypass 
    -- CP-element group 89: predecessors 
    -- CP-element group 89: 	87 
    -- CP-element group 89: 	88 
    -- CP-element group 89: successors 
    -- CP-element group 89: 	93 
    -- CP-element group 89:  members (4) 
      -- CP-element group 89: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/$exit
      -- CP-element group 89: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_sources/$exit
      -- CP-element group 89: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_sources/Interlock/$exit
      -- CP-element group 89: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_780/phi_stmt_780_req
      -- 
    phi_stmt_780_req_2715_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_780_req_2715_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(89), ack => phi_stmt_780_req_1); -- 
    counter_encry_cp_element_group_89: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_89"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(87) & counter_encry_CP_2078_elements(88);
      gj_counter_encry_cp_element_group_89 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(89), clk => clk, reset => reset); --
    end block;
    -- CP-element group 90:  transition  input  bypass 
    -- CP-element group 90: predecessors 
    -- CP-element group 90: 	39 
    -- CP-element group 90: successors 
    -- CP-element group 90: 	92 
    -- CP-element group 90:  members (2) 
      -- CP-element group 90: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Sample/$exit
      -- CP-element group 90: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Sample/ack
      -- 
    ack_2729_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 90_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k3_3_839_787_buf_ack_0, ack => counter_encry_CP_2078_elements(90)); -- 
    -- CP-element group 91:  transition  input  bypass 
    -- CP-element group 91: predecessors 
    -- CP-element group 91: 	39 
    -- CP-element group 91: successors 
    -- CP-element group 91: 	92 
    -- CP-element group 91:  members (2) 
      -- CP-element group 91: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Update/$exit
      -- CP-element group 91: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/Update/ack
      -- 
    ack_2734_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 91_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => k3_3_839_787_buf_ack_1, ack => counter_encry_CP_2078_elements(91)); -- 
    -- CP-element group 92:  join  transition  output  bypass 
    -- CP-element group 92: predecessors 
    -- CP-element group 92: 	90 
    -- CP-element group 92: 	91 
    -- CP-element group 92: successors 
    -- CP-element group 92: 	93 
    -- CP-element group 92:  members (4) 
      -- CP-element group 92: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/$exit
      -- CP-element group 92: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_sources/$exit
      -- CP-element group 92: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_sources/Interlock/$exit
      -- CP-element group 92: 	 branch_block_stmt_750/loopback_PhiReq/phi_stmt_784/phi_stmt_784_req
      -- 
    phi_stmt_784_req_2735_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_784_req_2735_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(92), ack => phi_stmt_784_req_1); -- 
    counter_encry_cp_element_group_92: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_92"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(90) & counter_encry_CP_2078_elements(91);
      gj_counter_encry_cp_element_group_92 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(92), clk => clk, reset => reset); --
    end block;
    -- CP-element group 93:  join  transition  bypass 
    -- CP-element group 93: predecessors 
    -- CP-element group 93: 	68 
    -- CP-element group 93: 	71 
    -- CP-element group 93: 	74 
    -- CP-element group 93: 	77 
    -- CP-element group 93: 	80 
    -- CP-element group 93: 	83 
    -- CP-element group 93: 	86 
    -- CP-element group 93: 	89 
    -- CP-element group 93: 	92 
    -- CP-element group 93: successors 
    -- CP-element group 93: 	94 
    -- CP-element group 93:  members (1) 
      -- CP-element group 93: 	 branch_block_stmt_750/loopback_PhiReq/$exit
      -- 
    counter_encry_cp_element_group_93: block -- 
      constant place_capacities: IntegerArray(0 to 8) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1,8 => 1);
      constant place_markings: IntegerArray(0 to 8)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0);
      constant place_delays: IntegerArray(0 to 8) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0);
      constant joinName: string(1 to 33) := "counter_encry_cp_element_group_93"; 
      signal preds: BooleanArray(1 to 9); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(68) & counter_encry_CP_2078_elements(71) & counter_encry_CP_2078_elements(74) & counter_encry_CP_2078_elements(77) & counter_encry_CP_2078_elements(80) & counter_encry_CP_2078_elements(83) & counter_encry_CP_2078_elements(86) & counter_encry_CP_2078_elements(89) & counter_encry_CP_2078_elements(92);
      gj_counter_encry_cp_element_group_93 : generic_join generic map(name => joinName, number_of_predecessors => 9, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(93), clk => clk, reset => reset); --
    end block;
    -- CP-element group 94:  merge  fork  transition  place  bypass 
    -- CP-element group 94: predecessors 
    -- CP-element group 94: 	65 
    -- CP-element group 94: 	93 
    -- CP-element group 94: successors 
    -- CP-element group 94: 	95 
    -- CP-element group 94: 	96 
    -- CP-element group 94: 	97 
    -- CP-element group 94: 	98 
    -- CP-element group 94: 	99 
    -- CP-element group 94: 	100 
    -- CP-element group 94: 	101 
    -- CP-element group 94: 	102 
    -- CP-element group 94: 	103 
    -- CP-element group 94:  members (2) 
      -- CP-element group 94: 	 branch_block_stmt_750/merge_stmt_751_PhiReqMerge
      -- CP-element group 94: 	 branch_block_stmt_750/merge_stmt_751_PhiAck/$entry
      -- 
    counter_encry_CP_2078_elements(94) <= OrReduce(counter_encry_CP_2078_elements(65) & counter_encry_CP_2078_elements(93));
    -- CP-element group 95:  transition  input  bypass 
    -- CP-element group 95: predecessors 
    -- CP-element group 95: 	94 
    -- CP-element group 95: successors 
    -- CP-element group 95: 	104 
    -- CP-element group 95:  members (1) 
      -- CP-element group 95: 	 branch_block_stmt_750/merge_stmt_751_PhiAck/phi_stmt_752_ack
      -- 
    phi_stmt_752_ack_2740_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 95_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_752_ack_0, ack => counter_encry_CP_2078_elements(95)); -- 
    -- CP-element group 96:  transition  input  bypass 
    -- CP-element group 96: predecessors 
    -- CP-element group 96: 	94 
    -- CP-element group 96: successors 
    -- CP-element group 96: 	104 
    -- CP-element group 96:  members (1) 
      -- CP-element group 96: 	 branch_block_stmt_750/merge_stmt_751_PhiAck/phi_stmt_756_ack
      -- 
    phi_stmt_756_ack_2741_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 96_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_756_ack_0, ack => counter_encry_CP_2078_elements(96)); -- 
    -- CP-element group 97:  transition  input  bypass 
    -- CP-element group 97: predecessors 
    -- CP-element group 97: 	94 
    -- CP-element group 97: successors 
    -- CP-element group 97: 	104 
    -- CP-element group 97:  members (1) 
      -- CP-element group 97: 	 branch_block_stmt_750/merge_stmt_751_PhiAck/phi_stmt_760_ack
      -- 
    phi_stmt_760_ack_2742_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 97_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_760_ack_0, ack => counter_encry_CP_2078_elements(97)); -- 
    -- CP-element group 98:  transition  input  bypass 
    -- CP-element group 98: predecessors 
    -- CP-element group 98: 	94 
    -- CP-element group 98: successors 
    -- CP-element group 98: 	104 
    -- CP-element group 98:  members (1) 
      -- CP-element group 98: 	 branch_block_stmt_750/merge_stmt_751_PhiAck/phi_stmt_764_ack
      -- 
    phi_stmt_764_ack_2743_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 98_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_764_ack_0, ack => counter_encry_CP_2078_elements(98)); -- 
    -- CP-element group 99:  transition  input  bypass 
    -- CP-element group 99: predecessors 
    -- CP-element group 99: 	94 
    -- CP-element group 99: successors 
    -- CP-element group 99: 	104 
    -- CP-element group 99:  members (1) 
      -- CP-element group 99: 	 branch_block_stmt_750/merge_stmt_751_PhiAck/phi_stmt_768_ack
      -- 
    phi_stmt_768_ack_2744_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 99_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_768_ack_0, ack => counter_encry_CP_2078_elements(99)); -- 
    -- CP-element group 100:  transition  input  bypass 
    -- CP-element group 100: predecessors 
    -- CP-element group 100: 	94 
    -- CP-element group 100: successors 
    -- CP-element group 100: 	104 
    -- CP-element group 100:  members (1) 
      -- CP-element group 100: 	 branch_block_stmt_750/merge_stmt_751_PhiAck/phi_stmt_772_ack
      -- 
    phi_stmt_772_ack_2745_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 100_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_772_ack_0, ack => counter_encry_CP_2078_elements(100)); -- 
    -- CP-element group 101:  transition  input  bypass 
    -- CP-element group 101: predecessors 
    -- CP-element group 101: 	94 
    -- CP-element group 101: successors 
    -- CP-element group 101: 	104 
    -- CP-element group 101:  members (1) 
      -- CP-element group 101: 	 branch_block_stmt_750/merge_stmt_751_PhiAck/phi_stmt_776_ack
      -- 
    phi_stmt_776_ack_2746_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 101_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_776_ack_0, ack => counter_encry_CP_2078_elements(101)); -- 
    -- CP-element group 102:  transition  input  bypass 
    -- CP-element group 102: predecessors 
    -- CP-element group 102: 	94 
    -- CP-element group 102: successors 
    -- CP-element group 102: 	104 
    -- CP-element group 102:  members (1) 
      -- CP-element group 102: 	 branch_block_stmt_750/merge_stmt_751_PhiAck/phi_stmt_780_ack
      -- 
    phi_stmt_780_ack_2747_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 102_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_780_ack_0, ack => counter_encry_CP_2078_elements(102)); -- 
    -- CP-element group 103:  transition  input  bypass 
    -- CP-element group 103: predecessors 
    -- CP-element group 103: 	94 
    -- CP-element group 103: successors 
    -- CP-element group 103: 	104 
    -- CP-element group 103:  members (1) 
      -- CP-element group 103: 	 branch_block_stmt_750/merge_stmt_751_PhiAck/phi_stmt_784_ack
      -- 
    phi_stmt_784_ack_2748_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 103_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_784_ack_0, ack => counter_encry_CP_2078_elements(103)); -- 
    -- CP-element group 104:  merge  join  fork  transition  place  output  bypass 
    -- CP-element group 104: predecessors 
    -- CP-element group 104: 	95 
    -- CP-element group 104: 	96 
    -- CP-element group 104: 	97 
    -- CP-element group 104: 	98 
    -- CP-element group 104: 	99 
    -- CP-element group 104: 	100 
    -- CP-element group 104: 	101 
    -- CP-element group 104: 	102 
    -- CP-element group 104: 	103 
    -- CP-element group 104: successors 
    -- CP-element group 104: 	24 
    -- CP-element group 104: 	26 
    -- CP-element group 104: 	28 
    -- CP-element group 104: 	30 
    -- CP-element group 104: 	32 
    -- CP-element group 104: 	35 
    -- CP-element group 104: 	14 
    -- CP-element group 104: 	15 
    -- CP-element group 104: 	16 
    -- CP-element group 104: 	17 
    -- CP-element group 104: 	18 
    -- CP-element group 104: 	19 
    -- CP-element group 104: 	20 
    -- CP-element group 104: 	21 
    -- CP-element group 104:  members (46) 
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_839_Update/ccr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_821_Update/ccr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_839_Update/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_821_Update/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_821_update_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_818_Update/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_818_Update/ccr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_818_update_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_815_Update/ccr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_815_Update/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_815_update_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_839_update_start_
      -- CP-element group 104: 	 branch_block_stmt_750/merge_stmt_751__exit__
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839__entry__
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_791_sample_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_791_update_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_791_Sample/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_791_Sample/crr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_791_Update/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_791_Update/ccr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_794_sample_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_794_update_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_794_Sample/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_794_Sample/crr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_794_Update/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_794_Update/ccr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_797_sample_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_797_update_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_797_Sample/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_797_Sample/crr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_797_Update/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_797_Update/ccr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_800_sample_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_800_update_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_800_Sample/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_800_Sample/crr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_800_Update/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_800_Update/ccr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_809_update_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_809_Update/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_809_Update/ccr
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_812_update_start_
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_812_Update/$entry
      -- CP-element group 104: 	 branch_block_stmt_750/call_stmt_791_to_call_stmt_839/call_stmt_812_Update/ccr
      -- CP-element group 104: 	 branch_block_stmt_750/merge_stmt_751_PhiAck/$exit
      -- 
    ccr_2320_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2320_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_839_call_req_1); -- 
    ccr_2306_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2306_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_821_call_req_1); -- 
    ccr_2292_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2292_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_818_call_req_1); -- 
    ccr_2278_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2278_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_815_call_req_1); -- 
    crr_2189_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2189_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_791_call_req_0); -- 
    ccr_2194_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2194_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_791_call_req_1); -- 
    crr_2203_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2203_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_794_call_req_0); -- 
    ccr_2208_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2208_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_794_call_req_1); -- 
    crr_2217_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2217_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_797_call_req_0); -- 
    ccr_2222_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2222_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_797_call_req_1); -- 
    crr_2231_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2231_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_800_call_req_0); -- 
    ccr_2236_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2236_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_800_call_req_1); -- 
    ccr_2250_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2250_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_809_call_req_1); -- 
    ccr_2264_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2264_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(104), ack => call_stmt_812_call_req_1); -- 
    counter_encry_cp_element_group_104: block -- 
      constant place_capacities: IntegerArray(0 to 8) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1,8 => 1);
      constant place_markings: IntegerArray(0 to 8)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0);
      constant place_delays: IntegerArray(0 to 8) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0);
      constant joinName: string(1 to 34) := "counter_encry_cp_element_group_104"; 
      signal preds: BooleanArray(1 to 9); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(95) & counter_encry_CP_2078_elements(96) & counter_encry_CP_2078_elements(97) & counter_encry_CP_2078_elements(98) & counter_encry_CP_2078_elements(99) & counter_encry_CP_2078_elements(100) & counter_encry_CP_2078_elements(101) & counter_encry_CP_2078_elements(102) & counter_encry_CP_2078_elements(103);
      gj_counter_encry_cp_element_group_104 : generic_join generic map(name => joinName, number_of_predecessors => 9, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(104), clk => clk, reset => reset); --
    end block;
    -- CP-element group 105:  transition  input  bypass 
    -- CP-element group 105: predecessors 
    -- CP-element group 105: 	37 
    -- CP-element group 105: successors 
    -- CP-element group 105:  members (3) 
      -- CP-element group 105: 	 call_stmt_854_to_call_stmt_890/call_stmt_854_sample_completed_
      -- CP-element group 105: 	 call_stmt_854_to_call_stmt_890/call_stmt_854_Sample/$exit
      -- CP-element group 105: 	 call_stmt_854_to_call_stmt_890/call_stmt_854_Sample/cra
      -- 
    cra_2760_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 105_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_854_call_ack_0, ack => counter_encry_CP_2078_elements(105)); -- 
    -- CP-element group 106:  transition  input  bypass 
    -- CP-element group 106: predecessors 
    -- CP-element group 106: 	37 
    -- CP-element group 106: successors 
    -- CP-element group 106: 	113 
    -- CP-element group 106:  members (3) 
      -- CP-element group 106: 	 call_stmt_854_to_call_stmt_890/call_stmt_854_update_completed_
      -- CP-element group 106: 	 call_stmt_854_to_call_stmt_890/call_stmt_854_Update/$exit
      -- CP-element group 106: 	 call_stmt_854_to_call_stmt_890/call_stmt_854_Update/cca
      -- 
    cca_2765_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 106_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_854_call_ack_1, ack => counter_encry_CP_2078_elements(106)); -- 
    -- CP-element group 107:  transition  input  bypass 
    -- CP-element group 107: predecessors 
    -- CP-element group 107: 	37 
    -- CP-element group 107: successors 
    -- CP-element group 107:  members (3) 
      -- CP-element group 107: 	 call_stmt_854_to_call_stmt_890/call_stmt_857_sample_completed_
      -- CP-element group 107: 	 call_stmt_854_to_call_stmt_890/call_stmt_857_Sample/$exit
      -- CP-element group 107: 	 call_stmt_854_to_call_stmt_890/call_stmt_857_Sample/cra
      -- 
    cra_2774_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 107_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_857_call_ack_0, ack => counter_encry_CP_2078_elements(107)); -- 
    -- CP-element group 108:  transition  input  bypass 
    -- CP-element group 108: predecessors 
    -- CP-element group 108: 	37 
    -- CP-element group 108: successors 
    -- CP-element group 108: 	113 
    -- CP-element group 108:  members (3) 
      -- CP-element group 108: 	 call_stmt_854_to_call_stmt_890/call_stmt_857_update_completed_
      -- CP-element group 108: 	 call_stmt_854_to_call_stmt_890/call_stmt_857_Update/$exit
      -- CP-element group 108: 	 call_stmt_854_to_call_stmt_890/call_stmt_857_Update/cca
      -- 
    cca_2779_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 108_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_857_call_ack_1, ack => counter_encry_CP_2078_elements(108)); -- 
    -- CP-element group 109:  transition  input  bypass 
    -- CP-element group 109: predecessors 
    -- CP-element group 109: 	37 
    -- CP-element group 109: successors 
    -- CP-element group 109:  members (3) 
      -- CP-element group 109: 	 call_stmt_854_to_call_stmt_890/call_stmt_860_sample_completed_
      -- CP-element group 109: 	 call_stmt_854_to_call_stmt_890/call_stmt_860_Sample/$exit
      -- CP-element group 109: 	 call_stmt_854_to_call_stmt_890/call_stmt_860_Sample/cra
      -- 
    cra_2788_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 109_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_860_call_ack_0, ack => counter_encry_CP_2078_elements(109)); -- 
    -- CP-element group 110:  transition  input  bypass 
    -- CP-element group 110: predecessors 
    -- CP-element group 110: 	37 
    -- CP-element group 110: successors 
    -- CP-element group 110: 	113 
    -- CP-element group 110:  members (3) 
      -- CP-element group 110: 	 call_stmt_854_to_call_stmt_890/call_stmt_860_update_completed_
      -- CP-element group 110: 	 call_stmt_854_to_call_stmt_890/call_stmt_860_Update/$exit
      -- CP-element group 110: 	 call_stmt_854_to_call_stmt_890/call_stmt_860_Update/cca
      -- 
    cca_2793_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 110_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_860_call_ack_1, ack => counter_encry_CP_2078_elements(110)); -- 
    -- CP-element group 111:  transition  input  bypass 
    -- CP-element group 111: predecessors 
    -- CP-element group 111: 	37 
    -- CP-element group 111: successors 
    -- CP-element group 111:  members (3) 
      -- CP-element group 111: 	 call_stmt_854_to_call_stmt_890/call_stmt_863_sample_completed_
      -- CP-element group 111: 	 call_stmt_854_to_call_stmt_890/call_stmt_863_Sample/$exit
      -- CP-element group 111: 	 call_stmt_854_to_call_stmt_890/call_stmt_863_Sample/cra
      -- 
    cra_2802_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 111_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_863_call_ack_0, ack => counter_encry_CP_2078_elements(111)); -- 
    -- CP-element group 112:  transition  input  bypass 
    -- CP-element group 112: predecessors 
    -- CP-element group 112: 	37 
    -- CP-element group 112: successors 
    -- CP-element group 112: 	113 
    -- CP-element group 112:  members (3) 
      -- CP-element group 112: 	 call_stmt_854_to_call_stmt_890/call_stmt_863_update_completed_
      -- CP-element group 112: 	 call_stmt_854_to_call_stmt_890/call_stmt_863_Update/$exit
      -- CP-element group 112: 	 call_stmt_854_to_call_stmt_890/call_stmt_863_Update/cca
      -- 
    cca_2807_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 112_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_863_call_ack_1, ack => counter_encry_CP_2078_elements(112)); -- 
    -- CP-element group 113:  join  transition  output  bypass 
    -- CP-element group 113: predecessors 
    -- CP-element group 113: 	106 
    -- CP-element group 113: 	108 
    -- CP-element group 113: 	110 
    -- CP-element group 113: 	112 
    -- CP-element group 113: successors 
    -- CP-element group 113: 	114 
    -- CP-element group 113:  members (3) 
      -- CP-element group 113: 	 call_stmt_854_to_call_stmt_890/call_stmt_872_sample_start_
      -- CP-element group 113: 	 call_stmt_854_to_call_stmt_890/call_stmt_872_Sample/$entry
      -- CP-element group 113: 	 call_stmt_854_to_call_stmt_890/call_stmt_872_Sample/crr
      -- 
    crr_2815_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2815_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(113), ack => call_stmt_872_call_req_0); -- 
    counter_encry_cp_element_group_113: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant joinName: string(1 to 34) := "counter_encry_cp_element_group_113"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= counter_encry_CP_2078_elements(106) & counter_encry_CP_2078_elements(108) & counter_encry_CP_2078_elements(110) & counter_encry_CP_2078_elements(112);
      gj_counter_encry_cp_element_group_113 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => counter_encry_CP_2078_elements(113), clk => clk, reset => reset); --
    end block;
    -- CP-element group 114:  transition  input  bypass 
    -- CP-element group 114: predecessors 
    -- CP-element group 114: 	113 
    -- CP-element group 114: successors 
    -- CP-element group 114:  members (3) 
      -- CP-element group 114: 	 call_stmt_854_to_call_stmt_890/call_stmt_872_sample_completed_
      -- CP-element group 114: 	 call_stmt_854_to_call_stmt_890/call_stmt_872_Sample/$exit
      -- CP-element group 114: 	 call_stmt_854_to_call_stmt_890/call_stmt_872_Sample/cra
      -- 
    cra_2816_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 114_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_872_call_ack_0, ack => counter_encry_CP_2078_elements(114)); -- 
    -- CP-element group 115:  transition  input  output  bypass 
    -- CP-element group 115: predecessors 
    -- CP-element group 115: 	37 
    -- CP-element group 115: successors 
    -- CP-element group 115: 	116 
    -- CP-element group 115:  members (6) 
      -- CP-element group 115: 	 call_stmt_854_to_call_stmt_890/call_stmt_872_update_completed_
      -- CP-element group 115: 	 call_stmt_854_to_call_stmt_890/call_stmt_872_Update/$exit
      -- CP-element group 115: 	 call_stmt_854_to_call_stmt_890/call_stmt_872_Update/cca
      -- CP-element group 115: 	 call_stmt_854_to_call_stmt_890/call_stmt_890_sample_start_
      -- CP-element group 115: 	 call_stmt_854_to_call_stmt_890/call_stmt_890_Sample/$entry
      -- CP-element group 115: 	 call_stmt_854_to_call_stmt_890/call_stmt_890_Sample/crr
      -- 
    cca_2821_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 115_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_872_call_ack_1, ack => counter_encry_CP_2078_elements(115)); -- 
    crr_2829_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2829_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_encry_CP_2078_elements(115), ack => call_stmt_890_call_req_0); -- 
    -- CP-element group 116:  transition  input  bypass 
    -- CP-element group 116: predecessors 
    -- CP-element group 116: 	115 
    -- CP-element group 116: successors 
    -- CP-element group 116:  members (3) 
      -- CP-element group 116: 	 call_stmt_854_to_call_stmt_890/call_stmt_890_sample_completed_
      -- CP-element group 116: 	 call_stmt_854_to_call_stmt_890/call_stmt_890_Sample/$exit
      -- CP-element group 116: 	 call_stmt_854_to_call_stmt_890/call_stmt_890_Sample/cra
      -- 
    cra_2830_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 116_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_890_call_ack_0, ack => counter_encry_CP_2078_elements(116)); -- 
    -- CP-element group 117:  transition  input  bypass 
    -- CP-element group 117: predecessors 
    -- CP-element group 117: 	37 
    -- CP-element group 117: successors 
    -- CP-element group 117:  members (5) 
      -- CP-element group 117: 	 $exit
      -- CP-element group 117: 	 call_stmt_854_to_call_stmt_890/$exit
      -- CP-element group 117: 	 call_stmt_854_to_call_stmt_890/call_stmt_890_update_completed_
      -- CP-element group 117: 	 call_stmt_854_to_call_stmt_890/call_stmt_890_Update/$exit
      -- CP-element group 117: 	 call_stmt_854_to_call_stmt_890/call_stmt_890_Update/cca
      -- 
    cca_2835_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 117_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_890_call_ack_1, ack => counter_encry_CP_2078_elements(117)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal R_one_754_wire_constant : std_logic_vector(7 downto 0);
    signal R_zero_740_wire_constant : std_logic_vector(7 downto 0);
    signal R_zero_881_wire_constant : std_logic_vector(7 downto 0);
    signal ULT_u8_u1_843_wire : std_logic_vector(0 downto 0);
    signal k1_0_749 : std_logic_vector(31 downto 0);
    signal k1_0_749_774_buffered : std_logic_vector(31 downto 0);
    signal k1_1_749 : std_logic_vector(31 downto 0);
    signal k1_1_749_778_buffered : std_logic_vector(31 downto 0);
    signal k1_2_749 : std_logic_vector(31 downto 0);
    signal k1_2_749_782_buffered : std_logic_vector(31 downto 0);
    signal k1_3_749 : std_logic_vector(31 downto 0);
    signal k1_3_749_786_buffered : std_logic_vector(31 downto 0);
    signal k2_0_772 : std_logic_vector(31 downto 0);
    signal k2_1_776 : std_logic_vector(31 downto 0);
    signal k2_2_780 : std_logic_vector(31 downto 0);
    signal k2_3_784 : std_logic_vector(31 downto 0);
    signal k3_0_839 : std_logic_vector(31 downto 0);
    signal k3_0_839_775_buffered : std_logic_vector(31 downto 0);
    signal k3_1_839 : std_logic_vector(31 downto 0);
    signal k3_1_839_779_buffered : std_logic_vector(31 downto 0);
    signal k3_2_839 : std_logic_vector(31 downto 0);
    signal k3_2_839_783_buffered : std_logic_vector(31 downto 0);
    signal k3_3_839 : std_logic_vector(31 downto 0);
    signal k3_3_839_787_buffered : std_logic_vector(31 downto 0);
    signal k4_0_890 : std_logic_vector(31 downto 0);
    signal k4_1_890 : std_logic_vector(31 downto 0);
    signal k4_2_890 : std_logic_vector(31 downto 0);
    signal k4_3_890 : std_logic_vector(31 downto 0);
    signal konst_842_wire_constant : std_logic_vector(7 downto 0);
    signal konst_846_wire_constant : std_logic_vector(7 downto 0);
    signal lw1_0_791 : std_logic_vector(31 downto 0);
    signal lw1_1_794 : std_logic_vector(31 downto 0);
    signal lw1_2_797 : std_logic_vector(31 downto 0);
    signal lw1_3_800 : std_logic_vector(31 downto 0);
    signal lw2_0_809 : std_logic_vector(31 downto 0);
    signal lw2_1_809 : std_logic_vector(31 downto 0);
    signal lw2_2_809 : std_logic_vector(31 downto 0);
    signal lw2_3_809 : std_logic_vector(31 downto 0);
    signal lw3_0_812 : std_logic_vector(31 downto 0);
    signal lw3_1_815 : std_logic_vector(31 downto 0);
    signal lw3_2_818 : std_logic_vector(31 downto 0);
    signal lw3_3_821 : std_logic_vector(31 downto 0);
    signal lw4_0_839 : std_logic_vector(31 downto 0);
    signal lw4_0_839_759_buffered : std_logic_vector(31 downto 0);
    signal lw4_1_839 : std_logic_vector(31 downto 0);
    signal lw4_1_839_763_buffered : std_logic_vector(31 downto 0);
    signal lw4_2_839 : std_logic_vector(31 downto 0);
    signal lw4_2_839_767_buffered : std_logic_vector(31 downto 0);
    signal lw4_3_839 : std_logic_vector(31 downto 0);
    signal lw4_3_839_771_buffered : std_logic_vector(31 downto 0);
    signal lw5_0_854 : std_logic_vector(31 downto 0);
    signal lw5_1_857 : std_logic_vector(31 downto 0);
    signal lw5_2_860 : std_logic_vector(31 downto 0);
    signal lw5_3_863 : std_logic_vector(31 downto 0);
    signal lw6_0_872 : std_logic_vector(31 downto 0);
    signal lw6_1_872 : std_logic_vector(31 downto 0);
    signal lw6_2_872 : std_logic_vector(31 downto 0);
    signal lw6_3_872 : std_logic_vector(31 downto 0);
    signal roundnum_752 : std_logic_vector(7 downto 0);
    signal roundnxt_848 : std_logic_vector(7 downto 0);
    signal roundnxt_848_755_buffered : std_logic_vector(7 downto 0);
    signal state_0_756 : std_logic_vector(31 downto 0);
    signal state_1_760 : std_logic_vector(31 downto 0);
    signal state_2_764 : std_logic_vector(31 downto 0);
    signal state_3_768 : std_logic_vector(31 downto 0);
    signal text_715 : std_logic_vector(127 downto 0);
    signal w0_0_719 : std_logic_vector(31 downto 0);
    signal w0_1_723 : std_logic_vector(31 downto 0);
    signal w0_2_727 : std_logic_vector(31 downto 0);
    signal w0_3_731 : std_logic_vector(31 downto 0);
    signal w1_0_749 : std_logic_vector(31 downto 0);
    signal w1_0_749_758_buffered : std_logic_vector(31 downto 0);
    signal w1_1_749 : std_logic_vector(31 downto 0);
    signal w1_1_749_762_buffered : std_logic_vector(31 downto 0);
    signal w1_2_749 : std_logic_vector(31 downto 0);
    signal w1_2_749_766_buffered : std_logic_vector(31 downto 0);
    signal w1_3_749 : std_logic_vector(31 downto 0);
    signal w1_3_749_770_buffered : std_logic_vector(31 downto 0);
    -- 
  begin -- 
    R_one_754_wire_constant <= "00000001";
    R_zero_740_wire_constant <= "00000000";
    R_zero_881_wire_constant <= "00000000";
    konst_842_wire_constant <= "00001001";
    konst_846_wire_constant <= "00000001";
    phi_stmt_752: Block -- phi operator 
      signal idata: std_logic_vector(15 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= R_one_754_wire_constant & roundnxt_848_755_buffered;
      req <= phi_stmt_752_req_0 & phi_stmt_752_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_752",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 8) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_752_ack_0,
          idata => idata,
          odata => roundnum_752,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_752
    phi_stmt_756: Block -- phi operator 
      signal idata: std_logic_vector(63 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= w1_0_749_758_buffered & lw4_0_839_759_buffered;
      req <= phi_stmt_756_req_0 & phi_stmt_756_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_756",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 32) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_756_ack_0,
          idata => idata,
          odata => state_0_756,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_756
    phi_stmt_760: Block -- phi operator 
      signal idata: std_logic_vector(63 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= w1_1_749_762_buffered & lw4_1_839_763_buffered;
      req <= phi_stmt_760_req_0 & phi_stmt_760_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_760",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 32) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_760_ack_0,
          idata => idata,
          odata => state_1_760,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_760
    phi_stmt_764: Block -- phi operator 
      signal idata: std_logic_vector(63 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= w1_2_749_766_buffered & lw4_2_839_767_buffered;
      req <= phi_stmt_764_req_0 & phi_stmt_764_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_764",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 32) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_764_ack_0,
          idata => idata,
          odata => state_2_764,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_764
    phi_stmt_768: Block -- phi operator 
      signal idata: std_logic_vector(63 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= w1_3_749_770_buffered & lw4_3_839_771_buffered;
      req <= phi_stmt_768_req_0 & phi_stmt_768_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_768",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 32) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_768_ack_0,
          idata => idata,
          odata => state_3_768,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_768
    phi_stmt_772: Block -- phi operator 
      signal idata: std_logic_vector(63 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= k1_0_749_774_buffered & k3_0_839_775_buffered;
      req <= phi_stmt_772_req_0 & phi_stmt_772_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_772",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 32) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_772_ack_0,
          idata => idata,
          odata => k2_0_772,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_772
    phi_stmt_776: Block -- phi operator 
      signal idata: std_logic_vector(63 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= k1_1_749_778_buffered & k3_1_839_779_buffered;
      req <= phi_stmt_776_req_0 & phi_stmt_776_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_776",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 32) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_776_ack_0,
          idata => idata,
          odata => k2_1_776,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_776
    phi_stmt_780: Block -- phi operator 
      signal idata: std_logic_vector(63 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= k1_2_749_782_buffered & k3_2_839_783_buffered;
      req <= phi_stmt_780_req_0 & phi_stmt_780_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_780",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 32) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_780_ack_0,
          idata => idata,
          odata => k2_2_780,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_780
    phi_stmt_784: Block -- phi operator 
      signal idata: std_logic_vector(63 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= k1_3_749_786_buffered & k3_3_839_787_buffered;
      req <= phi_stmt_784_req_0 & phi_stmt_784_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_784",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 32) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_784_ack_0,
          idata => idata,
          odata => k2_3_784,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_784
    slice_718_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_718_inst_req_0;
      slice_718_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_718_inst_req_1;
      slice_718_inst_ack_1<= update_ack(0);
      slice_718_inst: SliceSplitProtocol generic map(name => "slice_718_inst", in_data_width => 128, high_index => 127, low_index => 96, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => text_715, dout => w0_0_719, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_722_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_722_inst_req_0;
      slice_722_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_722_inst_req_1;
      slice_722_inst_ack_1<= update_ack(0);
      slice_722_inst: SliceSplitProtocol generic map(name => "slice_722_inst", in_data_width => 128, high_index => 95, low_index => 64, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => text_715, dout => w0_1_723, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_726_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_726_inst_req_0;
      slice_726_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_726_inst_req_1;
      slice_726_inst_ack_1<= update_ack(0);
      slice_726_inst: SliceSplitProtocol generic map(name => "slice_726_inst", in_data_width => 128, high_index => 63, low_index => 32, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => text_715, dout => w0_2_727, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_730_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_730_inst_req_0;
      slice_730_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_730_inst_req_1;
      slice_730_inst_ack_1<= update_ack(0);
      slice_730_inst: SliceSplitProtocol generic map(name => "slice_730_inst", in_data_width => 128, high_index => 31, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => text_715, dout => w0_3_731, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    W_text_713_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_text_713_inst_req_0;
      W_text_713_inst_ack_0<= wack(0);
      rreq(0) <= W_text_713_inst_req_1;
      W_text_713_inst_ack_1<= rack(0);
      W_text_713_inst : InterlockBuffer generic map ( -- 
        name => "W_text_713_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 128,
        out_data_width => 128,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => counter_buffer,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => text_715,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    k1_0_749_774_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= k1_0_749_774_buf_req_0;
      k1_0_749_774_buf_ack_0<= wack(0);
      rreq(0) <= k1_0_749_774_buf_req_1;
      k1_0_749_774_buf_ack_1<= rack(0);
      k1_0_749_774_buf : InterlockBuffer generic map ( -- 
        name => "k1_0_749_774_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => k1_0_749,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => k1_0_749_774_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    k1_1_749_778_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= k1_1_749_778_buf_req_0;
      k1_1_749_778_buf_ack_0<= wack(0);
      rreq(0) <= k1_1_749_778_buf_req_1;
      k1_1_749_778_buf_ack_1<= rack(0);
      k1_1_749_778_buf : InterlockBuffer generic map ( -- 
        name => "k1_1_749_778_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => k1_1_749,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => k1_1_749_778_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    k1_2_749_782_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= k1_2_749_782_buf_req_0;
      k1_2_749_782_buf_ack_0<= wack(0);
      rreq(0) <= k1_2_749_782_buf_req_1;
      k1_2_749_782_buf_ack_1<= rack(0);
      k1_2_749_782_buf : InterlockBuffer generic map ( -- 
        name => "k1_2_749_782_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => k1_2_749,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => k1_2_749_782_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    k1_3_749_786_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= k1_3_749_786_buf_req_0;
      k1_3_749_786_buf_ack_0<= wack(0);
      rreq(0) <= k1_3_749_786_buf_req_1;
      k1_3_749_786_buf_ack_1<= rack(0);
      k1_3_749_786_buf : InterlockBuffer generic map ( -- 
        name => "k1_3_749_786_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => k1_3_749,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => k1_3_749_786_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    k3_0_839_775_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= k3_0_839_775_buf_req_0;
      k3_0_839_775_buf_ack_0<= wack(0);
      rreq(0) <= k3_0_839_775_buf_req_1;
      k3_0_839_775_buf_ack_1<= rack(0);
      k3_0_839_775_buf : InterlockBuffer generic map ( -- 
        name => "k3_0_839_775_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => k3_0_839,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => k3_0_839_775_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    k3_1_839_779_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= k3_1_839_779_buf_req_0;
      k3_1_839_779_buf_ack_0<= wack(0);
      rreq(0) <= k3_1_839_779_buf_req_1;
      k3_1_839_779_buf_ack_1<= rack(0);
      k3_1_839_779_buf : InterlockBuffer generic map ( -- 
        name => "k3_1_839_779_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => k3_1_839,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => k3_1_839_779_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    k3_2_839_783_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= k3_2_839_783_buf_req_0;
      k3_2_839_783_buf_ack_0<= wack(0);
      rreq(0) <= k3_2_839_783_buf_req_1;
      k3_2_839_783_buf_ack_1<= rack(0);
      k3_2_839_783_buf : InterlockBuffer generic map ( -- 
        name => "k3_2_839_783_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => k3_2_839,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => k3_2_839_783_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    k3_3_839_787_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= k3_3_839_787_buf_req_0;
      k3_3_839_787_buf_ack_0<= wack(0);
      rreq(0) <= k3_3_839_787_buf_req_1;
      k3_3_839_787_buf_ack_1<= rack(0);
      k3_3_839_787_buf : InterlockBuffer generic map ( -- 
        name => "k3_3_839_787_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => k3_3_839,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => k3_3_839_787_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    lw4_0_839_759_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= lw4_0_839_759_buf_req_0;
      lw4_0_839_759_buf_ack_0<= wack(0);
      rreq(0) <= lw4_0_839_759_buf_req_1;
      lw4_0_839_759_buf_ack_1<= rack(0);
      lw4_0_839_759_buf : InterlockBuffer generic map ( -- 
        name => "lw4_0_839_759_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => lw4_0_839,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => lw4_0_839_759_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    lw4_1_839_763_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= lw4_1_839_763_buf_req_0;
      lw4_1_839_763_buf_ack_0<= wack(0);
      rreq(0) <= lw4_1_839_763_buf_req_1;
      lw4_1_839_763_buf_ack_1<= rack(0);
      lw4_1_839_763_buf : InterlockBuffer generic map ( -- 
        name => "lw4_1_839_763_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => lw4_1_839,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => lw4_1_839_763_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    lw4_2_839_767_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= lw4_2_839_767_buf_req_0;
      lw4_2_839_767_buf_ack_0<= wack(0);
      rreq(0) <= lw4_2_839_767_buf_req_1;
      lw4_2_839_767_buf_ack_1<= rack(0);
      lw4_2_839_767_buf : InterlockBuffer generic map ( -- 
        name => "lw4_2_839_767_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => lw4_2_839,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => lw4_2_839_767_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    lw4_3_839_771_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= lw4_3_839_771_buf_req_0;
      lw4_3_839_771_buf_ack_0<= wack(0);
      rreq(0) <= lw4_3_839_771_buf_req_1;
      lw4_3_839_771_buf_ack_1<= rack(0);
      lw4_3_839_771_buf : InterlockBuffer generic map ( -- 
        name => "lw4_3_839_771_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => lw4_3_839,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => lw4_3_839_771_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    roundnxt_848_755_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= roundnxt_848_755_buf_req_0;
      roundnxt_848_755_buf_ack_0<= wack(0);
      rreq(0) <= roundnxt_848_755_buf_req_1;
      roundnxt_848_755_buf_ack_1<= rack(0);
      roundnxt_848_755_buf : InterlockBuffer generic map ( -- 
        name => "roundnxt_848_755_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => roundnxt_848,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => roundnxt_848_755_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    w1_0_749_758_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= w1_0_749_758_buf_req_0;
      w1_0_749_758_buf_ack_0<= wack(0);
      rreq(0) <= w1_0_749_758_buf_req_1;
      w1_0_749_758_buf_ack_1<= rack(0);
      w1_0_749_758_buf : InterlockBuffer generic map ( -- 
        name => "w1_0_749_758_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => w1_0_749,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => w1_0_749_758_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    w1_1_749_762_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= w1_1_749_762_buf_req_0;
      w1_1_749_762_buf_ack_0<= wack(0);
      rreq(0) <= w1_1_749_762_buf_req_1;
      w1_1_749_762_buf_ack_1<= rack(0);
      w1_1_749_762_buf : InterlockBuffer generic map ( -- 
        name => "w1_1_749_762_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => w1_1_749,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => w1_1_749_762_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    w1_2_749_766_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= w1_2_749_766_buf_req_0;
      w1_2_749_766_buf_ack_0<= wack(0);
      rreq(0) <= w1_2_749_766_buf_req_1;
      w1_2_749_766_buf_ack_1<= rack(0);
      w1_2_749_766_buf : InterlockBuffer generic map ( -- 
        name => "w1_2_749_766_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => w1_2_749,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => w1_2_749_766_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    w1_3_749_770_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= w1_3_749_770_buf_req_0;
      w1_3_749_770_buf_ack_0<= wack(0);
      rreq(0) <= w1_3_749_770_buf_req_1;
      w1_3_749_770_buf_ack_1<= rack(0);
      w1_3_749_770_buf : InterlockBuffer generic map ( -- 
        name => "w1_3_749_770_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => w1_3_749,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => w1_3_749_770_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    if_stmt_840_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= ULT_u8_u1_843_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_840_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_840_branch_req_0,
          ack0 => if_stmt_840_branch_ack_0,
          ack1 => if_stmt_840_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- shared split operator group (0) : ADD_u8_u8_847_inst 
    ApIntAdd_group_0: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= roundnum_752;
      roundnxt_848 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= ADD_u8_u8_847_inst_req_0;
      ADD_u8_u8_847_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= ADD_u8_u8_847_inst_req_1;
      ADD_u8_u8_847_inst_ack_1 <= ackR_unguarded(0);
      ApIntAdd_group_0_gI: SplitGuardInterface generic map(name => "ApIntAdd_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          name => "ApIntAdd_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "00000001",
          constant_width => 8,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- binary operator ULT_u8_u1_843_inst
    process(roundnum_752) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(roundnum_752, konst_842_wire_constant, tmp_var);
      ULT_u8_u1_843_wire <= tmp_var; --
    end process;
    -- shared call operator group (0) : call_stmt_749_call call_stmt_839_call call_stmt_890_call 
    add_round_key_call_group_0: Block -- 
      signal data_in: std_logic_vector(791 downto 0);
      signal data_out: std_logic_vector(767 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 2 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 2 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 2 downto 0);
      signal guard_vector : std_logic_vector( 2 downto 0);
      constant inBUFs : IntegerArray(2 downto 0) := (2 => 1, 1 => 1, 0 => 1);
      constant outBUFs : IntegerArray(2 downto 0) := (2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(2 downto 0) := (0 => false, 1 => false, 2 => false);
      constant guardBuffering: IntegerArray(2 downto 0)  := (0 => 2, 1 => 2, 2 => 2);
      -- 
    begin -- 
      reqL_unguarded(2) <= call_stmt_749_call_req_0;
      reqL_unguarded(1) <= call_stmt_839_call_req_0;
      reqL_unguarded(0) <= call_stmt_890_call_req_0;
      call_stmt_749_call_ack_0 <= ackL_unguarded(2);
      call_stmt_839_call_ack_0 <= ackL_unguarded(1);
      call_stmt_890_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(2) <= call_stmt_749_call_req_1;
      reqR_unguarded(1) <= call_stmt_839_call_req_1;
      reqR_unguarded(0) <= call_stmt_890_call_req_1;
      call_stmt_749_call_ack_1 <= ackR_unguarded(2);
      call_stmt_839_call_ack_1 <= ackR_unguarded(1);
      call_stmt_890_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      add_round_key_call_group_0_accessRegulator_0: access_regulator_base generic map (name => "add_round_key_call_group_0_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      add_round_key_call_group_0_accessRegulator_1: access_regulator_base generic map (name => "add_round_key_call_group_0_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      add_round_key_call_group_0_accessRegulator_2: access_regulator_base generic map (name => "add_round_key_call_group_0_accessRegulator_2", num_slots => 1) -- 
        port map (req => reqL_unregulated(2), -- 
          ack => ackL_unregulated(2),
          regulated_req => reqL(2),
          regulated_ack => ackL(2),
          release_req => reqR(2),
          release_ack => ackR(2),
          clk => clk, reset => reset); -- 
      add_round_key_call_group_0_gI: SplitGuardInterface generic map(name => "add_round_key_call_group_0_gI", nreqs => 3, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= k0_0_buffer & k0_1_buffer & k0_2_buffer & k0_3_buffer & w0_0_719 & w0_1_723 & w0_2_727 & w0_3_731 & R_zero_740_wire_constant & k2_0_772 & k2_1_776 & k2_2_780 & k2_3_784 & lw3_0_812 & lw3_1_815 & lw3_2_818 & lw3_3_821 & roundnum_752 & k3_0_839 & k3_1_839 & k3_2_839 & k3_3_839 & lw6_0_872 & lw6_1_872 & lw6_2_872 & lw6_3_872 & R_zero_881_wire_constant;
      k1_0_749 <= data_out(767 downto 736);
      k1_1_749 <= data_out(735 downto 704);
      k1_2_749 <= data_out(703 downto 672);
      k1_3_749 <= data_out(671 downto 640);
      w1_0_749 <= data_out(639 downto 608);
      w1_1_749 <= data_out(607 downto 576);
      w1_2_749 <= data_out(575 downto 544);
      w1_3_749 <= data_out(543 downto 512);
      k3_0_839 <= data_out(511 downto 480);
      k3_1_839 <= data_out(479 downto 448);
      k3_2_839 <= data_out(447 downto 416);
      k3_3_839 <= data_out(415 downto 384);
      lw4_0_839 <= data_out(383 downto 352);
      lw4_1_839 <= data_out(351 downto 320);
      lw4_2_839 <= data_out(319 downto 288);
      lw4_3_839 <= data_out(287 downto 256);
      k4_0_890 <= data_out(255 downto 224);
      k4_1_890 <= data_out(223 downto 192);
      k4_2_890 <= data_out(191 downto 160);
      k4_3_890 <= data_out(159 downto 128);
      lw7_0_buffer <= data_out(127 downto 96);
      lw7_1_buffer <= data_out(95 downto 64);
      lw7_2_buffer <= data_out(63 downto 32);
      lw7_3_buffer <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 792,
        owidth => 264,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 2,
        nreqs => 3,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => add_round_key_call_reqs(0),
          ackR => add_round_key_call_acks(0),
          dataR => add_round_key_call_data(263 downto 0),
          tagR => add_round_key_call_tag(1 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 256,
          owidth => 768,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 2,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 3) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => add_round_key_return_acks(0), -- cross-over
          ackL => add_round_key_return_reqs(0), -- cross-over
          dataL => add_round_key_return_data(255 downto 0),
          tagL => add_round_key_return_tag(1 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- shared call operator group (1) : call_stmt_791_call call_stmt_794_call call_stmt_797_call call_stmt_800_call call_stmt_854_call call_stmt_857_call call_stmt_860_call call_stmt_863_call 
    sbox_transformation_call_group_1: Block -- 
      signal data_in: std_logic_vector(255 downto 0);
      signal data_out: std_logic_vector(255 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 7 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 7 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 7 downto 0);
      signal guard_vector : std_logic_vector( 7 downto 0);
      constant inBUFs : IntegerArray(7 downto 0) := (7 => 1, 6 => 1, 5 => 1, 4 => 1, 3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant outBUFs : IntegerArray(7 downto 0) := (7 => 1, 6 => 1, 5 => 1, 4 => 1, 3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(7 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false, 4 => false, 5 => false, 6 => false, 7 => false);
      constant guardBuffering: IntegerArray(7 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2, 4 => 2, 5 => 2, 6 => 2, 7 => 2);
      -- 
    begin -- 
      reqL_unguarded(7) <= call_stmt_791_call_req_0;
      reqL_unguarded(6) <= call_stmt_794_call_req_0;
      reqL_unguarded(5) <= call_stmt_797_call_req_0;
      reqL_unguarded(4) <= call_stmt_800_call_req_0;
      reqL_unguarded(3) <= call_stmt_854_call_req_0;
      reqL_unguarded(2) <= call_stmt_857_call_req_0;
      reqL_unguarded(1) <= call_stmt_860_call_req_0;
      reqL_unguarded(0) <= call_stmt_863_call_req_0;
      call_stmt_791_call_ack_0 <= ackL_unguarded(7);
      call_stmt_794_call_ack_0 <= ackL_unguarded(6);
      call_stmt_797_call_ack_0 <= ackL_unguarded(5);
      call_stmt_800_call_ack_0 <= ackL_unguarded(4);
      call_stmt_854_call_ack_0 <= ackL_unguarded(3);
      call_stmt_857_call_ack_0 <= ackL_unguarded(2);
      call_stmt_860_call_ack_0 <= ackL_unguarded(1);
      call_stmt_863_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(7) <= call_stmt_791_call_req_1;
      reqR_unguarded(6) <= call_stmt_794_call_req_1;
      reqR_unguarded(5) <= call_stmt_797_call_req_1;
      reqR_unguarded(4) <= call_stmt_800_call_req_1;
      reqR_unguarded(3) <= call_stmt_854_call_req_1;
      reqR_unguarded(2) <= call_stmt_857_call_req_1;
      reqR_unguarded(1) <= call_stmt_860_call_req_1;
      reqR_unguarded(0) <= call_stmt_863_call_req_1;
      call_stmt_791_call_ack_1 <= ackR_unguarded(7);
      call_stmt_794_call_ack_1 <= ackR_unguarded(6);
      call_stmt_797_call_ack_1 <= ackR_unguarded(5);
      call_stmt_800_call_ack_1 <= ackR_unguarded(4);
      call_stmt_854_call_ack_1 <= ackR_unguarded(3);
      call_stmt_857_call_ack_1 <= ackR_unguarded(2);
      call_stmt_860_call_ack_1 <= ackR_unguarded(1);
      call_stmt_863_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      guard_vector(4)  <=  '1';
      guard_vector(5)  <=  '1';
      guard_vector(6)  <=  '1';
      guard_vector(7)  <=  '1';
      sbox_transformation_call_group_1_accessRegulator_0: access_regulator_base generic map (name => "sbox_transformation_call_group_1_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      sbox_transformation_call_group_1_accessRegulator_1: access_regulator_base generic map (name => "sbox_transformation_call_group_1_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      sbox_transformation_call_group_1_accessRegulator_2: access_regulator_base generic map (name => "sbox_transformation_call_group_1_accessRegulator_2", num_slots => 1) -- 
        port map (req => reqL_unregulated(2), -- 
          ack => ackL_unregulated(2),
          regulated_req => reqL(2),
          regulated_ack => ackL(2),
          release_req => reqR(2),
          release_ack => ackR(2),
          clk => clk, reset => reset); -- 
      sbox_transformation_call_group_1_accessRegulator_3: access_regulator_base generic map (name => "sbox_transformation_call_group_1_accessRegulator_3", num_slots => 1) -- 
        port map (req => reqL_unregulated(3), -- 
          ack => ackL_unregulated(3),
          regulated_req => reqL(3),
          regulated_ack => ackL(3),
          release_req => reqR(3),
          release_ack => ackR(3),
          clk => clk, reset => reset); -- 
      sbox_transformation_call_group_1_accessRegulator_4: access_regulator_base generic map (name => "sbox_transformation_call_group_1_accessRegulator_4", num_slots => 1) -- 
        port map (req => reqL_unregulated(4), -- 
          ack => ackL_unregulated(4),
          regulated_req => reqL(4),
          regulated_ack => ackL(4),
          release_req => reqR(4),
          release_ack => ackR(4),
          clk => clk, reset => reset); -- 
      sbox_transformation_call_group_1_accessRegulator_5: access_regulator_base generic map (name => "sbox_transformation_call_group_1_accessRegulator_5", num_slots => 1) -- 
        port map (req => reqL_unregulated(5), -- 
          ack => ackL_unregulated(5),
          regulated_req => reqL(5),
          regulated_ack => ackL(5),
          release_req => reqR(5),
          release_ack => ackR(5),
          clk => clk, reset => reset); -- 
      sbox_transformation_call_group_1_accessRegulator_6: access_regulator_base generic map (name => "sbox_transformation_call_group_1_accessRegulator_6", num_slots => 1) -- 
        port map (req => reqL_unregulated(6), -- 
          ack => ackL_unregulated(6),
          regulated_req => reqL(6),
          regulated_ack => ackL(6),
          release_req => reqR(6),
          release_ack => ackR(6),
          clk => clk, reset => reset); -- 
      sbox_transformation_call_group_1_accessRegulator_7: access_regulator_base generic map (name => "sbox_transformation_call_group_1_accessRegulator_7", num_slots => 1) -- 
        port map (req => reqL_unregulated(7), -- 
          ack => ackL_unregulated(7),
          regulated_req => reqL(7),
          regulated_ack => ackL(7),
          release_req => reqR(7),
          release_ack => ackR(7),
          clk => clk, reset => reset); -- 
      sbox_transformation_call_group_1_gI: SplitGuardInterface generic map(name => "sbox_transformation_call_group_1_gI", nreqs => 8, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= state_0_756 & state_1_760 & state_2_764 & state_3_768 & lw4_0_839 & lw4_1_839 & lw4_2_839 & lw4_3_839;
      lw1_0_791 <= data_out(255 downto 224);
      lw1_1_794 <= data_out(223 downto 192);
      lw1_2_797 <= data_out(191 downto 160);
      lw1_3_800 <= data_out(159 downto 128);
      lw5_0_854 <= data_out(127 downto 96);
      lw5_1_857 <= data_out(95 downto 64);
      lw5_2_860 <= data_out(63 downto 32);
      lw5_3_863 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 256,
        owidth => 32,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 4,
        nreqs => 8,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => sbox_transformation_call_reqs(0),
          ackR => sbox_transformation_call_acks(0),
          dataR => sbox_transformation_call_data(31 downto 0),
          tagR => sbox_transformation_call_tag(3 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 32,
          owidth => 256,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 4,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 8) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => sbox_transformation_return_acks(0), -- cross-over
          ackL => sbox_transformation_return_reqs(0), -- cross-over
          dataL => sbox_transformation_return_data(31 downto 0),
          tagL => sbox_transformation_return_tag(3 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 1
    -- shared call operator group (2) : call_stmt_809_call call_stmt_872_call 
    shift_row_call_group_2: Block -- 
      signal data_in: std_logic_vector(255 downto 0);
      signal data_out: std_logic_vector(255 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 1 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 1 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 1 downto 0);
      signal guard_vector : std_logic_vector( 1 downto 0);
      constant inBUFs : IntegerArray(1 downto 0) := (1 => 1, 0 => 1);
      constant outBUFs : IntegerArray(1 downto 0) := (1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(1 downto 0) := (0 => false, 1 => false);
      constant guardBuffering: IntegerArray(1 downto 0)  := (0 => 2, 1 => 2);
      -- 
    begin -- 
      reqL_unguarded(1) <= call_stmt_809_call_req_0;
      reqL_unguarded(0) <= call_stmt_872_call_req_0;
      call_stmt_809_call_ack_0 <= ackL_unguarded(1);
      call_stmt_872_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(1) <= call_stmt_809_call_req_1;
      reqR_unguarded(0) <= call_stmt_872_call_req_1;
      call_stmt_809_call_ack_1 <= ackR_unguarded(1);
      call_stmt_872_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      shift_row_call_group_2_accessRegulator_0: access_regulator_base generic map (name => "shift_row_call_group_2_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      shift_row_call_group_2_accessRegulator_1: access_regulator_base generic map (name => "shift_row_call_group_2_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      shift_row_call_group_2_gI: SplitGuardInterface generic map(name => "shift_row_call_group_2_gI", nreqs => 2, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= lw1_0_791 & lw1_1_794 & lw1_2_797 & lw1_3_800 & lw5_0_854 & lw5_1_857 & lw5_2_860 & lw5_3_863;
      lw2_0_809 <= data_out(255 downto 224);
      lw2_1_809 <= data_out(223 downto 192);
      lw2_2_809 <= data_out(191 downto 160);
      lw2_3_809 <= data_out(159 downto 128);
      lw6_0_872 <= data_out(127 downto 96);
      lw6_1_872 <= data_out(95 downto 64);
      lw6_2_872 <= data_out(63 downto 32);
      lw6_3_872 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 256,
        owidth => 128,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 2,
        nreqs => 2,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => shift_row_call_reqs(0),
          ackR => shift_row_call_acks(0),
          dataR => shift_row_call_data(127 downto 0),
          tagR => shift_row_call_tag(1 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 128,
          owidth => 256,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 2,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 2) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => shift_row_return_acks(0), -- cross-over
          ackL => shift_row_return_reqs(0), -- cross-over
          dataL => shift_row_return_data(127 downto 0),
          tagL => shift_row_return_tag(1 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 2
    -- shared call operator group (3) : call_stmt_812_call call_stmt_815_call call_stmt_818_call call_stmt_821_call 
    mix_column_call_group_3: Block -- 
      signal data_in: std_logic_vector(127 downto 0);
      signal data_out: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 3 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 3 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant inBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant outBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2);
      -- 
    begin -- 
      reqL_unguarded(3) <= call_stmt_812_call_req_0;
      reqL_unguarded(2) <= call_stmt_815_call_req_0;
      reqL_unguarded(1) <= call_stmt_818_call_req_0;
      reqL_unguarded(0) <= call_stmt_821_call_req_0;
      call_stmt_812_call_ack_0 <= ackL_unguarded(3);
      call_stmt_815_call_ack_0 <= ackL_unguarded(2);
      call_stmt_818_call_ack_0 <= ackL_unguarded(1);
      call_stmt_821_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(3) <= call_stmt_812_call_req_1;
      reqR_unguarded(2) <= call_stmt_815_call_req_1;
      reqR_unguarded(1) <= call_stmt_818_call_req_1;
      reqR_unguarded(0) <= call_stmt_821_call_req_1;
      call_stmt_812_call_ack_1 <= ackR_unguarded(3);
      call_stmt_815_call_ack_1 <= ackR_unguarded(2);
      call_stmt_818_call_ack_1 <= ackR_unguarded(1);
      call_stmt_821_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      mix_column_call_group_3_accessRegulator_0: access_regulator_base generic map (name => "mix_column_call_group_3_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      mix_column_call_group_3_accessRegulator_1: access_regulator_base generic map (name => "mix_column_call_group_3_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      mix_column_call_group_3_accessRegulator_2: access_regulator_base generic map (name => "mix_column_call_group_3_accessRegulator_2", num_slots => 1) -- 
        port map (req => reqL_unregulated(2), -- 
          ack => ackL_unregulated(2),
          regulated_req => reqL(2),
          regulated_ack => ackL(2),
          release_req => reqR(2),
          release_ack => ackR(2),
          clk => clk, reset => reset); -- 
      mix_column_call_group_3_accessRegulator_3: access_regulator_base generic map (name => "mix_column_call_group_3_accessRegulator_3", num_slots => 1) -- 
        port map (req => reqL_unregulated(3), -- 
          ack => ackL_unregulated(3),
          regulated_req => reqL(3),
          regulated_ack => ackL(3),
          release_req => reqR(3),
          release_ack => ackR(3),
          clk => clk, reset => reset); -- 
      mix_column_call_group_3_gI: SplitGuardInterface generic map(name => "mix_column_call_group_3_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= lw2_0_809 & lw2_1_809 & lw2_2_809 & lw2_3_809;
      lw3_0_812 <= data_out(127 downto 96);
      lw3_1_815 <= data_out(95 downto 64);
      lw3_2_818 <= data_out(63 downto 32);
      lw3_3_821 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 128,
        owidth => 32,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 3,
        nreqs => 4,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => mix_column_call_reqs(0),
          ackR => mix_column_call_acks(0),
          dataR => mix_column_call_data(31 downto 0),
          tagR => mix_column_call_tag(2 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 32,
          owidth => 128,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 3,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 4) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => mix_column_return_acks(0), -- cross-over
          ackL => mix_column_return_reqs(0), -- cross-over
          dataL => mix_column_return_data(31 downto 0),
          tagL => mix_column_return_tag(2 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 3
    -- 
  end Block; -- data_path
  -- 
end counter_encry_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity decryption_engine is -- 
  generic (tag_length : integer); 
  port ( -- 
    a0_0 : in  std_logic_vector(31 downto 0);
    a0_1 : in  std_logic_vector(31 downto 0);
    a0_2 : in  std_logic_vector(31 downto 0);
    a0_3 : in  std_logic_vector(31 downto 0);
    decry_counter : in  std_logic_vector(127 downto 0);
    memory_space_0_sr_req : out  std_logic_vector(0 downto 0);
    memory_space_0_sr_ack : in   std_logic_vector(0 downto 0);
    memory_space_0_sr_addr : out  std_logic_vector(0 downto 0);
    memory_space_0_sr_data : out  std_logic_vector(0 downto 0);
    memory_space_0_sr_tag :  out  std_logic_vector(18 downto 0);
    memory_space_0_sc_req : out  std_logic_vector(0 downto 0);
    memory_space_0_sc_ack : in   std_logic_vector(0 downto 0);
    memory_space_0_sc_tag :  in  std_logic_vector(1 downto 0);
    input_d_pipe_read_req : out  std_logic_vector(0 downto 0);
    input_d_pipe_read_ack : in   std_logic_vector(0 downto 0);
    input_d_pipe_read_data : in   std_logic_vector(7 downto 0);
    out_d_pipe_write_req : out  std_logic_vector(0 downto 0);
    out_d_pipe_write_ack : in   std_logic_vector(0 downto 0);
    out_d_pipe_write_data : out  std_logic_vector(7 downto 0);
    checksum_calculation_call_reqs : out  std_logic_vector(0 downto 0);
    checksum_calculation_call_acks : in   std_logic_vector(0 downto 0);
    checksum_calculation_call_data : out  std_logic_vector(111 downto 0);
    checksum_calculation_call_tag  :  out  std_logic_vector(0 downto 0);
    checksum_calculation_return_reqs : out  std_logic_vector(0 downto 0);
    checksum_calculation_return_acks : in   std_logic_vector(0 downto 0);
    checksum_calculation_return_data : in   std_logic_vector(15 downto 0);
    checksum_calculation_return_tag :  in   std_logic_vector(0 downto 0);
    counter_encry_call_reqs : out  std_logic_vector(0 downto 0);
    counter_encry_call_acks : in   std_logic_vector(0 downto 0);
    counter_encry_call_data : out  std_logic_vector(255 downto 0);
    counter_encry_call_tag  :  out  std_logic_vector(0 downto 0);
    counter_encry_return_reqs : out  std_logic_vector(0 downto 0);
    counter_encry_return_acks : in   std_logic_vector(0 downto 0);
    counter_encry_return_data : in   std_logic_vector(127 downto 0);
    counter_encry_return_tag :  in   std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity decryption_engine;
architecture decryption_engine_arch of decryption_engine is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 256)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal a0_0_buffer :  std_logic_vector(31 downto 0);
  signal a0_0_update_enable: Boolean;
  signal a0_1_buffer :  std_logic_vector(31 downto 0);
  signal a0_1_update_enable: Boolean;
  signal a0_2_buffer :  std_logic_vector(31 downto 0);
  signal a0_2_update_enable: Boolean;
  signal a0_3_buffer :  std_logic_vector(31 downto 0);
  signal a0_3_update_enable: Boolean;
  signal decry_counter_buffer :  std_logic_vector(127 downto 0);
  signal decry_counter_update_enable: Boolean;
  -- output port buffer signals
  signal decryption_engine_CP_2836_start: Boolean;
  signal decryption_engine_CP_2836_symbol: Boolean;
  -- volatile/operator module components. 
  component checksum_calculation is -- 
    generic (tag_length : integer); 
    port ( -- 
      m_0 : in  std_logic_vector(7 downto 0);
      m_1 : in  std_logic_vector(7 downto 0);
      m_2 : in  std_logic_vector(7 downto 0);
      m_3 : in  std_logic_vector(7 downto 0);
      m_4 : in  std_logic_vector(7 downto 0);
      m_5 : in  std_logic_vector(7 downto 0);
      m_6 : in  std_logic_vector(7 downto 0);
      m_7 : in  std_logic_vector(7 downto 0);
      m_8 : in  std_logic_vector(7 downto 0);
      m_9 : in  std_logic_vector(7 downto 0);
      m_10 : in  std_logic_vector(7 downto 0);
      m_11 : in  std_logic_vector(7 downto 0);
      m_12 : in  std_logic_vector(7 downto 0);
      m_13 : in  std_logic_vector(7 downto 0);
      m_14 : out  std_logic_vector(7 downto 0);
      m_15 : out  std_logic_vector(7 downto 0);
      checksum_call_reqs : out  std_logic_vector(0 downto 0);
      checksum_call_acks : in   std_logic_vector(0 downto 0);
      checksum_call_data : out  std_logic_vector(7 downto 0);
      checksum_call_tag  :  out  std_logic_vector(3 downto 0);
      checksum_return_reqs : out  std_logic_vector(0 downto 0);
      checksum_return_acks : in   std_logic_vector(0 downto 0);
      checksum_return_data : in   std_logic_vector(0 downto 0);
      checksum_return_tag :  in   std_logic_vector(3 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component counter_encry is -- 
    generic (tag_length : integer); 
    port ( -- 
      k0_0 : in  std_logic_vector(31 downto 0);
      k0_1 : in  std_logic_vector(31 downto 0);
      k0_2 : in  std_logic_vector(31 downto 0);
      k0_3 : in  std_logic_vector(31 downto 0);
      counter : in  std_logic_vector(127 downto 0);
      lw7_0 : out  std_logic_vector(31 downto 0);
      lw7_1 : out  std_logic_vector(31 downto 0);
      lw7_2 : out  std_logic_vector(31 downto 0);
      lw7_3 : out  std_logic_vector(31 downto 0);
      add_round_key_call_reqs : out  std_logic_vector(0 downto 0);
      add_round_key_call_acks : in   std_logic_vector(0 downto 0);
      add_round_key_call_data : out  std_logic_vector(263 downto 0);
      add_round_key_call_tag  :  out  std_logic_vector(1 downto 0);
      add_round_key_return_reqs : out  std_logic_vector(0 downto 0);
      add_round_key_return_acks : in   std_logic_vector(0 downto 0);
      add_round_key_return_data : in   std_logic_vector(255 downto 0);
      add_round_key_return_tag :  in   std_logic_vector(1 downto 0);
      shift_row_call_reqs : out  std_logic_vector(0 downto 0);
      shift_row_call_acks : in   std_logic_vector(0 downto 0);
      shift_row_call_data : out  std_logic_vector(127 downto 0);
      shift_row_call_tag  :  out  std_logic_vector(1 downto 0);
      shift_row_return_reqs : out  std_logic_vector(0 downto 0);
      shift_row_return_acks : in   std_logic_vector(0 downto 0);
      shift_row_return_data : in   std_logic_vector(127 downto 0);
      shift_row_return_tag :  in   std_logic_vector(1 downto 0);
      mix_column_call_reqs : out  std_logic_vector(0 downto 0);
      mix_column_call_acks : in   std_logic_vector(0 downto 0);
      mix_column_call_data : out  std_logic_vector(31 downto 0);
      mix_column_call_tag  :  out  std_logic_vector(2 downto 0);
      mix_column_return_reqs : out  std_logic_vector(0 downto 0);
      mix_column_return_acks : in   std_logic_vector(0 downto 0);
      mix_column_return_data : in   std_logic_vector(31 downto 0);
      mix_column_return_tag :  in   std_logic_vector(2 downto 0);
      sbox_transformation_call_reqs : out  std_logic_vector(0 downto 0);
      sbox_transformation_call_acks : in   std_logic_vector(0 downto 0);
      sbox_transformation_call_data : out  std_logic_vector(31 downto 0);
      sbox_transformation_call_tag  :  out  std_logic_vector(3 downto 0);
      sbox_transformation_return_reqs : out  std_logic_vector(0 downto 0);
      sbox_transformation_return_acks : in   std_logic_vector(0 downto 0);
      sbox_transformation_return_data : in   std_logic_vector(31 downto 0);
      sbox_transformation_return_tag :  in   std_logic_vector(3 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal RPIPE_input_d_922_inst_ack_1 : boolean;
  signal RPIPE_input_d_928_inst_req_1 : boolean;
  signal RPIPE_input_d_928_inst_ack_1 : boolean;
  signal RPIPE_input_d_922_inst_req_0 : boolean;
  signal RPIPE_input_d_925_inst_ack_0 : boolean;
  signal RPIPE_input_d_925_inst_req_1 : boolean;
  signal RPIPE_input_d_925_inst_ack_1 : boolean;
  signal RPIPE_input_d_922_inst_req_1 : boolean;
  signal RPIPE_input_d_928_inst_req_0 : boolean;
  signal RPIPE_input_d_928_inst_ack_0 : boolean;
  signal RPIPE_input_d_922_inst_ack_0 : boolean;
  signal RPIPE_input_d_931_inst_req_1 : boolean;
  signal RPIPE_input_d_931_inst_ack_1 : boolean;
  signal RPIPE_input_d_931_inst_req_0 : boolean;
  signal RPIPE_input_d_925_inst_req_0 : boolean;
  signal RPIPE_input_d_931_inst_ack_0 : boolean;
  signal if_stmt_1181_branch_req_0 : boolean;
  signal decry_counter_902_buf_ack_0 : boolean;
  signal if_stmt_1181_branch_ack_0 : boolean;
  signal STORE_check_1190_store_0_req_1 : boolean;
  signal phi_stmt_900_req_1 : boolean;
  signal counter_nxt_1170_903_buf_req_0 : boolean;
  signal counter_nxt_1170_903_buf_ack_0 : boolean;
  signal decry_counter_902_buf_req_0 : boolean;
  signal if_stmt_1181_branch_ack_1 : boolean;
  signal counter_nxt_1170_903_buf_req_1 : boolean;
  signal STORE_check_1190_store_0_req_0 : boolean;
  signal STORE_check_1190_store_0_ack_0 : boolean;
  signal STORE_check_1185_store_0_req_0 : boolean;
  signal counter_nxt_1170_903_buf_ack_1 : boolean;
  signal STORE_check_1185_store_0_ack_0 : boolean;
  signal STORE_check_1185_store_0_req_1 : boolean;
  signal STORE_check_1190_store_0_ack_1 : boolean;
  signal phi_stmt_900_ack_0 : boolean;
  signal decry_counter_902_buf_ack_1 : boolean;
  signal phi_stmt_900_req_0 : boolean;
  signal decry_counter_902_buf_req_1 : boolean;
  signal STORE_check_1185_store_0_ack_1 : boolean;
  signal call_stmt_914_call_req_0 : boolean;
  signal call_stmt_914_call_ack_0 : boolean;
  signal call_stmt_914_call_req_1 : boolean;
  signal call_stmt_914_call_ack_1 : boolean;
  signal RPIPE_input_d_916_inst_req_0 : boolean;
  signal RPIPE_input_d_916_inst_ack_0 : boolean;
  signal RPIPE_input_d_916_inst_req_1 : boolean;
  signal RPIPE_input_d_916_inst_ack_1 : boolean;
  signal RPIPE_input_d_919_inst_req_0 : boolean;
  signal RPIPE_input_d_919_inst_ack_0 : boolean;
  signal RPIPE_input_d_919_inst_req_1 : boolean;
  signal RPIPE_input_d_919_inst_ack_1 : boolean;
  signal RPIPE_input_d_934_inst_req_0 : boolean;
  signal RPIPE_input_d_934_inst_ack_0 : boolean;
  signal RPIPE_input_d_934_inst_req_1 : boolean;
  signal RPIPE_input_d_934_inst_ack_1 : boolean;
  signal RPIPE_input_d_937_inst_req_0 : boolean;
  signal RPIPE_input_d_937_inst_ack_0 : boolean;
  signal RPIPE_input_d_937_inst_req_1 : boolean;
  signal RPIPE_input_d_937_inst_ack_1 : boolean;
  signal RPIPE_input_d_940_inst_req_0 : boolean;
  signal RPIPE_input_d_940_inst_ack_0 : boolean;
  signal RPIPE_input_d_940_inst_req_1 : boolean;
  signal RPIPE_input_d_940_inst_ack_1 : boolean;
  signal RPIPE_input_d_943_inst_req_0 : boolean;
  signal RPIPE_input_d_943_inst_ack_0 : boolean;
  signal RPIPE_input_d_943_inst_req_1 : boolean;
  signal RPIPE_input_d_943_inst_ack_1 : boolean;
  signal RPIPE_input_d_946_inst_req_0 : boolean;
  signal RPIPE_input_d_946_inst_ack_0 : boolean;
  signal RPIPE_input_d_946_inst_req_1 : boolean;
  signal RPIPE_input_d_946_inst_ack_1 : boolean;
  signal RPIPE_input_d_949_inst_req_0 : boolean;
  signal RPIPE_input_d_949_inst_ack_0 : boolean;
  signal RPIPE_input_d_949_inst_req_1 : boolean;
  signal RPIPE_input_d_949_inst_ack_1 : boolean;
  signal RPIPE_input_d_952_inst_req_0 : boolean;
  signal RPIPE_input_d_952_inst_ack_0 : boolean;
  signal RPIPE_input_d_952_inst_req_1 : boolean;
  signal RPIPE_input_d_952_inst_ack_1 : boolean;
  signal RPIPE_input_d_955_inst_req_0 : boolean;
  signal RPIPE_input_d_955_inst_ack_0 : boolean;
  signal RPIPE_input_d_955_inst_req_1 : boolean;
  signal RPIPE_input_d_955_inst_ack_1 : boolean;
  signal RPIPE_input_d_958_inst_req_0 : boolean;
  signal RPIPE_input_d_958_inst_ack_0 : boolean;
  signal RPIPE_input_d_958_inst_req_1 : boolean;
  signal RPIPE_input_d_958_inst_ack_1 : boolean;
  signal RPIPE_input_d_961_inst_req_0 : boolean;
  signal RPIPE_input_d_961_inst_ack_0 : boolean;
  signal RPIPE_input_d_961_inst_req_1 : boolean;
  signal RPIPE_input_d_961_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_966_inst_req_0 : boolean;
  signal CONCAT_u8_u16_966_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_966_inst_req_1 : boolean;
  signal CONCAT_u8_u16_966_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_971_inst_req_0 : boolean;
  signal CONCAT_u8_u16_971_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_971_inst_req_1 : boolean;
  signal CONCAT_u8_u16_971_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_976_inst_req_0 : boolean;
  signal CONCAT_u16_u32_976_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_976_inst_req_1 : boolean;
  signal CONCAT_u16_u32_976_inst_ack_1 : boolean;
  signal XOR_u32_u32_981_inst_req_0 : boolean;
  signal XOR_u32_u32_981_inst_ack_0 : boolean;
  signal XOR_u32_u32_981_inst_req_1 : boolean;
  signal XOR_u32_u32_981_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_986_inst_req_0 : boolean;
  signal CONCAT_u8_u16_986_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_986_inst_req_1 : boolean;
  signal CONCAT_u8_u16_986_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_991_inst_req_0 : boolean;
  signal CONCAT_u8_u16_991_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_991_inst_req_1 : boolean;
  signal CONCAT_u8_u16_991_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_996_inst_req_0 : boolean;
  signal CONCAT_u16_u32_996_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_996_inst_req_1 : boolean;
  signal CONCAT_u16_u32_996_inst_ack_1 : boolean;
  signal XOR_u32_u32_1001_inst_req_0 : boolean;
  signal XOR_u32_u32_1001_inst_ack_0 : boolean;
  signal XOR_u32_u32_1001_inst_req_1 : boolean;
  signal XOR_u32_u32_1001_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1006_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1006_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1006_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1006_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1011_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1011_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1011_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1011_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_1016_inst_req_0 : boolean;
  signal CONCAT_u16_u32_1016_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_1016_inst_req_1 : boolean;
  signal CONCAT_u16_u32_1016_inst_ack_1 : boolean;
  signal XOR_u32_u32_1021_inst_req_0 : boolean;
  signal XOR_u32_u32_1021_inst_ack_0 : boolean;
  signal XOR_u32_u32_1021_inst_req_1 : boolean;
  signal XOR_u32_u32_1021_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1026_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1026_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1026_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1026_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1031_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1031_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1031_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1031_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_1036_inst_req_0 : boolean;
  signal CONCAT_u16_u32_1036_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_1036_inst_req_1 : boolean;
  signal CONCAT_u16_u32_1036_inst_ack_1 : boolean;
  signal XOR_u32_u32_1041_inst_req_0 : boolean;
  signal XOR_u32_u32_1041_inst_ack_0 : boolean;
  signal XOR_u32_u32_1041_inst_req_1 : boolean;
  signal XOR_u32_u32_1041_inst_ack_1 : boolean;
  signal slice_1045_inst_req_0 : boolean;
  signal slice_1045_inst_ack_0 : boolean;
  signal slice_1045_inst_req_1 : boolean;
  signal slice_1045_inst_ack_1 : boolean;
  signal slice_1049_inst_req_0 : boolean;
  signal slice_1049_inst_ack_0 : boolean;
  signal slice_1049_inst_req_1 : boolean;
  signal slice_1049_inst_ack_1 : boolean;
  signal slice_1053_inst_req_0 : boolean;
  signal slice_1053_inst_ack_0 : boolean;
  signal slice_1053_inst_req_1 : boolean;
  signal slice_1053_inst_ack_1 : boolean;
  signal slice_1057_inst_req_0 : boolean;
  signal slice_1057_inst_ack_0 : boolean;
  signal slice_1057_inst_req_1 : boolean;
  signal slice_1057_inst_ack_1 : boolean;
  signal slice_1061_inst_req_0 : boolean;
  signal slice_1061_inst_ack_0 : boolean;
  signal slice_1061_inst_req_1 : boolean;
  signal slice_1061_inst_ack_1 : boolean;
  signal slice_1065_inst_req_0 : boolean;
  signal slice_1065_inst_ack_0 : boolean;
  signal slice_1065_inst_req_1 : boolean;
  signal slice_1065_inst_ack_1 : boolean;
  signal slice_1069_inst_req_0 : boolean;
  signal slice_1069_inst_ack_0 : boolean;
  signal slice_1069_inst_req_1 : boolean;
  signal slice_1069_inst_ack_1 : boolean;
  signal slice_1073_inst_req_0 : boolean;
  signal slice_1073_inst_ack_0 : boolean;
  signal slice_1073_inst_req_1 : boolean;
  signal slice_1073_inst_ack_1 : boolean;
  signal slice_1077_inst_req_0 : boolean;
  signal slice_1077_inst_ack_0 : boolean;
  signal slice_1077_inst_req_1 : boolean;
  signal slice_1077_inst_ack_1 : boolean;
  signal slice_1081_inst_req_0 : boolean;
  signal slice_1081_inst_ack_0 : boolean;
  signal slice_1081_inst_req_1 : boolean;
  signal slice_1081_inst_ack_1 : boolean;
  signal slice_1085_inst_req_0 : boolean;
  signal slice_1085_inst_ack_0 : boolean;
  signal slice_1085_inst_req_1 : boolean;
  signal slice_1085_inst_ack_1 : boolean;
  signal slice_1089_inst_req_0 : boolean;
  signal slice_1089_inst_ack_0 : boolean;
  signal slice_1089_inst_req_1 : boolean;
  signal slice_1089_inst_ack_1 : boolean;
  signal slice_1093_inst_req_0 : boolean;
  signal slice_1093_inst_ack_0 : boolean;
  signal slice_1093_inst_req_1 : boolean;
  signal slice_1093_inst_ack_1 : boolean;
  signal slice_1097_inst_req_0 : boolean;
  signal slice_1097_inst_ack_0 : boolean;
  signal slice_1097_inst_req_1 : boolean;
  signal slice_1097_inst_ack_1 : boolean;
  signal slice_1101_inst_req_0 : boolean;
  signal slice_1101_inst_ack_0 : boolean;
  signal slice_1101_inst_req_1 : boolean;
  signal slice_1101_inst_ack_1 : boolean;
  signal slice_1105_inst_req_0 : boolean;
  signal slice_1105_inst_ack_0 : boolean;
  signal slice_1105_inst_req_1 : boolean;
  signal slice_1105_inst_ack_1 : boolean;
  signal call_stmt_1123_call_req_0 : boolean;
  signal call_stmt_1123_call_ack_0 : boolean;
  signal call_stmt_1123_call_req_1 : boolean;
  signal call_stmt_1123_call_ack_1 : boolean;
  signal WPIPE_out_d_1124_inst_req_0 : boolean;
  signal WPIPE_out_d_1124_inst_ack_0 : boolean;
  signal WPIPE_out_d_1124_inst_req_1 : boolean;
  signal WPIPE_out_d_1124_inst_ack_1 : boolean;
  signal WPIPE_out_d_1127_inst_req_0 : boolean;
  signal WPIPE_out_d_1127_inst_ack_0 : boolean;
  signal WPIPE_out_d_1127_inst_req_1 : boolean;
  signal WPIPE_out_d_1127_inst_ack_1 : boolean;
  signal WPIPE_out_d_1130_inst_req_0 : boolean;
  signal WPIPE_out_d_1130_inst_ack_0 : boolean;
  signal WPIPE_out_d_1130_inst_req_1 : boolean;
  signal WPIPE_out_d_1130_inst_ack_1 : boolean;
  signal WPIPE_out_d_1133_inst_req_0 : boolean;
  signal WPIPE_out_d_1133_inst_ack_0 : boolean;
  signal WPIPE_out_d_1133_inst_req_1 : boolean;
  signal WPIPE_out_d_1133_inst_ack_1 : boolean;
  signal WPIPE_out_d_1136_inst_req_0 : boolean;
  signal WPIPE_out_d_1136_inst_ack_0 : boolean;
  signal WPIPE_out_d_1136_inst_req_1 : boolean;
  signal WPIPE_out_d_1136_inst_ack_1 : boolean;
  signal WPIPE_out_d_1139_inst_req_0 : boolean;
  signal WPIPE_out_d_1139_inst_ack_0 : boolean;
  signal WPIPE_out_d_1139_inst_req_1 : boolean;
  signal WPIPE_out_d_1139_inst_ack_1 : boolean;
  signal WPIPE_out_d_1142_inst_req_0 : boolean;
  signal WPIPE_out_d_1142_inst_ack_0 : boolean;
  signal WPIPE_out_d_1142_inst_req_1 : boolean;
  signal WPIPE_out_d_1142_inst_ack_1 : boolean;
  signal WPIPE_out_d_1145_inst_req_0 : boolean;
  signal WPIPE_out_d_1145_inst_ack_0 : boolean;
  signal WPIPE_out_d_1145_inst_req_1 : boolean;
  signal WPIPE_out_d_1145_inst_ack_1 : boolean;
  signal WPIPE_out_d_1148_inst_req_0 : boolean;
  signal WPIPE_out_d_1148_inst_ack_0 : boolean;
  signal WPIPE_out_d_1148_inst_req_1 : boolean;
  signal WPIPE_out_d_1148_inst_ack_1 : boolean;
  signal WPIPE_out_d_1151_inst_req_0 : boolean;
  signal WPIPE_out_d_1151_inst_ack_0 : boolean;
  signal WPIPE_out_d_1151_inst_req_1 : boolean;
  signal WPIPE_out_d_1151_inst_ack_1 : boolean;
  signal WPIPE_out_d_1154_inst_req_0 : boolean;
  signal WPIPE_out_d_1154_inst_ack_0 : boolean;
  signal WPIPE_out_d_1154_inst_req_1 : boolean;
  signal WPIPE_out_d_1154_inst_ack_1 : boolean;
  signal WPIPE_out_d_1157_inst_req_0 : boolean;
  signal WPIPE_out_d_1157_inst_ack_0 : boolean;
  signal WPIPE_out_d_1157_inst_req_1 : boolean;
  signal WPIPE_out_d_1157_inst_ack_1 : boolean;
  signal WPIPE_out_d_1160_inst_req_0 : boolean;
  signal WPIPE_out_d_1160_inst_ack_0 : boolean;
  signal WPIPE_out_d_1160_inst_req_1 : boolean;
  signal WPIPE_out_d_1160_inst_ack_1 : boolean;
  signal WPIPE_out_d_1163_inst_req_0 : boolean;
  signal WPIPE_out_d_1163_inst_ack_0 : boolean;
  signal WPIPE_out_d_1163_inst_req_1 : boolean;
  signal WPIPE_out_d_1163_inst_ack_1 : boolean;
  signal ADD_u128_u128_1169_inst_req_0 : boolean;
  signal ADD_u128_u128_1169_inst_ack_0 : boolean;
  signal ADD_u128_u128_1169_inst_req_1 : boolean;
  signal ADD_u128_u128_1169_inst_ack_1 : boolean;
  signal EQ_u8_u1_1174_inst_req_0 : boolean;
  signal EQ_u8_u1_1174_inst_ack_0 : boolean;
  signal EQ_u8_u1_1174_inst_req_1 : boolean;
  signal EQ_u8_u1_1174_inst_ack_1 : boolean;
  signal EQ_u8_u1_1179_inst_req_0 : boolean;
  signal EQ_u8_u1_1179_inst_ack_0 : boolean;
  signal EQ_u8_u1_1179_inst_req_1 : boolean;
  signal EQ_u8_u1_1179_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "decryption_engine_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 256) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(31 downto 0) <= a0_0;
  a0_0_buffer <= in_buffer_data_out(31 downto 0);
  in_buffer_data_in(63 downto 32) <= a0_1;
  a0_1_buffer <= in_buffer_data_out(63 downto 32);
  in_buffer_data_in(95 downto 64) <= a0_2;
  a0_2_buffer <= in_buffer_data_out(95 downto 64);
  in_buffer_data_in(127 downto 96) <= a0_3;
  a0_3_buffer <= in_buffer_data_out(127 downto 96);
  in_buffer_data_in(255 downto 128) <= decry_counter;
  decry_counter_buffer <= in_buffer_data_out(255 downto 128);
  in_buffer_data_in(tag_length + 255 downto 256) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 255 downto 256);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  decryption_engine_CP_2836_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "decryption_engine_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= decryption_engine_CP_2836_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= decryption_engine_CP_2836_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= decryption_engine_CP_2836_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  decryption_engine_CP_2836: Block -- control-path 
    signal decryption_engine_CP_2836_elements: BooleanArray(173 downto 0);
    -- 
  begin -- 
    decryption_engine_CP_2836_elements(0) <= decryption_engine_CP_2836_start;
    decryption_engine_CP_2836_symbol <= decryption_engine_CP_2836_elements(165);
    -- CP-element group 0:  branch  fork  transition  place  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	166 
    -- CP-element group 0: 	167 
    -- CP-element group 0:  members (13) 
      -- CP-element group 0: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Update/$entry
      -- CP-element group 0: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Sample/req
      -- CP-element group 0: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/$entry
      -- CP-element group 0: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Update/req
      -- CP-element group 0: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/$entry
      -- CP-element group 0: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/$entry
      -- CP-element group 0: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Sample/$entry
      -- CP-element group 0: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_sources/$entry
      -- CP-element group 0: 	 branch_block_stmt_898/merge_stmt_899_dead_link/$entry
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 branch_block_stmt_898/$entry
      -- CP-element group 0: 	 branch_block_stmt_898/branch_block_stmt_898__entry__
      -- CP-element group 0: 	 branch_block_stmt_898/merge_stmt_899__entry__
      -- 
    req_3923_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3923_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(0), ack => decry_counter_902_buf_req_0); -- 
    req_3928_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3928_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(0), ack => decry_counter_902_buf_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	173 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_914_sample_completed_
      -- CP-element group 1: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_914_Sample/$exit
      -- CP-element group 1: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_914_Sample/cra
      -- 
    cra_2861_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_914_call_ack_0, ack => decryption_engine_CP_2836_elements(1)); -- 
    -- CP-element group 2:  fork  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	173 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	62 
    -- CP-element group 2: 	52 
    -- CP-element group 2: 	72 
    -- CP-element group 2: 	42 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_914_update_completed_
      -- CP-element group 2: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_914_Update/$exit
      -- CP-element group 2: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_914_Update/cca
      -- 
    cca_2866_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_914_call_ack_1, ack => decryption_engine_CP_2836_elements(2)); -- 
    -- CP-element group 3:  transition  input  output  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	173 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	4 
    -- CP-element group 3:  members (6) 
      -- CP-element group 3: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_916_sample_completed_
      -- CP-element group 3: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_916_update_start_
      -- CP-element group 3: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_916_Sample/$exit
      -- CP-element group 3: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_916_Sample/ra
      -- CP-element group 3: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_916_Update/$entry
      -- CP-element group 3: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_916_Update/cr
      -- 
    ra_2875_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_916_inst_ack_0, ack => decryption_engine_CP_2836_elements(3)); -- 
    cr_2879_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2879_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(3), ack => RPIPE_input_d_916_inst_req_1); -- 
    -- CP-element group 4:  transition  input  output  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	3 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	5 
    -- CP-element group 4:  members (6) 
      -- CP-element group 4: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_916_update_completed_
      -- CP-element group 4: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_916_Update/$exit
      -- CP-element group 4: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_916_Update/ca
      -- CP-element group 4: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_919_sample_start_
      -- CP-element group 4: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_919_Sample/$entry
      -- CP-element group 4: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_919_Sample/rr
      -- 
    ca_2880_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_916_inst_ack_1, ack => decryption_engine_CP_2836_elements(4)); -- 
    rr_2888_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2888_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(4), ack => RPIPE_input_d_919_inst_req_0); -- 
    -- CP-element group 5:  transition  input  output  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	4 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	6 
    -- CP-element group 5:  members (6) 
      -- CP-element group 5: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_919_sample_completed_
      -- CP-element group 5: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_919_update_start_
      -- CP-element group 5: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_919_Sample/$exit
      -- CP-element group 5: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_919_Sample/ra
      -- CP-element group 5: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_919_Update/$entry
      -- CP-element group 5: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_919_Update/cr
      -- 
    ra_2889_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_919_inst_ack_0, ack => decryption_engine_CP_2836_elements(5)); -- 
    cr_2893_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2893_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(5), ack => RPIPE_input_d_919_inst_req_1); -- 
    -- CP-element group 6:  fork  transition  input  output  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	5 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	7 
    -- CP-element group 6: 	35 
    -- CP-element group 6:  members (9) 
      -- CP-element group 6: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_922_Sample/rr
      -- CP-element group 6: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_922_Sample/$entry
      -- CP-element group 6: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_919_update_completed_
      -- CP-element group 6: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_919_Update/$exit
      -- CP-element group 6: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_919_Update/ca
      -- CP-element group 6: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_922_sample_start_
      -- CP-element group 6: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_966_sample_start_
      -- CP-element group 6: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_966_Sample/$entry
      -- CP-element group 6: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_966_Sample/rr
      -- 
    ca_2894_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_919_inst_ack_1, ack => decryption_engine_CP_2836_elements(6)); -- 
    rr_2902_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2902_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(6), ack => RPIPE_input_d_922_inst_req_0); -- 
    rr_3098_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3098_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(6), ack => CONCAT_u8_u16_966_inst_req_0); -- 
    -- CP-element group 7:  transition  input  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	6 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7:  members (6) 
      -- CP-element group 7: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_922_Sample/$exit
      -- CP-element group 7: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_922_Update/$entry
      -- CP-element group 7: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_922_update_start_
      -- CP-element group 7: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_922_Update/cr
      -- CP-element group 7: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_922_Sample/ra
      -- CP-element group 7: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_922_sample_completed_
      -- 
    ra_2903_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_922_inst_ack_0, ack => decryption_engine_CP_2836_elements(7)); -- 
    cr_2907_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2907_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(7), ack => RPIPE_input_d_922_inst_req_1); -- 
    -- CP-element group 8:  transition  input  output  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	9 
    -- CP-element group 8:  members (6) 
      -- CP-element group 8: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_922_Update/ca
      -- CP-element group 8: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_922_Update/$exit
      -- CP-element group 8: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_925_Sample/$entry
      -- CP-element group 8: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_922_update_completed_
      -- CP-element group 8: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_925_sample_start_
      -- CP-element group 8: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_925_Sample/rr
      -- 
    ca_2908_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_922_inst_ack_1, ack => decryption_engine_CP_2836_elements(8)); -- 
    rr_2916_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2916_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(8), ack => RPIPE_input_d_925_inst_req_0); -- 
    -- CP-element group 9:  transition  input  output  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	8 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	10 
    -- CP-element group 9:  members (6) 
      -- CP-element group 9: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_925_update_start_
      -- CP-element group 9: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_925_Sample/ra
      -- CP-element group 9: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_925_Update/cr
      -- CP-element group 9: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_925_sample_completed_
      -- CP-element group 9: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_925_Update/$entry
      -- CP-element group 9: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_925_Sample/$exit
      -- 
    ra_2917_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_925_inst_ack_0, ack => decryption_engine_CP_2836_elements(9)); -- 
    cr_2921_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2921_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(9), ack => RPIPE_input_d_925_inst_req_1); -- 
    -- CP-element group 10:  fork  transition  input  output  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	9 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	11 
    -- CP-element group 10: 	37 
    -- CP-element group 10:  members (9) 
      -- CP-element group 10: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_925_Update/$exit
      -- CP-element group 10: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_925_Update/ca
      -- CP-element group 10: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_928_sample_start_
      -- CP-element group 10: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_928_Sample/$entry
      -- CP-element group 10: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_928_Sample/rr
      -- CP-element group 10: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_925_update_completed_
      -- CP-element group 10: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_971_sample_start_
      -- CP-element group 10: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_971_Sample/$entry
      -- CP-element group 10: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_971_Sample/rr
      -- 
    ca_2922_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_925_inst_ack_1, ack => decryption_engine_CP_2836_elements(10)); -- 
    rr_2930_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2930_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(10), ack => RPIPE_input_d_928_inst_req_0); -- 
    rr_3112_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3112_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(10), ack => CONCAT_u8_u16_971_inst_req_0); -- 
    -- CP-element group 11:  transition  input  output  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	10 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	12 
    -- CP-element group 11:  members (6) 
      -- CP-element group 11: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_928_Update/cr
      -- CP-element group 11: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_928_Update/$entry
      -- CP-element group 11: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_928_sample_completed_
      -- CP-element group 11: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_928_update_start_
      -- CP-element group 11: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_928_Sample/$exit
      -- CP-element group 11: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_928_Sample/ra
      -- 
    ra_2931_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_928_inst_ack_0, ack => decryption_engine_CP_2836_elements(11)); -- 
    cr_2935_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2935_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(11), ack => RPIPE_input_d_928_inst_req_1); -- 
    -- CP-element group 12:  transition  input  output  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	11 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	13 
    -- CP-element group 12:  members (6) 
      -- CP-element group 12: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_928_Update/ca
      -- CP-element group 12: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_931_sample_start_
      -- CP-element group 12: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_928_Update/$exit
      -- CP-element group 12: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_928_update_completed_
      -- CP-element group 12: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_931_Sample/$entry
      -- CP-element group 12: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_931_Sample/rr
      -- 
    ca_2936_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_928_inst_ack_1, ack => decryption_engine_CP_2836_elements(12)); -- 
    rr_2944_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2944_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(12), ack => RPIPE_input_d_931_inst_req_0); -- 
    -- CP-element group 13:  transition  input  output  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	12 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	14 
    -- CP-element group 13:  members (6) 
      -- CP-element group 13: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_931_sample_completed_
      -- CP-element group 13: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_931_update_start_
      -- CP-element group 13: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_931_Update/$entry
      -- CP-element group 13: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_931_Update/cr
      -- CP-element group 13: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_931_Sample/$exit
      -- CP-element group 13: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_931_Sample/ra
      -- 
    ra_2945_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_931_inst_ack_0, ack => decryption_engine_CP_2836_elements(13)); -- 
    cr_2949_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2949_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(13), ack => RPIPE_input_d_931_inst_req_1); -- 
    -- CP-element group 14:  fork  transition  input  output  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	13 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	45 
    -- CP-element group 14: 	15 
    -- CP-element group 14:  members (9) 
      -- CP-element group 14: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_931_update_completed_
      -- CP-element group 14: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_931_Update/ca
      -- CP-element group 14: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_931_Update/$exit
      -- CP-element group 14: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_934_sample_start_
      -- CP-element group 14: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_934_Sample/$entry
      -- CP-element group 14: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_934_Sample/rr
      -- CP-element group 14: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_986_sample_start_
      -- CP-element group 14: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_986_Sample/$entry
      -- CP-element group 14: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_986_Sample/rr
      -- 
    ca_2950_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_931_inst_ack_1, ack => decryption_engine_CP_2836_elements(14)); -- 
    rr_2958_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2958_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(14), ack => RPIPE_input_d_934_inst_req_0); -- 
    rr_3154_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3154_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(14), ack => CONCAT_u8_u16_986_inst_req_0); -- 
    -- CP-element group 15:  transition  input  output  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	14 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	16 
    -- CP-element group 15:  members (6) 
      -- CP-element group 15: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_934_sample_completed_
      -- CP-element group 15: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_934_update_start_
      -- CP-element group 15: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_934_Sample/$exit
      -- CP-element group 15: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_934_Sample/ra
      -- CP-element group 15: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_934_Update/$entry
      -- CP-element group 15: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_934_Update/cr
      -- 
    ra_2959_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_934_inst_ack_0, ack => decryption_engine_CP_2836_elements(15)); -- 
    cr_2963_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2963_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(15), ack => RPIPE_input_d_934_inst_req_1); -- 
    -- CP-element group 16:  transition  input  output  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	15 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	17 
    -- CP-element group 16:  members (6) 
      -- CP-element group 16: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_934_update_completed_
      -- CP-element group 16: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_934_Update/$exit
      -- CP-element group 16: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_934_Update/ca
      -- CP-element group 16: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_937_sample_start_
      -- CP-element group 16: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_937_Sample/$entry
      -- CP-element group 16: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_937_Sample/rr
      -- 
    ca_2964_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_934_inst_ack_1, ack => decryption_engine_CP_2836_elements(16)); -- 
    rr_2972_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2972_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(16), ack => RPIPE_input_d_937_inst_req_0); -- 
    -- CP-element group 17:  transition  input  output  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	16 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	18 
    -- CP-element group 17:  members (6) 
      -- CP-element group 17: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_937_sample_completed_
      -- CP-element group 17: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_937_update_start_
      -- CP-element group 17: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_937_Sample/$exit
      -- CP-element group 17: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_937_Sample/ra
      -- CP-element group 17: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_937_Update/$entry
      -- CP-element group 17: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_937_Update/cr
      -- 
    ra_2973_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 17_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_937_inst_ack_0, ack => decryption_engine_CP_2836_elements(17)); -- 
    cr_2977_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2977_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(17), ack => RPIPE_input_d_937_inst_req_1); -- 
    -- CP-element group 18:  fork  transition  input  output  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	17 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	47 
    -- CP-element group 18: 	19 
    -- CP-element group 18:  members (9) 
      -- CP-element group 18: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_937_update_completed_
      -- CP-element group 18: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_937_Update/$exit
      -- CP-element group 18: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_937_Update/ca
      -- CP-element group 18: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_940_sample_start_
      -- CP-element group 18: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_940_Sample/$entry
      -- CP-element group 18: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_940_Sample/rr
      -- CP-element group 18: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_991_sample_start_
      -- CP-element group 18: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_991_Sample/$entry
      -- CP-element group 18: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_991_Sample/rr
      -- 
    ca_2978_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_937_inst_ack_1, ack => decryption_engine_CP_2836_elements(18)); -- 
    rr_3168_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3168_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(18), ack => CONCAT_u8_u16_991_inst_req_0); -- 
    rr_2986_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2986_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(18), ack => RPIPE_input_d_940_inst_req_0); -- 
    -- CP-element group 19:  transition  input  output  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	18 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	20 
    -- CP-element group 19:  members (6) 
      -- CP-element group 19: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_940_sample_completed_
      -- CP-element group 19: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_940_update_start_
      -- CP-element group 19: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_940_Sample/$exit
      -- CP-element group 19: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_940_Sample/ra
      -- CP-element group 19: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_940_Update/$entry
      -- CP-element group 19: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_940_Update/cr
      -- 
    ra_2987_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_940_inst_ack_0, ack => decryption_engine_CP_2836_elements(19)); -- 
    cr_2991_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2991_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(19), ack => RPIPE_input_d_940_inst_req_1); -- 
    -- CP-element group 20:  transition  input  output  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	19 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	21 
    -- CP-element group 20:  members (6) 
      -- CP-element group 20: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_940_update_completed_
      -- CP-element group 20: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_940_Update/$exit
      -- CP-element group 20: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_940_Update/ca
      -- CP-element group 20: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_943_sample_start_
      -- CP-element group 20: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_943_Sample/$entry
      -- CP-element group 20: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_943_Sample/rr
      -- 
    ca_2992_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 20_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_940_inst_ack_1, ack => decryption_engine_CP_2836_elements(20)); -- 
    rr_3000_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3000_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(20), ack => RPIPE_input_d_943_inst_req_0); -- 
    -- CP-element group 21:  transition  input  output  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	20 
    -- CP-element group 21: successors 
    -- CP-element group 21: 	22 
    -- CP-element group 21:  members (6) 
      -- CP-element group 21: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_943_Update/$entry
      -- CP-element group 21: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_943_sample_completed_
      -- CP-element group 21: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_943_update_start_
      -- CP-element group 21: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_943_Sample/$exit
      -- CP-element group 21: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_943_Sample/ra
      -- CP-element group 21: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_943_Update/cr
      -- 
    ra_3001_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_943_inst_ack_0, ack => decryption_engine_CP_2836_elements(21)); -- 
    cr_3005_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3005_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(21), ack => RPIPE_input_d_943_inst_req_1); -- 
    -- CP-element group 22:  fork  transition  input  output  bypass 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	21 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	55 
    -- CP-element group 22: 	23 
    -- CP-element group 22:  members (9) 
      -- CP-element group 22: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_943_update_completed_
      -- CP-element group 22: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_943_Update/$exit
      -- CP-element group 22: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_943_Update/ca
      -- CP-element group 22: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_946_sample_start_
      -- CP-element group 22: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_946_Sample/$entry
      -- CP-element group 22: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_946_Sample/rr
      -- CP-element group 22: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1006_sample_start_
      -- CP-element group 22: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1006_Sample/$entry
      -- CP-element group 22: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1006_Sample/rr
      -- 
    ca_3006_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 22_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_943_inst_ack_1, ack => decryption_engine_CP_2836_elements(22)); -- 
    rr_3210_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3210_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(22), ack => CONCAT_u8_u16_1006_inst_req_0); -- 
    rr_3014_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3014_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(22), ack => RPIPE_input_d_946_inst_req_0); -- 
    -- CP-element group 23:  transition  input  output  bypass 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	22 
    -- CP-element group 23: successors 
    -- CP-element group 23: 	24 
    -- CP-element group 23:  members (6) 
      -- CP-element group 23: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_946_sample_completed_
      -- CP-element group 23: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_946_update_start_
      -- CP-element group 23: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_946_Sample/$exit
      -- CP-element group 23: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_946_Sample/ra
      -- CP-element group 23: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_946_Update/$entry
      -- CP-element group 23: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_946_Update/cr
      -- 
    ra_3015_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 23_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_946_inst_ack_0, ack => decryption_engine_CP_2836_elements(23)); -- 
    cr_3019_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3019_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(23), ack => RPIPE_input_d_946_inst_req_1); -- 
    -- CP-element group 24:  transition  input  output  bypass 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	23 
    -- CP-element group 24: successors 
    -- CP-element group 24: 	25 
    -- CP-element group 24:  members (6) 
      -- CP-element group 24: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_946_update_completed_
      -- CP-element group 24: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_946_Update/$exit
      -- CP-element group 24: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_946_Update/ca
      -- CP-element group 24: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_949_sample_start_
      -- CP-element group 24: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_949_Sample/$entry
      -- CP-element group 24: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_949_Sample/rr
      -- 
    ca_3020_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_946_inst_ack_1, ack => decryption_engine_CP_2836_elements(24)); -- 
    rr_3028_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3028_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(24), ack => RPIPE_input_d_949_inst_req_0); -- 
    -- CP-element group 25:  transition  input  output  bypass 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	24 
    -- CP-element group 25: successors 
    -- CP-element group 25: 	26 
    -- CP-element group 25:  members (6) 
      -- CP-element group 25: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_949_sample_completed_
      -- CP-element group 25: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_949_update_start_
      -- CP-element group 25: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_949_Sample/$exit
      -- CP-element group 25: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_949_Sample/ra
      -- CP-element group 25: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_949_Update/$entry
      -- CP-element group 25: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_949_Update/cr
      -- 
    ra_3029_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_949_inst_ack_0, ack => decryption_engine_CP_2836_elements(25)); -- 
    cr_3033_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3033_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(25), ack => RPIPE_input_d_949_inst_req_1); -- 
    -- CP-element group 26:  fork  transition  input  output  bypass 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	25 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	57 
    -- CP-element group 26: 	27 
    -- CP-element group 26:  members (9) 
      -- CP-element group 26: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_949_update_completed_
      -- CP-element group 26: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_949_Update/$exit
      -- CP-element group 26: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_949_Update/ca
      -- CP-element group 26: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_952_sample_start_
      -- CP-element group 26: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_952_Sample/$entry
      -- CP-element group 26: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_952_Sample/rr
      -- CP-element group 26: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1011_sample_start_
      -- CP-element group 26: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1011_Sample/$entry
      -- CP-element group 26: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1011_Sample/rr
      -- 
    ca_3034_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 26_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_949_inst_ack_1, ack => decryption_engine_CP_2836_elements(26)); -- 
    rr_3224_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3224_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(26), ack => CONCAT_u8_u16_1011_inst_req_0); -- 
    rr_3042_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3042_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(26), ack => RPIPE_input_d_952_inst_req_0); -- 
    -- CP-element group 27:  transition  input  output  bypass 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	26 
    -- CP-element group 27: successors 
    -- CP-element group 27: 	28 
    -- CP-element group 27:  members (6) 
      -- CP-element group 27: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_952_sample_completed_
      -- CP-element group 27: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_952_update_start_
      -- CP-element group 27: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_952_Sample/$exit
      -- CP-element group 27: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_952_Sample/ra
      -- CP-element group 27: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_952_Update/$entry
      -- CP-element group 27: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_952_Update/cr
      -- 
    ra_3043_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 27_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_952_inst_ack_0, ack => decryption_engine_CP_2836_elements(27)); -- 
    cr_3047_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3047_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(27), ack => RPIPE_input_d_952_inst_req_1); -- 
    -- CP-element group 28:  transition  input  output  bypass 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	27 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	29 
    -- CP-element group 28:  members (6) 
      -- CP-element group 28: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_952_update_completed_
      -- CP-element group 28: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_952_Update/$exit
      -- CP-element group 28: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_952_Update/ca
      -- CP-element group 28: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_955_sample_start_
      -- CP-element group 28: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_955_Sample/$entry
      -- CP-element group 28: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_955_Sample/rr
      -- 
    ca_3048_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 28_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_952_inst_ack_1, ack => decryption_engine_CP_2836_elements(28)); -- 
    rr_3056_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3056_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(28), ack => RPIPE_input_d_955_inst_req_0); -- 
    -- CP-element group 29:  transition  input  output  bypass 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	28 
    -- CP-element group 29: successors 
    -- CP-element group 29: 	30 
    -- CP-element group 29:  members (6) 
      -- CP-element group 29: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_955_sample_completed_
      -- CP-element group 29: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_955_update_start_
      -- CP-element group 29: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_955_Sample/$exit
      -- CP-element group 29: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_955_Sample/ra
      -- CP-element group 29: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_955_Update/$entry
      -- CP-element group 29: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_955_Update/cr
      -- 
    ra_3057_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 29_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_955_inst_ack_0, ack => decryption_engine_CP_2836_elements(29)); -- 
    cr_3061_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3061_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(29), ack => RPIPE_input_d_955_inst_req_1); -- 
    -- CP-element group 30:  fork  transition  input  output  bypass 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	29 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	65 
    -- CP-element group 30: 	31 
    -- CP-element group 30:  members (9) 
      -- CP-element group 30: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_955_update_completed_
      -- CP-element group 30: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_955_Update/$exit
      -- CP-element group 30: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_955_Update/ca
      -- CP-element group 30: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_958_sample_start_
      -- CP-element group 30: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_958_Sample/$entry
      -- CP-element group 30: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_958_Sample/rr
      -- CP-element group 30: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1026_sample_start_
      -- CP-element group 30: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1026_Sample/$entry
      -- CP-element group 30: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1026_Sample/rr
      -- 
    ca_3062_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 30_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_955_inst_ack_1, ack => decryption_engine_CP_2836_elements(30)); -- 
    rr_3266_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3266_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(30), ack => CONCAT_u8_u16_1026_inst_req_0); -- 
    rr_3070_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3070_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(30), ack => RPIPE_input_d_958_inst_req_0); -- 
    -- CP-element group 31:  transition  input  output  bypass 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	30 
    -- CP-element group 31: successors 
    -- CP-element group 31: 	32 
    -- CP-element group 31:  members (6) 
      -- CP-element group 31: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_958_sample_completed_
      -- CP-element group 31: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_958_update_start_
      -- CP-element group 31: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_958_Sample/$exit
      -- CP-element group 31: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_958_Sample/ra
      -- CP-element group 31: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_958_Update/$entry
      -- CP-element group 31: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_958_Update/cr
      -- 
    ra_3071_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 31_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_958_inst_ack_0, ack => decryption_engine_CP_2836_elements(31)); -- 
    cr_3075_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3075_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(31), ack => RPIPE_input_d_958_inst_req_1); -- 
    -- CP-element group 32:  transition  input  output  bypass 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	31 
    -- CP-element group 32: successors 
    -- CP-element group 32: 	33 
    -- CP-element group 32:  members (6) 
      -- CP-element group 32: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_958_update_completed_
      -- CP-element group 32: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_958_Update/$exit
      -- CP-element group 32: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_958_Update/ca
      -- CP-element group 32: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_961_sample_start_
      -- CP-element group 32: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_961_Sample/$entry
      -- CP-element group 32: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_961_Sample/rr
      -- 
    ca_3076_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 32_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_958_inst_ack_1, ack => decryption_engine_CP_2836_elements(32)); -- 
    rr_3084_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3084_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(32), ack => RPIPE_input_d_961_inst_req_0); -- 
    -- CP-element group 33:  transition  input  output  bypass 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	32 
    -- CP-element group 33: successors 
    -- CP-element group 33: 	34 
    -- CP-element group 33:  members (6) 
      -- CP-element group 33: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_961_sample_completed_
      -- CP-element group 33: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_961_update_start_
      -- CP-element group 33: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_961_Sample/$exit
      -- CP-element group 33: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_961_Sample/ra
      -- CP-element group 33: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_961_Update/$entry
      -- CP-element group 33: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_961_Update/cr
      -- 
    ra_3085_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 33_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_961_inst_ack_0, ack => decryption_engine_CP_2836_elements(33)); -- 
    cr_3089_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3089_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(33), ack => RPIPE_input_d_961_inst_req_1); -- 
    -- CP-element group 34:  transition  input  output  bypass 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	33 
    -- CP-element group 34: successors 
    -- CP-element group 34: 	67 
    -- CP-element group 34:  members (6) 
      -- CP-element group 34: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_961_update_completed_
      -- CP-element group 34: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_961_Update/$exit
      -- CP-element group 34: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_961_Update/ca
      -- CP-element group 34: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1031_sample_start_
      -- CP-element group 34: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1031_Sample/$entry
      -- CP-element group 34: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1031_Sample/rr
      -- 
    ca_3090_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_961_inst_ack_1, ack => decryption_engine_CP_2836_elements(34)); -- 
    rr_3280_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3280_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(34), ack => CONCAT_u8_u16_1031_inst_req_0); -- 
    -- CP-element group 35:  transition  input  bypass 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	6 
    -- CP-element group 35: successors 
    -- CP-element group 35:  members (3) 
      -- CP-element group 35: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_966_sample_completed_
      -- CP-element group 35: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_966_Sample/$exit
      -- CP-element group 35: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_966_Sample/ra
      -- 
    ra_3099_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 35_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_966_inst_ack_0, ack => decryption_engine_CP_2836_elements(35)); -- 
    -- CP-element group 36:  transition  input  bypass 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	173 
    -- CP-element group 36: successors 
    -- CP-element group 36: 	39 
    -- CP-element group 36:  members (3) 
      -- CP-element group 36: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_966_update_completed_
      -- CP-element group 36: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_966_Update/$exit
      -- CP-element group 36: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_966_Update/ca
      -- 
    ca_3104_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_966_inst_ack_1, ack => decryption_engine_CP_2836_elements(36)); -- 
    -- CP-element group 37:  transition  input  bypass 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	10 
    -- CP-element group 37: successors 
    -- CP-element group 37:  members (3) 
      -- CP-element group 37: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_971_sample_completed_
      -- CP-element group 37: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_971_Sample/$exit
      -- CP-element group 37: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_971_Sample/ra
      -- 
    ra_3113_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_971_inst_ack_0, ack => decryption_engine_CP_2836_elements(37)); -- 
    -- CP-element group 38:  transition  input  bypass 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	173 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	39 
    -- CP-element group 38:  members (3) 
      -- CP-element group 38: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_971_update_completed_
      -- CP-element group 38: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_971_Update/$exit
      -- CP-element group 38: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_971_Update/ca
      -- 
    ca_3118_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 38_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_971_inst_ack_1, ack => decryption_engine_CP_2836_elements(38)); -- 
    -- CP-element group 39:  join  transition  output  bypass 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	36 
    -- CP-element group 39: 	38 
    -- CP-element group 39: successors 
    -- CP-element group 39: 	40 
    -- CP-element group 39:  members (3) 
      -- CP-element group 39: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_976_sample_start_
      -- CP-element group 39: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_976_Sample/$entry
      -- CP-element group 39: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_976_Sample/rr
      -- 
    rr_3126_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3126_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(39), ack => CONCAT_u16_u32_976_inst_req_0); -- 
    decryption_engine_cp_element_group_39: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "decryption_engine_cp_element_group_39"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(36) & decryption_engine_CP_2836_elements(38);
      gj_decryption_engine_cp_element_group_39 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(39), clk => clk, reset => reset); --
    end block;
    -- CP-element group 40:  transition  input  bypass 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	39 
    -- CP-element group 40: successors 
    -- CP-element group 40:  members (3) 
      -- CP-element group 40: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_976_sample_completed_
      -- CP-element group 40: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_976_Sample/$exit
      -- CP-element group 40: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_976_Sample/ra
      -- 
    ra_3127_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 40_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_976_inst_ack_0, ack => decryption_engine_CP_2836_elements(40)); -- 
    -- CP-element group 41:  transition  input  bypass 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	173 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	42 
    -- CP-element group 41:  members (3) 
      -- CP-element group 41: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_976_update_completed_
      -- CP-element group 41: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_976_Update/$exit
      -- CP-element group 41: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_976_Update/ca
      -- 
    ca_3132_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 41_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_976_inst_ack_1, ack => decryption_engine_CP_2836_elements(41)); -- 
    -- CP-element group 42:  join  transition  output  bypass 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	2 
    -- CP-element group 42: 	41 
    -- CP-element group 42: successors 
    -- CP-element group 42: 	43 
    -- CP-element group 42:  members (3) 
      -- CP-element group 42: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_981_sample_start_
      -- CP-element group 42: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_981_Sample/$entry
      -- CP-element group 42: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_981_Sample/rr
      -- 
    rr_3140_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3140_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(42), ack => XOR_u32_u32_981_inst_req_0); -- 
    decryption_engine_cp_element_group_42: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "decryption_engine_cp_element_group_42"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(2) & decryption_engine_CP_2836_elements(41);
      gj_decryption_engine_cp_element_group_42 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(42), clk => clk, reset => reset); --
    end block;
    -- CP-element group 43:  transition  input  bypass 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	42 
    -- CP-element group 43: successors 
    -- CP-element group 43:  members (3) 
      -- CP-element group 43: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_981_sample_completed_
      -- CP-element group 43: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_981_Sample/$exit
      -- CP-element group 43: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_981_Sample/ra
      -- 
    ra_3141_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 43_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_981_inst_ack_0, ack => decryption_engine_CP_2836_elements(43)); -- 
    -- CP-element group 44:  fork  transition  input  output  bypass 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	173 
    -- CP-element group 44: successors 
    -- CP-element group 44: 	75 
    -- CP-element group 44: 	77 
    -- CP-element group 44: 	79 
    -- CP-element group 44: 	81 
    -- CP-element group 44:  members (15) 
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_981_update_completed_
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_981_Update/$exit
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_981_Update/ca
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1045_sample_start_
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1045_Sample/$entry
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1045_Sample/rr
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1049_sample_start_
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1049_Sample/$entry
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1049_Sample/rr
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1053_sample_start_
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1053_Sample/$entry
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1053_Sample/rr
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1057_sample_start_
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1057_Sample/$entry
      -- CP-element group 44: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1057_Sample/rr
      -- 
    ca_3146_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 44_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_981_inst_ack_1, ack => decryption_engine_CP_2836_elements(44)); -- 
    rr_3322_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3322_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(44), ack => slice_1045_inst_req_0); -- 
    rr_3336_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3336_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(44), ack => slice_1049_inst_req_0); -- 
    rr_3350_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3350_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(44), ack => slice_1053_inst_req_0); -- 
    rr_3364_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3364_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(44), ack => slice_1057_inst_req_0); -- 
    -- CP-element group 45:  transition  input  bypass 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	14 
    -- CP-element group 45: successors 
    -- CP-element group 45:  members (3) 
      -- CP-element group 45: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_986_sample_completed_
      -- CP-element group 45: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_986_Sample/$exit
      -- CP-element group 45: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_986_Sample/ra
      -- 
    ra_3155_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 45_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_986_inst_ack_0, ack => decryption_engine_CP_2836_elements(45)); -- 
    -- CP-element group 46:  transition  input  bypass 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	173 
    -- CP-element group 46: successors 
    -- CP-element group 46: 	49 
    -- CP-element group 46:  members (3) 
      -- CP-element group 46: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_986_update_completed_
      -- CP-element group 46: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_986_Update/$exit
      -- CP-element group 46: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_986_Update/ca
      -- 
    ca_3160_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 46_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_986_inst_ack_1, ack => decryption_engine_CP_2836_elements(46)); -- 
    -- CP-element group 47:  transition  input  bypass 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	18 
    -- CP-element group 47: successors 
    -- CP-element group 47:  members (3) 
      -- CP-element group 47: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_991_sample_completed_
      -- CP-element group 47: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_991_Sample/$exit
      -- CP-element group 47: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_991_Sample/ra
      -- 
    ra_3169_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 47_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_991_inst_ack_0, ack => decryption_engine_CP_2836_elements(47)); -- 
    -- CP-element group 48:  transition  input  bypass 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	173 
    -- CP-element group 48: successors 
    -- CP-element group 48: 	49 
    -- CP-element group 48:  members (3) 
      -- CP-element group 48: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_991_update_completed_
      -- CP-element group 48: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_991_Update/$exit
      -- CP-element group 48: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_991_Update/ca
      -- 
    ca_3174_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 48_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_991_inst_ack_1, ack => decryption_engine_CP_2836_elements(48)); -- 
    -- CP-element group 49:  join  transition  output  bypass 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: 	46 
    -- CP-element group 49: 	48 
    -- CP-element group 49: successors 
    -- CP-element group 49: 	50 
    -- CP-element group 49:  members (3) 
      -- CP-element group 49: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_996_sample_start_
      -- CP-element group 49: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_996_Sample/$entry
      -- CP-element group 49: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_996_Sample/rr
      -- 
    rr_3182_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3182_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(49), ack => CONCAT_u16_u32_996_inst_req_0); -- 
    decryption_engine_cp_element_group_49: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "decryption_engine_cp_element_group_49"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(46) & decryption_engine_CP_2836_elements(48);
      gj_decryption_engine_cp_element_group_49 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(49), clk => clk, reset => reset); --
    end block;
    -- CP-element group 50:  transition  input  bypass 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	49 
    -- CP-element group 50: successors 
    -- CP-element group 50:  members (3) 
      -- CP-element group 50: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_996_sample_completed_
      -- CP-element group 50: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_996_Sample/$exit
      -- CP-element group 50: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_996_Sample/ra
      -- 
    ra_3183_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 50_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_996_inst_ack_0, ack => decryption_engine_CP_2836_elements(50)); -- 
    -- CP-element group 51:  transition  input  bypass 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	173 
    -- CP-element group 51: successors 
    -- CP-element group 51: 	52 
    -- CP-element group 51:  members (3) 
      -- CP-element group 51: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_996_update_completed_
      -- CP-element group 51: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_996_Update/$exit
      -- CP-element group 51: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_996_Update/ca
      -- 
    ca_3188_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 51_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_996_inst_ack_1, ack => decryption_engine_CP_2836_elements(51)); -- 
    -- CP-element group 52:  join  transition  output  bypass 
    -- CP-element group 52: predecessors 
    -- CP-element group 52: 	2 
    -- CP-element group 52: 	51 
    -- CP-element group 52: successors 
    -- CP-element group 52: 	53 
    -- CP-element group 52:  members (3) 
      -- CP-element group 52: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1001_sample_start_
      -- CP-element group 52: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1001_Sample/$entry
      -- CP-element group 52: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1001_Sample/rr
      -- 
    rr_3196_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3196_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(52), ack => XOR_u32_u32_1001_inst_req_0); -- 
    decryption_engine_cp_element_group_52: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "decryption_engine_cp_element_group_52"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(2) & decryption_engine_CP_2836_elements(51);
      gj_decryption_engine_cp_element_group_52 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(52), clk => clk, reset => reset); --
    end block;
    -- CP-element group 53:  transition  input  bypass 
    -- CP-element group 53: predecessors 
    -- CP-element group 53: 	52 
    -- CP-element group 53: successors 
    -- CP-element group 53:  members (3) 
      -- CP-element group 53: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1001_sample_completed_
      -- CP-element group 53: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1001_Sample/$exit
      -- CP-element group 53: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1001_Sample/ra
      -- 
    ra_3197_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 53_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1001_inst_ack_0, ack => decryption_engine_CP_2836_elements(53)); -- 
    -- CP-element group 54:  fork  transition  input  output  bypass 
    -- CP-element group 54: predecessors 
    -- CP-element group 54: 	173 
    -- CP-element group 54: successors 
    -- CP-element group 54: 	89 
    -- CP-element group 54: 	83 
    -- CP-element group 54: 	85 
    -- CP-element group 54: 	87 
    -- CP-element group 54:  members (15) 
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1001_update_completed_
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1001_Update/$exit
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1001_Update/ca
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1061_sample_start_
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1061_Sample/$entry
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1061_Sample/rr
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1065_sample_start_
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1065_Sample/$entry
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1065_Sample/rr
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1069_sample_start_
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1069_Sample/$entry
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1069_Sample/rr
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1073_sample_start_
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1073_Sample/$entry
      -- CP-element group 54: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1073_Sample/rr
      -- 
    ca_3202_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 54_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1001_inst_ack_1, ack => decryption_engine_CP_2836_elements(54)); -- 
    rr_3392_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3392_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(54), ack => slice_1065_inst_req_0); -- 
    rr_3406_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3406_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(54), ack => slice_1069_inst_req_0); -- 
    rr_3420_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3420_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(54), ack => slice_1073_inst_req_0); -- 
    rr_3378_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3378_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(54), ack => slice_1061_inst_req_0); -- 
    -- CP-element group 55:  transition  input  bypass 
    -- CP-element group 55: predecessors 
    -- CP-element group 55: 	22 
    -- CP-element group 55: successors 
    -- CP-element group 55:  members (3) 
      -- CP-element group 55: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1006_sample_completed_
      -- CP-element group 55: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1006_Sample/$exit
      -- CP-element group 55: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1006_Sample/ra
      -- 
    ra_3211_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 55_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1006_inst_ack_0, ack => decryption_engine_CP_2836_elements(55)); -- 
    -- CP-element group 56:  transition  input  bypass 
    -- CP-element group 56: predecessors 
    -- CP-element group 56: 	173 
    -- CP-element group 56: successors 
    -- CP-element group 56: 	59 
    -- CP-element group 56:  members (3) 
      -- CP-element group 56: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1006_update_completed_
      -- CP-element group 56: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1006_Update/$exit
      -- CP-element group 56: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1006_Update/ca
      -- 
    ca_3216_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 56_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1006_inst_ack_1, ack => decryption_engine_CP_2836_elements(56)); -- 
    -- CP-element group 57:  transition  input  bypass 
    -- CP-element group 57: predecessors 
    -- CP-element group 57: 	26 
    -- CP-element group 57: successors 
    -- CP-element group 57:  members (3) 
      -- CP-element group 57: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1011_sample_completed_
      -- CP-element group 57: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1011_Sample/$exit
      -- CP-element group 57: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1011_Sample/ra
      -- 
    ra_3225_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 57_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1011_inst_ack_0, ack => decryption_engine_CP_2836_elements(57)); -- 
    -- CP-element group 58:  transition  input  bypass 
    -- CP-element group 58: predecessors 
    -- CP-element group 58: 	173 
    -- CP-element group 58: successors 
    -- CP-element group 58: 	59 
    -- CP-element group 58:  members (3) 
      -- CP-element group 58: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1011_update_completed_
      -- CP-element group 58: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1011_Update/$exit
      -- CP-element group 58: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1011_Update/ca
      -- 
    ca_3230_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 58_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1011_inst_ack_1, ack => decryption_engine_CP_2836_elements(58)); -- 
    -- CP-element group 59:  join  transition  output  bypass 
    -- CP-element group 59: predecessors 
    -- CP-element group 59: 	58 
    -- CP-element group 59: 	56 
    -- CP-element group 59: successors 
    -- CP-element group 59: 	60 
    -- CP-element group 59:  members (3) 
      -- CP-element group 59: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1016_sample_start_
      -- CP-element group 59: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1016_Sample/$entry
      -- CP-element group 59: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1016_Sample/rr
      -- 
    rr_3238_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3238_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(59), ack => CONCAT_u16_u32_1016_inst_req_0); -- 
    decryption_engine_cp_element_group_59: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "decryption_engine_cp_element_group_59"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(58) & decryption_engine_CP_2836_elements(56);
      gj_decryption_engine_cp_element_group_59 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(59), clk => clk, reset => reset); --
    end block;
    -- CP-element group 60:  transition  input  bypass 
    -- CP-element group 60: predecessors 
    -- CP-element group 60: 	59 
    -- CP-element group 60: successors 
    -- CP-element group 60:  members (3) 
      -- CP-element group 60: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1016_sample_completed_
      -- CP-element group 60: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1016_Sample/$exit
      -- CP-element group 60: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1016_Sample/ra
      -- 
    ra_3239_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 60_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1016_inst_ack_0, ack => decryption_engine_CP_2836_elements(60)); -- 
    -- CP-element group 61:  transition  input  bypass 
    -- CP-element group 61: predecessors 
    -- CP-element group 61: 	173 
    -- CP-element group 61: successors 
    -- CP-element group 61: 	62 
    -- CP-element group 61:  members (3) 
      -- CP-element group 61: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1016_update_completed_
      -- CP-element group 61: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1016_Update/$exit
      -- CP-element group 61: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1016_Update/ca
      -- 
    ca_3244_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 61_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1016_inst_ack_1, ack => decryption_engine_CP_2836_elements(61)); -- 
    -- CP-element group 62:  join  transition  output  bypass 
    -- CP-element group 62: predecessors 
    -- CP-element group 62: 	2 
    -- CP-element group 62: 	61 
    -- CP-element group 62: successors 
    -- CP-element group 62: 	63 
    -- CP-element group 62:  members (3) 
      -- CP-element group 62: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1021_sample_start_
      -- CP-element group 62: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1021_Sample/$entry
      -- CP-element group 62: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1021_Sample/rr
      -- 
    rr_3252_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3252_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(62), ack => XOR_u32_u32_1021_inst_req_0); -- 
    decryption_engine_cp_element_group_62: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "decryption_engine_cp_element_group_62"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(2) & decryption_engine_CP_2836_elements(61);
      gj_decryption_engine_cp_element_group_62 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(62), clk => clk, reset => reset); --
    end block;
    -- CP-element group 63:  transition  input  bypass 
    -- CP-element group 63: predecessors 
    -- CP-element group 63: 	62 
    -- CP-element group 63: successors 
    -- CP-element group 63:  members (3) 
      -- CP-element group 63: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1021_sample_completed_
      -- CP-element group 63: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1021_Sample/$exit
      -- CP-element group 63: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1021_Sample/ra
      -- 
    ra_3253_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 63_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1021_inst_ack_0, ack => decryption_engine_CP_2836_elements(63)); -- 
    -- CP-element group 64:  fork  transition  input  output  bypass 
    -- CP-element group 64: predecessors 
    -- CP-element group 64: 	173 
    -- CP-element group 64: successors 
    -- CP-element group 64: 	91 
    -- CP-element group 64: 	93 
    -- CP-element group 64: 	95 
    -- CP-element group 64: 	97 
    -- CP-element group 64:  members (15) 
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1021_update_completed_
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1021_Update/$exit
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1021_Update/ca
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1077_sample_start_
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1077_Sample/$entry
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1077_Sample/rr
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1081_sample_start_
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1081_Sample/$entry
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1081_Sample/rr
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1085_sample_start_
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1085_Sample/$entry
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1085_Sample/rr
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1089_sample_start_
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1089_Sample/$entry
      -- CP-element group 64: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1089_Sample/rr
      -- 
    ca_3258_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 64_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1021_inst_ack_1, ack => decryption_engine_CP_2836_elements(64)); -- 
    rr_3434_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3434_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(64), ack => slice_1077_inst_req_0); -- 
    rr_3448_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3448_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(64), ack => slice_1081_inst_req_0); -- 
    rr_3462_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3462_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(64), ack => slice_1085_inst_req_0); -- 
    rr_3476_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3476_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(64), ack => slice_1089_inst_req_0); -- 
    -- CP-element group 65:  transition  input  bypass 
    -- CP-element group 65: predecessors 
    -- CP-element group 65: 	30 
    -- CP-element group 65: successors 
    -- CP-element group 65:  members (3) 
      -- CP-element group 65: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1026_sample_completed_
      -- CP-element group 65: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1026_Sample/$exit
      -- CP-element group 65: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1026_Sample/ra
      -- 
    ra_3267_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 65_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1026_inst_ack_0, ack => decryption_engine_CP_2836_elements(65)); -- 
    -- CP-element group 66:  transition  input  bypass 
    -- CP-element group 66: predecessors 
    -- CP-element group 66: 	173 
    -- CP-element group 66: successors 
    -- CP-element group 66: 	69 
    -- CP-element group 66:  members (3) 
      -- CP-element group 66: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1026_update_completed_
      -- CP-element group 66: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1026_Update/$exit
      -- CP-element group 66: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1026_Update/ca
      -- 
    ca_3272_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 66_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1026_inst_ack_1, ack => decryption_engine_CP_2836_elements(66)); -- 
    -- CP-element group 67:  transition  input  bypass 
    -- CP-element group 67: predecessors 
    -- CP-element group 67: 	34 
    -- CP-element group 67: successors 
    -- CP-element group 67:  members (3) 
      -- CP-element group 67: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1031_sample_completed_
      -- CP-element group 67: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1031_Sample/$exit
      -- CP-element group 67: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1031_Sample/ra
      -- 
    ra_3281_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 67_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1031_inst_ack_0, ack => decryption_engine_CP_2836_elements(67)); -- 
    -- CP-element group 68:  transition  input  bypass 
    -- CP-element group 68: predecessors 
    -- CP-element group 68: 	173 
    -- CP-element group 68: successors 
    -- CP-element group 68: 	69 
    -- CP-element group 68:  members (3) 
      -- CP-element group 68: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1031_update_completed_
      -- CP-element group 68: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1031_Update/$exit
      -- CP-element group 68: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1031_Update/ca
      -- 
    ca_3286_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 68_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1031_inst_ack_1, ack => decryption_engine_CP_2836_elements(68)); -- 
    -- CP-element group 69:  join  transition  output  bypass 
    -- CP-element group 69: predecessors 
    -- CP-element group 69: 	66 
    -- CP-element group 69: 	68 
    -- CP-element group 69: successors 
    -- CP-element group 69: 	70 
    -- CP-element group 69:  members (3) 
      -- CP-element group 69: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1036_sample_start_
      -- CP-element group 69: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1036_Sample/$entry
      -- CP-element group 69: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1036_Sample/rr
      -- 
    rr_3294_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3294_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(69), ack => CONCAT_u16_u32_1036_inst_req_0); -- 
    decryption_engine_cp_element_group_69: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "decryption_engine_cp_element_group_69"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(66) & decryption_engine_CP_2836_elements(68);
      gj_decryption_engine_cp_element_group_69 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(69), clk => clk, reset => reset); --
    end block;
    -- CP-element group 70:  transition  input  bypass 
    -- CP-element group 70: predecessors 
    -- CP-element group 70: 	69 
    -- CP-element group 70: successors 
    -- CP-element group 70:  members (3) 
      -- CP-element group 70: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1036_sample_completed_
      -- CP-element group 70: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1036_Sample/$exit
      -- CP-element group 70: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1036_Sample/ra
      -- 
    ra_3295_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 70_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1036_inst_ack_0, ack => decryption_engine_CP_2836_elements(70)); -- 
    -- CP-element group 71:  transition  input  bypass 
    -- CP-element group 71: predecessors 
    -- CP-element group 71: 	173 
    -- CP-element group 71: successors 
    -- CP-element group 71: 	72 
    -- CP-element group 71:  members (3) 
      -- CP-element group 71: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1036_update_completed_
      -- CP-element group 71: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1036_Update/$exit
      -- CP-element group 71: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1036_Update/ca
      -- 
    ca_3300_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 71_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1036_inst_ack_1, ack => decryption_engine_CP_2836_elements(71)); -- 
    -- CP-element group 72:  join  transition  output  bypass 
    -- CP-element group 72: predecessors 
    -- CP-element group 72: 	2 
    -- CP-element group 72: 	71 
    -- CP-element group 72: successors 
    -- CP-element group 72: 	73 
    -- CP-element group 72:  members (3) 
      -- CP-element group 72: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1041_sample_start_
      -- CP-element group 72: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1041_Sample/$entry
      -- CP-element group 72: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1041_Sample/rr
      -- 
    rr_3308_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3308_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(72), ack => XOR_u32_u32_1041_inst_req_0); -- 
    decryption_engine_cp_element_group_72: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "decryption_engine_cp_element_group_72"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(2) & decryption_engine_CP_2836_elements(71);
      gj_decryption_engine_cp_element_group_72 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(72), clk => clk, reset => reset); --
    end block;
    -- CP-element group 73:  transition  input  bypass 
    -- CP-element group 73: predecessors 
    -- CP-element group 73: 	72 
    -- CP-element group 73: successors 
    -- CP-element group 73:  members (3) 
      -- CP-element group 73: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1041_sample_completed_
      -- CP-element group 73: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1041_Sample/$exit
      -- CP-element group 73: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1041_Sample/ra
      -- 
    ra_3309_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 73_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1041_inst_ack_0, ack => decryption_engine_CP_2836_elements(73)); -- 
    -- CP-element group 74:  fork  transition  input  output  bypass 
    -- CP-element group 74: predecessors 
    -- CP-element group 74: 	173 
    -- CP-element group 74: successors 
    -- CP-element group 74: 	99 
    -- CP-element group 74: 	101 
    -- CP-element group 74: 	103 
    -- CP-element group 74: 	105 
    -- CP-element group 74:  members (15) 
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1041_update_completed_
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1041_Update/$exit
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1041_Update/ca
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1093_sample_start_
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1093_Sample/$entry
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1093_Sample/rr
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1097_sample_start_
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1097_Sample/$entry
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1097_Sample/rr
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1101_sample_start_
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1101_Sample/$entry
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1101_Sample/rr
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1105_sample_start_
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1105_Sample/$entry
      -- CP-element group 74: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1105_Sample/rr
      -- 
    ca_3314_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 74_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1041_inst_ack_1, ack => decryption_engine_CP_2836_elements(74)); -- 
    rr_3490_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3490_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(74), ack => slice_1093_inst_req_0); -- 
    rr_3504_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3504_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(74), ack => slice_1097_inst_req_0); -- 
    rr_3518_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3518_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(74), ack => slice_1101_inst_req_0); -- 
    rr_3532_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3532_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(74), ack => slice_1105_inst_req_0); -- 
    -- CP-element group 75:  transition  input  bypass 
    -- CP-element group 75: predecessors 
    -- CP-element group 75: 	44 
    -- CP-element group 75: successors 
    -- CP-element group 75:  members (3) 
      -- CP-element group 75: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1045_sample_completed_
      -- CP-element group 75: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1045_Sample/$exit
      -- CP-element group 75: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1045_Sample/ra
      -- 
    ra_3323_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 75_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1045_inst_ack_0, ack => decryption_engine_CP_2836_elements(75)); -- 
    -- CP-element group 76:  fork  transition  input  output  bypass 
    -- CP-element group 76: predecessors 
    -- CP-element group 76: 	173 
    -- CP-element group 76: successors 
    -- CP-element group 76: 	107 
    -- CP-element group 76: 	110 
    -- CP-element group 76:  members (6) 
      -- CP-element group 76: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1045_update_completed_
      -- CP-element group 76: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1045_Update/$exit
      -- CP-element group 76: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1045_Update/ca
      -- CP-element group 76: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1124_sample_start_
      -- CP-element group 76: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1124_Sample/$entry
      -- CP-element group 76: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1124_Sample/req
      -- 
    ca_3328_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 76_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1045_inst_ack_1, ack => decryption_engine_CP_2836_elements(76)); -- 
    req_3560_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3560_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(76), ack => WPIPE_out_d_1124_inst_req_0); -- 
    -- CP-element group 77:  transition  input  bypass 
    -- CP-element group 77: predecessors 
    -- CP-element group 77: 	44 
    -- CP-element group 77: successors 
    -- CP-element group 77:  members (3) 
      -- CP-element group 77: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1049_sample_completed_
      -- CP-element group 77: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1049_Sample/$exit
      -- CP-element group 77: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1049_Sample/ra
      -- 
    ra_3337_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 77_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1049_inst_ack_0, ack => decryption_engine_CP_2836_elements(77)); -- 
    -- CP-element group 78:  fork  transition  input  bypass 
    -- CP-element group 78: predecessors 
    -- CP-element group 78: 	173 
    -- CP-element group 78: successors 
    -- CP-element group 78: 	107 
    -- CP-element group 78: 	112 
    -- CP-element group 78:  members (3) 
      -- CP-element group 78: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1049_update_completed_
      -- CP-element group 78: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1049_Update/$exit
      -- CP-element group 78: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1049_Update/ca
      -- 
    ca_3342_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 78_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1049_inst_ack_1, ack => decryption_engine_CP_2836_elements(78)); -- 
    -- CP-element group 79:  transition  input  bypass 
    -- CP-element group 79: predecessors 
    -- CP-element group 79: 	44 
    -- CP-element group 79: successors 
    -- CP-element group 79:  members (3) 
      -- CP-element group 79: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1053_sample_completed_
      -- CP-element group 79: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1053_Sample/$exit
      -- CP-element group 79: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1053_Sample/ra
      -- 
    ra_3351_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 79_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1053_inst_ack_0, ack => decryption_engine_CP_2836_elements(79)); -- 
    -- CP-element group 80:  fork  transition  input  bypass 
    -- CP-element group 80: predecessors 
    -- CP-element group 80: 	173 
    -- CP-element group 80: successors 
    -- CP-element group 80: 	107 
    -- CP-element group 80: 	115 
    -- CP-element group 80:  members (3) 
      -- CP-element group 80: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1053_update_completed_
      -- CP-element group 80: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1053_Update/$exit
      -- CP-element group 80: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1053_Update/ca
      -- 
    ca_3356_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 80_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1053_inst_ack_1, ack => decryption_engine_CP_2836_elements(80)); -- 
    -- CP-element group 81:  transition  input  bypass 
    -- CP-element group 81: predecessors 
    -- CP-element group 81: 	44 
    -- CP-element group 81: successors 
    -- CP-element group 81:  members (3) 
      -- CP-element group 81: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1057_sample_completed_
      -- CP-element group 81: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1057_Sample/$exit
      -- CP-element group 81: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1057_Sample/ra
      -- 
    ra_3365_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 81_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1057_inst_ack_0, ack => decryption_engine_CP_2836_elements(81)); -- 
    -- CP-element group 82:  fork  transition  input  bypass 
    -- CP-element group 82: predecessors 
    -- CP-element group 82: 	173 
    -- CP-element group 82: successors 
    -- CP-element group 82: 	107 
    -- CP-element group 82: 	118 
    -- CP-element group 82:  members (3) 
      -- CP-element group 82: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1057_update_completed_
      -- CP-element group 82: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1057_Update/$exit
      -- CP-element group 82: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1057_Update/ca
      -- 
    ca_3370_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 82_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1057_inst_ack_1, ack => decryption_engine_CP_2836_elements(82)); -- 
    -- CP-element group 83:  transition  input  bypass 
    -- CP-element group 83: predecessors 
    -- CP-element group 83: 	54 
    -- CP-element group 83: successors 
    -- CP-element group 83:  members (3) 
      -- CP-element group 83: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1061_sample_completed_
      -- CP-element group 83: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1061_Sample/$exit
      -- CP-element group 83: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1061_Sample/ra
      -- 
    ra_3379_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 83_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1061_inst_ack_0, ack => decryption_engine_CP_2836_elements(83)); -- 
    -- CP-element group 84:  fork  transition  input  bypass 
    -- CP-element group 84: predecessors 
    -- CP-element group 84: 	173 
    -- CP-element group 84: successors 
    -- CP-element group 84: 	107 
    -- CP-element group 84: 	121 
    -- CP-element group 84:  members (3) 
      -- CP-element group 84: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1061_update_completed_
      -- CP-element group 84: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1061_Update/$exit
      -- CP-element group 84: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1061_Update/ca
      -- 
    ca_3384_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 84_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1061_inst_ack_1, ack => decryption_engine_CP_2836_elements(84)); -- 
    -- CP-element group 85:  transition  input  bypass 
    -- CP-element group 85: predecessors 
    -- CP-element group 85: 	54 
    -- CP-element group 85: successors 
    -- CP-element group 85:  members (3) 
      -- CP-element group 85: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1065_sample_completed_
      -- CP-element group 85: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1065_Sample/$exit
      -- CP-element group 85: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1065_Sample/ra
      -- 
    ra_3393_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 85_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1065_inst_ack_0, ack => decryption_engine_CP_2836_elements(85)); -- 
    -- CP-element group 86:  fork  transition  input  bypass 
    -- CP-element group 86: predecessors 
    -- CP-element group 86: 	173 
    -- CP-element group 86: successors 
    -- CP-element group 86: 	107 
    -- CP-element group 86: 	124 
    -- CP-element group 86:  members (3) 
      -- CP-element group 86: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1065_update_completed_
      -- CP-element group 86: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1065_Update/$exit
      -- CP-element group 86: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1065_Update/ca
      -- 
    ca_3398_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 86_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1065_inst_ack_1, ack => decryption_engine_CP_2836_elements(86)); -- 
    -- CP-element group 87:  transition  input  bypass 
    -- CP-element group 87: predecessors 
    -- CP-element group 87: 	54 
    -- CP-element group 87: successors 
    -- CP-element group 87:  members (3) 
      -- CP-element group 87: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1069_sample_completed_
      -- CP-element group 87: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1069_Sample/$exit
      -- CP-element group 87: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1069_Sample/ra
      -- 
    ra_3407_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 87_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1069_inst_ack_0, ack => decryption_engine_CP_2836_elements(87)); -- 
    -- CP-element group 88:  fork  transition  input  bypass 
    -- CP-element group 88: predecessors 
    -- CP-element group 88: 	173 
    -- CP-element group 88: successors 
    -- CP-element group 88: 	107 
    -- CP-element group 88: 	127 
    -- CP-element group 88:  members (3) 
      -- CP-element group 88: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1069_update_completed_
      -- CP-element group 88: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1069_Update/$exit
      -- CP-element group 88: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1069_Update/ca
      -- 
    ca_3412_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 88_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1069_inst_ack_1, ack => decryption_engine_CP_2836_elements(88)); -- 
    -- CP-element group 89:  transition  input  bypass 
    -- CP-element group 89: predecessors 
    -- CP-element group 89: 	54 
    -- CP-element group 89: successors 
    -- CP-element group 89:  members (3) 
      -- CP-element group 89: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1073_sample_completed_
      -- CP-element group 89: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1073_Sample/$exit
      -- CP-element group 89: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1073_Sample/ra
      -- 
    ra_3421_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 89_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1073_inst_ack_0, ack => decryption_engine_CP_2836_elements(89)); -- 
    -- CP-element group 90:  fork  transition  input  bypass 
    -- CP-element group 90: predecessors 
    -- CP-element group 90: 	173 
    -- CP-element group 90: successors 
    -- CP-element group 90: 	107 
    -- CP-element group 90: 	130 
    -- CP-element group 90:  members (3) 
      -- CP-element group 90: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1073_update_completed_
      -- CP-element group 90: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1073_Update/$exit
      -- CP-element group 90: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1073_Update/ca
      -- 
    ca_3426_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 90_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1073_inst_ack_1, ack => decryption_engine_CP_2836_elements(90)); -- 
    -- CP-element group 91:  transition  input  bypass 
    -- CP-element group 91: predecessors 
    -- CP-element group 91: 	64 
    -- CP-element group 91: successors 
    -- CP-element group 91:  members (3) 
      -- CP-element group 91: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1077_sample_completed_
      -- CP-element group 91: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1077_Sample/$exit
      -- CP-element group 91: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1077_Sample/ra
      -- 
    ra_3435_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 91_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1077_inst_ack_0, ack => decryption_engine_CP_2836_elements(91)); -- 
    -- CP-element group 92:  fork  transition  input  bypass 
    -- CP-element group 92: predecessors 
    -- CP-element group 92: 	173 
    -- CP-element group 92: successors 
    -- CP-element group 92: 	107 
    -- CP-element group 92: 	133 
    -- CP-element group 92:  members (3) 
      -- CP-element group 92: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1077_update_completed_
      -- CP-element group 92: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1077_Update/$exit
      -- CP-element group 92: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1077_Update/ca
      -- 
    ca_3440_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 92_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1077_inst_ack_1, ack => decryption_engine_CP_2836_elements(92)); -- 
    -- CP-element group 93:  transition  input  bypass 
    -- CP-element group 93: predecessors 
    -- CP-element group 93: 	64 
    -- CP-element group 93: successors 
    -- CP-element group 93:  members (3) 
      -- CP-element group 93: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1081_sample_completed_
      -- CP-element group 93: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1081_Sample/$exit
      -- CP-element group 93: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1081_Sample/ra
      -- 
    ra_3449_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 93_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1081_inst_ack_0, ack => decryption_engine_CP_2836_elements(93)); -- 
    -- CP-element group 94:  fork  transition  input  bypass 
    -- CP-element group 94: predecessors 
    -- CP-element group 94: 	173 
    -- CP-element group 94: successors 
    -- CP-element group 94: 	107 
    -- CP-element group 94: 	136 
    -- CP-element group 94:  members (3) 
      -- CP-element group 94: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1081_Update/$exit
      -- CP-element group 94: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1081_update_completed_
      -- CP-element group 94: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1081_Update/ca
      -- 
    ca_3454_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 94_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1081_inst_ack_1, ack => decryption_engine_CP_2836_elements(94)); -- 
    -- CP-element group 95:  transition  input  bypass 
    -- CP-element group 95: predecessors 
    -- CP-element group 95: 	64 
    -- CP-element group 95: successors 
    -- CP-element group 95:  members (3) 
      -- CP-element group 95: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1085_sample_completed_
      -- CP-element group 95: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1085_Sample/$exit
      -- CP-element group 95: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1085_Sample/ra
      -- 
    ra_3463_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 95_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1085_inst_ack_0, ack => decryption_engine_CP_2836_elements(95)); -- 
    -- CP-element group 96:  fork  transition  input  bypass 
    -- CP-element group 96: predecessors 
    -- CP-element group 96: 	173 
    -- CP-element group 96: successors 
    -- CP-element group 96: 	107 
    -- CP-element group 96: 	139 
    -- CP-element group 96:  members (3) 
      -- CP-element group 96: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1085_update_completed_
      -- CP-element group 96: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1085_Update/$exit
      -- CP-element group 96: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1085_Update/ca
      -- 
    ca_3468_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 96_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1085_inst_ack_1, ack => decryption_engine_CP_2836_elements(96)); -- 
    -- CP-element group 97:  transition  input  bypass 
    -- CP-element group 97: predecessors 
    -- CP-element group 97: 	64 
    -- CP-element group 97: successors 
    -- CP-element group 97:  members (3) 
      -- CP-element group 97: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1089_sample_completed_
      -- CP-element group 97: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1089_Sample/$exit
      -- CP-element group 97: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1089_Sample/ra
      -- 
    ra_3477_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 97_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1089_inst_ack_0, ack => decryption_engine_CP_2836_elements(97)); -- 
    -- CP-element group 98:  fork  transition  input  bypass 
    -- CP-element group 98: predecessors 
    -- CP-element group 98: 	173 
    -- CP-element group 98: successors 
    -- CP-element group 98: 	107 
    -- CP-element group 98: 	142 
    -- CP-element group 98:  members (3) 
      -- CP-element group 98: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1089_update_completed_
      -- CP-element group 98: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1089_Update/$exit
      -- CP-element group 98: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1089_Update/ca
      -- 
    ca_3482_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 98_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1089_inst_ack_1, ack => decryption_engine_CP_2836_elements(98)); -- 
    -- CP-element group 99:  transition  input  bypass 
    -- CP-element group 99: predecessors 
    -- CP-element group 99: 	74 
    -- CP-element group 99: successors 
    -- CP-element group 99:  members (3) 
      -- CP-element group 99: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1093_sample_completed_
      -- CP-element group 99: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1093_Sample/$exit
      -- CP-element group 99: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1093_Sample/ra
      -- 
    ra_3491_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 99_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1093_inst_ack_0, ack => decryption_engine_CP_2836_elements(99)); -- 
    -- CP-element group 100:  fork  transition  input  bypass 
    -- CP-element group 100: predecessors 
    -- CP-element group 100: 	173 
    -- CP-element group 100: successors 
    -- CP-element group 100: 	107 
    -- CP-element group 100: 	145 
    -- CP-element group 100:  members (3) 
      -- CP-element group 100: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1093_update_completed_
      -- CP-element group 100: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1093_Update/$exit
      -- CP-element group 100: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1093_Update/ca
      -- 
    ca_3496_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 100_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1093_inst_ack_1, ack => decryption_engine_CP_2836_elements(100)); -- 
    -- CP-element group 101:  transition  input  bypass 
    -- CP-element group 101: predecessors 
    -- CP-element group 101: 	74 
    -- CP-element group 101: successors 
    -- CP-element group 101:  members (3) 
      -- CP-element group 101: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1097_sample_completed_
      -- CP-element group 101: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1097_Sample/$exit
      -- CP-element group 101: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1097_Sample/ra
      -- 
    ra_3505_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 101_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1097_inst_ack_0, ack => decryption_engine_CP_2836_elements(101)); -- 
    -- CP-element group 102:  fork  transition  input  bypass 
    -- CP-element group 102: predecessors 
    -- CP-element group 102: 	173 
    -- CP-element group 102: successors 
    -- CP-element group 102: 	107 
    -- CP-element group 102: 	148 
    -- CP-element group 102:  members (3) 
      -- CP-element group 102: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1097_update_completed_
      -- CP-element group 102: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1097_Update/$exit
      -- CP-element group 102: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1097_Update/ca
      -- 
    ca_3510_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 102_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1097_inst_ack_1, ack => decryption_engine_CP_2836_elements(102)); -- 
    -- CP-element group 103:  transition  input  bypass 
    -- CP-element group 103: predecessors 
    -- CP-element group 103: 	74 
    -- CP-element group 103: successors 
    -- CP-element group 103:  members (3) 
      -- CP-element group 103: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1101_sample_completed_
      -- CP-element group 103: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1101_Sample/$exit
      -- CP-element group 103: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1101_Sample/ra
      -- 
    ra_3519_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 103_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1101_inst_ack_0, ack => decryption_engine_CP_2836_elements(103)); -- 
    -- CP-element group 104:  transition  input  bypass 
    -- CP-element group 104: predecessors 
    -- CP-element group 104: 	173 
    -- CP-element group 104: successors 
    -- CP-element group 104: 	153 
    -- CP-element group 104:  members (3) 
      -- CP-element group 104: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1101_update_completed_
      -- CP-element group 104: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1101_Update/$exit
      -- CP-element group 104: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1101_Update/ca
      -- 
    ca_3524_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 104_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1101_inst_ack_1, ack => decryption_engine_CP_2836_elements(104)); -- 
    -- CP-element group 105:  transition  input  bypass 
    -- CP-element group 105: predecessors 
    -- CP-element group 105: 	74 
    -- CP-element group 105: successors 
    -- CP-element group 105:  members (3) 
      -- CP-element group 105: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1105_sample_completed_
      -- CP-element group 105: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1105_Sample/$exit
      -- CP-element group 105: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1105_Sample/ra
      -- 
    ra_3533_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 105_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1105_inst_ack_0, ack => decryption_engine_CP_2836_elements(105)); -- 
    -- CP-element group 106:  transition  input  bypass 
    -- CP-element group 106: predecessors 
    -- CP-element group 106: 	173 
    -- CP-element group 106: successors 
    -- CP-element group 106: 	156 
    -- CP-element group 106:  members (3) 
      -- CP-element group 106: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1105_update_completed_
      -- CP-element group 106: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1105_Update/$exit
      -- CP-element group 106: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1105_Update/ca
      -- 
    ca_3538_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 106_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1105_inst_ack_1, ack => decryption_engine_CP_2836_elements(106)); -- 
    -- CP-element group 107:  join  transition  output  bypass 
    -- CP-element group 107: predecessors 
    -- CP-element group 107: 	90 
    -- CP-element group 107: 	92 
    -- CP-element group 107: 	94 
    -- CP-element group 107: 	96 
    -- CP-element group 107: 	98 
    -- CP-element group 107: 	100 
    -- CP-element group 107: 	102 
    -- CP-element group 107: 	84 
    -- CP-element group 107: 	86 
    -- CP-element group 107: 	88 
    -- CP-element group 107: 	76 
    -- CP-element group 107: 	78 
    -- CP-element group 107: 	80 
    -- CP-element group 107: 	82 
    -- CP-element group 107: successors 
    -- CP-element group 107: 	108 
    -- CP-element group 107:  members (3) 
      -- CP-element group 107: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_1123_sample_start_
      -- CP-element group 107: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_1123_Sample/$entry
      -- CP-element group 107: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_1123_Sample/crr
      -- 
    crr_3546_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_3546_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(107), ack => call_stmt_1123_call_req_0); -- 
    decryption_engine_cp_element_group_107: block -- 
      constant place_capacities: IntegerArray(0 to 13) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1,8 => 1,9 => 1,10 => 1,11 => 1,12 => 1,13 => 1);
      constant place_markings: IntegerArray(0 to 13)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0,9 => 0,10 => 0,11 => 0,12 => 0,13 => 0);
      constant place_delays: IntegerArray(0 to 13) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0,9 => 0,10 => 0,11 => 0,12 => 0,13 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_107"; 
      signal preds: BooleanArray(1 to 14); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(90) & decryption_engine_CP_2836_elements(92) & decryption_engine_CP_2836_elements(94) & decryption_engine_CP_2836_elements(96) & decryption_engine_CP_2836_elements(98) & decryption_engine_CP_2836_elements(100) & decryption_engine_CP_2836_elements(102) & decryption_engine_CP_2836_elements(84) & decryption_engine_CP_2836_elements(86) & decryption_engine_CP_2836_elements(88) & decryption_engine_CP_2836_elements(76) & decryption_engine_CP_2836_elements(78) & decryption_engine_CP_2836_elements(80) & decryption_engine_CP_2836_elements(82);
      gj_decryption_engine_cp_element_group_107 : generic_join generic map(name => joinName, number_of_predecessors => 14, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(107), clk => clk, reset => reset); --
    end block;
    -- CP-element group 108:  transition  input  bypass 
    -- CP-element group 108: predecessors 
    -- CP-element group 108: 	107 
    -- CP-element group 108: successors 
    -- CP-element group 108:  members (3) 
      -- CP-element group 108: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_1123_sample_completed_
      -- CP-element group 108: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_1123_Sample/$exit
      -- CP-element group 108: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_1123_Sample/cra
      -- 
    cra_3547_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 108_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1123_call_ack_0, ack => decryption_engine_CP_2836_elements(108)); -- 
    -- CP-element group 109:  fork  transition  input  bypass 
    -- CP-element group 109: predecessors 
    -- CP-element group 109: 	173 
    -- CP-element group 109: successors 
    -- CP-element group 109: 	153 
    -- CP-element group 109: 	156 
    -- CP-element group 109:  members (3) 
      -- CP-element group 109: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_1123_update_completed_
      -- CP-element group 109: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_1123_Update/$exit
      -- CP-element group 109: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_1123_Update/cca
      -- 
    cca_3552_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 109_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1123_call_ack_1, ack => decryption_engine_CP_2836_elements(109)); -- 
    -- CP-element group 110:  transition  input  output  bypass 
    -- CP-element group 110: predecessors 
    -- CP-element group 110: 	76 
    -- CP-element group 110: successors 
    -- CP-element group 110: 	111 
    -- CP-element group 110:  members (6) 
      -- CP-element group 110: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1124_sample_completed_
      -- CP-element group 110: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1124_update_start_
      -- CP-element group 110: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1124_Sample/$exit
      -- CP-element group 110: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1124_Sample/ack
      -- CP-element group 110: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1124_Update/$entry
      -- CP-element group 110: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1124_Update/req
      -- 
    ack_3561_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 110_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1124_inst_ack_0, ack => decryption_engine_CP_2836_elements(110)); -- 
    req_3565_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3565_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(110), ack => WPIPE_out_d_1124_inst_req_1); -- 
    -- CP-element group 111:  transition  input  bypass 
    -- CP-element group 111: predecessors 
    -- CP-element group 111: 	110 
    -- CP-element group 111: successors 
    -- CP-element group 111: 	112 
    -- CP-element group 111:  members (3) 
      -- CP-element group 111: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1124_update_completed_
      -- CP-element group 111: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1124_Update/$exit
      -- CP-element group 111: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1124_Update/ack
      -- 
    ack_3566_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 111_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1124_inst_ack_1, ack => decryption_engine_CP_2836_elements(111)); -- 
    -- CP-element group 112:  join  transition  output  bypass 
    -- CP-element group 112: predecessors 
    -- CP-element group 112: 	111 
    -- CP-element group 112: 	78 
    -- CP-element group 112: successors 
    -- CP-element group 112: 	113 
    -- CP-element group 112:  members (3) 
      -- CP-element group 112: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1127_sample_start_
      -- CP-element group 112: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1127_Sample/$entry
      -- CP-element group 112: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1127_Sample/req
      -- 
    req_3574_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3574_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(112), ack => WPIPE_out_d_1127_inst_req_0); -- 
    decryption_engine_cp_element_group_112: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_112"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(111) & decryption_engine_CP_2836_elements(78);
      gj_decryption_engine_cp_element_group_112 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(112), clk => clk, reset => reset); --
    end block;
    -- CP-element group 113:  transition  input  output  bypass 
    -- CP-element group 113: predecessors 
    -- CP-element group 113: 	112 
    -- CP-element group 113: successors 
    -- CP-element group 113: 	114 
    -- CP-element group 113:  members (6) 
      -- CP-element group 113: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1127_sample_completed_
      -- CP-element group 113: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1127_update_start_
      -- CP-element group 113: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1127_Sample/$exit
      -- CP-element group 113: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1127_Sample/ack
      -- CP-element group 113: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1127_Update/$entry
      -- CP-element group 113: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1127_Update/req
      -- 
    ack_3575_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 113_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1127_inst_ack_0, ack => decryption_engine_CP_2836_elements(113)); -- 
    req_3579_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3579_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(113), ack => WPIPE_out_d_1127_inst_req_1); -- 
    -- CP-element group 114:  transition  input  bypass 
    -- CP-element group 114: predecessors 
    -- CP-element group 114: 	113 
    -- CP-element group 114: successors 
    -- CP-element group 114: 	115 
    -- CP-element group 114:  members (3) 
      -- CP-element group 114: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1127_update_completed_
      -- CP-element group 114: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1127_Update/$exit
      -- CP-element group 114: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1127_Update/ack
      -- 
    ack_3580_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 114_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1127_inst_ack_1, ack => decryption_engine_CP_2836_elements(114)); -- 
    -- CP-element group 115:  join  transition  output  bypass 
    -- CP-element group 115: predecessors 
    -- CP-element group 115: 	114 
    -- CP-element group 115: 	80 
    -- CP-element group 115: successors 
    -- CP-element group 115: 	116 
    -- CP-element group 115:  members (3) 
      -- CP-element group 115: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1130_sample_start_
      -- CP-element group 115: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1130_Sample/$entry
      -- CP-element group 115: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1130_Sample/req
      -- 
    req_3588_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3588_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(115), ack => WPIPE_out_d_1130_inst_req_0); -- 
    decryption_engine_cp_element_group_115: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_115"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(114) & decryption_engine_CP_2836_elements(80);
      gj_decryption_engine_cp_element_group_115 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(115), clk => clk, reset => reset); --
    end block;
    -- CP-element group 116:  transition  input  output  bypass 
    -- CP-element group 116: predecessors 
    -- CP-element group 116: 	115 
    -- CP-element group 116: successors 
    -- CP-element group 116: 	117 
    -- CP-element group 116:  members (6) 
      -- CP-element group 116: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1130_sample_completed_
      -- CP-element group 116: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1130_update_start_
      -- CP-element group 116: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1130_Sample/$exit
      -- CP-element group 116: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1130_Sample/ack
      -- CP-element group 116: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1130_Update/$entry
      -- CP-element group 116: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1130_Update/req
      -- 
    ack_3589_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 116_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1130_inst_ack_0, ack => decryption_engine_CP_2836_elements(116)); -- 
    req_3593_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3593_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(116), ack => WPIPE_out_d_1130_inst_req_1); -- 
    -- CP-element group 117:  transition  input  bypass 
    -- CP-element group 117: predecessors 
    -- CP-element group 117: 	116 
    -- CP-element group 117: successors 
    -- CP-element group 117: 	118 
    -- CP-element group 117:  members (3) 
      -- CP-element group 117: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1130_update_completed_
      -- CP-element group 117: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1130_Update/$exit
      -- CP-element group 117: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1130_Update/ack
      -- 
    ack_3594_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 117_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1130_inst_ack_1, ack => decryption_engine_CP_2836_elements(117)); -- 
    -- CP-element group 118:  join  transition  output  bypass 
    -- CP-element group 118: predecessors 
    -- CP-element group 118: 	117 
    -- CP-element group 118: 	82 
    -- CP-element group 118: successors 
    -- CP-element group 118: 	119 
    -- CP-element group 118:  members (3) 
      -- CP-element group 118: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1133_sample_start_
      -- CP-element group 118: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1133_Sample/$entry
      -- CP-element group 118: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1133_Sample/req
      -- 
    req_3602_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3602_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(118), ack => WPIPE_out_d_1133_inst_req_0); -- 
    decryption_engine_cp_element_group_118: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_118"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(117) & decryption_engine_CP_2836_elements(82);
      gj_decryption_engine_cp_element_group_118 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(118), clk => clk, reset => reset); --
    end block;
    -- CP-element group 119:  transition  input  output  bypass 
    -- CP-element group 119: predecessors 
    -- CP-element group 119: 	118 
    -- CP-element group 119: successors 
    -- CP-element group 119: 	120 
    -- CP-element group 119:  members (6) 
      -- CP-element group 119: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1133_sample_completed_
      -- CP-element group 119: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1133_update_start_
      -- CP-element group 119: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1133_Sample/$exit
      -- CP-element group 119: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1133_Sample/ack
      -- CP-element group 119: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1133_Update/$entry
      -- CP-element group 119: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1133_Update/req
      -- 
    ack_3603_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 119_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1133_inst_ack_0, ack => decryption_engine_CP_2836_elements(119)); -- 
    req_3607_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3607_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(119), ack => WPIPE_out_d_1133_inst_req_1); -- 
    -- CP-element group 120:  transition  input  bypass 
    -- CP-element group 120: predecessors 
    -- CP-element group 120: 	119 
    -- CP-element group 120: successors 
    -- CP-element group 120: 	121 
    -- CP-element group 120:  members (3) 
      -- CP-element group 120: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1133_update_completed_
      -- CP-element group 120: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1133_Update/$exit
      -- CP-element group 120: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1133_Update/ack
      -- 
    ack_3608_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 120_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1133_inst_ack_1, ack => decryption_engine_CP_2836_elements(120)); -- 
    -- CP-element group 121:  join  transition  output  bypass 
    -- CP-element group 121: predecessors 
    -- CP-element group 121: 	120 
    -- CP-element group 121: 	84 
    -- CP-element group 121: successors 
    -- CP-element group 121: 	122 
    -- CP-element group 121:  members (3) 
      -- CP-element group 121: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1136_sample_start_
      -- CP-element group 121: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1136_Sample/$entry
      -- CP-element group 121: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1136_Sample/req
      -- 
    req_3616_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3616_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(121), ack => WPIPE_out_d_1136_inst_req_0); -- 
    decryption_engine_cp_element_group_121: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_121"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(120) & decryption_engine_CP_2836_elements(84);
      gj_decryption_engine_cp_element_group_121 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(121), clk => clk, reset => reset); --
    end block;
    -- CP-element group 122:  transition  input  output  bypass 
    -- CP-element group 122: predecessors 
    -- CP-element group 122: 	121 
    -- CP-element group 122: successors 
    -- CP-element group 122: 	123 
    -- CP-element group 122:  members (6) 
      -- CP-element group 122: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1136_sample_completed_
      -- CP-element group 122: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1136_update_start_
      -- CP-element group 122: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1136_Sample/$exit
      -- CP-element group 122: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1136_Sample/ack
      -- CP-element group 122: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1136_Update/$entry
      -- CP-element group 122: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1136_Update/req
      -- 
    ack_3617_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 122_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1136_inst_ack_0, ack => decryption_engine_CP_2836_elements(122)); -- 
    req_3621_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3621_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(122), ack => WPIPE_out_d_1136_inst_req_1); -- 
    -- CP-element group 123:  transition  input  bypass 
    -- CP-element group 123: predecessors 
    -- CP-element group 123: 	122 
    -- CP-element group 123: successors 
    -- CP-element group 123: 	124 
    -- CP-element group 123:  members (3) 
      -- CP-element group 123: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1136_update_completed_
      -- CP-element group 123: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1136_Update/$exit
      -- CP-element group 123: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1136_Update/ack
      -- 
    ack_3622_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 123_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1136_inst_ack_1, ack => decryption_engine_CP_2836_elements(123)); -- 
    -- CP-element group 124:  join  transition  output  bypass 
    -- CP-element group 124: predecessors 
    -- CP-element group 124: 	123 
    -- CP-element group 124: 	86 
    -- CP-element group 124: successors 
    -- CP-element group 124: 	125 
    -- CP-element group 124:  members (3) 
      -- CP-element group 124: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1139_sample_start_
      -- CP-element group 124: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1139_Sample/$entry
      -- CP-element group 124: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1139_Sample/req
      -- 
    req_3630_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3630_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(124), ack => WPIPE_out_d_1139_inst_req_0); -- 
    decryption_engine_cp_element_group_124: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_124"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(123) & decryption_engine_CP_2836_elements(86);
      gj_decryption_engine_cp_element_group_124 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(124), clk => clk, reset => reset); --
    end block;
    -- CP-element group 125:  transition  input  output  bypass 
    -- CP-element group 125: predecessors 
    -- CP-element group 125: 	124 
    -- CP-element group 125: successors 
    -- CP-element group 125: 	126 
    -- CP-element group 125:  members (6) 
      -- CP-element group 125: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1139_sample_completed_
      -- CP-element group 125: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1139_update_start_
      -- CP-element group 125: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1139_Sample/$exit
      -- CP-element group 125: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1139_Sample/ack
      -- CP-element group 125: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1139_Update/$entry
      -- CP-element group 125: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1139_Update/req
      -- 
    ack_3631_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 125_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1139_inst_ack_0, ack => decryption_engine_CP_2836_elements(125)); -- 
    req_3635_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3635_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(125), ack => WPIPE_out_d_1139_inst_req_1); -- 
    -- CP-element group 126:  transition  input  bypass 
    -- CP-element group 126: predecessors 
    -- CP-element group 126: 	125 
    -- CP-element group 126: successors 
    -- CP-element group 126: 	127 
    -- CP-element group 126:  members (3) 
      -- CP-element group 126: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1139_update_completed_
      -- CP-element group 126: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1139_Update/$exit
      -- CP-element group 126: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1139_Update/ack
      -- 
    ack_3636_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 126_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1139_inst_ack_1, ack => decryption_engine_CP_2836_elements(126)); -- 
    -- CP-element group 127:  join  transition  output  bypass 
    -- CP-element group 127: predecessors 
    -- CP-element group 127: 	126 
    -- CP-element group 127: 	88 
    -- CP-element group 127: successors 
    -- CP-element group 127: 	128 
    -- CP-element group 127:  members (3) 
      -- CP-element group 127: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1142_sample_start_
      -- CP-element group 127: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1142_Sample/$entry
      -- CP-element group 127: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1142_Sample/req
      -- 
    req_3644_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3644_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(127), ack => WPIPE_out_d_1142_inst_req_0); -- 
    decryption_engine_cp_element_group_127: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_127"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(126) & decryption_engine_CP_2836_elements(88);
      gj_decryption_engine_cp_element_group_127 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(127), clk => clk, reset => reset); --
    end block;
    -- CP-element group 128:  transition  input  output  bypass 
    -- CP-element group 128: predecessors 
    -- CP-element group 128: 	127 
    -- CP-element group 128: successors 
    -- CP-element group 128: 	129 
    -- CP-element group 128:  members (6) 
      -- CP-element group 128: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1142_sample_completed_
      -- CP-element group 128: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1142_update_start_
      -- CP-element group 128: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1142_Sample/$exit
      -- CP-element group 128: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1142_Sample/ack
      -- CP-element group 128: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1142_Update/$entry
      -- CP-element group 128: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1142_Update/req
      -- 
    ack_3645_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 128_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1142_inst_ack_0, ack => decryption_engine_CP_2836_elements(128)); -- 
    req_3649_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3649_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(128), ack => WPIPE_out_d_1142_inst_req_1); -- 
    -- CP-element group 129:  transition  input  bypass 
    -- CP-element group 129: predecessors 
    -- CP-element group 129: 	128 
    -- CP-element group 129: successors 
    -- CP-element group 129: 	130 
    -- CP-element group 129:  members (3) 
      -- CP-element group 129: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1142_update_completed_
      -- CP-element group 129: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1142_Update/$exit
      -- CP-element group 129: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1142_Update/ack
      -- 
    ack_3650_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 129_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1142_inst_ack_1, ack => decryption_engine_CP_2836_elements(129)); -- 
    -- CP-element group 130:  join  transition  output  bypass 
    -- CP-element group 130: predecessors 
    -- CP-element group 130: 	90 
    -- CP-element group 130: 	129 
    -- CP-element group 130: successors 
    -- CP-element group 130: 	131 
    -- CP-element group 130:  members (3) 
      -- CP-element group 130: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1145_sample_start_
      -- CP-element group 130: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1145_Sample/$entry
      -- CP-element group 130: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1145_Sample/req
      -- 
    req_3658_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3658_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(130), ack => WPIPE_out_d_1145_inst_req_0); -- 
    decryption_engine_cp_element_group_130: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_130"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(90) & decryption_engine_CP_2836_elements(129);
      gj_decryption_engine_cp_element_group_130 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(130), clk => clk, reset => reset); --
    end block;
    -- CP-element group 131:  transition  input  output  bypass 
    -- CP-element group 131: predecessors 
    -- CP-element group 131: 	130 
    -- CP-element group 131: successors 
    -- CP-element group 131: 	132 
    -- CP-element group 131:  members (6) 
      -- CP-element group 131: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1145_sample_completed_
      -- CP-element group 131: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1145_update_start_
      -- CP-element group 131: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1145_Sample/$exit
      -- CP-element group 131: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1145_Sample/ack
      -- CP-element group 131: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1145_Update/$entry
      -- CP-element group 131: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1145_Update/req
      -- 
    ack_3659_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 131_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1145_inst_ack_0, ack => decryption_engine_CP_2836_elements(131)); -- 
    req_3663_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3663_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(131), ack => WPIPE_out_d_1145_inst_req_1); -- 
    -- CP-element group 132:  transition  input  bypass 
    -- CP-element group 132: predecessors 
    -- CP-element group 132: 	131 
    -- CP-element group 132: successors 
    -- CP-element group 132: 	133 
    -- CP-element group 132:  members (3) 
      -- CP-element group 132: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1145_update_completed_
      -- CP-element group 132: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1145_Update/$exit
      -- CP-element group 132: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1145_Update/ack
      -- 
    ack_3664_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 132_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1145_inst_ack_1, ack => decryption_engine_CP_2836_elements(132)); -- 
    -- CP-element group 133:  join  transition  output  bypass 
    -- CP-element group 133: predecessors 
    -- CP-element group 133: 	92 
    -- CP-element group 133: 	132 
    -- CP-element group 133: successors 
    -- CP-element group 133: 	134 
    -- CP-element group 133:  members (3) 
      -- CP-element group 133: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1148_sample_start_
      -- CP-element group 133: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1148_Sample/$entry
      -- CP-element group 133: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1148_Sample/req
      -- 
    req_3672_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3672_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(133), ack => WPIPE_out_d_1148_inst_req_0); -- 
    decryption_engine_cp_element_group_133: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_133"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(92) & decryption_engine_CP_2836_elements(132);
      gj_decryption_engine_cp_element_group_133 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(133), clk => clk, reset => reset); --
    end block;
    -- CP-element group 134:  transition  input  output  bypass 
    -- CP-element group 134: predecessors 
    -- CP-element group 134: 	133 
    -- CP-element group 134: successors 
    -- CP-element group 134: 	135 
    -- CP-element group 134:  members (6) 
      -- CP-element group 134: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1148_sample_completed_
      -- CP-element group 134: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1148_update_start_
      -- CP-element group 134: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1148_Sample/$exit
      -- CP-element group 134: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1148_Sample/ack
      -- CP-element group 134: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1148_Update/$entry
      -- CP-element group 134: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1148_Update/req
      -- 
    ack_3673_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 134_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1148_inst_ack_0, ack => decryption_engine_CP_2836_elements(134)); -- 
    req_3677_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3677_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(134), ack => WPIPE_out_d_1148_inst_req_1); -- 
    -- CP-element group 135:  transition  input  bypass 
    -- CP-element group 135: predecessors 
    -- CP-element group 135: 	134 
    -- CP-element group 135: successors 
    -- CP-element group 135: 	136 
    -- CP-element group 135:  members (3) 
      -- CP-element group 135: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1148_update_completed_
      -- CP-element group 135: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1148_Update/$exit
      -- CP-element group 135: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1148_Update/ack
      -- 
    ack_3678_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 135_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1148_inst_ack_1, ack => decryption_engine_CP_2836_elements(135)); -- 
    -- CP-element group 136:  join  transition  output  bypass 
    -- CP-element group 136: predecessors 
    -- CP-element group 136: 	94 
    -- CP-element group 136: 	135 
    -- CP-element group 136: successors 
    -- CP-element group 136: 	137 
    -- CP-element group 136:  members (3) 
      -- CP-element group 136: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1151_sample_start_
      -- CP-element group 136: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1151_Sample/$entry
      -- CP-element group 136: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1151_Sample/req
      -- 
    req_3686_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3686_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(136), ack => WPIPE_out_d_1151_inst_req_0); -- 
    decryption_engine_cp_element_group_136: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_136"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(94) & decryption_engine_CP_2836_elements(135);
      gj_decryption_engine_cp_element_group_136 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(136), clk => clk, reset => reset); --
    end block;
    -- CP-element group 137:  transition  input  output  bypass 
    -- CP-element group 137: predecessors 
    -- CP-element group 137: 	136 
    -- CP-element group 137: successors 
    -- CP-element group 137: 	138 
    -- CP-element group 137:  members (6) 
      -- CP-element group 137: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1151_sample_completed_
      -- CP-element group 137: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1151_update_start_
      -- CP-element group 137: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1151_Sample/$exit
      -- CP-element group 137: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1151_Sample/ack
      -- CP-element group 137: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1151_Update/$entry
      -- CP-element group 137: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1151_Update/req
      -- 
    ack_3687_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 137_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1151_inst_ack_0, ack => decryption_engine_CP_2836_elements(137)); -- 
    req_3691_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3691_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(137), ack => WPIPE_out_d_1151_inst_req_1); -- 
    -- CP-element group 138:  transition  input  bypass 
    -- CP-element group 138: predecessors 
    -- CP-element group 138: 	137 
    -- CP-element group 138: successors 
    -- CP-element group 138: 	139 
    -- CP-element group 138:  members (3) 
      -- CP-element group 138: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1151_update_completed_
      -- CP-element group 138: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1151_Update/$exit
      -- CP-element group 138: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1151_Update/ack
      -- 
    ack_3692_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 138_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1151_inst_ack_1, ack => decryption_engine_CP_2836_elements(138)); -- 
    -- CP-element group 139:  join  transition  output  bypass 
    -- CP-element group 139: predecessors 
    -- CP-element group 139: 	96 
    -- CP-element group 139: 	138 
    -- CP-element group 139: successors 
    -- CP-element group 139: 	140 
    -- CP-element group 139:  members (3) 
      -- CP-element group 139: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1154_sample_start_
      -- CP-element group 139: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1154_Sample/$entry
      -- CP-element group 139: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1154_Sample/req
      -- 
    req_3700_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3700_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(139), ack => WPIPE_out_d_1154_inst_req_0); -- 
    decryption_engine_cp_element_group_139: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_139"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(96) & decryption_engine_CP_2836_elements(138);
      gj_decryption_engine_cp_element_group_139 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(139), clk => clk, reset => reset); --
    end block;
    -- CP-element group 140:  transition  input  output  bypass 
    -- CP-element group 140: predecessors 
    -- CP-element group 140: 	139 
    -- CP-element group 140: successors 
    -- CP-element group 140: 	141 
    -- CP-element group 140:  members (6) 
      -- CP-element group 140: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1154_sample_completed_
      -- CP-element group 140: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1154_update_start_
      -- CP-element group 140: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1154_Sample/$exit
      -- CP-element group 140: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1154_Sample/ack
      -- CP-element group 140: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1154_Update/$entry
      -- CP-element group 140: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1154_Update/req
      -- 
    ack_3701_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 140_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1154_inst_ack_0, ack => decryption_engine_CP_2836_elements(140)); -- 
    req_3705_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3705_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(140), ack => WPIPE_out_d_1154_inst_req_1); -- 
    -- CP-element group 141:  transition  input  bypass 
    -- CP-element group 141: predecessors 
    -- CP-element group 141: 	140 
    -- CP-element group 141: successors 
    -- CP-element group 141: 	142 
    -- CP-element group 141:  members (3) 
      -- CP-element group 141: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1154_update_completed_
      -- CP-element group 141: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1154_Update/$exit
      -- CP-element group 141: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1154_Update/ack
      -- 
    ack_3706_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 141_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1154_inst_ack_1, ack => decryption_engine_CP_2836_elements(141)); -- 
    -- CP-element group 142:  join  transition  output  bypass 
    -- CP-element group 142: predecessors 
    -- CP-element group 142: 	98 
    -- CP-element group 142: 	141 
    -- CP-element group 142: successors 
    -- CP-element group 142: 	143 
    -- CP-element group 142:  members (3) 
      -- CP-element group 142: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1157_sample_start_
      -- CP-element group 142: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1157_Sample/$entry
      -- CP-element group 142: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1157_Sample/req
      -- 
    req_3714_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3714_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(142), ack => WPIPE_out_d_1157_inst_req_0); -- 
    decryption_engine_cp_element_group_142: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_142"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(98) & decryption_engine_CP_2836_elements(141);
      gj_decryption_engine_cp_element_group_142 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(142), clk => clk, reset => reset); --
    end block;
    -- CP-element group 143:  transition  input  output  bypass 
    -- CP-element group 143: predecessors 
    -- CP-element group 143: 	142 
    -- CP-element group 143: successors 
    -- CP-element group 143: 	144 
    -- CP-element group 143:  members (6) 
      -- CP-element group 143: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1157_sample_completed_
      -- CP-element group 143: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1157_update_start_
      -- CP-element group 143: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1157_Sample/$exit
      -- CP-element group 143: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1157_Sample/ack
      -- CP-element group 143: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1157_Update/$entry
      -- CP-element group 143: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1157_Update/req
      -- 
    ack_3715_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 143_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1157_inst_ack_0, ack => decryption_engine_CP_2836_elements(143)); -- 
    req_3719_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3719_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(143), ack => WPIPE_out_d_1157_inst_req_1); -- 
    -- CP-element group 144:  transition  input  bypass 
    -- CP-element group 144: predecessors 
    -- CP-element group 144: 	143 
    -- CP-element group 144: successors 
    -- CP-element group 144: 	145 
    -- CP-element group 144:  members (3) 
      -- CP-element group 144: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1157_update_completed_
      -- CP-element group 144: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1157_Update/$exit
      -- CP-element group 144: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1157_Update/ack
      -- 
    ack_3720_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 144_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1157_inst_ack_1, ack => decryption_engine_CP_2836_elements(144)); -- 
    -- CP-element group 145:  join  transition  output  bypass 
    -- CP-element group 145: predecessors 
    -- CP-element group 145: 	100 
    -- CP-element group 145: 	144 
    -- CP-element group 145: successors 
    -- CP-element group 145: 	146 
    -- CP-element group 145:  members (3) 
      -- CP-element group 145: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1160_sample_start_
      -- CP-element group 145: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1160_Sample/$entry
      -- CP-element group 145: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1160_Sample/req
      -- 
    req_3728_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3728_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(145), ack => WPIPE_out_d_1160_inst_req_0); -- 
    decryption_engine_cp_element_group_145: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_145"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(100) & decryption_engine_CP_2836_elements(144);
      gj_decryption_engine_cp_element_group_145 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(145), clk => clk, reset => reset); --
    end block;
    -- CP-element group 146:  transition  input  output  bypass 
    -- CP-element group 146: predecessors 
    -- CP-element group 146: 	145 
    -- CP-element group 146: successors 
    -- CP-element group 146: 	147 
    -- CP-element group 146:  members (6) 
      -- CP-element group 146: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1160_sample_completed_
      -- CP-element group 146: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1160_update_start_
      -- CP-element group 146: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1160_Sample/$exit
      -- CP-element group 146: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1160_Sample/ack
      -- CP-element group 146: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1160_Update/$entry
      -- CP-element group 146: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1160_Update/req
      -- 
    ack_3729_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 146_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1160_inst_ack_0, ack => decryption_engine_CP_2836_elements(146)); -- 
    req_3733_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3733_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(146), ack => WPIPE_out_d_1160_inst_req_1); -- 
    -- CP-element group 147:  transition  input  bypass 
    -- CP-element group 147: predecessors 
    -- CP-element group 147: 	146 
    -- CP-element group 147: successors 
    -- CP-element group 147: 	148 
    -- CP-element group 147:  members (3) 
      -- CP-element group 147: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1160_update_completed_
      -- CP-element group 147: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1160_Update/$exit
      -- CP-element group 147: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1160_Update/ack
      -- 
    ack_3734_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 147_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1160_inst_ack_1, ack => decryption_engine_CP_2836_elements(147)); -- 
    -- CP-element group 148:  join  transition  output  bypass 
    -- CP-element group 148: predecessors 
    -- CP-element group 148: 	102 
    -- CP-element group 148: 	147 
    -- CP-element group 148: successors 
    -- CP-element group 148: 	149 
    -- CP-element group 148:  members (3) 
      -- CP-element group 148: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1163_sample_start_
      -- CP-element group 148: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1163_Sample/$entry
      -- CP-element group 148: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1163_Sample/req
      -- 
    req_3742_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3742_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(148), ack => WPIPE_out_d_1163_inst_req_0); -- 
    decryption_engine_cp_element_group_148: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_148"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(102) & decryption_engine_CP_2836_elements(147);
      gj_decryption_engine_cp_element_group_148 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(148), clk => clk, reset => reset); --
    end block;
    -- CP-element group 149:  transition  input  output  bypass 
    -- CP-element group 149: predecessors 
    -- CP-element group 149: 	148 
    -- CP-element group 149: successors 
    -- CP-element group 149: 	150 
    -- CP-element group 149:  members (6) 
      -- CP-element group 149: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1163_sample_completed_
      -- CP-element group 149: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1163_update_start_
      -- CP-element group 149: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1163_Sample/$exit
      -- CP-element group 149: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1163_Sample/ack
      -- CP-element group 149: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1163_Update/$entry
      -- CP-element group 149: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1163_Update/req
      -- 
    ack_3743_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 149_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1163_inst_ack_0, ack => decryption_engine_CP_2836_elements(149)); -- 
    req_3747_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3747_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(149), ack => WPIPE_out_d_1163_inst_req_1); -- 
    -- CP-element group 150:  transition  input  bypass 
    -- CP-element group 150: predecessors 
    -- CP-element group 150: 	149 
    -- CP-element group 150: successors 
    -- CP-element group 150: 	159 
    -- CP-element group 150:  members (3) 
      -- CP-element group 150: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1163_update_completed_
      -- CP-element group 150: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1163_Update/$exit
      -- CP-element group 150: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/WPIPE_out_d_1163_Update/ack
      -- 
    ack_3748_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 150_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1163_inst_ack_1, ack => decryption_engine_CP_2836_elements(150)); -- 
    -- CP-element group 151:  transition  input  bypass 
    -- CP-element group 151: predecessors 
    -- CP-element group 151: 	173 
    -- CP-element group 151: successors 
    -- CP-element group 151:  members (3) 
      -- CP-element group 151: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/ADD_u128_u128_1169_sample_completed_
      -- CP-element group 151: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/ADD_u128_u128_1169_Sample/$exit
      -- CP-element group 151: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/ADD_u128_u128_1169_Sample/ra
      -- 
    ra_3757_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 151_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u128_u128_1169_inst_ack_0, ack => decryption_engine_CP_2836_elements(151)); -- 
    -- CP-element group 152:  transition  input  bypass 
    -- CP-element group 152: predecessors 
    -- CP-element group 152: 	173 
    -- CP-element group 152: successors 
    -- CP-element group 152: 	159 
    -- CP-element group 152:  members (3) 
      -- CP-element group 152: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/ADD_u128_u128_1169_update_completed_
      -- CP-element group 152: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/ADD_u128_u128_1169_Update/$exit
      -- CP-element group 152: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/ADD_u128_u128_1169_Update/ca
      -- 
    ca_3762_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 152_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u128_u128_1169_inst_ack_1, ack => decryption_engine_CP_2836_elements(152)); -- 
    -- CP-element group 153:  join  transition  output  bypass 
    -- CP-element group 153: predecessors 
    -- CP-element group 153: 	104 
    -- CP-element group 153: 	109 
    -- CP-element group 153: successors 
    -- CP-element group 153: 	154 
    -- CP-element group 153:  members (3) 
      -- CP-element group 153: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1174_sample_start_
      -- CP-element group 153: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1174_Sample/$entry
      -- CP-element group 153: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1174_Sample/rr
      -- 
    rr_3770_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3770_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(153), ack => EQ_u8_u1_1174_inst_req_0); -- 
    decryption_engine_cp_element_group_153: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_153"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(104) & decryption_engine_CP_2836_elements(109);
      gj_decryption_engine_cp_element_group_153 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(153), clk => clk, reset => reset); --
    end block;
    -- CP-element group 154:  transition  input  bypass 
    -- CP-element group 154: predecessors 
    -- CP-element group 154: 	153 
    -- CP-element group 154: successors 
    -- CP-element group 154:  members (3) 
      -- CP-element group 154: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1174_sample_completed_
      -- CP-element group 154: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1174_Sample/$exit
      -- CP-element group 154: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1174_Sample/ra
      -- 
    ra_3771_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 154_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_1174_inst_ack_0, ack => decryption_engine_CP_2836_elements(154)); -- 
    -- CP-element group 155:  transition  input  bypass 
    -- CP-element group 155: predecessors 
    -- CP-element group 155: 	173 
    -- CP-element group 155: successors 
    -- CP-element group 155: 	159 
    -- CP-element group 155:  members (3) 
      -- CP-element group 155: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1174_update_completed_
      -- CP-element group 155: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1174_Update/$exit
      -- CP-element group 155: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1174_Update/ca
      -- 
    ca_3776_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 155_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_1174_inst_ack_1, ack => decryption_engine_CP_2836_elements(155)); -- 
    -- CP-element group 156:  join  transition  output  bypass 
    -- CP-element group 156: predecessors 
    -- CP-element group 156: 	106 
    -- CP-element group 156: 	109 
    -- CP-element group 156: successors 
    -- CP-element group 156: 	157 
    -- CP-element group 156:  members (3) 
      -- CP-element group 156: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1179_sample_start_
      -- CP-element group 156: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1179_Sample/$entry
      -- CP-element group 156: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1179_Sample/rr
      -- 
    rr_3784_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3784_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(156), ack => EQ_u8_u1_1179_inst_req_0); -- 
    decryption_engine_cp_element_group_156: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_156"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(106) & decryption_engine_CP_2836_elements(109);
      gj_decryption_engine_cp_element_group_156 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(156), clk => clk, reset => reset); --
    end block;
    -- CP-element group 157:  transition  input  bypass 
    -- CP-element group 157: predecessors 
    -- CP-element group 157: 	156 
    -- CP-element group 157: successors 
    -- CP-element group 157:  members (3) 
      -- CP-element group 157: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1179_sample_completed_
      -- CP-element group 157: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1179_Sample/$exit
      -- CP-element group 157: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1179_Sample/ra
      -- 
    ra_3785_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 157_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_1179_inst_ack_0, ack => decryption_engine_CP_2836_elements(157)); -- 
    -- CP-element group 158:  transition  input  bypass 
    -- CP-element group 158: predecessors 
    -- CP-element group 158: 	173 
    -- CP-element group 158: successors 
    -- CP-element group 158: 	159 
    -- CP-element group 158:  members (3) 
      -- CP-element group 158: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1179_update_completed_
      -- CP-element group 158: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1179_Update/$exit
      -- CP-element group 158: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1179_Update/ca
      -- 
    ca_3790_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 158_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => EQ_u8_u1_1179_inst_ack_1, ack => decryption_engine_CP_2836_elements(158)); -- 
    -- CP-element group 159:  branch  join  transition  place  output  bypass 
    -- CP-element group 159: predecessors 
    -- CP-element group 159: 	150 
    -- CP-element group 159: 	152 
    -- CP-element group 159: 	155 
    -- CP-element group 159: 	158 
    -- CP-element group 159: successors 
    -- CP-element group 159: 	160 
    -- CP-element group 159: 	161 
    -- CP-element group 159:  members (24) 
      -- CP-element group 159: 	 branch_block_stmt_898/AND_u1_u1_1184_place
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/SplitProtocol/Sample/rr
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/branch_req
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/SplitProtocol/Update/$exit
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/SplitProtocol/Update/cr
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/SplitProtocol/Update/ca
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_if_link/$entry
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/SplitProtocol/Sample/ra
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/SplitProtocol/Update/$entry
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/SplitProtocol/Sample/$exit
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_else_link/$entry
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/SplitProtocol/$exit
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/SplitProtocol/Sample/$entry
      -- CP-element group 159: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180__exit__
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181__entry__
      -- CP-element group 159: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/$exit
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_dead_link/$entry
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/$entry
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/$exit
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/$entry
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/$exit
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/AND_u1_u1_1184_inputs/$entry
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/AND_u1_u1_1184_inputs/$exit
      -- CP-element group 159: 	 branch_block_stmt_898/if_stmt_1181_eval_test/AND_u1_u1_1184/SplitProtocol/$entry
      -- 
    branch_req_3817_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_3817_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(159), ack => if_stmt_1181_branch_req_0); -- 
    decryption_engine_cp_element_group_159: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_159"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(150) & decryption_engine_CP_2836_elements(152) & decryption_engine_CP_2836_elements(155) & decryption_engine_CP_2836_elements(158);
      gj_decryption_engine_cp_element_group_159 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(159), clk => clk, reset => reset); --
    end block;
    -- CP-element group 160:  fork  transition  place  input  output  bypass 
    -- CP-element group 160: predecessors 
    -- CP-element group 160: 	159 
    -- CP-element group 160: successors 
    -- CP-element group 160: 	162 
    -- CP-element group 160: 	163 
    -- CP-element group 160:  members (20) 
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Sample/STORE_check_1185_Split/$exit
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_word_address_calculated
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_root_address_calculated
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Sample/STORE_check_1185_Split/split_req
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/$entry
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187__entry__
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_update_start_
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Sample/$entry
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Update/word_access_complete/$entry
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Sample/STORE_check_1185_Split/split_ack
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Sample/word_access_start/word_0/$entry
      -- CP-element group 160: 	 branch_block_stmt_898/if_stmt_1181_if_link/$exit
      -- CP-element group 160: 	 branch_block_stmt_898/if_stmt_1181_if_link/if_choice_transition
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Update/word_access_complete/word_0/$entry
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_sample_start_
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Sample/word_access_start/word_0/rr
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Update/word_access_complete/word_0/cr
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Update/$entry
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Sample/word_access_start/$entry
      -- CP-element group 160: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Sample/STORE_check_1185_Split/$entry
      -- 
    if_choice_transition_3822_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 160_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1181_branch_ack_1, ack => decryption_engine_CP_2836_elements(160)); -- 
    rr_3853_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3853_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(160), ack => STORE_check_1185_store_0_req_0); -- 
    cr_3864_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3864_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(160), ack => STORE_check_1185_store_0_req_1); -- 
    -- CP-element group 161:  fork  transition  place  input  output  bypass 
    -- CP-element group 161: predecessors 
    -- CP-element group 161: 	159 
    -- CP-element group 161: successors 
    -- CP-element group 161: 	164 
    -- CP-element group 161: 	165 
    -- CP-element group 161:  members (20) 
      -- CP-element group 161: 	 branch_block_stmt_898/if_stmt_1181_else_link/$exit
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_update_start_
      -- CP-element group 161: 	 branch_block_stmt_898/if_stmt_1181_else_link/else_choice_transition
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Update/word_access_complete/word_0/cr
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_root_address_calculated
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/$entry
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Update/word_access_complete/word_0/$entry
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192__entry__
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Sample/$entry
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Sample/STORE_check_1190_Split/$entry
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Sample/STORE_check_1190_Split/$exit
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Sample/STORE_check_1190_Split/split_req
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Sample/STORE_check_1190_Split/split_ack
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Sample/word_access_start/$entry
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Sample/word_access_start/word_0/$entry
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Sample/word_access_start/word_0/rr
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Update/$entry
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Update/word_access_complete/$entry
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_word_address_calculated
      -- CP-element group 161: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_sample_start_
      -- 
    else_choice_transition_3826_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 161_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1181_branch_ack_0, ack => decryption_engine_CP_2836_elements(161)); -- 
    cr_3902_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3902_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(161), ack => STORE_check_1190_store_0_req_1); -- 
    rr_3891_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3891_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(161), ack => STORE_check_1190_store_0_req_0); -- 
    -- CP-element group 162:  transition  input  bypass 
    -- CP-element group 162: predecessors 
    -- CP-element group 162: 	160 
    -- CP-element group 162: successors 
    -- CP-element group 162:  members (5) 
      -- CP-element group 162: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Sample/word_access_start/$exit
      -- CP-element group 162: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_sample_completed_
      -- CP-element group 162: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Sample/word_access_start/word_0/$exit
      -- CP-element group 162: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Sample/word_access_start/word_0/ra
      -- CP-element group 162: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Sample/$exit
      -- 
    ra_3854_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 162_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => STORE_check_1185_store_0_ack_0, ack => decryption_engine_CP_2836_elements(162)); -- 
    -- CP-element group 163:  fork  transition  place  input  output  bypass 
    -- CP-element group 163: predecessors 
    -- CP-element group 163: 	160 
    -- CP-element group 163: successors 
    -- CP-element group 163: 	169 
    -- CP-element group 163: 	170 
    -- CP-element group 163:  members (16) 
      -- CP-element group 163: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_update_completed_
      -- CP-element group 163: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Sample/$entry
      -- CP-element group 163: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_sources/$entry
      -- CP-element group 163: 	 branch_block_stmt_898/assign_stmt_1187__exit__
      -- CP-element group 163: 	 branch_block_stmt_898/assign_stmt_1187/$exit
      -- CP-element group 163: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Sample/req
      -- CP-element group 163: 	 branch_block_stmt_898/loopback
      -- CP-element group 163: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Update/word_access_complete/$exit
      -- CP-element group 163: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Update/$entry
      -- CP-element group 163: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Update/req
      -- CP-element group 163: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Update/word_access_complete/word_0/$exit
      -- CP-element group 163: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/$entry
      -- CP-element group 163: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Update/$exit
      -- CP-element group 163: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/$entry
      -- CP-element group 163: 	 branch_block_stmt_898/assign_stmt_1187/STORE_check_1185_Update/word_access_complete/word_0/ca
      -- CP-element group 163: 	 branch_block_stmt_898/loopback_PhiReq/$entry
      -- 
    ca_3865_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 163_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => STORE_check_1185_store_0_ack_1, ack => decryption_engine_CP_2836_elements(163)); -- 
    req_3946_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3946_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(163), ack => counter_nxt_1170_903_buf_req_0); -- 
    req_3951_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3951_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(163), ack => counter_nxt_1170_903_buf_req_1); -- 
    -- CP-element group 164:  transition  input  bypass 
    -- CP-element group 164: predecessors 
    -- CP-element group 164: 	161 
    -- CP-element group 164: successors 
    -- CP-element group 164:  members (5) 
      -- CP-element group 164: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Sample/$exit
      -- CP-element group 164: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Sample/word_access_start/$exit
      -- CP-element group 164: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Sample/word_access_start/word_0/$exit
      -- CP-element group 164: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_sample_completed_
      -- CP-element group 164: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Sample/word_access_start/word_0/ra
      -- 
    ra_3892_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 164_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => STORE_check_1190_store_0_ack_0, ack => decryption_engine_CP_2836_elements(164)); -- 
    -- CP-element group 165:  merge  transition  place  input  bypass 
    -- CP-element group 165: predecessors 
    -- CP-element group 165: 	161 
    -- CP-element group 165: successors 
    -- CP-element group 165:  members (11) 
      -- CP-element group 165: 	 branch_block_stmt_898/assign_stmt_1192__exit__
      -- CP-element group 165: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Update/$exit
      -- CP-element group 165: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Update/word_access_complete/word_0/ca
      -- CP-element group 165: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Update/word_access_complete/$exit
      -- CP-element group 165: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_Update/word_access_complete/word_0/$exit
      -- CP-element group 165: 	 branch_block_stmt_898/assign_stmt_1192/STORE_check_1190_update_completed_
      -- CP-element group 165: 	 branch_block_stmt_898/assign_stmt_1192/$exit
      -- CP-element group 165: 	 $exit
      -- CP-element group 165: 	 branch_block_stmt_898/$exit
      -- CP-element group 165: 	 branch_block_stmt_898/branch_block_stmt_898__exit__
      -- CP-element group 165: 	 branch_block_stmt_898/if_stmt_1181__exit__
      -- 
    ca_3903_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 165_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => STORE_check_1190_store_0_ack_1, ack => decryption_engine_CP_2836_elements(165)); -- 
    -- CP-element group 166:  transition  input  bypass 
    -- CP-element group 166: predecessors 
    -- CP-element group 166: 	0 
    -- CP-element group 166: successors 
    -- CP-element group 166: 	168 
    -- CP-element group 166:  members (2) 
      -- CP-element group 166: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Sample/ack
      -- CP-element group 166: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Sample/$exit
      -- 
    ack_3924_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 166_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decry_counter_902_buf_ack_0, ack => decryption_engine_CP_2836_elements(166)); -- 
    -- CP-element group 167:  transition  input  bypass 
    -- CP-element group 167: predecessors 
    -- CP-element group 167: 	0 
    -- CP-element group 167: successors 
    -- CP-element group 167: 	168 
    -- CP-element group 167:  members (2) 
      -- CP-element group 167: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Update/ack
      -- CP-element group 167: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Update/$exit
      -- 
    ack_3929_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 167_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decry_counter_902_buf_ack_1, ack => decryption_engine_CP_2836_elements(167)); -- 
    -- CP-element group 168:  join  transition  output  bypass 
    -- CP-element group 168: predecessors 
    -- CP-element group 168: 	166 
    -- CP-element group 168: 	167 
    -- CP-element group 168: successors 
    -- CP-element group 168: 	172 
    -- CP-element group 168:  members (5) 
      -- CP-element group 168: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/$exit
      -- CP-element group 168: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_req
      -- CP-element group 168: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_sources/$exit
      -- CP-element group 168: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/$exit
      -- CP-element group 168: 	 branch_block_stmt_898/merge_stmt_899__entry___PhiReq/phi_stmt_900/$exit
      -- 
    phi_stmt_900_req_3930_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_900_req_3930_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(168), ack => phi_stmt_900_req_0); -- 
    decryption_engine_cp_element_group_168: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_168"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(166) & decryption_engine_CP_2836_elements(167);
      gj_decryption_engine_cp_element_group_168 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(168), clk => clk, reset => reset); --
    end block;
    -- CP-element group 169:  transition  input  bypass 
    -- CP-element group 169: predecessors 
    -- CP-element group 169: 	163 
    -- CP-element group 169: successors 
    -- CP-element group 169: 	171 
    -- CP-element group 169:  members (2) 
      -- CP-element group 169: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Sample/$exit
      -- CP-element group 169: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Sample/ack
      -- 
    ack_3947_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 169_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_nxt_1170_903_buf_ack_0, ack => decryption_engine_CP_2836_elements(169)); -- 
    -- CP-element group 170:  transition  input  bypass 
    -- CP-element group 170: predecessors 
    -- CP-element group 170: 	163 
    -- CP-element group 170: successors 
    -- CP-element group 170: 	171 
    -- CP-element group 170:  members (2) 
      -- CP-element group 170: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Update/$exit
      -- CP-element group 170: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/Update/ack
      -- 
    ack_3952_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 170_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_nxt_1170_903_buf_ack_1, ack => decryption_engine_CP_2836_elements(170)); -- 
    -- CP-element group 171:  join  transition  output  bypass 
    -- CP-element group 171: predecessors 
    -- CP-element group 171: 	169 
    -- CP-element group 171: 	170 
    -- CP-element group 171: successors 
    -- CP-element group 171: 	172 
    -- CP-element group 171:  members (5) 
      -- CP-element group 171: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_sources/$exit
      -- CP-element group 171: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_req
      -- CP-element group 171: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/$exit
      -- CP-element group 171: 	 branch_block_stmt_898/loopback_PhiReq/phi_stmt_900/phi_stmt_900_sources/Interlock/$exit
      -- CP-element group 171: 	 branch_block_stmt_898/loopback_PhiReq/$exit
      -- 
    phi_stmt_900_req_3953_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_900_req_3953_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(171), ack => phi_stmt_900_req_1); -- 
    decryption_engine_cp_element_group_171: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "decryption_engine_cp_element_group_171"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= decryption_engine_CP_2836_elements(169) & decryption_engine_CP_2836_elements(170);
      gj_decryption_engine_cp_element_group_171 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => decryption_engine_CP_2836_elements(171), clk => clk, reset => reset); --
    end block;
    -- CP-element group 172:  merge  transition  place  bypass 
    -- CP-element group 172: predecessors 
    -- CP-element group 172: 	168 
    -- CP-element group 172: 	171 
    -- CP-element group 172: successors 
    -- CP-element group 172: 	173 
    -- CP-element group 172:  members (2) 
      -- CP-element group 172: 	 branch_block_stmt_898/merge_stmt_899_PhiReqMerge
      -- CP-element group 172: 	 branch_block_stmt_898/merge_stmt_899_PhiAck/$entry
      -- 
    decryption_engine_CP_2836_elements(172) <= OrReduce(decryption_engine_CP_2836_elements(168) & decryption_engine_CP_2836_elements(171));
    -- CP-element group 173:  merge  fork  transition  place  input  output  bypass 
    -- CP-element group 173: predecessors 
    -- CP-element group 173: 	172 
    -- CP-element group 173: successors 
    -- CP-element group 173: 	1 
    -- CP-element group 173: 	2 
    -- CP-element group 173: 	3 
    -- CP-element group 173: 	58 
    -- CP-element group 173: 	61 
    -- CP-element group 173: 	90 
    -- CP-element group 173: 	92 
    -- CP-element group 173: 	94 
    -- CP-element group 173: 	96 
    -- CP-element group 173: 	98 
    -- CP-element group 173: 	100 
    -- CP-element group 173: 	102 
    -- CP-element group 173: 	104 
    -- CP-element group 173: 	106 
    -- CP-element group 173: 	109 
    -- CP-element group 173: 	51 
    -- CP-element group 173: 	54 
    -- CP-element group 173: 	56 
    -- CP-element group 173: 	46 
    -- CP-element group 173: 	64 
    -- CP-element group 173: 	66 
    -- CP-element group 173: 	68 
    -- CP-element group 173: 	48 
    -- CP-element group 173: 	151 
    -- CP-element group 173: 	152 
    -- CP-element group 173: 	155 
    -- CP-element group 173: 	158 
    -- CP-element group 173: 	84 
    -- CP-element group 173: 	86 
    -- CP-element group 173: 	88 
    -- CP-element group 173: 	71 
    -- CP-element group 173: 	74 
    -- CP-element group 173: 	76 
    -- CP-element group 173: 	78 
    -- CP-element group 173: 	80 
    -- CP-element group 173: 	82 
    -- CP-element group 173: 	36 
    -- CP-element group 173: 	38 
    -- CP-element group 173: 	41 
    -- CP-element group 173: 	44 
    -- CP-element group 173:  members (125) 
      -- CP-element group 173: 	 branch_block_stmt_898/merge_stmt_899_PhiAck/phi_stmt_900_ack
      -- CP-element group 173: 	 branch_block_stmt_898/merge_stmt_899_PhiAck/$exit
      -- CP-element group 173: 	 branch_block_stmt_898/merge_stmt_899__exit__
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180__entry__
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_914_sample_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_914_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_914_Sample/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_914_Sample/crr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_914_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_914_Update/ccr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_916_sample_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_916_Sample/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/RPIPE_input_d_916_Sample/rr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_966_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_966_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_966_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_971_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_971_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_971_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_976_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_976_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_976_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_981_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_981_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_981_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_986_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1081_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_986_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_986_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_991_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_991_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_991_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_996_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_996_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_996_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1001_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1001_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1001_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1006_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1006_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1006_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1011_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1011_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1011_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1016_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1016_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1016_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1021_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1021_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1021_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1026_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1026_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1026_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1031_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1031_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u8_u16_1031_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1036_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1036_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/CONCAT_u16_u32_1036_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1041_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1041_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/XOR_u32_u32_1041_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1045_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1045_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1045_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1049_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1049_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1049_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1053_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1053_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1053_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1057_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1057_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1057_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1061_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1061_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1061_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1065_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1065_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1065_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1069_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1069_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1069_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1073_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1073_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1073_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1077_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1077_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1077_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1081_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1081_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1085_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1085_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1085_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1089_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1089_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1089_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1093_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1093_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1093_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1097_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1097_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1097_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1101_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1101_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1101_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1105_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1105_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/slice_1105_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_1123_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_1123_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/call_stmt_1123_Update/ccr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/ADD_u128_u128_1169_sample_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/ADD_u128_u128_1169_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/ADD_u128_u128_1169_Sample/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/ADD_u128_u128_1169_Sample/rr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/ADD_u128_u128_1169_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/ADD_u128_u128_1169_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1174_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1174_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1174_Update/cr
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1179_update_start_
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1179_Update/$entry
      -- CP-element group 173: 	 branch_block_stmt_898/call_stmt_914_to_assign_stmt_1180/EQ_u8_u1_1179_Update/cr
      -- 
    phi_stmt_900_ack_3958_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 173_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_900_ack_0, ack => decryption_engine_CP_2836_elements(173)); -- 
    crr_2860_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2860_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => call_stmt_914_call_req_0); -- 
    ccr_2865_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2865_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => call_stmt_914_call_req_1); -- 
    rr_2874_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2874_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => RPIPE_input_d_916_inst_req_0); -- 
    cr_3103_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3103_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => CONCAT_u8_u16_966_inst_req_1); -- 
    cr_3117_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3117_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => CONCAT_u8_u16_971_inst_req_1); -- 
    cr_3131_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3131_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => CONCAT_u16_u32_976_inst_req_1); -- 
    cr_3145_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3145_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => XOR_u32_u32_981_inst_req_1); -- 
    cr_3159_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3159_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => CONCAT_u8_u16_986_inst_req_1); -- 
    cr_3173_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3173_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => CONCAT_u8_u16_991_inst_req_1); -- 
    cr_3187_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3187_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => CONCAT_u16_u32_996_inst_req_1); -- 
    cr_3201_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3201_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => XOR_u32_u32_1001_inst_req_1); -- 
    cr_3215_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3215_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => CONCAT_u8_u16_1006_inst_req_1); -- 
    cr_3229_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3229_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => CONCAT_u8_u16_1011_inst_req_1); -- 
    cr_3243_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3243_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => CONCAT_u16_u32_1016_inst_req_1); -- 
    cr_3257_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3257_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => XOR_u32_u32_1021_inst_req_1); -- 
    cr_3271_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3271_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => CONCAT_u8_u16_1026_inst_req_1); -- 
    cr_3285_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3285_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => CONCAT_u8_u16_1031_inst_req_1); -- 
    cr_3299_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3299_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => CONCAT_u16_u32_1036_inst_req_1); -- 
    cr_3313_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3313_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => XOR_u32_u32_1041_inst_req_1); -- 
    cr_3327_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3327_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1045_inst_req_1); -- 
    cr_3341_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3341_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1049_inst_req_1); -- 
    cr_3355_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3355_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1053_inst_req_1); -- 
    cr_3369_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3369_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1057_inst_req_1); -- 
    cr_3383_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3383_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1061_inst_req_1); -- 
    cr_3397_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3397_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1065_inst_req_1); -- 
    cr_3411_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3411_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1069_inst_req_1); -- 
    cr_3425_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3425_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1073_inst_req_1); -- 
    cr_3439_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3439_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1077_inst_req_1); -- 
    cr_3453_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3453_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1081_inst_req_1); -- 
    cr_3467_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3467_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1085_inst_req_1); -- 
    cr_3481_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3481_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1089_inst_req_1); -- 
    cr_3495_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3495_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1093_inst_req_1); -- 
    cr_3509_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3509_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1097_inst_req_1); -- 
    cr_3523_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3523_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1101_inst_req_1); -- 
    cr_3537_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3537_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => slice_1105_inst_req_1); -- 
    ccr_3551_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_3551_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => call_stmt_1123_call_req_1); -- 
    rr_3756_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3756_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => ADD_u128_u128_1169_inst_req_0); -- 
    cr_3761_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3761_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => ADD_u128_u128_1169_inst_req_1); -- 
    cr_3775_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3775_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => EQ_u8_u1_1174_inst_req_1); -- 
    cr_3789_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3789_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => decryption_engine_CP_2836_elements(173), ack => EQ_u8_u1_1179_inst_req_1); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal AND_u1_u1_1184_wire : std_logic_vector(0 downto 0);
    signal R_one_1bit_1186_wire_constant : std_logic_vector(0 downto 0);
    signal R_zero_1bit_1191_wire_constant : std_logic_vector(0 downto 0);
    signal STORE_check_1185_data_0 : std_logic_vector(0 downto 0);
    signal STORE_check_1185_word_address_0 : std_logic_vector(0 downto 0);
    signal STORE_check_1190_data_0 : std_logic_vector(0 downto 0);
    signal STORE_check_1190_word_address_0 : std_logic_vector(0 downto 0);
    signal condition_1_1175 : std_logic_vector(0 downto 0);
    signal condition_2_1180 : std_logic_vector(0 downto 0);
    signal counter_900 : std_logic_vector(127 downto 0);
    signal counter_nxt_1170 : std_logic_vector(127 downto 0);
    signal counter_nxt_1170_903_buffered : std_logic_vector(127 downto 0);
    signal decry_counter_902_buffered : std_logic_vector(127 downto 0);
    signal konst_1168_wire_constant : std_logic_vector(127 downto 0);
    signal lw8_0_914 : std_logic_vector(31 downto 0);
    signal lw8_1_914 : std_logic_vector(31 downto 0);
    signal lw8_2_914 : std_logic_vector(31 downto 0);
    signal lw8_3_914 : std_logic_vector(31 downto 0);
    signal m1_0_917 : std_logic_vector(7 downto 0);
    signal m1_10_947 : std_logic_vector(7 downto 0);
    signal m1_11_950 : std_logic_vector(7 downto 0);
    signal m1_12_953 : std_logic_vector(7 downto 0);
    signal m1_13_956 : std_logic_vector(7 downto 0);
    signal m1_14_959 : std_logic_vector(7 downto 0);
    signal m1_15_962 : std_logic_vector(7 downto 0);
    signal m1_1_920 : std_logic_vector(7 downto 0);
    signal m1_2_923 : std_logic_vector(7 downto 0);
    signal m1_3_926 : std_logic_vector(7 downto 0);
    signal m1_4_929 : std_logic_vector(7 downto 0);
    signal m1_5_932 : std_logic_vector(7 downto 0);
    signal m1_6_935 : std_logic_vector(7 downto 0);
    signal m1_7_938 : std_logic_vector(7 downto 0);
    signal m1_8_941 : std_logic_vector(7 downto 0);
    signal m1_9_944 : std_logic_vector(7 downto 0);
    signal m_0_1046 : std_logic_vector(7 downto 0);
    signal m_10_1086 : std_logic_vector(7 downto 0);
    signal m_11_1090 : std_logic_vector(7 downto 0);
    signal m_12_1094 : std_logic_vector(7 downto 0);
    signal m_13_1098 : std_logic_vector(7 downto 0);
    signal m_14_1102 : std_logic_vector(7 downto 0);
    signal m_15_1106 : std_logic_vector(7 downto 0);
    signal m_1_1050 : std_logic_vector(7 downto 0);
    signal m_2_1054 : std_logic_vector(7 downto 0);
    signal m_3_1058 : std_logic_vector(7 downto 0);
    signal m_4_1062 : std_logic_vector(7 downto 0);
    signal m_5_1066 : std_logic_vector(7 downto 0);
    signal m_6_1070 : std_logic_vector(7 downto 0);
    signal m_7_1074 : std_logic_vector(7 downto 0);
    signal m_8_1078 : std_logic_vector(7 downto 0);
    signal m_9_1082 : std_logic_vector(7 downto 0);
    signal mc_14_1123 : std_logic_vector(7 downto 0);
    signal mc_15_1123 : std_logic_vector(7 downto 0);
    signal msg_0_982 : std_logic_vector(31 downto 0);
    signal msg_0_t1_967 : std_logic_vector(15 downto 0);
    signal msg_0_t2_972 : std_logic_vector(15 downto 0);
    signal msg_0_t3_977 : std_logic_vector(31 downto 0);
    signal msg_1_1002 : std_logic_vector(31 downto 0);
    signal msg_1_t1_987 : std_logic_vector(15 downto 0);
    signal msg_1_t2_992 : std_logic_vector(15 downto 0);
    signal msg_1_t3_997 : std_logic_vector(31 downto 0);
    signal msg_2_1022 : std_logic_vector(31 downto 0);
    signal msg_2_t1_1007 : std_logic_vector(15 downto 0);
    signal msg_2_t2_1012 : std_logic_vector(15 downto 0);
    signal msg_2_t3_1017 : std_logic_vector(31 downto 0);
    signal msg_3_1042 : std_logic_vector(31 downto 0);
    signal msg_3_t1_1027 : std_logic_vector(15 downto 0);
    signal msg_3_t2_1032 : std_logic_vector(15 downto 0);
    signal msg_3_t3_1037 : std_logic_vector(31 downto 0);
    -- 
  begin -- 
    R_one_1bit_1186_wire_constant <= "1";
    R_zero_1bit_1191_wire_constant <= "0";
    STORE_check_1185_word_address_0 <= "0";
    STORE_check_1190_word_address_0 <= "0";
    konst_1168_wire_constant <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    phi_stmt_900: Block -- phi operator 
      signal idata: std_logic_vector(255 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= decry_counter_902_buffered & counter_nxt_1170_903_buffered;
      req <= phi_stmt_900_req_0 & phi_stmt_900_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_900",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 128) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_900_ack_0,
          idata => idata,
          odata => counter_900,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_900
    slice_1045_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1045_inst_req_0;
      slice_1045_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1045_inst_req_1;
      slice_1045_inst_ack_1<= update_ack(0);
      slice_1045_inst: SliceSplitProtocol generic map(name => "slice_1045_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_0_982, dout => m_0_1046, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1049_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1049_inst_req_0;
      slice_1049_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1049_inst_req_1;
      slice_1049_inst_ack_1<= update_ack(0);
      slice_1049_inst: SliceSplitProtocol generic map(name => "slice_1049_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_0_982, dout => m_1_1050, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1053_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1053_inst_req_0;
      slice_1053_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1053_inst_req_1;
      slice_1053_inst_ack_1<= update_ack(0);
      slice_1053_inst: SliceSplitProtocol generic map(name => "slice_1053_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_0_982, dout => m_2_1054, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1057_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1057_inst_req_0;
      slice_1057_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1057_inst_req_1;
      slice_1057_inst_ack_1<= update_ack(0);
      slice_1057_inst: SliceSplitProtocol generic map(name => "slice_1057_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_0_982, dout => m_3_1058, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1061_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1061_inst_req_0;
      slice_1061_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1061_inst_req_1;
      slice_1061_inst_ack_1<= update_ack(0);
      slice_1061_inst: SliceSplitProtocol generic map(name => "slice_1061_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_1_1002, dout => m_4_1062, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1065_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1065_inst_req_0;
      slice_1065_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1065_inst_req_1;
      slice_1065_inst_ack_1<= update_ack(0);
      slice_1065_inst: SliceSplitProtocol generic map(name => "slice_1065_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_1_1002, dout => m_5_1066, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1069_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1069_inst_req_0;
      slice_1069_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1069_inst_req_1;
      slice_1069_inst_ack_1<= update_ack(0);
      slice_1069_inst: SliceSplitProtocol generic map(name => "slice_1069_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_1_1002, dout => m_6_1070, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1073_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1073_inst_req_0;
      slice_1073_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1073_inst_req_1;
      slice_1073_inst_ack_1<= update_ack(0);
      slice_1073_inst: SliceSplitProtocol generic map(name => "slice_1073_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_1_1002, dout => m_7_1074, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1077_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1077_inst_req_0;
      slice_1077_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1077_inst_req_1;
      slice_1077_inst_ack_1<= update_ack(0);
      slice_1077_inst: SliceSplitProtocol generic map(name => "slice_1077_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_2_1022, dout => m_8_1078, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1081_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1081_inst_req_0;
      slice_1081_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1081_inst_req_1;
      slice_1081_inst_ack_1<= update_ack(0);
      slice_1081_inst: SliceSplitProtocol generic map(name => "slice_1081_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_2_1022, dout => m_9_1082, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1085_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1085_inst_req_0;
      slice_1085_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1085_inst_req_1;
      slice_1085_inst_ack_1<= update_ack(0);
      slice_1085_inst: SliceSplitProtocol generic map(name => "slice_1085_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_2_1022, dout => m_10_1086, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1089_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1089_inst_req_0;
      slice_1089_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1089_inst_req_1;
      slice_1089_inst_ack_1<= update_ack(0);
      slice_1089_inst: SliceSplitProtocol generic map(name => "slice_1089_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_2_1022, dout => m_11_1090, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1093_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1093_inst_req_0;
      slice_1093_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1093_inst_req_1;
      slice_1093_inst_ack_1<= update_ack(0);
      slice_1093_inst: SliceSplitProtocol generic map(name => "slice_1093_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_3_1042, dout => m_12_1094, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1097_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1097_inst_req_0;
      slice_1097_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1097_inst_req_1;
      slice_1097_inst_ack_1<= update_ack(0);
      slice_1097_inst: SliceSplitProtocol generic map(name => "slice_1097_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_3_1042, dout => m_13_1098, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1101_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1101_inst_req_0;
      slice_1101_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1101_inst_req_1;
      slice_1101_inst_ack_1<= update_ack(0);
      slice_1101_inst: SliceSplitProtocol generic map(name => "slice_1101_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_3_1042, dout => m_14_1102, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1105_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1105_inst_req_0;
      slice_1105_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1105_inst_req_1;
      slice_1105_inst_ack_1<= update_ack(0);
      slice_1105_inst: SliceSplitProtocol generic map(name => "slice_1105_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_3_1042, dout => m_15_1106, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    counter_nxt_1170_903_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= counter_nxt_1170_903_buf_req_0;
      counter_nxt_1170_903_buf_ack_0<= wack(0);
      rreq(0) <= counter_nxt_1170_903_buf_req_1;
      counter_nxt_1170_903_buf_ack_1<= rack(0);
      counter_nxt_1170_903_buf : InterlockBuffer generic map ( -- 
        name => "counter_nxt_1170_903_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 128,
        out_data_width => 128,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => counter_nxt_1170,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => counter_nxt_1170_903_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    decry_counter_902_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= decry_counter_902_buf_req_0;
      decry_counter_902_buf_ack_0<= wack(0);
      rreq(0) <= decry_counter_902_buf_req_1;
      decry_counter_902_buf_ack_1<= rack(0);
      decry_counter_902_buf : InterlockBuffer generic map ( -- 
        name => "decry_counter_902_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 128,
        out_data_width => 128,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => decry_counter_buffer,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => decry_counter_902_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    -- equivalence STORE_check_1185_gather_scatter
    process(R_one_1bit_1186_wire_constant) --
      variable iv : std_logic_vector(0 downto 0);
      variable ov : std_logic_vector(0 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_one_1bit_1186_wire_constant;
      ov(0 downto 0) := iv;
      STORE_check_1185_data_0 <= ov(0 downto 0);
      --
    end process;
    -- equivalence STORE_check_1190_gather_scatter
    process(R_zero_1bit_1191_wire_constant) --
      variable iv : std_logic_vector(0 downto 0);
      variable ov : std_logic_vector(0 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_zero_1bit_1191_wire_constant;
      ov(0 downto 0) := iv;
      STORE_check_1190_data_0 <= ov(0 downto 0);
      --
    end process;
    if_stmt_1181_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_1184_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_1181_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_1181_branch_req_0,
          ack0 => if_stmt_1181_branch_ack_0,
          ack1 => if_stmt_1181_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- shared split operator group (0) : ADD_u128_u128_1169_inst 
    ApIntAdd_group_0: Block -- 
      signal data_in: std_logic_vector(127 downto 0);
      signal data_out: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= counter_900;
      counter_nxt_1170 <= data_out(127 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= ADD_u128_u128_1169_inst_req_0;
      ADD_u128_u128_1169_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= ADD_u128_u128_1169_inst_req_1;
      ADD_u128_u128_1169_inst_ack_1 <= ackR_unguarded(0);
      ApIntAdd_group_0_gI: SplitGuardInterface generic map(name => "ApIntAdd_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          name => "ApIntAdd_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 128,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 128,
          constant_operand => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
          constant_width => 128,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- binary operator AND_u1_u1_1184_inst
    process(condition_1_1175, condition_2_1180) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntAnd_proc(condition_1_1175, condition_2_1180, tmp_var);
      AND_u1_u1_1184_wire <= tmp_var; --
    end process;
    -- shared split operator group (2) : CONCAT_u16_u32_1016_inst 
    ApConcat_group_2: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_2_t1_1007 & msg_2_t2_1012;
      msg_2_t3_1017 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_1016_inst_req_0;
      CONCAT_u16_u32_1016_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_1016_inst_req_1;
      CONCAT_u16_u32_1016_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_2_gI: SplitGuardInterface generic map(name => "ApConcat_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_2",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 2
    -- shared split operator group (3) : CONCAT_u16_u32_1036_inst 
    ApConcat_group_3: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_3_t1_1027 & msg_3_t2_1032;
      msg_3_t3_1037 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_1036_inst_req_0;
      CONCAT_u16_u32_1036_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_1036_inst_req_1;
      CONCAT_u16_u32_1036_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_3_gI: SplitGuardInterface generic map(name => "ApConcat_group_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_3",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 3
    -- shared split operator group (4) : CONCAT_u16_u32_976_inst 
    ApConcat_group_4: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_0_t1_967 & msg_0_t2_972;
      msg_0_t3_977 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_976_inst_req_0;
      CONCAT_u16_u32_976_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_976_inst_req_1;
      CONCAT_u16_u32_976_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_4_gI: SplitGuardInterface generic map(name => "ApConcat_group_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_4",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 4
    -- shared split operator group (5) : CONCAT_u16_u32_996_inst 
    ApConcat_group_5: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_1_t1_987 & msg_1_t2_992;
      msg_1_t3_997 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_996_inst_req_0;
      CONCAT_u16_u32_996_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_996_inst_req_1;
      CONCAT_u16_u32_996_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_5_gI: SplitGuardInterface generic map(name => "ApConcat_group_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_5",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 5
    -- shared split operator group (6) : CONCAT_u8_u16_1006_inst 
    ApConcat_group_6: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m1_8_941 & m1_9_944;
      msg_2_t1_1007 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1006_inst_req_0;
      CONCAT_u8_u16_1006_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1006_inst_req_1;
      CONCAT_u8_u16_1006_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_6_gI: SplitGuardInterface generic map(name => "ApConcat_group_6_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_6",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 6
    -- shared split operator group (7) : CONCAT_u8_u16_1011_inst 
    ApConcat_group_7: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m1_10_947 & m1_11_950;
      msg_2_t2_1012 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1011_inst_req_0;
      CONCAT_u8_u16_1011_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1011_inst_req_1;
      CONCAT_u8_u16_1011_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_7_gI: SplitGuardInterface generic map(name => "ApConcat_group_7_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_7",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 7
    -- shared split operator group (8) : CONCAT_u8_u16_1026_inst 
    ApConcat_group_8: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m1_12_953 & m1_13_956;
      msg_3_t1_1027 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1026_inst_req_0;
      CONCAT_u8_u16_1026_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1026_inst_req_1;
      CONCAT_u8_u16_1026_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_8_gI: SplitGuardInterface generic map(name => "ApConcat_group_8_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_8",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 8
    -- shared split operator group (9) : CONCAT_u8_u16_1031_inst 
    ApConcat_group_9: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m1_14_959 & m1_15_962;
      msg_3_t2_1032 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1031_inst_req_0;
      CONCAT_u8_u16_1031_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1031_inst_req_1;
      CONCAT_u8_u16_1031_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_9_gI: SplitGuardInterface generic map(name => "ApConcat_group_9_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_9",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 9
    -- shared split operator group (10) : CONCAT_u8_u16_966_inst 
    ApConcat_group_10: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m1_0_917 & m1_1_920;
      msg_0_t1_967 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_966_inst_req_0;
      CONCAT_u8_u16_966_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_966_inst_req_1;
      CONCAT_u8_u16_966_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_10_gI: SplitGuardInterface generic map(name => "ApConcat_group_10_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_10",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 10
    -- shared split operator group (11) : CONCAT_u8_u16_971_inst 
    ApConcat_group_11: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m1_2_923 & m1_3_926;
      msg_0_t2_972 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_971_inst_req_0;
      CONCAT_u8_u16_971_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_971_inst_req_1;
      CONCAT_u8_u16_971_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_11_gI: SplitGuardInterface generic map(name => "ApConcat_group_11_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_11",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 11
    -- shared split operator group (12) : CONCAT_u8_u16_986_inst 
    ApConcat_group_12: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m1_4_929 & m1_5_932;
      msg_1_t1_987 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_986_inst_req_0;
      CONCAT_u8_u16_986_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_986_inst_req_1;
      CONCAT_u8_u16_986_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_12_gI: SplitGuardInterface generic map(name => "ApConcat_group_12_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_12",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 12
    -- shared split operator group (13) : CONCAT_u8_u16_991_inst 
    ApConcat_group_13: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m1_6_935 & m1_7_938;
      msg_1_t2_992 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_991_inst_req_0;
      CONCAT_u8_u16_991_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_991_inst_req_1;
      CONCAT_u8_u16_991_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_13_gI: SplitGuardInterface generic map(name => "ApConcat_group_13_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_13",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 13
    -- shared split operator group (14) : EQ_u8_u1_1174_inst 
    ApIntEq_group_14: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= mc_14_1123 & m_14_1102;
      condition_1_1175 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_1174_inst_req_0;
      EQ_u8_u1_1174_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_1174_inst_req_1;
      EQ_u8_u1_1174_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_14_gI: SplitGuardInterface generic map(name => "ApIntEq_group_14_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_14",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 14
    -- shared split operator group (15) : EQ_u8_u1_1179_inst 
    ApIntEq_group_15: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= mc_15_1123 & m_15_1106;
      condition_2_1180 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= EQ_u8_u1_1179_inst_req_0;
      EQ_u8_u1_1179_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= EQ_u8_u1_1179_inst_req_1;
      EQ_u8_u1_1179_inst_ack_1 <= ackR_unguarded(0);
      ApIntEq_group_15_gI: SplitGuardInterface generic map(name => "ApIntEq_group_15_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          name => "ApIntEq_group_15",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 15
    -- shared split operator group (16) : XOR_u32_u32_1001_inst 
    ApIntXor_group_16: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_1_t3_997 & lw8_1_914;
      msg_1_1002 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_1001_inst_req_0;
      XOR_u32_u32_1001_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_1001_inst_req_1;
      XOR_u32_u32_1001_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_16_gI: SplitGuardInterface generic map(name => "ApIntXor_group_16_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_16",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 16
    -- shared split operator group (17) : XOR_u32_u32_1021_inst 
    ApIntXor_group_17: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_2_t3_1017 & lw8_2_914;
      msg_2_1022 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_1021_inst_req_0;
      XOR_u32_u32_1021_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_1021_inst_req_1;
      XOR_u32_u32_1021_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_17_gI: SplitGuardInterface generic map(name => "ApIntXor_group_17_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_17",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 17
    -- shared split operator group (18) : XOR_u32_u32_1041_inst 
    ApIntXor_group_18: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_3_t3_1037 & lw8_3_914;
      msg_3_1042 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_1041_inst_req_0;
      XOR_u32_u32_1041_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_1041_inst_req_1;
      XOR_u32_u32_1041_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_18_gI: SplitGuardInterface generic map(name => "ApIntXor_group_18_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_18",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 18
    -- shared split operator group (19) : XOR_u32_u32_981_inst 
    ApIntXor_group_19: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_0_t3_977 & lw8_0_914;
      msg_0_982 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_981_inst_req_0;
      XOR_u32_u32_981_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_981_inst_req_1;
      XOR_u32_u32_981_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_19_gI: SplitGuardInterface generic map(name => "ApIntXor_group_19_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_19",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 19
    -- shared store operator group (0) : STORE_check_1185_store_0 STORE_check_1190_store_0 
    StoreGroup0: Block -- 
      signal addr_in: std_logic_vector(1 downto 0);
      signal data_in: std_logic_vector(1 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 1 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 1 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 1 downto 0);
      signal guard_vector : std_logic_vector( 1 downto 0);
      constant inBUFs : IntegerArray(1 downto 0) := (1 => 0, 0 => 0);
      constant outBUFs : IntegerArray(1 downto 0) := (1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(1 downto 0) := (0 => false, 1 => false);
      constant guardBuffering: IntegerArray(1 downto 0)  := (0 => 2, 1 => 2);
      -- 
    begin -- 
      reqL_unguarded(1) <= STORE_check_1185_store_0_req_0;
      reqL_unguarded(0) <= STORE_check_1190_store_0_req_0;
      STORE_check_1185_store_0_ack_0 <= ackL_unguarded(1);
      STORE_check_1190_store_0_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(1) <= STORE_check_1185_store_0_req_1;
      reqR_unguarded(0) <= STORE_check_1190_store_0_req_1;
      STORE_check_1185_store_0_ack_1 <= ackR_unguarded(1);
      STORE_check_1190_store_0_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      StoreGroup0_accessRegulator_0: access_regulator_base generic map (name => "StoreGroup0_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      StoreGroup0_accessRegulator_1: access_regulator_base generic map (name => "StoreGroup0_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      StoreGroup0_gI: SplitGuardInterface generic map(name => "StoreGroup0_gI", nreqs => 2, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      addr_in <= STORE_check_1185_word_address_0 & STORE_check_1190_word_address_0;
      data_in <= STORE_check_1185_data_0 & STORE_check_1190_data_0;
      StoreReq: StoreReqSharedWithInputBuffers -- 
        generic map ( name => "StoreGroup0 Req ", addr_width => 1,
        data_width => 1,
        num_reqs => 2,
        tag_length => 2,
        time_stamp_width => 17,
        min_clock_period => false,
        input_buffering => inBUFs, 
        no_arbitration => false)
        port map (--
          reqL => reqL , 
          ackL => ackL , 
          addr => addr_in, 
          data => data_in, 
          mreq => memory_space_0_sr_req(0),
          mack => memory_space_0_sr_ack(0),
          maddr => memory_space_0_sr_addr(0 downto 0),
          mdata => memory_space_0_sr_data(0 downto 0),
          mtag => memory_space_0_sr_tag(18 downto 0),
          clk => clk, reset => reset -- 
        );--
      StoreComplete: StoreCompleteShared -- 
        generic map ( -- 
          name => "StoreGroup0 Complete ",
          num_reqs => 2,
          detailed_buffering_per_output => outBUFs,
          tag_length => 2 -- 
        )
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          mreq => memory_space_0_sc_req(0),
          mack => memory_space_0_sc_ack(0),
          mtag => memory_space_0_sc_tag(1 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- store group 0
    -- shared inport operator group (0) : RPIPE_input_d_931_inst RPIPE_input_d_925_inst RPIPE_input_d_940_inst RPIPE_input_d_922_inst RPIPE_input_d_928_inst RPIPE_input_d_919_inst RPIPE_input_d_949_inst RPIPE_input_d_934_inst RPIPE_input_d_946_inst RPIPE_input_d_955_inst RPIPE_input_d_943_inst RPIPE_input_d_958_inst RPIPE_input_d_916_inst RPIPE_input_d_937_inst RPIPE_input_d_961_inst RPIPE_input_d_952_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(127 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 15 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 15 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 15 downto 0);
      signal guard_vector : std_logic_vector( 15 downto 0);
      constant outBUFs : IntegerArray(15 downto 0) := (15 => 1, 14 => 1, 13 => 1, 12 => 1, 11 => 1, 10 => 1, 9 => 1, 8 => 1, 7 => 1, 6 => 1, 5 => 1, 4 => 1, 3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(15 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false, 4 => false, 5 => false, 6 => false, 7 => false, 8 => false, 9 => false, 10 => false, 11 => false, 12 => false, 13 => false, 14 => false, 15 => false);
      constant guardBuffering: IntegerArray(15 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2, 4 => 2, 5 => 2, 6 => 2, 7 => 2, 8 => 2, 9 => 2, 10 => 2, 11 => 2, 12 => 2, 13 => 2, 14 => 2, 15 => 2);
      -- 
    begin -- 
      reqL_unguarded(15) <= RPIPE_input_d_931_inst_req_0;
      reqL_unguarded(14) <= RPIPE_input_d_925_inst_req_0;
      reqL_unguarded(13) <= RPIPE_input_d_940_inst_req_0;
      reqL_unguarded(12) <= RPIPE_input_d_922_inst_req_0;
      reqL_unguarded(11) <= RPIPE_input_d_928_inst_req_0;
      reqL_unguarded(10) <= RPIPE_input_d_919_inst_req_0;
      reqL_unguarded(9) <= RPIPE_input_d_949_inst_req_0;
      reqL_unguarded(8) <= RPIPE_input_d_934_inst_req_0;
      reqL_unguarded(7) <= RPIPE_input_d_946_inst_req_0;
      reqL_unguarded(6) <= RPIPE_input_d_955_inst_req_0;
      reqL_unguarded(5) <= RPIPE_input_d_943_inst_req_0;
      reqL_unguarded(4) <= RPIPE_input_d_958_inst_req_0;
      reqL_unguarded(3) <= RPIPE_input_d_916_inst_req_0;
      reqL_unguarded(2) <= RPIPE_input_d_937_inst_req_0;
      reqL_unguarded(1) <= RPIPE_input_d_961_inst_req_0;
      reqL_unguarded(0) <= RPIPE_input_d_952_inst_req_0;
      RPIPE_input_d_931_inst_ack_0 <= ackL_unguarded(15);
      RPIPE_input_d_925_inst_ack_0 <= ackL_unguarded(14);
      RPIPE_input_d_940_inst_ack_0 <= ackL_unguarded(13);
      RPIPE_input_d_922_inst_ack_0 <= ackL_unguarded(12);
      RPIPE_input_d_928_inst_ack_0 <= ackL_unguarded(11);
      RPIPE_input_d_919_inst_ack_0 <= ackL_unguarded(10);
      RPIPE_input_d_949_inst_ack_0 <= ackL_unguarded(9);
      RPIPE_input_d_934_inst_ack_0 <= ackL_unguarded(8);
      RPIPE_input_d_946_inst_ack_0 <= ackL_unguarded(7);
      RPIPE_input_d_955_inst_ack_0 <= ackL_unguarded(6);
      RPIPE_input_d_943_inst_ack_0 <= ackL_unguarded(5);
      RPIPE_input_d_958_inst_ack_0 <= ackL_unguarded(4);
      RPIPE_input_d_916_inst_ack_0 <= ackL_unguarded(3);
      RPIPE_input_d_937_inst_ack_0 <= ackL_unguarded(2);
      RPIPE_input_d_961_inst_ack_0 <= ackL_unguarded(1);
      RPIPE_input_d_952_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(15) <= RPIPE_input_d_931_inst_req_1;
      reqR_unguarded(14) <= RPIPE_input_d_925_inst_req_1;
      reqR_unguarded(13) <= RPIPE_input_d_940_inst_req_1;
      reqR_unguarded(12) <= RPIPE_input_d_922_inst_req_1;
      reqR_unguarded(11) <= RPIPE_input_d_928_inst_req_1;
      reqR_unguarded(10) <= RPIPE_input_d_919_inst_req_1;
      reqR_unguarded(9) <= RPIPE_input_d_949_inst_req_1;
      reqR_unguarded(8) <= RPIPE_input_d_934_inst_req_1;
      reqR_unguarded(7) <= RPIPE_input_d_946_inst_req_1;
      reqR_unguarded(6) <= RPIPE_input_d_955_inst_req_1;
      reqR_unguarded(5) <= RPIPE_input_d_943_inst_req_1;
      reqR_unguarded(4) <= RPIPE_input_d_958_inst_req_1;
      reqR_unguarded(3) <= RPIPE_input_d_916_inst_req_1;
      reqR_unguarded(2) <= RPIPE_input_d_937_inst_req_1;
      reqR_unguarded(1) <= RPIPE_input_d_961_inst_req_1;
      reqR_unguarded(0) <= RPIPE_input_d_952_inst_req_1;
      RPIPE_input_d_931_inst_ack_1 <= ackR_unguarded(15);
      RPIPE_input_d_925_inst_ack_1 <= ackR_unguarded(14);
      RPIPE_input_d_940_inst_ack_1 <= ackR_unguarded(13);
      RPIPE_input_d_922_inst_ack_1 <= ackR_unguarded(12);
      RPIPE_input_d_928_inst_ack_1 <= ackR_unguarded(11);
      RPIPE_input_d_919_inst_ack_1 <= ackR_unguarded(10);
      RPIPE_input_d_949_inst_ack_1 <= ackR_unguarded(9);
      RPIPE_input_d_934_inst_ack_1 <= ackR_unguarded(8);
      RPIPE_input_d_946_inst_ack_1 <= ackR_unguarded(7);
      RPIPE_input_d_955_inst_ack_1 <= ackR_unguarded(6);
      RPIPE_input_d_943_inst_ack_1 <= ackR_unguarded(5);
      RPIPE_input_d_958_inst_ack_1 <= ackR_unguarded(4);
      RPIPE_input_d_916_inst_ack_1 <= ackR_unguarded(3);
      RPIPE_input_d_937_inst_ack_1 <= ackR_unguarded(2);
      RPIPE_input_d_961_inst_ack_1 <= ackR_unguarded(1);
      RPIPE_input_d_952_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      guard_vector(4)  <=  '1';
      guard_vector(5)  <=  '1';
      guard_vector(6)  <=  '1';
      guard_vector(7)  <=  '1';
      guard_vector(8)  <=  '1';
      guard_vector(9)  <=  '1';
      guard_vector(10)  <=  '1';
      guard_vector(11)  <=  '1';
      guard_vector(12)  <=  '1';
      guard_vector(13)  <=  '1';
      guard_vector(14)  <=  '1';
      guard_vector(15)  <=  '1';
      m1_5_932 <= data_out(127 downto 120);
      m1_3_926 <= data_out(119 downto 112);
      m1_8_941 <= data_out(111 downto 104);
      m1_2_923 <= data_out(103 downto 96);
      m1_4_929 <= data_out(95 downto 88);
      m1_1_920 <= data_out(87 downto 80);
      m1_11_950 <= data_out(79 downto 72);
      m1_6_935 <= data_out(71 downto 64);
      m1_10_947 <= data_out(63 downto 56);
      m1_13_956 <= data_out(55 downto 48);
      m1_9_944 <= data_out(47 downto 40);
      m1_14_959 <= data_out(39 downto 32);
      m1_0_917 <= data_out(31 downto 24);
      m1_7_938 <= data_out(23 downto 16);
      m1_15_962 <= data_out(15 downto 8);
      m1_12_953 <= data_out(7 downto 0);
      input_d_read_0_gI: SplitGuardInterface generic map(name => "input_d_read_0_gI", nreqs => 16, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      input_d_read_0: InputPortRevised -- 
        generic map ( name => "input_d_read_0", data_width => 8,  num_reqs => 16,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => input_d_pipe_read_req(0),
          oack => input_d_pipe_read_ack(0),
          odata => input_d_pipe_read_data(7 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- shared outport operator group (0) : WPIPE_out_d_1124_inst WPIPE_out_d_1127_inst WPIPE_out_d_1130_inst WPIPE_out_d_1133_inst WPIPE_out_d_1136_inst WPIPE_out_d_1139_inst WPIPE_out_d_1142_inst WPIPE_out_d_1145_inst WPIPE_out_d_1148_inst WPIPE_out_d_1151_inst WPIPE_out_d_1154_inst WPIPE_out_d_1157_inst WPIPE_out_d_1160_inst WPIPE_out_d_1163_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(111 downto 0);
      signal sample_req, sample_ack : BooleanArray( 13 downto 0);
      signal update_req, update_ack : BooleanArray( 13 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 13 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 13 downto 0);
      signal guard_vector : std_logic_vector( 13 downto 0);
      constant inBUFs : IntegerArray(13 downto 0) := (13 => 0, 12 => 0, 11 => 0, 10 => 0, 9 => 0, 8 => 0, 7 => 0, 6 => 0, 5 => 0, 4 => 0, 3 => 0, 2 => 0, 1 => 0, 0 => 0);
      constant guardFlags : BooleanArray(13 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false, 4 => false, 5 => false, 6 => false, 7 => false, 8 => false, 9 => false, 10 => false, 11 => false, 12 => false, 13 => false);
      constant guardBuffering: IntegerArray(13 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2, 4 => 2, 5 => 2, 6 => 2, 7 => 2, 8 => 2, 9 => 2, 10 => 2, 11 => 2, 12 => 2, 13 => 2);
      -- 
    begin -- 
      sample_req_unguarded(13) <= WPIPE_out_d_1124_inst_req_0;
      sample_req_unguarded(12) <= WPIPE_out_d_1127_inst_req_0;
      sample_req_unguarded(11) <= WPIPE_out_d_1130_inst_req_0;
      sample_req_unguarded(10) <= WPIPE_out_d_1133_inst_req_0;
      sample_req_unguarded(9) <= WPIPE_out_d_1136_inst_req_0;
      sample_req_unguarded(8) <= WPIPE_out_d_1139_inst_req_0;
      sample_req_unguarded(7) <= WPIPE_out_d_1142_inst_req_0;
      sample_req_unguarded(6) <= WPIPE_out_d_1145_inst_req_0;
      sample_req_unguarded(5) <= WPIPE_out_d_1148_inst_req_0;
      sample_req_unguarded(4) <= WPIPE_out_d_1151_inst_req_0;
      sample_req_unguarded(3) <= WPIPE_out_d_1154_inst_req_0;
      sample_req_unguarded(2) <= WPIPE_out_d_1157_inst_req_0;
      sample_req_unguarded(1) <= WPIPE_out_d_1160_inst_req_0;
      sample_req_unguarded(0) <= WPIPE_out_d_1163_inst_req_0;
      WPIPE_out_d_1124_inst_ack_0 <= sample_ack_unguarded(13);
      WPIPE_out_d_1127_inst_ack_0 <= sample_ack_unguarded(12);
      WPIPE_out_d_1130_inst_ack_0 <= sample_ack_unguarded(11);
      WPIPE_out_d_1133_inst_ack_0 <= sample_ack_unguarded(10);
      WPIPE_out_d_1136_inst_ack_0 <= sample_ack_unguarded(9);
      WPIPE_out_d_1139_inst_ack_0 <= sample_ack_unguarded(8);
      WPIPE_out_d_1142_inst_ack_0 <= sample_ack_unguarded(7);
      WPIPE_out_d_1145_inst_ack_0 <= sample_ack_unguarded(6);
      WPIPE_out_d_1148_inst_ack_0 <= sample_ack_unguarded(5);
      WPIPE_out_d_1151_inst_ack_0 <= sample_ack_unguarded(4);
      WPIPE_out_d_1154_inst_ack_0 <= sample_ack_unguarded(3);
      WPIPE_out_d_1157_inst_ack_0 <= sample_ack_unguarded(2);
      WPIPE_out_d_1160_inst_ack_0 <= sample_ack_unguarded(1);
      WPIPE_out_d_1163_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(13) <= WPIPE_out_d_1124_inst_req_1;
      update_req_unguarded(12) <= WPIPE_out_d_1127_inst_req_1;
      update_req_unguarded(11) <= WPIPE_out_d_1130_inst_req_1;
      update_req_unguarded(10) <= WPIPE_out_d_1133_inst_req_1;
      update_req_unguarded(9) <= WPIPE_out_d_1136_inst_req_1;
      update_req_unguarded(8) <= WPIPE_out_d_1139_inst_req_1;
      update_req_unguarded(7) <= WPIPE_out_d_1142_inst_req_1;
      update_req_unguarded(6) <= WPIPE_out_d_1145_inst_req_1;
      update_req_unguarded(5) <= WPIPE_out_d_1148_inst_req_1;
      update_req_unguarded(4) <= WPIPE_out_d_1151_inst_req_1;
      update_req_unguarded(3) <= WPIPE_out_d_1154_inst_req_1;
      update_req_unguarded(2) <= WPIPE_out_d_1157_inst_req_1;
      update_req_unguarded(1) <= WPIPE_out_d_1160_inst_req_1;
      update_req_unguarded(0) <= WPIPE_out_d_1163_inst_req_1;
      WPIPE_out_d_1124_inst_ack_1 <= update_ack_unguarded(13);
      WPIPE_out_d_1127_inst_ack_1 <= update_ack_unguarded(12);
      WPIPE_out_d_1130_inst_ack_1 <= update_ack_unguarded(11);
      WPIPE_out_d_1133_inst_ack_1 <= update_ack_unguarded(10);
      WPIPE_out_d_1136_inst_ack_1 <= update_ack_unguarded(9);
      WPIPE_out_d_1139_inst_ack_1 <= update_ack_unguarded(8);
      WPIPE_out_d_1142_inst_ack_1 <= update_ack_unguarded(7);
      WPIPE_out_d_1145_inst_ack_1 <= update_ack_unguarded(6);
      WPIPE_out_d_1148_inst_ack_1 <= update_ack_unguarded(5);
      WPIPE_out_d_1151_inst_ack_1 <= update_ack_unguarded(4);
      WPIPE_out_d_1154_inst_ack_1 <= update_ack_unguarded(3);
      WPIPE_out_d_1157_inst_ack_1 <= update_ack_unguarded(2);
      WPIPE_out_d_1160_inst_ack_1 <= update_ack_unguarded(1);
      WPIPE_out_d_1163_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      guard_vector(4)  <=  '1';
      guard_vector(5)  <=  '1';
      guard_vector(6)  <=  '1';
      guard_vector(7)  <=  '1';
      guard_vector(8)  <=  '1';
      guard_vector(9)  <=  '1';
      guard_vector(10)  <=  '1';
      guard_vector(11)  <=  '1';
      guard_vector(12)  <=  '1';
      guard_vector(13)  <=  '1';
      data_in <= m_0_1046 & m_1_1050 & m_2_1054 & m_3_1058 & m_4_1062 & m_5_1066 & m_6_1070 & m_7_1074 & m_8_1078 & m_9_1082 & m_10_1086 & m_11_1090 & m_12_1094 & m_13_1098;
      out_d_write_0_gI: SplitGuardInterface generic map(name => "out_d_write_0_gI", nreqs => 14, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      out_d_write_0: OutputPortRevised -- 
        generic map ( name => "out_d", data_width => 8, num_reqs => 14, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => out_d_pipe_write_req(0),
          oack => out_d_pipe_write_ack(0),
          odata => out_d_pipe_write_data(7 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- shared call operator group (0) : call_stmt_1123_call 
    checksum_calculation_call_group_0: Block -- 
      signal data_in: std_logic_vector(111 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_1123_call_req_0;
      call_stmt_1123_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_1123_call_req_1;
      call_stmt_1123_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      checksum_calculation_call_group_0_gI: SplitGuardInterface generic map(name => "checksum_calculation_call_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= m_0_1046 & m_1_1050 & m_2_1054 & m_3_1058 & m_4_1062 & m_5_1066 & m_6_1070 & m_7_1074 & m_8_1078 & m_9_1082 & m_10_1086 & m_11_1090 & m_12_1094 & m_13_1098;
      mc_14_1123 <= data_out(15 downto 8);
      mc_15_1123 <= data_out(7 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 112,
        owidth => 112,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => checksum_calculation_call_reqs(0),
          ackR => checksum_calculation_call_acks(0),
          dataR => checksum_calculation_call_data(111 downto 0),
          tagR => checksum_calculation_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 16,
          owidth => 16,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => checksum_calculation_return_acks(0), -- cross-over
          ackL => checksum_calculation_return_reqs(0), -- cross-over
          dataL => checksum_calculation_return_data(15 downto 0),
          tagL => checksum_calculation_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- shared call operator group (1) : call_stmt_914_call 
    counter_encry_call_group_1: Block -- 
      signal data_in: std_logic_vector(255 downto 0);
      signal data_out: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_914_call_req_0;
      call_stmt_914_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_914_call_req_1;
      call_stmt_914_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      counter_encry_call_group_1_gI: SplitGuardInterface generic map(name => "counter_encry_call_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= a0_0_buffer & a0_1_buffer & a0_2_buffer & a0_3_buffer & counter_900;
      lw8_0_914 <= data_out(127 downto 96);
      lw8_1_914 <= data_out(95 downto 64);
      lw8_2_914 <= data_out(63 downto 32);
      lw8_3_914 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 256,
        owidth => 256,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => counter_encry_call_reqs(0),
          ackR => counter_encry_call_acks(0),
          dataR => counter_encry_call_data(255 downto 0),
          tagR => counter_encry_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 128,
          owidth => 128,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => counter_encry_return_acks(0), -- cross-over
          ackL => counter_encry_return_reqs(0), -- cross-over
          dataL => counter_encry_return_data(127 downto 0),
          tagL => counter_encry_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 1
    -- 
  end Block; -- data_path
  -- 
end decryption_engine_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity encryption_engine is -- 
  generic (tag_length : integer); 
  port ( -- 
    k0_0 : in  std_logic_vector(31 downto 0);
    k0_1 : in  std_logic_vector(31 downto 0);
    k0_2 : in  std_logic_vector(31 downto 0);
    k0_3 : in  std_logic_vector(31 downto 0);
    encry_counter : in  std_logic_vector(127 downto 0);
    memory_space_0_lr_req : out  std_logic_vector(0 downto 0);
    memory_space_0_lr_ack : in   std_logic_vector(0 downto 0);
    memory_space_0_lr_addr : out  std_logic_vector(0 downto 0);
    memory_space_0_lr_tag :  out  std_logic_vector(18 downto 0);
    memory_space_0_lc_req : out  std_logic_vector(0 downto 0);
    memory_space_0_lc_ack : in   std_logic_vector(0 downto 0);
    memory_space_0_lc_data : in   std_logic_vector(0 downto 0);
    memory_space_0_lc_tag :  in  std_logic_vector(1 downto 0);
    input_e_pipe_read_req : out  std_logic_vector(0 downto 0);
    input_e_pipe_read_ack : in   std_logic_vector(0 downto 0);
    input_e_pipe_read_data : in   std_logic_vector(7 downto 0);
    checksum_calculation_call_reqs : out  std_logic_vector(0 downto 0);
    checksum_calculation_call_acks : in   std_logic_vector(0 downto 0);
    checksum_calculation_call_data : out  std_logic_vector(111 downto 0);
    checksum_calculation_call_tag  :  out  std_logic_vector(0 downto 0);
    checksum_calculation_return_reqs : out  std_logic_vector(0 downto 0);
    checksum_calculation_return_acks : in   std_logic_vector(0 downto 0);
    checksum_calculation_return_data : in   std_logic_vector(15 downto 0);
    checksum_calculation_return_tag :  in   std_logic_vector(0 downto 0);
    counter_encry_call_reqs : out  std_logic_vector(0 downto 0);
    counter_encry_call_acks : in   std_logic_vector(0 downto 0);
    counter_encry_call_data : out  std_logic_vector(255 downto 0);
    counter_encry_call_tag  :  out  std_logic_vector(0 downto 0);
    counter_encry_return_reqs : out  std_logic_vector(0 downto 0);
    counter_encry_return_acks : in   std_logic_vector(0 downto 0);
    counter_encry_return_data : in   std_logic_vector(127 downto 0);
    counter_encry_return_tag :  in   std_logic_vector(0 downto 0);
    send_msg_call_reqs : out  std_logic_vector(0 downto 0);
    send_msg_call_acks : in   std_logic_vector(0 downto 0);
    send_msg_call_data : out  std_logic_vector(31 downto 0);
    send_msg_call_tag  :  out  std_logic_vector(2 downto 0);
    send_msg_return_reqs : out  std_logic_vector(0 downto 0);
    send_msg_return_acks : in   std_logic_vector(0 downto 0);
    send_msg_return_tag :  in   std_logic_vector(2 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity encryption_engine;
architecture encryption_engine_arch of encryption_engine is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 256)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal k0_0_buffer :  std_logic_vector(31 downto 0);
  signal k0_0_update_enable: Boolean;
  signal k0_1_buffer :  std_logic_vector(31 downto 0);
  signal k0_1_update_enable: Boolean;
  signal k0_2_buffer :  std_logic_vector(31 downto 0);
  signal k0_2_update_enable: Boolean;
  signal k0_3_buffer :  std_logic_vector(31 downto 0);
  signal k0_3_update_enable: Boolean;
  signal encry_counter_buffer :  std_logic_vector(127 downto 0);
  signal encry_counter_update_enable: Boolean;
  -- output port buffer signals
  signal encryption_engine_CP_4077_start: Boolean;
  signal encryption_engine_CP_4077_symbol: Boolean;
  -- volatile/operator module components. 
  component checksum_calculation is -- 
    generic (tag_length : integer); 
    port ( -- 
      m_0 : in  std_logic_vector(7 downto 0);
      m_1 : in  std_logic_vector(7 downto 0);
      m_2 : in  std_logic_vector(7 downto 0);
      m_3 : in  std_logic_vector(7 downto 0);
      m_4 : in  std_logic_vector(7 downto 0);
      m_5 : in  std_logic_vector(7 downto 0);
      m_6 : in  std_logic_vector(7 downto 0);
      m_7 : in  std_logic_vector(7 downto 0);
      m_8 : in  std_logic_vector(7 downto 0);
      m_9 : in  std_logic_vector(7 downto 0);
      m_10 : in  std_logic_vector(7 downto 0);
      m_11 : in  std_logic_vector(7 downto 0);
      m_12 : in  std_logic_vector(7 downto 0);
      m_13 : in  std_logic_vector(7 downto 0);
      m_14 : out  std_logic_vector(7 downto 0);
      m_15 : out  std_logic_vector(7 downto 0);
      checksum_call_reqs : out  std_logic_vector(0 downto 0);
      checksum_call_acks : in   std_logic_vector(0 downto 0);
      checksum_call_data : out  std_logic_vector(7 downto 0);
      checksum_call_tag  :  out  std_logic_vector(3 downto 0);
      checksum_return_reqs : out  std_logic_vector(0 downto 0);
      checksum_return_acks : in   std_logic_vector(0 downto 0);
      checksum_return_data : in   std_logic_vector(0 downto 0);
      checksum_return_tag :  in   std_logic_vector(3 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component counter_encry is -- 
    generic (tag_length : integer); 
    port ( -- 
      k0_0 : in  std_logic_vector(31 downto 0);
      k0_1 : in  std_logic_vector(31 downto 0);
      k0_2 : in  std_logic_vector(31 downto 0);
      k0_3 : in  std_logic_vector(31 downto 0);
      counter : in  std_logic_vector(127 downto 0);
      lw7_0 : out  std_logic_vector(31 downto 0);
      lw7_1 : out  std_logic_vector(31 downto 0);
      lw7_2 : out  std_logic_vector(31 downto 0);
      lw7_3 : out  std_logic_vector(31 downto 0);
      add_round_key_call_reqs : out  std_logic_vector(0 downto 0);
      add_round_key_call_acks : in   std_logic_vector(0 downto 0);
      add_round_key_call_data : out  std_logic_vector(263 downto 0);
      add_round_key_call_tag  :  out  std_logic_vector(1 downto 0);
      add_round_key_return_reqs : out  std_logic_vector(0 downto 0);
      add_round_key_return_acks : in   std_logic_vector(0 downto 0);
      add_round_key_return_data : in   std_logic_vector(255 downto 0);
      add_round_key_return_tag :  in   std_logic_vector(1 downto 0);
      shift_row_call_reqs : out  std_logic_vector(0 downto 0);
      shift_row_call_acks : in   std_logic_vector(0 downto 0);
      shift_row_call_data : out  std_logic_vector(127 downto 0);
      shift_row_call_tag  :  out  std_logic_vector(1 downto 0);
      shift_row_return_reqs : out  std_logic_vector(0 downto 0);
      shift_row_return_acks : in   std_logic_vector(0 downto 0);
      shift_row_return_data : in   std_logic_vector(127 downto 0);
      shift_row_return_tag :  in   std_logic_vector(1 downto 0);
      mix_column_call_reqs : out  std_logic_vector(0 downto 0);
      mix_column_call_acks : in   std_logic_vector(0 downto 0);
      mix_column_call_data : out  std_logic_vector(31 downto 0);
      mix_column_call_tag  :  out  std_logic_vector(2 downto 0);
      mix_column_return_reqs : out  std_logic_vector(0 downto 0);
      mix_column_return_acks : in   std_logic_vector(0 downto 0);
      mix_column_return_data : in   std_logic_vector(31 downto 0);
      mix_column_return_tag :  in   std_logic_vector(2 downto 0);
      sbox_transformation_call_reqs : out  std_logic_vector(0 downto 0);
      sbox_transformation_call_acks : in   std_logic_vector(0 downto 0);
      sbox_transformation_call_data : out  std_logic_vector(31 downto 0);
      sbox_transformation_call_tag  :  out  std_logic_vector(3 downto 0);
      sbox_transformation_return_reqs : out  std_logic_vector(0 downto 0);
      sbox_transformation_return_acks : in   std_logic_vector(0 downto 0);
      sbox_transformation_return_data : in   std_logic_vector(31 downto 0);
      sbox_transformation_return_tag :  in   std_logic_vector(3 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component send_msg is -- 
    generic (tag_length : integer); 
    port ( -- 
      msg : in  std_logic_vector(31 downto 0);
      out_e_pipe_write_req : out  std_logic_vector(0 downto 0);
      out_e_pipe_write_ack : in   std_logic_vector(0 downto 0);
      out_e_pipe_write_data : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal encry_counter_1237_buf_req_1 : boolean;
  signal encry_counter_1237_buf_ack_1 : boolean;
  signal counter_nxt_1401_1238_buf_ack_1 : boolean;
  signal phi_stmt_1235_req_0 : boolean;
  signal encry_counter_1237_buf_req_0 : boolean;
  signal call_stmt_1249_call_req_0 : boolean;
  signal phi_stmt_1235_req_1 : boolean;
  signal counter_nxt_1401_1238_buf_req_1 : boolean;
  signal call_stmt_1249_call_ack_0 : boolean;
  signal phi_stmt_1235_ack_0 : boolean;
  signal encry_counter_1237_buf_ack_0 : boolean;
  signal counter_nxt_1401_1238_buf_req_0 : boolean;
  signal counter_nxt_1401_1238_buf_ack_0 : boolean;
  signal call_stmt_1249_call_req_1 : boolean;
  signal call_stmt_1249_call_ack_1 : boolean;
  signal RPIPE_input_e_1251_inst_req_0 : boolean;
  signal RPIPE_input_e_1251_inst_ack_0 : boolean;
  signal RPIPE_input_e_1251_inst_req_1 : boolean;
  signal RPIPE_input_e_1251_inst_ack_1 : boolean;
  signal RPIPE_input_e_1254_inst_req_0 : boolean;
  signal RPIPE_input_e_1254_inst_ack_0 : boolean;
  signal RPIPE_input_e_1254_inst_req_1 : boolean;
  signal RPIPE_input_e_1254_inst_ack_1 : boolean;
  signal RPIPE_input_e_1257_inst_req_0 : boolean;
  signal RPIPE_input_e_1257_inst_ack_0 : boolean;
  signal RPIPE_input_e_1257_inst_req_1 : boolean;
  signal RPIPE_input_e_1257_inst_ack_1 : boolean;
  signal RPIPE_input_e_1260_inst_req_0 : boolean;
  signal RPIPE_input_e_1260_inst_ack_0 : boolean;
  signal RPIPE_input_e_1260_inst_req_1 : boolean;
  signal RPIPE_input_e_1260_inst_ack_1 : boolean;
  signal RPIPE_input_e_1263_inst_req_0 : boolean;
  signal RPIPE_input_e_1263_inst_ack_0 : boolean;
  signal RPIPE_input_e_1263_inst_req_1 : boolean;
  signal RPIPE_input_e_1263_inst_ack_1 : boolean;
  signal RPIPE_input_e_1266_inst_req_0 : boolean;
  signal RPIPE_input_e_1266_inst_ack_0 : boolean;
  signal RPIPE_input_e_1266_inst_req_1 : boolean;
  signal RPIPE_input_e_1266_inst_ack_1 : boolean;
  signal RPIPE_input_e_1269_inst_req_0 : boolean;
  signal RPIPE_input_e_1269_inst_ack_0 : boolean;
  signal RPIPE_input_e_1269_inst_req_1 : boolean;
  signal RPIPE_input_e_1269_inst_ack_1 : boolean;
  signal RPIPE_input_e_1272_inst_req_0 : boolean;
  signal RPIPE_input_e_1272_inst_ack_0 : boolean;
  signal RPIPE_input_e_1272_inst_req_1 : boolean;
  signal RPIPE_input_e_1272_inst_ack_1 : boolean;
  signal RPIPE_input_e_1275_inst_req_0 : boolean;
  signal RPIPE_input_e_1275_inst_ack_0 : boolean;
  signal RPIPE_input_e_1275_inst_req_1 : boolean;
  signal RPIPE_input_e_1275_inst_ack_1 : boolean;
  signal RPIPE_input_e_1278_inst_req_0 : boolean;
  signal RPIPE_input_e_1278_inst_ack_0 : boolean;
  signal RPIPE_input_e_1278_inst_req_1 : boolean;
  signal RPIPE_input_e_1278_inst_ack_1 : boolean;
  signal RPIPE_input_e_1281_inst_req_0 : boolean;
  signal RPIPE_input_e_1281_inst_ack_0 : boolean;
  signal RPIPE_input_e_1281_inst_req_1 : boolean;
  signal RPIPE_input_e_1281_inst_ack_1 : boolean;
  signal RPIPE_input_e_1284_inst_req_0 : boolean;
  signal RPIPE_input_e_1284_inst_ack_0 : boolean;
  signal RPIPE_input_e_1284_inst_req_1 : boolean;
  signal RPIPE_input_e_1284_inst_ack_1 : boolean;
  signal RPIPE_input_e_1287_inst_req_0 : boolean;
  signal RPIPE_input_e_1287_inst_ack_0 : boolean;
  signal RPIPE_input_e_1287_inst_req_1 : boolean;
  signal RPIPE_input_e_1287_inst_ack_1 : boolean;
  signal RPIPE_input_e_1290_inst_req_0 : boolean;
  signal RPIPE_input_e_1290_inst_ack_0 : boolean;
  signal RPIPE_input_e_1290_inst_req_1 : boolean;
  signal RPIPE_input_e_1290_inst_ack_1 : boolean;
  signal call_stmt_1308_call_req_0 : boolean;
  signal call_stmt_1308_call_ack_0 : boolean;
  signal call_stmt_1308_call_req_1 : boolean;
  signal call_stmt_1308_call_ack_1 : boolean;
  signal CONCAT_u8_u16_1312_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1312_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1312_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1312_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1317_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1317_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1317_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1317_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_1322_inst_req_0 : boolean;
  signal CONCAT_u16_u32_1322_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_1322_inst_req_1 : boolean;
  signal CONCAT_u16_u32_1322_inst_ack_1 : boolean;
  signal XOR_u32_u32_1327_inst_req_0 : boolean;
  signal XOR_u32_u32_1327_inst_ack_0 : boolean;
  signal XOR_u32_u32_1327_inst_req_1 : boolean;
  signal XOR_u32_u32_1327_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1332_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1332_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1332_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1332_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1337_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1337_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1337_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1337_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_1342_inst_req_0 : boolean;
  signal CONCAT_u16_u32_1342_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_1342_inst_req_1 : boolean;
  signal CONCAT_u16_u32_1342_inst_ack_1 : boolean;
  signal XOR_u32_u32_1347_inst_req_0 : boolean;
  signal XOR_u32_u32_1347_inst_ack_0 : boolean;
  signal XOR_u32_u32_1347_inst_req_1 : boolean;
  signal XOR_u32_u32_1347_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1352_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1352_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1352_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1352_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1357_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1357_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1357_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1357_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_1362_inst_req_0 : boolean;
  signal CONCAT_u16_u32_1362_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_1362_inst_req_1 : boolean;
  signal CONCAT_u16_u32_1362_inst_ack_1 : boolean;
  signal XOR_u32_u32_1367_inst_req_0 : boolean;
  signal XOR_u32_u32_1367_inst_ack_0 : boolean;
  signal XOR_u32_u32_1367_inst_req_1 : boolean;
  signal XOR_u32_u32_1367_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1372_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1372_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1372_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1372_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1377_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1377_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1377_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1377_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_1382_inst_req_0 : boolean;
  signal CONCAT_u16_u32_1382_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_1382_inst_req_1 : boolean;
  signal CONCAT_u16_u32_1382_inst_ack_1 : boolean;
  signal XOR_u32_u32_1387_inst_req_0 : boolean;
  signal XOR_u32_u32_1387_inst_ack_0 : boolean;
  signal XOR_u32_u32_1387_inst_req_1 : boolean;
  signal XOR_u32_u32_1387_inst_ack_1 : boolean;
  signal call_stmt_1390_call_req_0 : boolean;
  signal call_stmt_1390_call_ack_0 : boolean;
  signal call_stmt_1390_call_req_1 : boolean;
  signal call_stmt_1390_call_ack_1 : boolean;
  signal call_stmt_1392_call_req_0 : boolean;
  signal call_stmt_1392_call_ack_0 : boolean;
  signal call_stmt_1392_call_req_1 : boolean;
  signal call_stmt_1392_call_ack_1 : boolean;
  signal call_stmt_1394_call_req_0 : boolean;
  signal call_stmt_1394_call_ack_0 : boolean;
  signal call_stmt_1394_call_req_1 : boolean;
  signal call_stmt_1394_call_ack_1 : boolean;
  signal call_stmt_1396_call_req_0 : boolean;
  signal call_stmt_1396_call_ack_0 : boolean;
  signal call_stmt_1396_call_req_1 : boolean;
  signal call_stmt_1396_call_ack_1 : boolean;
  signal ADD_u128_u128_1400_inst_req_0 : boolean;
  signal ADD_u128_u128_1400_inst_ack_0 : boolean;
  signal ADD_u128_u128_1400_inst_req_1 : boolean;
  signal ADD_u128_u128_1400_inst_ack_1 : boolean;
  signal LOAD_check_1403_load_0_req_0 : boolean;
  signal LOAD_check_1403_load_0_ack_0 : boolean;
  signal LOAD_check_1403_load_0_req_1 : boolean;
  signal LOAD_check_1403_load_0_ack_1 : boolean;
  signal if_stmt_1402_branch_req_0 : boolean;
  signal if_stmt_1402_branch_ack_1 : boolean;
  signal if_stmt_1402_branch_ack_0 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "encryption_engine_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 256) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(31 downto 0) <= k0_0;
  k0_0_buffer <= in_buffer_data_out(31 downto 0);
  in_buffer_data_in(63 downto 32) <= k0_1;
  k0_1_buffer <= in_buffer_data_out(63 downto 32);
  in_buffer_data_in(95 downto 64) <= k0_2;
  k0_2_buffer <= in_buffer_data_out(95 downto 64);
  in_buffer_data_in(127 downto 96) <= k0_3;
  k0_3_buffer <= in_buffer_data_out(127 downto 96);
  in_buffer_data_in(255 downto 128) <= encry_counter;
  encry_counter_buffer <= in_buffer_data_out(255 downto 128);
  in_buffer_data_in(tag_length + 255 downto 256) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 255 downto 256);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  encryption_engine_CP_4077_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "encryption_engine_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= encryption_engine_CP_4077_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= encryption_engine_CP_4077_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= encryption_engine_CP_4077_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  encryption_engine_CP_4077: Block -- control-path 
    signal encryption_engine_CP_4077_elements: BooleanArray(106 downto 0);
    -- 
  begin -- 
    encryption_engine_CP_4077_elements(0) <= encryption_engine_CP_4077_start;
    encryption_engine_CP_4077_symbol <= encryption_engine_CP_4077_elements(98);
    -- CP-element group 0:  branch  fork  transition  place  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	99 
    -- CP-element group 0: 	100 
    -- CP-element group 0:  members (13) 
      -- CP-element group 0: 	 branch_block_stmt_1233/merge_stmt_1234__entry__
      -- CP-element group 0: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Update/req
      -- CP-element group 0: 	 branch_block_stmt_1233/branch_block_stmt_1233__entry__
      -- CP-element group 0: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Sample/req
      -- CP-element group 0: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/$entry
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 branch_block_stmt_1233/$entry
      -- CP-element group 0: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/$entry
      -- CP-element group 0: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Update/$entry
      -- CP-element group 0: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_sources/$entry
      -- CP-element group 0: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Sample/$entry
      -- CP-element group 0: 	 branch_block_stmt_1233/merge_stmt_1234_dead_link/$entry
      -- CP-element group 0: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/$entry
      -- 
    req_4694_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4694_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(0), ack => encry_counter_1237_buf_req_1); -- 
    req_4689_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4689_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(0), ack => encry_counter_1237_buf_req_0); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	106 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1249_Sample/cra
      -- CP-element group 1: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1249_Sample/$exit
      -- CP-element group 1: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1249_sample_completed_
      -- 
    cra_4102_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1249_call_ack_0, ack => encryption_engine_CP_4077_elements(1)); -- 
    -- CP-element group 2:  fork  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	106 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	42 
    -- CP-element group 2: 	54 
    -- CP-element group 2: 	66 
    -- CP-element group 2: 	77 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1249_update_completed_
      -- CP-element group 2: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1249_Update/$exit
      -- CP-element group 2: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1249_Update/cca
      -- 
    cca_4107_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1249_call_ack_1, ack => encryption_engine_CP_4077_elements(2)); -- 
    -- CP-element group 3:  transition  input  output  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	106 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	4 
    -- CP-element group 3:  members (6) 
      -- CP-element group 3: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1251_sample_completed_
      -- CP-element group 3: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1251_update_start_
      -- CP-element group 3: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1251_Sample/$exit
      -- CP-element group 3: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1251_Sample/ra
      -- CP-element group 3: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1251_Update/$entry
      -- CP-element group 3: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1251_Update/cr
      -- 
    ra_4116_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1251_inst_ack_0, ack => encryption_engine_CP_4077_elements(3)); -- 
    cr_4120_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4120_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(3), ack => RPIPE_input_e_1251_inst_req_1); -- 
    -- CP-element group 4:  fork  transition  input  output  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	3 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	5 
    -- CP-element group 4: 	33 
    -- CP-element group 4:  members (6) 
      -- CP-element group 4: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1251_update_completed_
      -- CP-element group 4: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1251_Update/$exit
      -- CP-element group 4: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1251_Update/ca
      -- CP-element group 4: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1254_sample_start_
      -- CP-element group 4: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1254_Sample/$entry
      -- CP-element group 4: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1254_Sample/rr
      -- 
    ca_4121_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1251_inst_ack_1, ack => encryption_engine_CP_4077_elements(4)); -- 
    rr_4129_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4129_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(4), ack => RPIPE_input_e_1254_inst_req_0); -- 
    -- CP-element group 5:  transition  input  output  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	4 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	6 
    -- CP-element group 5:  members (6) 
      -- CP-element group 5: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1254_sample_completed_
      -- CP-element group 5: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1254_update_start_
      -- CP-element group 5: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1254_Sample/$exit
      -- CP-element group 5: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1254_Sample/ra
      -- CP-element group 5: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1254_Update/$entry
      -- CP-element group 5: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1254_Update/cr
      -- 
    ra_4130_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1254_inst_ack_0, ack => encryption_engine_CP_4077_elements(5)); -- 
    cr_4134_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4134_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(5), ack => RPIPE_input_e_1254_inst_req_1); -- 
    -- CP-element group 6:  fork  transition  input  output  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	5 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	7 
    -- CP-element group 6: 	33 
    -- CP-element group 6:  members (6) 
      -- CP-element group 6: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1254_update_completed_
      -- CP-element group 6: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1254_Update/$exit
      -- CP-element group 6: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1254_Update/ca
      -- CP-element group 6: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1257_sample_start_
      -- CP-element group 6: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1257_Sample/$entry
      -- CP-element group 6: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1257_Sample/rr
      -- 
    ca_4135_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1254_inst_ack_1, ack => encryption_engine_CP_4077_elements(6)); -- 
    rr_4143_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4143_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(6), ack => RPIPE_input_e_1257_inst_req_0); -- 
    -- CP-element group 7:  transition  input  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	6 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7:  members (6) 
      -- CP-element group 7: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1257_sample_completed_
      -- CP-element group 7: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1257_update_start_
      -- CP-element group 7: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1257_Sample/$exit
      -- CP-element group 7: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1257_Sample/ra
      -- CP-element group 7: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1257_Update/$entry
      -- CP-element group 7: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1257_Update/cr
      -- 
    ra_4144_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1257_inst_ack_0, ack => encryption_engine_CP_4077_elements(7)); -- 
    cr_4148_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4148_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(7), ack => RPIPE_input_e_1257_inst_req_1); -- 
    -- CP-element group 8:  fork  transition  input  output  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	9 
    -- CP-element group 8: 	36 
    -- CP-element group 8:  members (6) 
      -- CP-element group 8: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1257_update_completed_
      -- CP-element group 8: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1257_Update/$exit
      -- CP-element group 8: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1257_Update/ca
      -- CP-element group 8: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1260_sample_start_
      -- CP-element group 8: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1260_Sample/$entry
      -- CP-element group 8: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1260_Sample/rr
      -- 
    ca_4149_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1257_inst_ack_1, ack => encryption_engine_CP_4077_elements(8)); -- 
    rr_4157_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4157_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(8), ack => RPIPE_input_e_1260_inst_req_0); -- 
    -- CP-element group 9:  transition  input  output  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	8 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	10 
    -- CP-element group 9:  members (6) 
      -- CP-element group 9: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1260_sample_completed_
      -- CP-element group 9: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1260_update_start_
      -- CP-element group 9: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1260_Sample/$exit
      -- CP-element group 9: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1260_Sample/ra
      -- CP-element group 9: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1260_Update/$entry
      -- CP-element group 9: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1260_Update/cr
      -- 
    ra_4158_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1260_inst_ack_0, ack => encryption_engine_CP_4077_elements(9)); -- 
    cr_4162_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4162_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(9), ack => RPIPE_input_e_1260_inst_req_1); -- 
    -- CP-element group 10:  fork  transition  input  output  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	9 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	11 
    -- CP-element group 10: 	36 
    -- CP-element group 10:  members (6) 
      -- CP-element group 10: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1260_update_completed_
      -- CP-element group 10: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1260_Update/$exit
      -- CP-element group 10: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1260_Update/ca
      -- CP-element group 10: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1263_sample_start_
      -- CP-element group 10: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1263_Sample/$entry
      -- CP-element group 10: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1263_Sample/rr
      -- 
    ca_4163_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1260_inst_ack_1, ack => encryption_engine_CP_4077_elements(10)); -- 
    rr_4171_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4171_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(10), ack => RPIPE_input_e_1263_inst_req_0); -- 
    -- CP-element group 11:  transition  input  output  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	10 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	12 
    -- CP-element group 11:  members (6) 
      -- CP-element group 11: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1263_sample_completed_
      -- CP-element group 11: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1263_update_start_
      -- CP-element group 11: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1263_Sample/$exit
      -- CP-element group 11: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1263_Sample/ra
      -- CP-element group 11: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1263_Update/$entry
      -- CP-element group 11: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1263_Update/cr
      -- 
    ra_4172_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1263_inst_ack_0, ack => encryption_engine_CP_4077_elements(11)); -- 
    cr_4176_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4176_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(11), ack => RPIPE_input_e_1263_inst_req_1); -- 
    -- CP-element group 12:  fork  transition  input  output  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	11 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	13 
    -- CP-element group 12: 	45 
    -- CP-element group 12:  members (6) 
      -- CP-element group 12: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1263_update_completed_
      -- CP-element group 12: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1263_Update/$exit
      -- CP-element group 12: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1263_Update/ca
      -- CP-element group 12: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1266_sample_start_
      -- CP-element group 12: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1266_Sample/$entry
      -- CP-element group 12: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1266_Sample/rr
      -- 
    ca_4177_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1263_inst_ack_1, ack => encryption_engine_CP_4077_elements(12)); -- 
    rr_4185_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4185_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(12), ack => RPIPE_input_e_1266_inst_req_0); -- 
    -- CP-element group 13:  transition  input  output  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	12 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	14 
    -- CP-element group 13:  members (6) 
      -- CP-element group 13: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1266_sample_completed_
      -- CP-element group 13: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1266_update_start_
      -- CP-element group 13: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1266_Sample/$exit
      -- CP-element group 13: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1266_Sample/ra
      -- CP-element group 13: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1266_Update/$entry
      -- CP-element group 13: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1266_Update/cr
      -- 
    ra_4186_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1266_inst_ack_0, ack => encryption_engine_CP_4077_elements(13)); -- 
    cr_4190_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4190_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(13), ack => RPIPE_input_e_1266_inst_req_1); -- 
    -- CP-element group 14:  fork  transition  input  output  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	13 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	15 
    -- CP-element group 14: 	45 
    -- CP-element group 14:  members (6) 
      -- CP-element group 14: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1266_update_completed_
      -- CP-element group 14: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1266_Update/$exit
      -- CP-element group 14: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1266_Update/ca
      -- CP-element group 14: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1269_sample_start_
      -- CP-element group 14: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1269_Sample/$entry
      -- CP-element group 14: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1269_Sample/rr
      -- 
    ca_4191_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1266_inst_ack_1, ack => encryption_engine_CP_4077_elements(14)); -- 
    rr_4199_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4199_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(14), ack => RPIPE_input_e_1269_inst_req_0); -- 
    -- CP-element group 15:  transition  input  output  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	14 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	16 
    -- CP-element group 15:  members (6) 
      -- CP-element group 15: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1269_sample_completed_
      -- CP-element group 15: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1269_update_start_
      -- CP-element group 15: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1269_Sample/$exit
      -- CP-element group 15: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1269_Sample/ra
      -- CP-element group 15: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1269_Update/$entry
      -- CP-element group 15: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1269_Update/cr
      -- 
    ra_4200_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1269_inst_ack_0, ack => encryption_engine_CP_4077_elements(15)); -- 
    cr_4204_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4204_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(15), ack => RPIPE_input_e_1269_inst_req_1); -- 
    -- CP-element group 16:  fork  transition  input  output  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	15 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	17 
    -- CP-element group 16: 	48 
    -- CP-element group 16:  members (6) 
      -- CP-element group 16: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1269_update_completed_
      -- CP-element group 16: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1269_Update/$exit
      -- CP-element group 16: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1269_Update/ca
      -- CP-element group 16: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1272_sample_start_
      -- CP-element group 16: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1272_Sample/$entry
      -- CP-element group 16: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1272_Sample/rr
      -- 
    ca_4205_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1269_inst_ack_1, ack => encryption_engine_CP_4077_elements(16)); -- 
    rr_4213_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4213_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(16), ack => RPIPE_input_e_1272_inst_req_0); -- 
    -- CP-element group 17:  transition  input  output  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	16 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	18 
    -- CP-element group 17:  members (6) 
      -- CP-element group 17: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1272_sample_completed_
      -- CP-element group 17: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1272_update_start_
      -- CP-element group 17: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1272_Sample/$exit
      -- CP-element group 17: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1272_Sample/ra
      -- CP-element group 17: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1272_Update/$entry
      -- CP-element group 17: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1272_Update/cr
      -- 
    ra_4214_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 17_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1272_inst_ack_0, ack => encryption_engine_CP_4077_elements(17)); -- 
    cr_4218_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4218_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(17), ack => RPIPE_input_e_1272_inst_req_1); -- 
    -- CP-element group 18:  fork  transition  input  output  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	17 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	19 
    -- CP-element group 18: 	48 
    -- CP-element group 18:  members (6) 
      -- CP-element group 18: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1272_update_completed_
      -- CP-element group 18: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1272_Update/$exit
      -- CP-element group 18: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1272_Update/ca
      -- CP-element group 18: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1275_sample_start_
      -- CP-element group 18: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1275_Sample/$entry
      -- CP-element group 18: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1275_Sample/rr
      -- 
    ca_4219_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1272_inst_ack_1, ack => encryption_engine_CP_4077_elements(18)); -- 
    rr_4227_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4227_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(18), ack => RPIPE_input_e_1275_inst_req_0); -- 
    -- CP-element group 19:  transition  input  output  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	18 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	20 
    -- CP-element group 19:  members (6) 
      -- CP-element group 19: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1275_sample_completed_
      -- CP-element group 19: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1275_update_start_
      -- CP-element group 19: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1275_Sample/$exit
      -- CP-element group 19: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1275_Sample/ra
      -- CP-element group 19: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1275_Update/$entry
      -- CP-element group 19: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1275_Update/cr
      -- 
    ra_4228_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1275_inst_ack_0, ack => encryption_engine_CP_4077_elements(19)); -- 
    cr_4232_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4232_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(19), ack => RPIPE_input_e_1275_inst_req_1); -- 
    -- CP-element group 20:  fork  transition  input  output  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	19 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	21 
    -- CP-element group 20: 	57 
    -- CP-element group 20:  members (6) 
      -- CP-element group 20: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1275_update_completed_
      -- CP-element group 20: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1275_Update/$exit
      -- CP-element group 20: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1275_Update/ca
      -- CP-element group 20: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1278_sample_start_
      -- CP-element group 20: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1278_Sample/$entry
      -- CP-element group 20: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1278_Sample/rr
      -- 
    ca_4233_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 20_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1275_inst_ack_1, ack => encryption_engine_CP_4077_elements(20)); -- 
    rr_4241_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4241_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(20), ack => RPIPE_input_e_1278_inst_req_0); -- 
    -- CP-element group 21:  transition  input  output  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	20 
    -- CP-element group 21: successors 
    -- CP-element group 21: 	22 
    -- CP-element group 21:  members (6) 
      -- CP-element group 21: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1278_Update/$entry
      -- CP-element group 21: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1278_sample_completed_
      -- CP-element group 21: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1278_update_start_
      -- CP-element group 21: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1278_Sample/$exit
      -- CP-element group 21: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1278_Sample/ra
      -- CP-element group 21: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1278_Update/cr
      -- 
    ra_4242_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1278_inst_ack_0, ack => encryption_engine_CP_4077_elements(21)); -- 
    cr_4246_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4246_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(21), ack => RPIPE_input_e_1278_inst_req_1); -- 
    -- CP-element group 22:  fork  transition  input  output  bypass 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	21 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	23 
    -- CP-element group 22: 	57 
    -- CP-element group 22:  members (6) 
      -- CP-element group 22: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1278_update_completed_
      -- CP-element group 22: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1278_Update/$exit
      -- CP-element group 22: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1278_Update/ca
      -- CP-element group 22: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1281_sample_start_
      -- CP-element group 22: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1281_Sample/$entry
      -- CP-element group 22: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1281_Sample/rr
      -- 
    ca_4247_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 22_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1278_inst_ack_1, ack => encryption_engine_CP_4077_elements(22)); -- 
    rr_4255_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4255_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(22), ack => RPIPE_input_e_1281_inst_req_0); -- 
    -- CP-element group 23:  transition  input  output  bypass 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	22 
    -- CP-element group 23: successors 
    -- CP-element group 23: 	24 
    -- CP-element group 23:  members (6) 
      -- CP-element group 23: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1281_sample_completed_
      -- CP-element group 23: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1281_update_start_
      -- CP-element group 23: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1281_Sample/$exit
      -- CP-element group 23: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1281_Sample/ra
      -- CP-element group 23: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1281_Update/$entry
      -- CP-element group 23: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1281_Update/cr
      -- 
    ra_4256_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 23_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1281_inst_ack_0, ack => encryption_engine_CP_4077_elements(23)); -- 
    cr_4260_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4260_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(23), ack => RPIPE_input_e_1281_inst_req_1); -- 
    -- CP-element group 24:  fork  transition  input  output  bypass 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	23 
    -- CP-element group 24: successors 
    -- CP-element group 24: 	25 
    -- CP-element group 24: 	60 
    -- CP-element group 24:  members (6) 
      -- CP-element group 24: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1281_update_completed_
      -- CP-element group 24: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1281_Update/$exit
      -- CP-element group 24: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1281_Update/ca
      -- CP-element group 24: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1284_sample_start_
      -- CP-element group 24: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1284_Sample/$entry
      -- CP-element group 24: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1284_Sample/rr
      -- 
    ca_4261_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1281_inst_ack_1, ack => encryption_engine_CP_4077_elements(24)); -- 
    rr_4269_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4269_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(24), ack => RPIPE_input_e_1284_inst_req_0); -- 
    -- CP-element group 25:  transition  input  output  bypass 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	24 
    -- CP-element group 25: successors 
    -- CP-element group 25: 	26 
    -- CP-element group 25:  members (6) 
      -- CP-element group 25: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1284_sample_completed_
      -- CP-element group 25: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1284_update_start_
      -- CP-element group 25: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1284_Sample/$exit
      -- CP-element group 25: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1284_Sample/ra
      -- CP-element group 25: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1284_Update/$entry
      -- CP-element group 25: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1284_Update/cr
      -- 
    ra_4270_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1284_inst_ack_0, ack => encryption_engine_CP_4077_elements(25)); -- 
    cr_4274_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4274_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(25), ack => RPIPE_input_e_1284_inst_req_1); -- 
    -- CP-element group 26:  fork  transition  input  output  bypass 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	25 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	27 
    -- CP-element group 26: 	60 
    -- CP-element group 26:  members (6) 
      -- CP-element group 26: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1284_update_completed_
      -- CP-element group 26: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1284_Update/$exit
      -- CP-element group 26: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1284_Update/ca
      -- CP-element group 26: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1287_sample_start_
      -- CP-element group 26: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1287_Sample/$entry
      -- CP-element group 26: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1287_Sample/rr
      -- 
    ca_4275_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 26_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1284_inst_ack_1, ack => encryption_engine_CP_4077_elements(26)); -- 
    rr_4283_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4283_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(26), ack => RPIPE_input_e_1287_inst_req_0); -- 
    -- CP-element group 27:  transition  input  output  bypass 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	26 
    -- CP-element group 27: successors 
    -- CP-element group 27: 	28 
    -- CP-element group 27:  members (6) 
      -- CP-element group 27: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1287_sample_completed_
      -- CP-element group 27: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1287_update_start_
      -- CP-element group 27: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1287_Sample/$exit
      -- CP-element group 27: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1287_Sample/ra
      -- CP-element group 27: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1287_Update/$entry
      -- CP-element group 27: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1287_Update/cr
      -- 
    ra_4284_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 27_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1287_inst_ack_0, ack => encryption_engine_CP_4077_elements(27)); -- 
    cr_4288_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4288_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(27), ack => RPIPE_input_e_1287_inst_req_1); -- 
    -- CP-element group 28:  fork  transition  input  output  bypass 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	27 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	29 
    -- CP-element group 28: 	69 
    -- CP-element group 28:  members (6) 
      -- CP-element group 28: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1287_update_completed_
      -- CP-element group 28: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1287_Update/$exit
      -- CP-element group 28: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1287_Update/ca
      -- CP-element group 28: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1290_sample_start_
      -- CP-element group 28: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1290_Sample/$entry
      -- CP-element group 28: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1290_Sample/rr
      -- 
    ca_4289_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 28_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1287_inst_ack_1, ack => encryption_engine_CP_4077_elements(28)); -- 
    rr_4297_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4297_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(28), ack => RPIPE_input_e_1290_inst_req_0); -- 
    -- CP-element group 29:  transition  input  output  bypass 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	28 
    -- CP-element group 29: successors 
    -- CP-element group 29: 	30 
    -- CP-element group 29:  members (6) 
      -- CP-element group 29: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1290_sample_completed_
      -- CP-element group 29: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1290_update_start_
      -- CP-element group 29: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1290_Sample/$exit
      -- CP-element group 29: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1290_Sample/ra
      -- CP-element group 29: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1290_Update/$entry
      -- CP-element group 29: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1290_Update/cr
      -- 
    ra_4298_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 29_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1290_inst_ack_0, ack => encryption_engine_CP_4077_elements(29)); -- 
    cr_4302_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4302_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(29), ack => RPIPE_input_e_1290_inst_req_1); -- 
    -- CP-element group 30:  fork  transition  input  output  bypass 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	29 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	31 
    -- CP-element group 30: 	69 
    -- CP-element group 30:  members (6) 
      -- CP-element group 30: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1290_update_completed_
      -- CP-element group 30: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1290_Update/$exit
      -- CP-element group 30: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1290_Update/ca
      -- CP-element group 30: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1308_sample_start_
      -- CP-element group 30: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1308_Sample/$entry
      -- CP-element group 30: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1308_Sample/crr
      -- 
    ca_4303_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 30_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1290_inst_ack_1, ack => encryption_engine_CP_4077_elements(30)); -- 
    crr_4311_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_4311_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(30), ack => call_stmt_1308_call_req_0); -- 
    -- CP-element group 31:  transition  input  bypass 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	30 
    -- CP-element group 31: successors 
    -- CP-element group 31:  members (3) 
      -- CP-element group 31: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1308_sample_completed_
      -- CP-element group 31: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1308_Sample/$exit
      -- CP-element group 31: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1308_Sample/cra
      -- 
    cra_4312_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 31_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1308_call_ack_0, ack => encryption_engine_CP_4077_elements(31)); -- 
    -- CP-element group 32:  transition  input  output  bypass 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	106 
    -- CP-element group 32: successors 
    -- CP-element group 32: 	72 
    -- CP-element group 32:  members (6) 
      -- CP-element group 32: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1308_update_completed_
      -- CP-element group 32: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1308_Update/$exit
      -- CP-element group 32: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1308_Update/cca
      -- CP-element group 32: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1377_sample_start_
      -- CP-element group 32: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1377_Sample/$entry
      -- CP-element group 32: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1377_Sample/rr
      -- 
    cca_4317_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 32_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1308_call_ack_1, ack => encryption_engine_CP_4077_elements(32)); -- 
    rr_4507_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4507_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(32), ack => CONCAT_u8_u16_1377_inst_req_0); -- 
    -- CP-element group 33:  join  transition  output  bypass 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	4 
    -- CP-element group 33: 	6 
    -- CP-element group 33: successors 
    -- CP-element group 33: 	34 
    -- CP-element group 33:  members (3) 
      -- CP-element group 33: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1312_sample_start_
      -- CP-element group 33: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1312_Sample/$entry
      -- CP-element group 33: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1312_Sample/rr
      -- 
    rr_4325_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4325_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(33), ack => CONCAT_u8_u16_1312_inst_req_0); -- 
    encryption_engine_cp_element_group_33: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_33"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(4) & encryption_engine_CP_4077_elements(6);
      gj_encryption_engine_cp_element_group_33 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(33), clk => clk, reset => reset); --
    end block;
    -- CP-element group 34:  transition  input  bypass 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	33 
    -- CP-element group 34: successors 
    -- CP-element group 34:  members (3) 
      -- CP-element group 34: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1312_sample_completed_
      -- CP-element group 34: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1312_Sample/$exit
      -- CP-element group 34: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1312_Sample/ra
      -- 
    ra_4326_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1312_inst_ack_0, ack => encryption_engine_CP_4077_elements(34)); -- 
    -- CP-element group 35:  transition  input  bypass 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	106 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	39 
    -- CP-element group 35:  members (3) 
      -- CP-element group 35: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1312_update_completed_
      -- CP-element group 35: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1312_Update/$exit
      -- CP-element group 35: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1312_Update/ca
      -- 
    ca_4331_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 35_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1312_inst_ack_1, ack => encryption_engine_CP_4077_elements(35)); -- 
    -- CP-element group 36:  join  transition  output  bypass 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	8 
    -- CP-element group 36: 	10 
    -- CP-element group 36: successors 
    -- CP-element group 36: 	37 
    -- CP-element group 36:  members (3) 
      -- CP-element group 36: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1317_sample_start_
      -- CP-element group 36: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1317_Sample/$entry
      -- CP-element group 36: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1317_Sample/rr
      -- 
    rr_4339_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4339_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(36), ack => CONCAT_u8_u16_1317_inst_req_0); -- 
    encryption_engine_cp_element_group_36: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_36"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(8) & encryption_engine_CP_4077_elements(10);
      gj_encryption_engine_cp_element_group_36 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(36), clk => clk, reset => reset); --
    end block;
    -- CP-element group 37:  transition  input  bypass 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	36 
    -- CP-element group 37: successors 
    -- CP-element group 37:  members (3) 
      -- CP-element group 37: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1317_sample_completed_
      -- CP-element group 37: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1317_Sample/$exit
      -- CP-element group 37: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1317_Sample/ra
      -- 
    ra_4340_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1317_inst_ack_0, ack => encryption_engine_CP_4077_elements(37)); -- 
    -- CP-element group 38:  transition  input  bypass 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	106 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	39 
    -- CP-element group 38:  members (3) 
      -- CP-element group 38: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1317_update_completed_
      -- CP-element group 38: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1317_Update/$exit
      -- CP-element group 38: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1317_Update/ca
      -- 
    ca_4345_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 38_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1317_inst_ack_1, ack => encryption_engine_CP_4077_elements(38)); -- 
    -- CP-element group 39:  join  transition  output  bypass 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	35 
    -- CP-element group 39: 	38 
    -- CP-element group 39: successors 
    -- CP-element group 39: 	40 
    -- CP-element group 39:  members (3) 
      -- CP-element group 39: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1322_sample_start_
      -- CP-element group 39: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1322_Sample/$entry
      -- CP-element group 39: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1322_Sample/rr
      -- 
    rr_4353_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4353_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(39), ack => CONCAT_u16_u32_1322_inst_req_0); -- 
    encryption_engine_cp_element_group_39: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_39"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(35) & encryption_engine_CP_4077_elements(38);
      gj_encryption_engine_cp_element_group_39 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(39), clk => clk, reset => reset); --
    end block;
    -- CP-element group 40:  transition  input  bypass 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	39 
    -- CP-element group 40: successors 
    -- CP-element group 40:  members (3) 
      -- CP-element group 40: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1322_sample_completed_
      -- CP-element group 40: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1322_Sample/$exit
      -- CP-element group 40: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1322_Sample/ra
      -- 
    ra_4354_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 40_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1322_inst_ack_0, ack => encryption_engine_CP_4077_elements(40)); -- 
    -- CP-element group 41:  transition  input  bypass 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	106 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	42 
    -- CP-element group 41:  members (3) 
      -- CP-element group 41: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1322_update_completed_
      -- CP-element group 41: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1322_Update/$exit
      -- CP-element group 41: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1322_Update/ca
      -- 
    ca_4359_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 41_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1322_inst_ack_1, ack => encryption_engine_CP_4077_elements(41)); -- 
    -- CP-element group 42:  join  transition  output  bypass 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	41 
    -- CP-element group 42: 	2 
    -- CP-element group 42: successors 
    -- CP-element group 42: 	43 
    -- CP-element group 42:  members (3) 
      -- CP-element group 42: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1327_sample_start_
      -- CP-element group 42: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1327_Sample/$entry
      -- CP-element group 42: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1327_Sample/rr
      -- 
    rr_4367_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4367_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(42), ack => XOR_u32_u32_1327_inst_req_0); -- 
    encryption_engine_cp_element_group_42: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_42"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(41) & encryption_engine_CP_4077_elements(2);
      gj_encryption_engine_cp_element_group_42 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(42), clk => clk, reset => reset); --
    end block;
    -- CP-element group 43:  transition  input  bypass 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	42 
    -- CP-element group 43: successors 
    -- CP-element group 43:  members (3) 
      -- CP-element group 43: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1327_sample_completed_
      -- CP-element group 43: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1327_Sample/$exit
      -- CP-element group 43: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1327_Sample/ra
      -- 
    ra_4368_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 43_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1327_inst_ack_0, ack => encryption_engine_CP_4077_elements(43)); -- 
    -- CP-element group 44:  transition  input  output  bypass 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	106 
    -- CP-element group 44: successors 
    -- CP-element group 44: 	80 
    -- CP-element group 44:  members (6) 
      -- CP-element group 44: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1327_update_completed_
      -- CP-element group 44: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1327_Update/$exit
      -- CP-element group 44: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1327_Update/ca
      -- CP-element group 44: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1390_sample_start_
      -- CP-element group 44: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1390_Sample/$entry
      -- CP-element group 44: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1390_Sample/crr
      -- 
    ca_4373_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 44_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1327_inst_ack_1, ack => encryption_engine_CP_4077_elements(44)); -- 
    crr_4549_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_4549_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(44), ack => call_stmt_1390_call_req_0); -- 
    -- CP-element group 45:  join  transition  output  bypass 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	12 
    -- CP-element group 45: 	14 
    -- CP-element group 45: successors 
    -- CP-element group 45: 	46 
    -- CP-element group 45:  members (3) 
      -- CP-element group 45: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1332_sample_start_
      -- CP-element group 45: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1332_Sample/$entry
      -- CP-element group 45: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1332_Sample/rr
      -- 
    rr_4381_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4381_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(45), ack => CONCAT_u8_u16_1332_inst_req_0); -- 
    encryption_engine_cp_element_group_45: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_45"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(12) & encryption_engine_CP_4077_elements(14);
      gj_encryption_engine_cp_element_group_45 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(45), clk => clk, reset => reset); --
    end block;
    -- CP-element group 46:  transition  input  bypass 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	45 
    -- CP-element group 46: successors 
    -- CP-element group 46:  members (3) 
      -- CP-element group 46: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1332_sample_completed_
      -- CP-element group 46: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1332_Sample/$exit
      -- CP-element group 46: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1332_Sample/ra
      -- 
    ra_4382_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 46_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1332_inst_ack_0, ack => encryption_engine_CP_4077_elements(46)); -- 
    -- CP-element group 47:  transition  input  bypass 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	106 
    -- CP-element group 47: successors 
    -- CP-element group 47: 	51 
    -- CP-element group 47:  members (3) 
      -- CP-element group 47: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1332_update_completed_
      -- CP-element group 47: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1332_Update/$exit
      -- CP-element group 47: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1332_Update/ca
      -- 
    ca_4387_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 47_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1332_inst_ack_1, ack => encryption_engine_CP_4077_elements(47)); -- 
    -- CP-element group 48:  join  transition  output  bypass 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	16 
    -- CP-element group 48: 	18 
    -- CP-element group 48: successors 
    -- CP-element group 48: 	49 
    -- CP-element group 48:  members (3) 
      -- CP-element group 48: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1337_sample_start_
      -- CP-element group 48: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1337_Sample/$entry
      -- CP-element group 48: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1337_Sample/rr
      -- 
    rr_4395_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4395_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(48), ack => CONCAT_u8_u16_1337_inst_req_0); -- 
    encryption_engine_cp_element_group_48: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_48"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(16) & encryption_engine_CP_4077_elements(18);
      gj_encryption_engine_cp_element_group_48 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(48), clk => clk, reset => reset); --
    end block;
    -- CP-element group 49:  transition  input  bypass 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: 	48 
    -- CP-element group 49: successors 
    -- CP-element group 49:  members (3) 
      -- CP-element group 49: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1337_sample_completed_
      -- CP-element group 49: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1337_Sample/$exit
      -- CP-element group 49: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1337_Sample/ra
      -- 
    ra_4396_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 49_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1337_inst_ack_0, ack => encryption_engine_CP_4077_elements(49)); -- 
    -- CP-element group 50:  transition  input  bypass 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	106 
    -- CP-element group 50: successors 
    -- CP-element group 50: 	51 
    -- CP-element group 50:  members (3) 
      -- CP-element group 50: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1337_update_completed_
      -- CP-element group 50: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1337_Update/$exit
      -- CP-element group 50: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1337_Update/ca
      -- 
    ca_4401_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 50_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1337_inst_ack_1, ack => encryption_engine_CP_4077_elements(50)); -- 
    -- CP-element group 51:  join  transition  output  bypass 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	47 
    -- CP-element group 51: 	50 
    -- CP-element group 51: successors 
    -- CP-element group 51: 	52 
    -- CP-element group 51:  members (3) 
      -- CP-element group 51: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1342_sample_start_
      -- CP-element group 51: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1342_Sample/$entry
      -- CP-element group 51: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1342_Sample/rr
      -- 
    rr_4409_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4409_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(51), ack => CONCAT_u16_u32_1342_inst_req_0); -- 
    encryption_engine_cp_element_group_51: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_51"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(47) & encryption_engine_CP_4077_elements(50);
      gj_encryption_engine_cp_element_group_51 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(51), clk => clk, reset => reset); --
    end block;
    -- CP-element group 52:  transition  input  bypass 
    -- CP-element group 52: predecessors 
    -- CP-element group 52: 	51 
    -- CP-element group 52: successors 
    -- CP-element group 52:  members (3) 
      -- CP-element group 52: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1342_sample_completed_
      -- CP-element group 52: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1342_Sample/$exit
      -- CP-element group 52: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1342_Sample/ra
      -- 
    ra_4410_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 52_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1342_inst_ack_0, ack => encryption_engine_CP_4077_elements(52)); -- 
    -- CP-element group 53:  transition  input  bypass 
    -- CP-element group 53: predecessors 
    -- CP-element group 53: 	106 
    -- CP-element group 53: successors 
    -- CP-element group 53: 	54 
    -- CP-element group 53:  members (3) 
      -- CP-element group 53: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1342_update_completed_
      -- CP-element group 53: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1342_Update/$exit
      -- CP-element group 53: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1342_Update/ca
      -- 
    ca_4415_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 53_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1342_inst_ack_1, ack => encryption_engine_CP_4077_elements(53)); -- 
    -- CP-element group 54:  join  transition  output  bypass 
    -- CP-element group 54: predecessors 
    -- CP-element group 54: 	53 
    -- CP-element group 54: 	2 
    -- CP-element group 54: successors 
    -- CP-element group 54: 	55 
    -- CP-element group 54:  members (3) 
      -- CP-element group 54: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1347_sample_start_
      -- CP-element group 54: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1347_Sample/$entry
      -- CP-element group 54: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1347_Sample/rr
      -- 
    rr_4423_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4423_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(54), ack => XOR_u32_u32_1347_inst_req_0); -- 
    encryption_engine_cp_element_group_54: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_54"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(53) & encryption_engine_CP_4077_elements(2);
      gj_encryption_engine_cp_element_group_54 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(54), clk => clk, reset => reset); --
    end block;
    -- CP-element group 55:  transition  input  bypass 
    -- CP-element group 55: predecessors 
    -- CP-element group 55: 	54 
    -- CP-element group 55: successors 
    -- CP-element group 55:  members (3) 
      -- CP-element group 55: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1347_sample_completed_
      -- CP-element group 55: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1347_Sample/$exit
      -- CP-element group 55: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1347_Sample/ra
      -- 
    ra_4424_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 55_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1347_inst_ack_0, ack => encryption_engine_CP_4077_elements(55)); -- 
    -- CP-element group 56:  transition  input  bypass 
    -- CP-element group 56: predecessors 
    -- CP-element group 56: 	106 
    -- CP-element group 56: successors 
    -- CP-element group 56: 	82 
    -- CP-element group 56:  members (3) 
      -- CP-element group 56: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1347_update_completed_
      -- CP-element group 56: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1347_Update/$exit
      -- CP-element group 56: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1347_Update/ca
      -- 
    ca_4429_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 56_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1347_inst_ack_1, ack => encryption_engine_CP_4077_elements(56)); -- 
    -- CP-element group 57:  join  transition  output  bypass 
    -- CP-element group 57: predecessors 
    -- CP-element group 57: 	20 
    -- CP-element group 57: 	22 
    -- CP-element group 57: successors 
    -- CP-element group 57: 	58 
    -- CP-element group 57:  members (3) 
      -- CP-element group 57: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1352_sample_start_
      -- CP-element group 57: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1352_Sample/$entry
      -- CP-element group 57: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1352_Sample/rr
      -- 
    rr_4437_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4437_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(57), ack => CONCAT_u8_u16_1352_inst_req_0); -- 
    encryption_engine_cp_element_group_57: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_57"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(20) & encryption_engine_CP_4077_elements(22);
      gj_encryption_engine_cp_element_group_57 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(57), clk => clk, reset => reset); --
    end block;
    -- CP-element group 58:  transition  input  bypass 
    -- CP-element group 58: predecessors 
    -- CP-element group 58: 	57 
    -- CP-element group 58: successors 
    -- CP-element group 58:  members (3) 
      -- CP-element group 58: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1352_sample_completed_
      -- CP-element group 58: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1352_Sample/$exit
      -- CP-element group 58: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1352_Sample/ra
      -- 
    ra_4438_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 58_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1352_inst_ack_0, ack => encryption_engine_CP_4077_elements(58)); -- 
    -- CP-element group 59:  transition  input  bypass 
    -- CP-element group 59: predecessors 
    -- CP-element group 59: 	106 
    -- CP-element group 59: successors 
    -- CP-element group 59: 	63 
    -- CP-element group 59:  members (3) 
      -- CP-element group 59: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1352_update_completed_
      -- CP-element group 59: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1352_Update/$exit
      -- CP-element group 59: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1352_Update/ca
      -- 
    ca_4443_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 59_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1352_inst_ack_1, ack => encryption_engine_CP_4077_elements(59)); -- 
    -- CP-element group 60:  join  transition  output  bypass 
    -- CP-element group 60: predecessors 
    -- CP-element group 60: 	24 
    -- CP-element group 60: 	26 
    -- CP-element group 60: successors 
    -- CP-element group 60: 	61 
    -- CP-element group 60:  members (3) 
      -- CP-element group 60: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1357_sample_start_
      -- CP-element group 60: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1357_Sample/$entry
      -- CP-element group 60: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1357_Sample/rr
      -- 
    rr_4451_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4451_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(60), ack => CONCAT_u8_u16_1357_inst_req_0); -- 
    encryption_engine_cp_element_group_60: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_60"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(24) & encryption_engine_CP_4077_elements(26);
      gj_encryption_engine_cp_element_group_60 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(60), clk => clk, reset => reset); --
    end block;
    -- CP-element group 61:  transition  input  bypass 
    -- CP-element group 61: predecessors 
    -- CP-element group 61: 	60 
    -- CP-element group 61: successors 
    -- CP-element group 61:  members (3) 
      -- CP-element group 61: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1357_sample_completed_
      -- CP-element group 61: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1357_Sample/$exit
      -- CP-element group 61: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1357_Sample/ra
      -- 
    ra_4452_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 61_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1357_inst_ack_0, ack => encryption_engine_CP_4077_elements(61)); -- 
    -- CP-element group 62:  transition  input  bypass 
    -- CP-element group 62: predecessors 
    -- CP-element group 62: 	106 
    -- CP-element group 62: successors 
    -- CP-element group 62: 	63 
    -- CP-element group 62:  members (3) 
      -- CP-element group 62: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1357_update_completed_
      -- CP-element group 62: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1357_Update/$exit
      -- CP-element group 62: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1357_Update/ca
      -- 
    ca_4457_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 62_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1357_inst_ack_1, ack => encryption_engine_CP_4077_elements(62)); -- 
    -- CP-element group 63:  join  transition  output  bypass 
    -- CP-element group 63: predecessors 
    -- CP-element group 63: 	59 
    -- CP-element group 63: 	62 
    -- CP-element group 63: successors 
    -- CP-element group 63: 	64 
    -- CP-element group 63:  members (3) 
      -- CP-element group 63: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1362_sample_start_
      -- CP-element group 63: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1362_Sample/$entry
      -- CP-element group 63: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1362_Sample/rr
      -- 
    rr_4465_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4465_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(63), ack => CONCAT_u16_u32_1362_inst_req_0); -- 
    encryption_engine_cp_element_group_63: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_63"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(59) & encryption_engine_CP_4077_elements(62);
      gj_encryption_engine_cp_element_group_63 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(63), clk => clk, reset => reset); --
    end block;
    -- CP-element group 64:  transition  input  bypass 
    -- CP-element group 64: predecessors 
    -- CP-element group 64: 	63 
    -- CP-element group 64: successors 
    -- CP-element group 64:  members (3) 
      -- CP-element group 64: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1362_sample_completed_
      -- CP-element group 64: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1362_Sample/$exit
      -- CP-element group 64: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1362_Sample/ra
      -- 
    ra_4466_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 64_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1362_inst_ack_0, ack => encryption_engine_CP_4077_elements(64)); -- 
    -- CP-element group 65:  transition  input  bypass 
    -- CP-element group 65: predecessors 
    -- CP-element group 65: 	106 
    -- CP-element group 65: successors 
    -- CP-element group 65: 	66 
    -- CP-element group 65:  members (3) 
      -- CP-element group 65: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1362_update_completed_
      -- CP-element group 65: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1362_Update/$exit
      -- CP-element group 65: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1362_Update/ca
      -- 
    ca_4471_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 65_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1362_inst_ack_1, ack => encryption_engine_CP_4077_elements(65)); -- 
    -- CP-element group 66:  join  transition  output  bypass 
    -- CP-element group 66: predecessors 
    -- CP-element group 66: 	65 
    -- CP-element group 66: 	2 
    -- CP-element group 66: successors 
    -- CP-element group 66: 	67 
    -- CP-element group 66:  members (3) 
      -- CP-element group 66: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1367_sample_start_
      -- CP-element group 66: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1367_Sample/$entry
      -- CP-element group 66: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1367_Sample/rr
      -- 
    rr_4479_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4479_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(66), ack => XOR_u32_u32_1367_inst_req_0); -- 
    encryption_engine_cp_element_group_66: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_66"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(65) & encryption_engine_CP_4077_elements(2);
      gj_encryption_engine_cp_element_group_66 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(66), clk => clk, reset => reset); --
    end block;
    -- CP-element group 67:  transition  input  bypass 
    -- CP-element group 67: predecessors 
    -- CP-element group 67: 	66 
    -- CP-element group 67: successors 
    -- CP-element group 67:  members (3) 
      -- CP-element group 67: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1367_sample_completed_
      -- CP-element group 67: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1367_Sample/$exit
      -- CP-element group 67: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1367_Sample/ra
      -- 
    ra_4480_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 67_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1367_inst_ack_0, ack => encryption_engine_CP_4077_elements(67)); -- 
    -- CP-element group 68:  transition  input  bypass 
    -- CP-element group 68: predecessors 
    -- CP-element group 68: 	106 
    -- CP-element group 68: successors 
    -- CP-element group 68: 	85 
    -- CP-element group 68:  members (3) 
      -- CP-element group 68: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1367_update_completed_
      -- CP-element group 68: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1367_Update/$exit
      -- CP-element group 68: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1367_Update/ca
      -- 
    ca_4485_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 68_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1367_inst_ack_1, ack => encryption_engine_CP_4077_elements(68)); -- 
    -- CP-element group 69:  join  transition  output  bypass 
    -- CP-element group 69: predecessors 
    -- CP-element group 69: 	28 
    -- CP-element group 69: 	30 
    -- CP-element group 69: successors 
    -- CP-element group 69: 	70 
    -- CP-element group 69:  members (3) 
      -- CP-element group 69: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1372_sample_start_
      -- CP-element group 69: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1372_Sample/$entry
      -- CP-element group 69: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1372_Sample/rr
      -- 
    rr_4493_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4493_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(69), ack => CONCAT_u8_u16_1372_inst_req_0); -- 
    encryption_engine_cp_element_group_69: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_69"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(28) & encryption_engine_CP_4077_elements(30);
      gj_encryption_engine_cp_element_group_69 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(69), clk => clk, reset => reset); --
    end block;
    -- CP-element group 70:  transition  input  bypass 
    -- CP-element group 70: predecessors 
    -- CP-element group 70: 	69 
    -- CP-element group 70: successors 
    -- CP-element group 70:  members (3) 
      -- CP-element group 70: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1372_sample_completed_
      -- CP-element group 70: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1372_Sample/$exit
      -- CP-element group 70: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1372_Sample/ra
      -- 
    ra_4494_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 70_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1372_inst_ack_0, ack => encryption_engine_CP_4077_elements(70)); -- 
    -- CP-element group 71:  transition  input  bypass 
    -- CP-element group 71: predecessors 
    -- CP-element group 71: 	106 
    -- CP-element group 71: successors 
    -- CP-element group 71: 	74 
    -- CP-element group 71:  members (3) 
      -- CP-element group 71: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1372_update_completed_
      -- CP-element group 71: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1372_Update/$exit
      -- CP-element group 71: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1372_Update/ca
      -- 
    ca_4499_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 71_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1372_inst_ack_1, ack => encryption_engine_CP_4077_elements(71)); -- 
    -- CP-element group 72:  transition  input  bypass 
    -- CP-element group 72: predecessors 
    -- CP-element group 72: 	32 
    -- CP-element group 72: successors 
    -- CP-element group 72:  members (3) 
      -- CP-element group 72: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1377_sample_completed_
      -- CP-element group 72: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1377_Sample/$exit
      -- CP-element group 72: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1377_Sample/ra
      -- 
    ra_4508_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 72_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1377_inst_ack_0, ack => encryption_engine_CP_4077_elements(72)); -- 
    -- CP-element group 73:  transition  input  bypass 
    -- CP-element group 73: predecessors 
    -- CP-element group 73: 	106 
    -- CP-element group 73: successors 
    -- CP-element group 73: 	74 
    -- CP-element group 73:  members (3) 
      -- CP-element group 73: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1377_update_completed_
      -- CP-element group 73: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1377_Update/$exit
      -- CP-element group 73: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1377_Update/ca
      -- 
    ca_4513_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 73_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1377_inst_ack_1, ack => encryption_engine_CP_4077_elements(73)); -- 
    -- CP-element group 74:  join  transition  output  bypass 
    -- CP-element group 74: predecessors 
    -- CP-element group 74: 	71 
    -- CP-element group 74: 	73 
    -- CP-element group 74: successors 
    -- CP-element group 74: 	75 
    -- CP-element group 74:  members (3) 
      -- CP-element group 74: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1382_sample_start_
      -- CP-element group 74: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1382_Sample/$entry
      -- CP-element group 74: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1382_Sample/rr
      -- 
    rr_4521_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4521_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(74), ack => CONCAT_u16_u32_1382_inst_req_0); -- 
    encryption_engine_cp_element_group_74: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_74"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(71) & encryption_engine_CP_4077_elements(73);
      gj_encryption_engine_cp_element_group_74 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(74), clk => clk, reset => reset); --
    end block;
    -- CP-element group 75:  transition  input  bypass 
    -- CP-element group 75: predecessors 
    -- CP-element group 75: 	74 
    -- CP-element group 75: successors 
    -- CP-element group 75:  members (3) 
      -- CP-element group 75: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1382_sample_completed_
      -- CP-element group 75: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1382_Sample/$exit
      -- CP-element group 75: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1382_Sample/ra
      -- 
    ra_4522_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 75_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1382_inst_ack_0, ack => encryption_engine_CP_4077_elements(75)); -- 
    -- CP-element group 76:  transition  input  bypass 
    -- CP-element group 76: predecessors 
    -- CP-element group 76: 	106 
    -- CP-element group 76: successors 
    -- CP-element group 76: 	77 
    -- CP-element group 76:  members (3) 
      -- CP-element group 76: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1382_update_completed_
      -- CP-element group 76: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1382_Update/$exit
      -- CP-element group 76: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1382_Update/ca
      -- 
    ca_4527_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 76_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1382_inst_ack_1, ack => encryption_engine_CP_4077_elements(76)); -- 
    -- CP-element group 77:  join  transition  output  bypass 
    -- CP-element group 77: predecessors 
    -- CP-element group 77: 	76 
    -- CP-element group 77: 	2 
    -- CP-element group 77: successors 
    -- CP-element group 77: 	78 
    -- CP-element group 77:  members (3) 
      -- CP-element group 77: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1387_sample_start_
      -- CP-element group 77: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1387_Sample/$entry
      -- CP-element group 77: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1387_Sample/rr
      -- 
    rr_4535_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4535_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(77), ack => XOR_u32_u32_1387_inst_req_0); -- 
    encryption_engine_cp_element_group_77: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_77"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(76) & encryption_engine_CP_4077_elements(2);
      gj_encryption_engine_cp_element_group_77 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(77), clk => clk, reset => reset); --
    end block;
    -- CP-element group 78:  transition  input  bypass 
    -- CP-element group 78: predecessors 
    -- CP-element group 78: 	77 
    -- CP-element group 78: successors 
    -- CP-element group 78:  members (3) 
      -- CP-element group 78: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1387_sample_completed_
      -- CP-element group 78: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1387_Sample/$exit
      -- CP-element group 78: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1387_Sample/ra
      -- 
    ra_4536_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 78_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1387_inst_ack_0, ack => encryption_engine_CP_4077_elements(78)); -- 
    -- CP-element group 79:  transition  input  bypass 
    -- CP-element group 79: predecessors 
    -- CP-element group 79: 	106 
    -- CP-element group 79: successors 
    -- CP-element group 79: 	88 
    -- CP-element group 79:  members (3) 
      -- CP-element group 79: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1387_update_completed_
      -- CP-element group 79: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1387_Update/$exit
      -- CP-element group 79: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1387_Update/ca
      -- 
    ca_4541_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 79_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u32_u32_1387_inst_ack_1, ack => encryption_engine_CP_4077_elements(79)); -- 
    -- CP-element group 80:  transition  input  bypass 
    -- CP-element group 80: predecessors 
    -- CP-element group 80: 	44 
    -- CP-element group 80: successors 
    -- CP-element group 80:  members (3) 
      -- CP-element group 80: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1390_sample_completed_
      -- CP-element group 80: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1390_Sample/$exit
      -- CP-element group 80: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1390_Sample/cra
      -- 
    cra_4550_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 80_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1390_call_ack_0, ack => encryption_engine_CP_4077_elements(80)); -- 
    -- CP-element group 81:  transition  input  bypass 
    -- CP-element group 81: predecessors 
    -- CP-element group 81: 	106 
    -- CP-element group 81: successors 
    -- CP-element group 81: 	82 
    -- CP-element group 81:  members (3) 
      -- CP-element group 81: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1390_update_completed_
      -- CP-element group 81: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1390_Update/$exit
      -- CP-element group 81: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1390_Update/cca
      -- 
    cca_4555_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 81_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1390_call_ack_1, ack => encryption_engine_CP_4077_elements(81)); -- 
    -- CP-element group 82:  join  transition  output  bypass 
    -- CP-element group 82: predecessors 
    -- CP-element group 82: 	56 
    -- CP-element group 82: 	81 
    -- CP-element group 82: successors 
    -- CP-element group 82: 	83 
    -- CP-element group 82:  members (3) 
      -- CP-element group 82: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1392_sample_start_
      -- CP-element group 82: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1392_Sample/$entry
      -- CP-element group 82: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1392_Sample/crr
      -- 
    crr_4563_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_4563_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(82), ack => call_stmt_1392_call_req_0); -- 
    encryption_engine_cp_element_group_82: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_82"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(56) & encryption_engine_CP_4077_elements(81);
      gj_encryption_engine_cp_element_group_82 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(82), clk => clk, reset => reset); --
    end block;
    -- CP-element group 83:  transition  input  bypass 
    -- CP-element group 83: predecessors 
    -- CP-element group 83: 	82 
    -- CP-element group 83: successors 
    -- CP-element group 83:  members (3) 
      -- CP-element group 83: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1392_sample_completed_
      -- CP-element group 83: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1392_Sample/$exit
      -- CP-element group 83: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1392_Sample/cra
      -- 
    cra_4564_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 83_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1392_call_ack_0, ack => encryption_engine_CP_4077_elements(83)); -- 
    -- CP-element group 84:  transition  input  bypass 
    -- CP-element group 84: predecessors 
    -- CP-element group 84: 	106 
    -- CP-element group 84: successors 
    -- CP-element group 84: 	85 
    -- CP-element group 84:  members (3) 
      -- CP-element group 84: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1392_update_completed_
      -- CP-element group 84: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1392_Update/$exit
      -- CP-element group 84: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1392_Update/cca
      -- 
    cca_4569_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 84_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1392_call_ack_1, ack => encryption_engine_CP_4077_elements(84)); -- 
    -- CP-element group 85:  join  transition  output  bypass 
    -- CP-element group 85: predecessors 
    -- CP-element group 85: 	68 
    -- CP-element group 85: 	84 
    -- CP-element group 85: successors 
    -- CP-element group 85: 	86 
    -- CP-element group 85:  members (3) 
      -- CP-element group 85: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1394_sample_start_
      -- CP-element group 85: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1394_Sample/$entry
      -- CP-element group 85: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1394_Sample/crr
      -- 
    crr_4577_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_4577_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(85), ack => call_stmt_1394_call_req_0); -- 
    encryption_engine_cp_element_group_85: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_85"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(68) & encryption_engine_CP_4077_elements(84);
      gj_encryption_engine_cp_element_group_85 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(85), clk => clk, reset => reset); --
    end block;
    -- CP-element group 86:  transition  input  bypass 
    -- CP-element group 86: predecessors 
    -- CP-element group 86: 	85 
    -- CP-element group 86: successors 
    -- CP-element group 86:  members (3) 
      -- CP-element group 86: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1394_sample_completed_
      -- CP-element group 86: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1394_Sample/$exit
      -- CP-element group 86: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1394_Sample/cra
      -- 
    cra_4578_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 86_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1394_call_ack_0, ack => encryption_engine_CP_4077_elements(86)); -- 
    -- CP-element group 87:  transition  input  bypass 
    -- CP-element group 87: predecessors 
    -- CP-element group 87: 	106 
    -- CP-element group 87: successors 
    -- CP-element group 87: 	88 
    -- CP-element group 87:  members (3) 
      -- CP-element group 87: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1394_update_completed_
      -- CP-element group 87: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1394_Update/$exit
      -- CP-element group 87: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1394_Update/cca
      -- 
    cca_4583_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 87_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1394_call_ack_1, ack => encryption_engine_CP_4077_elements(87)); -- 
    -- CP-element group 88:  join  transition  output  bypass 
    -- CP-element group 88: predecessors 
    -- CP-element group 88: 	79 
    -- CP-element group 88: 	87 
    -- CP-element group 88: successors 
    -- CP-element group 88: 	89 
    -- CP-element group 88:  members (3) 
      -- CP-element group 88: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1396_sample_start_
      -- CP-element group 88: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1396_Sample/$entry
      -- CP-element group 88: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1396_Sample/crr
      -- 
    crr_4591_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_4591_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(88), ack => call_stmt_1396_call_req_0); -- 
    encryption_engine_cp_element_group_88: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_88"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(79) & encryption_engine_CP_4077_elements(87);
      gj_encryption_engine_cp_element_group_88 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(88), clk => clk, reset => reset); --
    end block;
    -- CP-element group 89:  transition  input  bypass 
    -- CP-element group 89: predecessors 
    -- CP-element group 89: 	88 
    -- CP-element group 89: successors 
    -- CP-element group 89:  members (3) 
      -- CP-element group 89: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1396_sample_completed_
      -- CP-element group 89: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1396_Sample/$exit
      -- CP-element group 89: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1396_Sample/cra
      -- 
    cra_4592_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 89_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1396_call_ack_0, ack => encryption_engine_CP_4077_elements(89)); -- 
    -- CP-element group 90:  transition  input  bypass 
    -- CP-element group 90: predecessors 
    -- CP-element group 90: 	106 
    -- CP-element group 90: successors 
    -- CP-element group 90: 	93 
    -- CP-element group 90:  members (3) 
      -- CP-element group 90: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1396_update_completed_
      -- CP-element group 90: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1396_Update/$exit
      -- CP-element group 90: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1396_Update/cca
      -- 
    cca_4597_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 90_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1396_call_ack_1, ack => encryption_engine_CP_4077_elements(90)); -- 
    -- CP-element group 91:  transition  input  bypass 
    -- CP-element group 91: predecessors 
    -- CP-element group 91: 	106 
    -- CP-element group 91: successors 
    -- CP-element group 91:  members (3) 
      -- CP-element group 91: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/ADD_u128_u128_1400_sample_completed_
      -- CP-element group 91: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/ADD_u128_u128_1400_Sample/$exit
      -- CP-element group 91: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/ADD_u128_u128_1400_Sample/ra
      -- 
    ra_4606_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 91_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u128_u128_1400_inst_ack_0, ack => encryption_engine_CP_4077_elements(91)); -- 
    -- CP-element group 92:  transition  input  bypass 
    -- CP-element group 92: predecessors 
    -- CP-element group 92: 	106 
    -- CP-element group 92: successors 
    -- CP-element group 92: 	93 
    -- CP-element group 92:  members (3) 
      -- CP-element group 92: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/ADD_u128_u128_1400_update_completed_
      -- CP-element group 92: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/ADD_u128_u128_1400_Update/$exit
      -- CP-element group 92: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/ADD_u128_u128_1400_Update/ca
      -- 
    ca_4611_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 92_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u128_u128_1400_inst_ack_1, ack => encryption_engine_CP_4077_elements(92)); -- 
    -- CP-element group 93:  branch  join  fork  transition  place  output  bypass 
    -- CP-element group 93: predecessors 
    -- CP-element group 93: 	90 
    -- CP-element group 93: 	92 
    -- CP-element group 93: successors 
    -- CP-element group 93: 	94 
    -- CP-element group 93: 	95 
    -- CP-element group 93:  members (14) 
      -- CP-element group 93: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401__exit__
      -- CP-element group 93: 	 branch_block_stmt_1233/if_stmt_1402__entry__
      -- CP-element group 93: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/$exit
      -- CP-element group 93: 	 branch_block_stmt_1233/if_stmt_1402_dead_link/$entry
      -- CP-element group 93: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/$entry
      -- CP-element group 93: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/$entry
      -- CP-element group 93: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/$entry
      -- CP-element group 93: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/$entry
      -- CP-element group 93: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/$entry
      -- CP-element group 93: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/word_access/$entry
      -- CP-element group 93: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/word_access/word_access_0_sample/$entry
      -- CP-element group 93: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/word_access/word_access_0_sample/rr
      -- CP-element group 93: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/word_access/word_access_0_update/$entry
      -- CP-element group 93: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/word_access/word_access_0_update/cr
      -- 
    rr_4637_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4637_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(93), ack => LOAD_check_1403_load_0_req_0); -- 
    cr_4642_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4642_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(93), ack => LOAD_check_1403_load_0_req_1); -- 
    encryption_engine_cp_element_group_93: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_93"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(90) & encryption_engine_CP_4077_elements(92);
      gj_encryption_engine_cp_element_group_93 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(93), clk => clk, reset => reset); --
    end block;
    -- CP-element group 94:  transition  input  bypass 
    -- CP-element group 94: predecessors 
    -- CP-element group 94: 	93 
    -- CP-element group 94: successors 
    -- CP-element group 94: 	96 
    -- CP-element group 94:  members (2) 
      -- CP-element group 94: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/word_access/word_access_0_sample/$exit
      -- CP-element group 94: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/word_access/word_access_0_sample/ra
      -- 
    ra_4638_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 94_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => LOAD_check_1403_load_0_ack_0, ack => encryption_engine_CP_4077_elements(94)); -- 
    -- CP-element group 95:  transition  input  bypass 
    -- CP-element group 95: predecessors 
    -- CP-element group 95: 	93 
    -- CP-element group 95: successors 
    -- CP-element group 95: 	96 
    -- CP-element group 95:  members (2) 
      -- CP-element group 95: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/word_access/word_access_0_update/$exit
      -- CP-element group 95: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/word_access/word_access_0_update/ca
      -- 
    ca_4643_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 95_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => LOAD_check_1403_load_0_ack_1, ack => encryption_engine_CP_4077_elements(95)); -- 
    -- CP-element group 96:  branch  join  transition  place  output  bypass 
    -- CP-element group 96: predecessors 
    -- CP-element group 96: 	94 
    -- CP-element group 96: 	95 
    -- CP-element group 96: successors 
    -- CP-element group 96: 	97 
    -- CP-element group 96: 	98 
    -- CP-element group 96:  members (22) 
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/$exit
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/$exit
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/$exit
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/$exit
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/$exit
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/word_access/$exit
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/merge_req
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/EQ_u1_u1_1405_inputs/LOAD_check_1403/LOAD_check_1403_read/merge_ack
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/SplitProtocol/$entry
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/SplitProtocol/$exit
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/SplitProtocol/Sample/$entry
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/SplitProtocol/Sample/$exit
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/SplitProtocol/Sample/rr
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/SplitProtocol/Sample/ra
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/SplitProtocol/Update/$entry
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/SplitProtocol/Update/$exit
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/SplitProtocol/Update/cr
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/EQ_u1_u1_1405/SplitProtocol/Update/ca
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_eval_test/branch_req
      -- CP-element group 96: 	 branch_block_stmt_1233/EQ_u1_u1_1405_place
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_if_link/$entry
      -- CP-element group 96: 	 branch_block_stmt_1233/if_stmt_1402_else_link/$entry
      -- 
    branch_req_4659_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_4659_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(96), ack => if_stmt_1402_branch_req_0); -- 
    encryption_engine_cp_element_group_96: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "encryption_engine_cp_element_group_96"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(94) & encryption_engine_CP_4077_elements(95);
      gj_encryption_engine_cp_element_group_96 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(96), clk => clk, reset => reset); --
    end block;
    -- CP-element group 97:  fork  transition  place  input  output  bypass 
    -- CP-element group 97: predecessors 
    -- CP-element group 97: 	96 
    -- CP-element group 97: successors 
    -- CP-element group 97: 	102 
    -- CP-element group 97: 	103 
    -- CP-element group 97:  members (11) 
      -- CP-element group 97: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_sources/$entry
      -- CP-element group 97: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Update/$entry
      -- CP-element group 97: 	 branch_block_stmt_1233/loopback_PhiReq/$entry
      -- CP-element group 97: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Update/req
      -- CP-element group 97: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/$entry
      -- CP-element group 97: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/$entry
      -- CP-element group 97: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Sample/req
      -- CP-element group 97: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Sample/$entry
      -- CP-element group 97: 	 branch_block_stmt_1233/if_stmt_1402_if_link/$exit
      -- CP-element group 97: 	 branch_block_stmt_1233/if_stmt_1402_if_link/if_choice_transition
      -- CP-element group 97: 	 branch_block_stmt_1233/loopback
      -- 
    if_choice_transition_4664_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 97_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1402_branch_ack_1, ack => encryption_engine_CP_4077_elements(97)); -- 
    req_4717_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4717_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(97), ack => counter_nxt_1401_1238_buf_req_1); -- 
    req_4712_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4712_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(97), ack => counter_nxt_1401_1238_buf_req_0); -- 
    -- CP-element group 98:  merge  transition  place  input  bypass 
    -- CP-element group 98: predecessors 
    -- CP-element group 98: 	96 
    -- CP-element group 98: successors 
    -- CP-element group 98:  members (6) 
      -- CP-element group 98: 	 branch_block_stmt_1233/branch_block_stmt_1233__exit__
      -- CP-element group 98: 	 branch_block_stmt_1233/if_stmt_1402__exit__
      -- CP-element group 98: 	 $exit
      -- CP-element group 98: 	 branch_block_stmt_1233/$exit
      -- CP-element group 98: 	 branch_block_stmt_1233/if_stmt_1402_else_link/$exit
      -- CP-element group 98: 	 branch_block_stmt_1233/if_stmt_1402_else_link/else_choice_transition
      -- 
    else_choice_transition_4668_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 98_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1402_branch_ack_0, ack => encryption_engine_CP_4077_elements(98)); -- 
    -- CP-element group 99:  transition  input  bypass 
    -- CP-element group 99: predecessors 
    -- CP-element group 99: 	0 
    -- CP-element group 99: successors 
    -- CP-element group 99: 	101 
    -- CP-element group 99:  members (2) 
      -- CP-element group 99: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Sample/$exit
      -- CP-element group 99: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Sample/ack
      -- 
    ack_4690_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 99_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encry_counter_1237_buf_ack_0, ack => encryption_engine_CP_4077_elements(99)); -- 
    -- CP-element group 100:  transition  input  bypass 
    -- CP-element group 100: predecessors 
    -- CP-element group 100: 	0 
    -- CP-element group 100: successors 
    -- CP-element group 100: 	101 
    -- CP-element group 100:  members (2) 
      -- CP-element group 100: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Update/ack
      -- CP-element group 100: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Update/$exit
      -- 
    ack_4695_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 100_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encry_counter_1237_buf_ack_1, ack => encryption_engine_CP_4077_elements(100)); -- 
    -- CP-element group 101:  join  transition  output  bypass 
    -- CP-element group 101: predecessors 
    -- CP-element group 101: 	99 
    -- CP-element group 101: 	100 
    -- CP-element group 101: successors 
    -- CP-element group 101: 	105 
    -- CP-element group 101:  members (5) 
      -- CP-element group 101: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_req
      -- CP-element group 101: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/$exit
      -- CP-element group 101: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_sources/$exit
      -- CP-element group 101: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/$exit
      -- CP-element group 101: 	 branch_block_stmt_1233/merge_stmt_1234__entry___PhiReq/$exit
      -- 
    phi_stmt_1235_req_4696_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1235_req_4696_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(101), ack => phi_stmt_1235_req_0); -- 
    encryption_engine_cp_element_group_101: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "encryption_engine_cp_element_group_101"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(99) & encryption_engine_CP_4077_elements(100);
      gj_encryption_engine_cp_element_group_101 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(101), clk => clk, reset => reset); --
    end block;
    -- CP-element group 102:  transition  input  bypass 
    -- CP-element group 102: predecessors 
    -- CP-element group 102: 	97 
    -- CP-element group 102: successors 
    -- CP-element group 102: 	104 
    -- CP-element group 102:  members (2) 
      -- CP-element group 102: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Sample/$exit
      -- CP-element group 102: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Sample/ack
      -- 
    ack_4713_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 102_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_nxt_1401_1238_buf_ack_0, ack => encryption_engine_CP_4077_elements(102)); -- 
    -- CP-element group 103:  transition  input  bypass 
    -- CP-element group 103: predecessors 
    -- CP-element group 103: 	97 
    -- CP-element group 103: successors 
    -- CP-element group 103: 	104 
    -- CP-element group 103:  members (2) 
      -- CP-element group 103: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Update/ack
      -- CP-element group 103: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/Update/$exit
      -- 
    ack_4718_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 103_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => counter_nxt_1401_1238_buf_ack_1, ack => encryption_engine_CP_4077_elements(103)); -- 
    -- CP-element group 104:  join  transition  output  bypass 
    -- CP-element group 104: predecessors 
    -- CP-element group 104: 	102 
    -- CP-element group 104: 	103 
    -- CP-element group 104: successors 
    -- CP-element group 104: 	105 
    -- CP-element group 104:  members (5) 
      -- CP-element group 104: 	 branch_block_stmt_1233/loopback_PhiReq/$exit
      -- CP-element group 104: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_req
      -- CP-element group 104: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_sources/$exit
      -- CP-element group 104: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/$exit
      -- CP-element group 104: 	 branch_block_stmt_1233/loopback_PhiReq/phi_stmt_1235/phi_stmt_1235_sources/Interlock/$exit
      -- 
    phi_stmt_1235_req_4719_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1235_req_4719_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(104), ack => phi_stmt_1235_req_1); -- 
    encryption_engine_cp_element_group_104: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 38) := "encryption_engine_cp_element_group_104"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_engine_CP_4077_elements(102) & encryption_engine_CP_4077_elements(103);
      gj_encryption_engine_cp_element_group_104 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_engine_CP_4077_elements(104), clk => clk, reset => reset); --
    end block;
    -- CP-element group 105:  merge  transition  place  bypass 
    -- CP-element group 105: predecessors 
    -- CP-element group 105: 	101 
    -- CP-element group 105: 	104 
    -- CP-element group 105: successors 
    -- CP-element group 105: 	106 
    -- CP-element group 105:  members (2) 
      -- CP-element group 105: 	 branch_block_stmt_1233/merge_stmt_1234_PhiReqMerge
      -- CP-element group 105: 	 branch_block_stmt_1233/merge_stmt_1234_PhiAck/$entry
      -- 
    encryption_engine_CP_4077_elements(105) <= OrReduce(encryption_engine_CP_4077_elements(101) & encryption_engine_CP_4077_elements(104));
    -- CP-element group 106:  merge  fork  transition  place  input  output  bypass 
    -- CP-element group 106: predecessors 
    -- CP-element group 106: 	105 
    -- CP-element group 106: successors 
    -- CP-element group 106: 	32 
    -- CP-element group 106: 	35 
    -- CP-element group 106: 	38 
    -- CP-element group 106: 	41 
    -- CP-element group 106: 	44 
    -- CP-element group 106: 	47 
    -- CP-element group 106: 	50 
    -- CP-element group 106: 	53 
    -- CP-element group 106: 	56 
    -- CP-element group 106: 	59 
    -- CP-element group 106: 	62 
    -- CP-element group 106: 	65 
    -- CP-element group 106: 	68 
    -- CP-element group 106: 	71 
    -- CP-element group 106: 	73 
    -- CP-element group 106: 	76 
    -- CP-element group 106: 	79 
    -- CP-element group 106: 	81 
    -- CP-element group 106: 	84 
    -- CP-element group 106: 	87 
    -- CP-element group 106: 	90 
    -- CP-element group 106: 	91 
    -- CP-element group 106: 	92 
    -- CP-element group 106: 	1 
    -- CP-element group 106: 	2 
    -- CP-element group 106: 	3 
    -- CP-element group 106:  members (83) 
      -- CP-element group 106: 	 branch_block_stmt_1233/merge_stmt_1234__exit__
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1249_Sample/crr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401__entry__
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1249_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1249_Sample/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1249_sample_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1249_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/merge_stmt_1234_PhiAck/$exit
      -- CP-element group 106: 	 branch_block_stmt_1233/merge_stmt_1234_PhiAck/phi_stmt_1235_ack
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1249_Update/ccr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1251_sample_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1251_Sample/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/RPIPE_input_e_1251_Sample/rr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1308_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1308_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1308_Update/ccr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1312_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1312_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1312_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1317_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1317_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1317_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1322_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1322_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1322_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1327_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1327_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1327_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1332_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1332_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1332_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1337_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1337_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1337_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1342_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1342_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1342_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1347_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1347_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1347_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1352_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1352_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1352_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1357_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1357_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1357_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1362_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1362_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1362_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1367_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1367_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1367_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1372_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1372_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1372_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1377_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1377_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u8_u16_1377_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1382_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1382_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/CONCAT_u16_u32_1382_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1387_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1387_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/XOR_u32_u32_1387_Update/cr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1390_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1390_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1390_Update/ccr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1392_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1392_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1392_Update/ccr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1394_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1394_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1394_Update/ccr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1396_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1396_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/call_stmt_1396_Update/ccr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/ADD_u128_u128_1400_sample_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/ADD_u128_u128_1400_update_start_
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/ADD_u128_u128_1400_Sample/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/ADD_u128_u128_1400_Sample/rr
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/ADD_u128_u128_1400_Update/$entry
      -- CP-element group 106: 	 branch_block_stmt_1233/call_stmt_1249_to_assign_stmt_1401/ADD_u128_u128_1400_Update/cr
      -- 
    phi_stmt_1235_ack_4724_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 106_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_1235_ack_0, ack => encryption_engine_CP_4077_elements(106)); -- 
    crr_4101_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_4101_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => call_stmt_1249_call_req_0); -- 
    ccr_4106_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_4106_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => call_stmt_1249_call_req_1); -- 
    rr_4115_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4115_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => RPIPE_input_e_1251_inst_req_0); -- 
    ccr_4316_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_4316_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => call_stmt_1308_call_req_1); -- 
    cr_4330_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4330_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => CONCAT_u8_u16_1312_inst_req_1); -- 
    cr_4344_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4344_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => CONCAT_u8_u16_1317_inst_req_1); -- 
    cr_4358_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4358_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => CONCAT_u16_u32_1322_inst_req_1); -- 
    cr_4372_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4372_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => XOR_u32_u32_1327_inst_req_1); -- 
    cr_4386_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4386_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => CONCAT_u8_u16_1332_inst_req_1); -- 
    cr_4400_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4400_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => CONCAT_u8_u16_1337_inst_req_1); -- 
    cr_4414_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4414_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => CONCAT_u16_u32_1342_inst_req_1); -- 
    cr_4428_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4428_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => XOR_u32_u32_1347_inst_req_1); -- 
    cr_4442_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4442_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => CONCAT_u8_u16_1352_inst_req_1); -- 
    cr_4456_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4456_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => CONCAT_u8_u16_1357_inst_req_1); -- 
    cr_4470_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4470_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => CONCAT_u16_u32_1362_inst_req_1); -- 
    cr_4484_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4484_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => XOR_u32_u32_1367_inst_req_1); -- 
    cr_4498_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4498_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => CONCAT_u8_u16_1372_inst_req_1); -- 
    cr_4512_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4512_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => CONCAT_u8_u16_1377_inst_req_1); -- 
    cr_4526_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4526_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => CONCAT_u16_u32_1382_inst_req_1); -- 
    cr_4540_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4540_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => XOR_u32_u32_1387_inst_req_1); -- 
    ccr_4554_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_4554_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => call_stmt_1390_call_req_1); -- 
    ccr_4568_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_4568_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => call_stmt_1392_call_req_1); -- 
    ccr_4582_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_4582_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => call_stmt_1394_call_req_1); -- 
    ccr_4596_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_4596_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => call_stmt_1396_call_req_1); -- 
    rr_4605_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4605_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => ADD_u128_u128_1400_inst_req_0); -- 
    cr_4610_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4610_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_engine_CP_4077_elements(106), ack => ADD_u128_u128_1400_inst_req_1); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal EQ_u1_u1_1405_wire : std_logic_vector(0 downto 0);
    signal LOAD_check_1403_data_0 : std_logic_vector(0 downto 0);
    signal LOAD_check_1403_wire : std_logic_vector(0 downto 0);
    signal LOAD_check_1403_word_address_0 : std_logic_vector(0 downto 0);
    signal R_one_1bit_1404_wire_constant : std_logic_vector(0 downto 0);
    signal counter_1235 : std_logic_vector(127 downto 0);
    signal counter_nxt_1401 : std_logic_vector(127 downto 0);
    signal counter_nxt_1401_1238_buffered : std_logic_vector(127 downto 0);
    signal encry_counter_1237_buffered : std_logic_vector(127 downto 0);
    signal konst_1399_wire_constant : std_logic_vector(127 downto 0);
    signal lw8_0_1249 : std_logic_vector(31 downto 0);
    signal lw8_1_1249 : std_logic_vector(31 downto 0);
    signal lw8_2_1249 : std_logic_vector(31 downto 0);
    signal lw8_3_1249 : std_logic_vector(31 downto 0);
    signal m_0_1252 : std_logic_vector(7 downto 0);
    signal m_10_1282 : std_logic_vector(7 downto 0);
    signal m_11_1285 : std_logic_vector(7 downto 0);
    signal m_12_1288 : std_logic_vector(7 downto 0);
    signal m_13_1291 : std_logic_vector(7 downto 0);
    signal m_14_1308 : std_logic_vector(7 downto 0);
    signal m_15_1308 : std_logic_vector(7 downto 0);
    signal m_1_1255 : std_logic_vector(7 downto 0);
    signal m_2_1258 : std_logic_vector(7 downto 0);
    signal m_3_1261 : std_logic_vector(7 downto 0);
    signal m_4_1264 : std_logic_vector(7 downto 0);
    signal m_5_1267 : std_logic_vector(7 downto 0);
    signal m_6_1270 : std_logic_vector(7 downto 0);
    signal m_7_1273 : std_logic_vector(7 downto 0);
    signal m_8_1276 : std_logic_vector(7 downto 0);
    signal m_9_1279 : std_logic_vector(7 downto 0);
    signal msg_0_1328 : std_logic_vector(31 downto 0);
    signal msg_0_t1_1313 : std_logic_vector(15 downto 0);
    signal msg_0_t2_1318 : std_logic_vector(15 downto 0);
    signal msg_0_t3_1323 : std_logic_vector(31 downto 0);
    signal msg_1_1348 : std_logic_vector(31 downto 0);
    signal msg_1_t1_1333 : std_logic_vector(15 downto 0);
    signal msg_1_t2_1338 : std_logic_vector(15 downto 0);
    signal msg_1_t3_1343 : std_logic_vector(31 downto 0);
    signal msg_2_1368 : std_logic_vector(31 downto 0);
    signal msg_2_t1_1353 : std_logic_vector(15 downto 0);
    signal msg_2_t2_1358 : std_logic_vector(15 downto 0);
    signal msg_2_t3_1363 : std_logic_vector(31 downto 0);
    signal msg_3_1388 : std_logic_vector(31 downto 0);
    signal msg_3_t1_1373 : std_logic_vector(15 downto 0);
    signal msg_3_t2_1378 : std_logic_vector(15 downto 0);
    signal msg_3_t3_1383 : std_logic_vector(31 downto 0);
    -- 
  begin -- 
    LOAD_check_1403_word_address_0 <= "0";
    R_one_1bit_1404_wire_constant <= "1";
    konst_1399_wire_constant <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    phi_stmt_1235: Block -- phi operator 
      signal idata: std_logic_vector(255 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= encry_counter_1237_buffered & counter_nxt_1401_1238_buffered;
      req <= phi_stmt_1235_req_0 & phi_stmt_1235_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_1235",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 128) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_1235_ack_0,
          idata => idata,
          odata => counter_1235,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_1235
    counter_nxt_1401_1238_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= counter_nxt_1401_1238_buf_req_0;
      counter_nxt_1401_1238_buf_ack_0<= wack(0);
      rreq(0) <= counter_nxt_1401_1238_buf_req_1;
      counter_nxt_1401_1238_buf_ack_1<= rack(0);
      counter_nxt_1401_1238_buf : InterlockBuffer generic map ( -- 
        name => "counter_nxt_1401_1238_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 128,
        out_data_width => 128,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => counter_nxt_1401,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => counter_nxt_1401_1238_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    encry_counter_1237_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= encry_counter_1237_buf_req_0;
      encry_counter_1237_buf_ack_0<= wack(0);
      rreq(0) <= encry_counter_1237_buf_req_1;
      encry_counter_1237_buf_ack_1<= rack(0);
      encry_counter_1237_buf : InterlockBuffer generic map ( -- 
        name => "encry_counter_1237_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 128,
        out_data_width => 128,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => encry_counter_buffer,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => encry_counter_1237_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    -- equivalence LOAD_check_1403_gather_scatter
    process(LOAD_check_1403_data_0) --
      variable iv : std_logic_vector(0 downto 0);
      variable ov : std_logic_vector(0 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := LOAD_check_1403_data_0;
      ov(0 downto 0) := iv;
      LOAD_check_1403_wire <= ov(0 downto 0);
      --
    end process;
    if_stmt_1402_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= EQ_u1_u1_1405_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_1402_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_1402_branch_req_0,
          ack0 => if_stmt_1402_branch_ack_0,
          ack1 => if_stmt_1402_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- shared split operator group (0) : ADD_u128_u128_1400_inst 
    ApIntAdd_group_0: Block -- 
      signal data_in: std_logic_vector(127 downto 0);
      signal data_out: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= counter_1235;
      counter_nxt_1401 <= data_out(127 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= ADD_u128_u128_1400_inst_req_0;
      ADD_u128_u128_1400_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= ADD_u128_u128_1400_inst_req_1;
      ADD_u128_u128_1400_inst_ack_1 <= ackR_unguarded(0);
      ApIntAdd_group_0_gI: SplitGuardInterface generic map(name => "ApIntAdd_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          name => "ApIntAdd_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 128,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 128,
          constant_operand => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
          constant_width => 128,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : CONCAT_u16_u32_1322_inst 
    ApConcat_group_1: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_0_t1_1313 & msg_0_t2_1318;
      msg_0_t3_1323 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_1322_inst_req_0;
      CONCAT_u16_u32_1322_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_1322_inst_req_1;
      CONCAT_u16_u32_1322_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_1_gI: SplitGuardInterface generic map(name => "ApConcat_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- shared split operator group (2) : CONCAT_u16_u32_1342_inst 
    ApConcat_group_2: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_1_t1_1333 & msg_1_t2_1338;
      msg_1_t3_1343 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_1342_inst_req_0;
      CONCAT_u16_u32_1342_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_1342_inst_req_1;
      CONCAT_u16_u32_1342_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_2_gI: SplitGuardInterface generic map(name => "ApConcat_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_2",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 2
    -- shared split operator group (3) : CONCAT_u16_u32_1362_inst 
    ApConcat_group_3: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_2_t1_1353 & msg_2_t2_1358;
      msg_2_t3_1363 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_1362_inst_req_0;
      CONCAT_u16_u32_1362_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_1362_inst_req_1;
      CONCAT_u16_u32_1362_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_3_gI: SplitGuardInterface generic map(name => "ApConcat_group_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_3",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 3
    -- shared split operator group (4) : CONCAT_u16_u32_1382_inst 
    ApConcat_group_4: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_3_t1_1373 & msg_3_t2_1378;
      msg_3_t3_1383 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_1382_inst_req_0;
      CONCAT_u16_u32_1382_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_1382_inst_req_1;
      CONCAT_u16_u32_1382_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_4_gI: SplitGuardInterface generic map(name => "ApConcat_group_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_4",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 4
    -- shared split operator group (5) : CONCAT_u8_u16_1312_inst 
    ApConcat_group_5: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_0_1252 & m_1_1255;
      msg_0_t1_1313 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1312_inst_req_0;
      CONCAT_u8_u16_1312_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1312_inst_req_1;
      CONCAT_u8_u16_1312_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_5_gI: SplitGuardInterface generic map(name => "ApConcat_group_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_5",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 5
    -- shared split operator group (6) : CONCAT_u8_u16_1317_inst 
    ApConcat_group_6: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_2_1258 & m_3_1261;
      msg_0_t2_1318 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1317_inst_req_0;
      CONCAT_u8_u16_1317_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1317_inst_req_1;
      CONCAT_u8_u16_1317_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_6_gI: SplitGuardInterface generic map(name => "ApConcat_group_6_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_6",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 6
    -- shared split operator group (7) : CONCAT_u8_u16_1332_inst 
    ApConcat_group_7: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_4_1264 & m_5_1267;
      msg_1_t1_1333 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1332_inst_req_0;
      CONCAT_u8_u16_1332_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1332_inst_req_1;
      CONCAT_u8_u16_1332_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_7_gI: SplitGuardInterface generic map(name => "ApConcat_group_7_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_7",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 7
    -- shared split operator group (8) : CONCAT_u8_u16_1337_inst 
    ApConcat_group_8: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_6_1270 & m_7_1273;
      msg_1_t2_1338 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1337_inst_req_0;
      CONCAT_u8_u16_1337_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1337_inst_req_1;
      CONCAT_u8_u16_1337_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_8_gI: SplitGuardInterface generic map(name => "ApConcat_group_8_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_8",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 8
    -- shared split operator group (9) : CONCAT_u8_u16_1352_inst 
    ApConcat_group_9: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_8_1276 & m_9_1279;
      msg_2_t1_1353 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1352_inst_req_0;
      CONCAT_u8_u16_1352_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1352_inst_req_1;
      CONCAT_u8_u16_1352_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_9_gI: SplitGuardInterface generic map(name => "ApConcat_group_9_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_9",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 9
    -- shared split operator group (10) : CONCAT_u8_u16_1357_inst 
    ApConcat_group_10: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_10_1282 & m_11_1285;
      msg_2_t2_1358 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1357_inst_req_0;
      CONCAT_u8_u16_1357_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1357_inst_req_1;
      CONCAT_u8_u16_1357_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_10_gI: SplitGuardInterface generic map(name => "ApConcat_group_10_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_10",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 10
    -- shared split operator group (11) : CONCAT_u8_u16_1372_inst 
    ApConcat_group_11: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_12_1288 & m_13_1291;
      msg_3_t1_1373 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1372_inst_req_0;
      CONCAT_u8_u16_1372_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1372_inst_req_1;
      CONCAT_u8_u16_1372_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_11_gI: SplitGuardInterface generic map(name => "ApConcat_group_11_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_11",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 11
    -- shared split operator group (12) : CONCAT_u8_u16_1377_inst 
    ApConcat_group_12: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= m_14_1308 & m_15_1308;
      msg_3_t2_1378 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1377_inst_req_0;
      CONCAT_u8_u16_1377_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1377_inst_req_1;
      CONCAT_u8_u16_1377_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_12_gI: SplitGuardInterface generic map(name => "ApConcat_group_12_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_12",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 12
    -- binary operator EQ_u1_u1_1405_inst
    process(LOAD_check_1403_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(LOAD_check_1403_wire, R_one_1bit_1404_wire_constant, tmp_var);
      EQ_u1_u1_1405_wire <= tmp_var; --
    end process;
    -- shared split operator group (14) : XOR_u32_u32_1327_inst 
    ApIntXor_group_14: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_0_t3_1323 & lw8_0_1249;
      msg_0_1328 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_1327_inst_req_0;
      XOR_u32_u32_1327_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_1327_inst_req_1;
      XOR_u32_u32_1327_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_14_gI: SplitGuardInterface generic map(name => "ApIntXor_group_14_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_14",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 14
    -- shared split operator group (15) : XOR_u32_u32_1347_inst 
    ApIntXor_group_15: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_1_t3_1343 & lw8_1_1249;
      msg_1_1348 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_1347_inst_req_0;
      XOR_u32_u32_1347_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_1347_inst_req_1;
      XOR_u32_u32_1347_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_15_gI: SplitGuardInterface generic map(name => "ApIntXor_group_15_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_15",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 15
    -- shared split operator group (16) : XOR_u32_u32_1367_inst 
    ApIntXor_group_16: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_2_t3_1363 & lw8_2_1249;
      msg_2_1368 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_1367_inst_req_0;
      XOR_u32_u32_1367_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_1367_inst_req_1;
      XOR_u32_u32_1367_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_16_gI: SplitGuardInterface generic map(name => "ApIntXor_group_16_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_16",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 16
    -- shared split operator group (17) : XOR_u32_u32_1387_inst 
    ApIntXor_group_17: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= msg_3_t3_1383 & lw8_3_1249;
      msg_3_1388 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u32_u32_1387_inst_req_0;
      XOR_u32_u32_1387_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u32_u32_1387_inst_req_1;
      XOR_u32_u32_1387_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_17_gI: SplitGuardInterface generic map(name => "ApIntXor_group_17_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_17",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 17
    -- shared load operator group (0) : LOAD_check_1403_load_0 
    LoadGroup0: Block -- 
      signal data_in: std_logic_vector(0 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated: BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= LOAD_check_1403_load_0_req_0;
      LOAD_check_1403_load_0_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= LOAD_check_1403_load_0_req_1;
      LOAD_check_1403_load_0_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      LoadGroup0_gI: SplitGuardInterface generic map(name => "LoadGroup0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= LOAD_check_1403_word_address_0;
      LOAD_check_1403_data_0 <= data_out(0 downto 0);
      LoadReq: LoadReqSharedWithInputBuffers -- 
        generic map ( name => "LoadGroup0", addr_width => 1,
        num_reqs => 1,
        tag_length => 2,
        time_stamp_width => 17,
        min_clock_period => false,
        input_buffering => inBUFs, 
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          mreq => memory_space_0_lr_req(0),
          mack => memory_space_0_lr_ack(0),
          maddr => memory_space_0_lr_addr(0 downto 0),
          mtag => memory_space_0_lr_tag(18 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      LoadComplete: LoadCompleteShared -- 
        generic map ( name => "LoadGroup0 load-complete ",
        data_width => 1,
        num_reqs => 1,
        tag_length => 2,
        detailed_buffering_per_output => outBUFs, 
        no_arbitration => false)
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          mreq => memory_space_0_lc_req(0),
          mack => memory_space_0_lc_ack(0),
          mdata => memory_space_0_lc_data(0 downto 0),
          mtag => memory_space_0_lc_tag(1 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- load group 0
    -- shared inport operator group (0) : RPIPE_input_e_1290_inst RPIPE_input_e_1266_inst RPIPE_input_e_1263_inst RPIPE_input_e_1272_inst RPIPE_input_e_1275_inst RPIPE_input_e_1269_inst RPIPE_input_e_1251_inst RPIPE_input_e_1278_inst RPIPE_input_e_1281_inst RPIPE_input_e_1284_inst RPIPE_input_e_1254_inst RPIPE_input_e_1257_inst RPIPE_input_e_1260_inst RPIPE_input_e_1287_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(111 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 13 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 13 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 13 downto 0);
      signal guard_vector : std_logic_vector( 13 downto 0);
      constant outBUFs : IntegerArray(13 downto 0) := (13 => 1, 12 => 1, 11 => 1, 10 => 1, 9 => 1, 8 => 1, 7 => 1, 6 => 1, 5 => 1, 4 => 1, 3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(13 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false, 4 => false, 5 => false, 6 => false, 7 => false, 8 => false, 9 => false, 10 => false, 11 => false, 12 => false, 13 => false);
      constant guardBuffering: IntegerArray(13 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2, 4 => 2, 5 => 2, 6 => 2, 7 => 2, 8 => 2, 9 => 2, 10 => 2, 11 => 2, 12 => 2, 13 => 2);
      -- 
    begin -- 
      reqL_unguarded(13) <= RPIPE_input_e_1290_inst_req_0;
      reqL_unguarded(12) <= RPIPE_input_e_1266_inst_req_0;
      reqL_unguarded(11) <= RPIPE_input_e_1263_inst_req_0;
      reqL_unguarded(10) <= RPIPE_input_e_1272_inst_req_0;
      reqL_unguarded(9) <= RPIPE_input_e_1275_inst_req_0;
      reqL_unguarded(8) <= RPIPE_input_e_1269_inst_req_0;
      reqL_unguarded(7) <= RPIPE_input_e_1251_inst_req_0;
      reqL_unguarded(6) <= RPIPE_input_e_1278_inst_req_0;
      reqL_unguarded(5) <= RPIPE_input_e_1281_inst_req_0;
      reqL_unguarded(4) <= RPIPE_input_e_1284_inst_req_0;
      reqL_unguarded(3) <= RPIPE_input_e_1254_inst_req_0;
      reqL_unguarded(2) <= RPIPE_input_e_1257_inst_req_0;
      reqL_unguarded(1) <= RPIPE_input_e_1260_inst_req_0;
      reqL_unguarded(0) <= RPIPE_input_e_1287_inst_req_0;
      RPIPE_input_e_1290_inst_ack_0 <= ackL_unguarded(13);
      RPIPE_input_e_1266_inst_ack_0 <= ackL_unguarded(12);
      RPIPE_input_e_1263_inst_ack_0 <= ackL_unguarded(11);
      RPIPE_input_e_1272_inst_ack_0 <= ackL_unguarded(10);
      RPIPE_input_e_1275_inst_ack_0 <= ackL_unguarded(9);
      RPIPE_input_e_1269_inst_ack_0 <= ackL_unguarded(8);
      RPIPE_input_e_1251_inst_ack_0 <= ackL_unguarded(7);
      RPIPE_input_e_1278_inst_ack_0 <= ackL_unguarded(6);
      RPIPE_input_e_1281_inst_ack_0 <= ackL_unguarded(5);
      RPIPE_input_e_1284_inst_ack_0 <= ackL_unguarded(4);
      RPIPE_input_e_1254_inst_ack_0 <= ackL_unguarded(3);
      RPIPE_input_e_1257_inst_ack_0 <= ackL_unguarded(2);
      RPIPE_input_e_1260_inst_ack_0 <= ackL_unguarded(1);
      RPIPE_input_e_1287_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(13) <= RPIPE_input_e_1290_inst_req_1;
      reqR_unguarded(12) <= RPIPE_input_e_1266_inst_req_1;
      reqR_unguarded(11) <= RPIPE_input_e_1263_inst_req_1;
      reqR_unguarded(10) <= RPIPE_input_e_1272_inst_req_1;
      reqR_unguarded(9) <= RPIPE_input_e_1275_inst_req_1;
      reqR_unguarded(8) <= RPIPE_input_e_1269_inst_req_1;
      reqR_unguarded(7) <= RPIPE_input_e_1251_inst_req_1;
      reqR_unguarded(6) <= RPIPE_input_e_1278_inst_req_1;
      reqR_unguarded(5) <= RPIPE_input_e_1281_inst_req_1;
      reqR_unguarded(4) <= RPIPE_input_e_1284_inst_req_1;
      reqR_unguarded(3) <= RPIPE_input_e_1254_inst_req_1;
      reqR_unguarded(2) <= RPIPE_input_e_1257_inst_req_1;
      reqR_unguarded(1) <= RPIPE_input_e_1260_inst_req_1;
      reqR_unguarded(0) <= RPIPE_input_e_1287_inst_req_1;
      RPIPE_input_e_1290_inst_ack_1 <= ackR_unguarded(13);
      RPIPE_input_e_1266_inst_ack_1 <= ackR_unguarded(12);
      RPIPE_input_e_1263_inst_ack_1 <= ackR_unguarded(11);
      RPIPE_input_e_1272_inst_ack_1 <= ackR_unguarded(10);
      RPIPE_input_e_1275_inst_ack_1 <= ackR_unguarded(9);
      RPIPE_input_e_1269_inst_ack_1 <= ackR_unguarded(8);
      RPIPE_input_e_1251_inst_ack_1 <= ackR_unguarded(7);
      RPIPE_input_e_1278_inst_ack_1 <= ackR_unguarded(6);
      RPIPE_input_e_1281_inst_ack_1 <= ackR_unguarded(5);
      RPIPE_input_e_1284_inst_ack_1 <= ackR_unguarded(4);
      RPIPE_input_e_1254_inst_ack_1 <= ackR_unguarded(3);
      RPIPE_input_e_1257_inst_ack_1 <= ackR_unguarded(2);
      RPIPE_input_e_1260_inst_ack_1 <= ackR_unguarded(1);
      RPIPE_input_e_1287_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      guard_vector(4)  <=  '1';
      guard_vector(5)  <=  '1';
      guard_vector(6)  <=  '1';
      guard_vector(7)  <=  '1';
      guard_vector(8)  <=  '1';
      guard_vector(9)  <=  '1';
      guard_vector(10)  <=  '1';
      guard_vector(11)  <=  '1';
      guard_vector(12)  <=  '1';
      guard_vector(13)  <=  '1';
      m_13_1291 <= data_out(111 downto 104);
      m_5_1267 <= data_out(103 downto 96);
      m_4_1264 <= data_out(95 downto 88);
      m_7_1273 <= data_out(87 downto 80);
      m_8_1276 <= data_out(79 downto 72);
      m_6_1270 <= data_out(71 downto 64);
      m_0_1252 <= data_out(63 downto 56);
      m_9_1279 <= data_out(55 downto 48);
      m_10_1282 <= data_out(47 downto 40);
      m_11_1285 <= data_out(39 downto 32);
      m_1_1255 <= data_out(31 downto 24);
      m_2_1258 <= data_out(23 downto 16);
      m_3_1261 <= data_out(15 downto 8);
      m_12_1288 <= data_out(7 downto 0);
      input_e_read_0_gI: SplitGuardInterface generic map(name => "input_e_read_0_gI", nreqs => 14, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      input_e_read_0: InputPortRevised -- 
        generic map ( name => "input_e_read_0", data_width => 8,  num_reqs => 14,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => input_e_pipe_read_req(0),
          oack => input_e_pipe_read_ack(0),
          odata => input_e_pipe_read_data(7 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- shared call operator group (0) : call_stmt_1249_call 
    counter_encry_call_group_0: Block -- 
      signal data_in: std_logic_vector(255 downto 0);
      signal data_out: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_1249_call_req_0;
      call_stmt_1249_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_1249_call_req_1;
      call_stmt_1249_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      counter_encry_call_group_0_gI: SplitGuardInterface generic map(name => "counter_encry_call_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= k0_0_buffer & k0_1_buffer & k0_2_buffer & k0_3_buffer & counter_1235;
      lw8_0_1249 <= data_out(127 downto 96);
      lw8_1_1249 <= data_out(95 downto 64);
      lw8_2_1249 <= data_out(63 downto 32);
      lw8_3_1249 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 256,
        owidth => 256,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => counter_encry_call_reqs(0),
          ackR => counter_encry_call_acks(0),
          dataR => counter_encry_call_data(255 downto 0),
          tagR => counter_encry_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 128,
          owidth => 128,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => counter_encry_return_acks(0), -- cross-over
          ackL => counter_encry_return_reqs(0), -- cross-over
          dataL => counter_encry_return_data(127 downto 0),
          tagL => counter_encry_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- shared call operator group (1) : call_stmt_1308_call 
    checksum_calculation_call_group_1: Block -- 
      signal data_in: std_logic_vector(111 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_1308_call_req_0;
      call_stmt_1308_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_1308_call_req_1;
      call_stmt_1308_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      checksum_calculation_call_group_1_gI: SplitGuardInterface generic map(name => "checksum_calculation_call_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= m_0_1252 & m_1_1255 & m_2_1258 & m_3_1261 & m_4_1264 & m_5_1267 & m_6_1270 & m_7_1273 & m_8_1276 & m_9_1279 & m_10_1282 & m_11_1285 & m_12_1288 & m_13_1291;
      m_14_1308 <= data_out(15 downto 8);
      m_15_1308 <= data_out(7 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 112,
        owidth => 112,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => checksum_calculation_call_reqs(0),
          ackR => checksum_calculation_call_acks(0),
          dataR => checksum_calculation_call_data(111 downto 0),
          tagR => checksum_calculation_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 16,
          owidth => 16,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => checksum_calculation_return_acks(0), -- cross-over
          ackL => checksum_calculation_return_reqs(0), -- cross-over
          dataL => checksum_calculation_return_data(15 downto 0),
          tagL => checksum_calculation_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 1
    -- shared call operator group (2) : call_stmt_1390_call call_stmt_1392_call call_stmt_1394_call call_stmt_1396_call 
    send_msg_call_group_2: Block -- 
      signal data_in: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 3 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 3 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant inBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant outBUFs: IntegerArray(3 downto 0) := (others => 1);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2);
      -- 
    begin -- 
      reqL_unguarded(3) <= call_stmt_1390_call_req_0;
      reqL_unguarded(2) <= call_stmt_1392_call_req_0;
      reqL_unguarded(1) <= call_stmt_1394_call_req_0;
      reqL_unguarded(0) <= call_stmt_1396_call_req_0;
      call_stmt_1390_call_ack_0 <= ackL_unguarded(3);
      call_stmt_1392_call_ack_0 <= ackL_unguarded(2);
      call_stmt_1394_call_ack_0 <= ackL_unguarded(1);
      call_stmt_1396_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(3) <= call_stmt_1390_call_req_1;
      reqR_unguarded(2) <= call_stmt_1392_call_req_1;
      reqR_unguarded(1) <= call_stmt_1394_call_req_1;
      reqR_unguarded(0) <= call_stmt_1396_call_req_1;
      call_stmt_1390_call_ack_1 <= ackR_unguarded(3);
      call_stmt_1392_call_ack_1 <= ackR_unguarded(2);
      call_stmt_1394_call_ack_1 <= ackR_unguarded(1);
      call_stmt_1396_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      send_msg_call_group_2_accessRegulator_0: access_regulator_base generic map (name => "send_msg_call_group_2_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      send_msg_call_group_2_accessRegulator_1: access_regulator_base generic map (name => "send_msg_call_group_2_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      send_msg_call_group_2_accessRegulator_2: access_regulator_base generic map (name => "send_msg_call_group_2_accessRegulator_2", num_slots => 1) -- 
        port map (req => reqL_unregulated(2), -- 
          ack => ackL_unregulated(2),
          regulated_req => reqL(2),
          regulated_ack => ackL(2),
          release_req => reqR(2),
          release_ack => ackR(2),
          clk => clk, reset => reset); -- 
      send_msg_call_group_2_accessRegulator_3: access_regulator_base generic map (name => "send_msg_call_group_2_accessRegulator_3", num_slots => 1) -- 
        port map (req => reqL_unregulated(3), -- 
          ack => ackL_unregulated(3),
          regulated_req => reqL(3),
          regulated_ack => ackL(3),
          release_req => reqR(3),
          release_ack => ackR(3),
          clk => clk, reset => reset); -- 
      send_msg_call_group_2_gI: SplitGuardInterface generic map(name => "send_msg_call_group_2_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= msg_0_1328 & msg_1_1348 & msg_2_1368 & msg_3_1388;
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 128,
        owidth => 32,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 3,
        nreqs => 4,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => send_msg_call_reqs(0),
          ackR => send_msg_call_acks(0),
          dataR => send_msg_call_data(31 downto 0),
          tagR => send_msg_call_tag(2 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseNoData -- 
        generic map ( -- 
          detailed_buffering_per_output => outBUFs, 
          twidth => 3,
          name => "OutputDemuxBaseNoData",
          nreqs => 4) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          reqL => send_msg_return_acks(0), -- cross-over
          ackL => send_msg_return_reqs(0), -- cross-over
          tagL => send_msg_return_tag(2 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 2
    -- 
  end Block; -- data_path
  -- 
end encryption_engine_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity encryption_key_reception is -- 
  generic (tag_length : integer); 
  port ( -- 
    key_out : out  std_logic_vector(31 downto 0);
    input_d_pipe_read_req : out  std_logic_vector(0 downto 0);
    input_d_pipe_read_ack : in   std_logic_vector(0 downto 0);
    input_d_pipe_read_data : in   std_logic_vector(7 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity encryption_key_reception;
architecture encryption_key_reception_arch of encryption_key_reception is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 32)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal key_out_buffer :  std_logic_vector(31 downto 0);
  signal key_out_update_enable: Boolean;
  signal encryption_key_reception_CP_4725_start: Boolean;
  signal encryption_key_reception_CP_4725_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal RPIPE_input_d_1413_inst_req_0 : boolean;
  signal RPIPE_input_d_1413_inst_ack_0 : boolean;
  signal RPIPE_input_d_1413_inst_req_1 : boolean;
  signal RPIPE_input_d_1413_inst_ack_1 : boolean;
  signal RPIPE_input_d_1416_inst_req_0 : boolean;
  signal RPIPE_input_d_1416_inst_ack_0 : boolean;
  signal RPIPE_input_d_1416_inst_req_1 : boolean;
  signal RPIPE_input_d_1416_inst_ack_1 : boolean;
  signal RPIPE_input_d_1419_inst_req_0 : boolean;
  signal RPIPE_input_d_1419_inst_ack_0 : boolean;
  signal RPIPE_input_d_1419_inst_req_1 : boolean;
  signal RPIPE_input_d_1419_inst_ack_1 : boolean;
  signal RPIPE_input_d_1422_inst_req_0 : boolean;
  signal RPIPE_input_d_1422_inst_ack_0 : boolean;
  signal RPIPE_input_d_1422_inst_req_1 : boolean;
  signal RPIPE_input_d_1422_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1427_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1427_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1427_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1427_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_1432_inst_req_0 : boolean;
  signal CONCAT_u8_u16_1432_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_1432_inst_req_1 : boolean;
  signal CONCAT_u8_u16_1432_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_1437_inst_req_0 : boolean;
  signal CONCAT_u16_u32_1437_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_1437_inst_req_1 : boolean;
  signal CONCAT_u16_u32_1437_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "encryption_key_reception_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  encryption_key_reception_CP_4725_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "encryption_key_reception_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 32) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(31 downto 0) <= key_out_buffer;
  key_out <= out_buffer_data_out(31 downto 0);
  out_buffer_data_in(tag_length + 31 downto 32) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 31 downto 32);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= encryption_key_reception_CP_4725_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= encryption_key_reception_CP_4725_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= encryption_key_reception_CP_4725_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  encryption_key_reception_CP_4725: Block -- control-path 
    signal encryption_key_reception_CP_4725_elements: BooleanArray(15 downto 0);
    -- 
  begin -- 
    encryption_key_reception_CP_4725_elements(0) <= encryption_key_reception_CP_4725_start;
    encryption_key_reception_CP_4725_symbol <= encryption_key_reception_CP_4725_elements(15);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	10 
    -- CP-element group 0: 	12 
    -- CP-element group 0: 	15 
    -- CP-element group 0: 	1 
    -- CP-element group 0:  members (14) 
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1413_Sample/rr
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1413_sample_start_
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/$entry
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1413_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1427_update_start_
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1427_Update/$entry
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1427_Update/cr
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1432_update_start_
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1432_Update/$entry
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1432_Update/cr
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u16_u32_1437_update_start_
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u16_u32_1437_Update/$entry
      -- CP-element group 0: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u16_u32_1437_Update/cr
      -- 
    cr_4799_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4799_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(0), ack => CONCAT_u8_u16_1427_inst_req_1); -- 
    rr_4738_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4738_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(0), ack => RPIPE_input_d_1413_inst_req_0); -- 
    cr_4813_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4813_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(0), ack => CONCAT_u8_u16_1432_inst_req_1); -- 
    cr_4827_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4827_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(0), ack => CONCAT_u16_u32_1437_inst_req_1); -- 
    -- CP-element group 1:  transition  input  output  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	2 
    -- CP-element group 1:  members (6) 
      -- CP-element group 1: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1413_Sample/ra
      -- CP-element group 1: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1413_Update/$entry
      -- CP-element group 1: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1413_Update/cr
      -- CP-element group 1: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1413_sample_completed_
      -- CP-element group 1: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1413_update_start_
      -- CP-element group 1: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1413_Sample/$exit
      -- 
    ra_4739_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1413_inst_ack_0, ack => encryption_key_reception_CP_4725_elements(1)); -- 
    cr_4743_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4743_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(1), ack => RPIPE_input_d_1413_inst_req_1); -- 
    -- CP-element group 2:  transition  input  output  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	1 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	3 
    -- CP-element group 2:  members (6) 
      -- CP-element group 2: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1413_Update/$exit
      -- CP-element group 2: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1413_Update/ca
      -- CP-element group 2: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1413_update_completed_
      -- CP-element group 2: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1416_sample_start_
      -- CP-element group 2: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1416_Sample/$entry
      -- CP-element group 2: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1416_Sample/rr
      -- 
    ca_4744_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1413_inst_ack_1, ack => encryption_key_reception_CP_4725_elements(2)); -- 
    rr_4752_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4752_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(2), ack => RPIPE_input_d_1416_inst_req_0); -- 
    -- CP-element group 3:  transition  input  output  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	2 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	4 
    -- CP-element group 3:  members (6) 
      -- CP-element group 3: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1416_sample_completed_
      -- CP-element group 3: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1416_update_start_
      -- CP-element group 3: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1416_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1416_Sample/ra
      -- CP-element group 3: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1416_Update/$entry
      -- CP-element group 3: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1416_Update/cr
      -- 
    ra_4753_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1416_inst_ack_0, ack => encryption_key_reception_CP_4725_elements(3)); -- 
    cr_4757_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4757_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(3), ack => RPIPE_input_d_1416_inst_req_1); -- 
    -- CP-element group 4:  fork  transition  input  output  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	3 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	9 
    -- CP-element group 4: 	5 
    -- CP-element group 4:  members (9) 
      -- CP-element group 4: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1416_update_completed_
      -- CP-element group 4: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1416_Update/$exit
      -- CP-element group 4: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1416_Update/ca
      -- CP-element group 4: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1419_sample_start_
      -- CP-element group 4: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1419_Sample/$entry
      -- CP-element group 4: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1419_Sample/rr
      -- CP-element group 4: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1427_sample_start_
      -- CP-element group 4: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1427_Sample/$entry
      -- CP-element group 4: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1427_Sample/rr
      -- 
    ca_4758_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1416_inst_ack_1, ack => encryption_key_reception_CP_4725_elements(4)); -- 
    rr_4794_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4794_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(4), ack => CONCAT_u8_u16_1427_inst_req_0); -- 
    rr_4766_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4766_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(4), ack => RPIPE_input_d_1419_inst_req_0); -- 
    -- CP-element group 5:  transition  input  output  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	4 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	6 
    -- CP-element group 5:  members (6) 
      -- CP-element group 5: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1419_sample_completed_
      -- CP-element group 5: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1419_update_start_
      -- CP-element group 5: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1419_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1419_Sample/ra
      -- CP-element group 5: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1419_Update/$entry
      -- CP-element group 5: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1419_Update/cr
      -- 
    ra_4767_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1419_inst_ack_0, ack => encryption_key_reception_CP_4725_elements(5)); -- 
    cr_4771_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4771_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(5), ack => RPIPE_input_d_1419_inst_req_1); -- 
    -- CP-element group 6:  transition  input  output  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	5 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	7 
    -- CP-element group 6:  members (6) 
      -- CP-element group 6: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1419_update_completed_
      -- CP-element group 6: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1419_Update/$exit
      -- CP-element group 6: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1419_Update/ca
      -- CP-element group 6: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1422_sample_start_
      -- CP-element group 6: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1422_Sample/$entry
      -- CP-element group 6: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1422_Sample/rr
      -- 
    ca_4772_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1419_inst_ack_1, ack => encryption_key_reception_CP_4725_elements(6)); -- 
    rr_4780_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4780_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(6), ack => RPIPE_input_d_1422_inst_req_0); -- 
    -- CP-element group 7:  transition  input  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	6 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7:  members (6) 
      -- CP-element group 7: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1422_sample_completed_
      -- CP-element group 7: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1422_update_start_
      -- CP-element group 7: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1422_Sample/$exit
      -- CP-element group 7: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1422_Sample/ra
      -- CP-element group 7: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1422_Update/$entry
      -- CP-element group 7: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1422_Update/cr
      -- 
    ra_4781_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1422_inst_ack_0, ack => encryption_key_reception_CP_4725_elements(7)); -- 
    cr_4785_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4785_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(7), ack => RPIPE_input_d_1422_inst_req_1); -- 
    -- CP-element group 8:  transition  input  output  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	11 
    -- CP-element group 8:  members (6) 
      -- CP-element group 8: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1422_update_completed_
      -- CP-element group 8: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1422_Update/$exit
      -- CP-element group 8: 	 assign_stmt_1414_to_assign_stmt_1438/RPIPE_input_d_1422_Update/ca
      -- CP-element group 8: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1432_sample_start_
      -- CP-element group 8: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1432_Sample/$entry
      -- CP-element group 8: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1432_Sample/rr
      -- 
    ca_4786_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1422_inst_ack_1, ack => encryption_key_reception_CP_4725_elements(8)); -- 
    rr_4808_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4808_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(8), ack => CONCAT_u8_u16_1432_inst_req_0); -- 
    -- CP-element group 9:  transition  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	4 
    -- CP-element group 9: successors 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1427_sample_completed_
      -- CP-element group 9: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1427_Sample/$exit
      -- CP-element group 9: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1427_Sample/ra
      -- 
    ra_4795_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1427_inst_ack_0, ack => encryption_key_reception_CP_4725_elements(9)); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	0 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	13 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1427_update_completed_
      -- CP-element group 10: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1427_Update/$exit
      -- CP-element group 10: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1427_Update/ca
      -- 
    ca_4800_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1427_inst_ack_1, ack => encryption_key_reception_CP_4725_elements(10)); -- 
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	8 
    -- CP-element group 11: successors 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1432_sample_completed_
      -- CP-element group 11: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1432_Sample/$exit
      -- CP-element group 11: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1432_Sample/ra
      -- 
    ra_4809_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1432_inst_ack_0, ack => encryption_key_reception_CP_4725_elements(11)); -- 
    -- CP-element group 12:  transition  input  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	0 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	13 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1432_update_completed_
      -- CP-element group 12: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1432_Update/$exit
      -- CP-element group 12: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u8_u16_1432_Update/ca
      -- 
    ca_4814_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_1432_inst_ack_1, ack => encryption_key_reception_CP_4725_elements(12)); -- 
    -- CP-element group 13:  join  transition  output  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	10 
    -- CP-element group 13: 	12 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	14 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u16_u32_1437_sample_start_
      -- CP-element group 13: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u16_u32_1437_Sample/$entry
      -- CP-element group 13: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u16_u32_1437_Sample/rr
      -- 
    rr_4822_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4822_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => encryption_key_reception_CP_4725_elements(13), ack => CONCAT_u16_u32_1437_inst_req_0); -- 
    encryption_key_reception_cp_element_group_13: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 44) := "encryption_key_reception_cp_element_group_13"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= encryption_key_reception_CP_4725_elements(10) & encryption_key_reception_CP_4725_elements(12);
      gj_encryption_key_reception_cp_element_group_13 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => encryption_key_reception_CP_4725_elements(13), clk => clk, reset => reset); --
    end block;
    -- CP-element group 14:  transition  input  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	13 
    -- CP-element group 14: successors 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u16_u32_1437_sample_completed_
      -- CP-element group 14: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u16_u32_1437_Sample/$exit
      -- CP-element group 14: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u16_u32_1437_Sample/ra
      -- 
    ra_4823_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1437_inst_ack_0, ack => encryption_key_reception_CP_4725_elements(14)); -- 
    -- CP-element group 15:  transition  input  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	0 
    -- CP-element group 15: successors 
    -- CP-element group 15:  members (5) 
      -- CP-element group 15: 	 assign_stmt_1414_to_assign_stmt_1438/$exit
      -- CP-element group 15: 	 $exit
      -- CP-element group 15: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u16_u32_1437_update_completed_
      -- CP-element group 15: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u16_u32_1437_Update/$exit
      -- CP-element group 15: 	 assign_stmt_1414_to_assign_stmt_1438/CONCAT_u16_u32_1437_Update/ca
      -- 
    ca_4828_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_1437_inst_ack_1, ack => encryption_key_reception_CP_4725_elements(15)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal temp_0_1414 : std_logic_vector(7 downto 0);
    signal temp_1_1417 : std_logic_vector(7 downto 0);
    signal temp_2_1420 : std_logic_vector(7 downto 0);
    signal temp_3_1423 : std_logic_vector(7 downto 0);
    signal temp_f_1_1428 : std_logic_vector(15 downto 0);
    signal temp_f_2_1433 : std_logic_vector(15 downto 0);
    -- 
  begin -- 
    -- shared split operator group (0) : CONCAT_u16_u32_1437_inst 
    ApConcat_group_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= temp_f_1_1428 & temp_f_2_1433;
      key_out_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_1437_inst_req_0;
      CONCAT_u16_u32_1437_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_1437_inst_req_1;
      CONCAT_u16_u32_1437_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_0_gI: SplitGuardInterface generic map(name => "ApConcat_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : CONCAT_u8_u16_1427_inst 
    ApConcat_group_1: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= temp_0_1414 & temp_1_1417;
      temp_f_1_1428 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1427_inst_req_0;
      CONCAT_u8_u16_1427_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1427_inst_req_1;
      CONCAT_u8_u16_1427_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_1_gI: SplitGuardInterface generic map(name => "ApConcat_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- shared split operator group (2) : CONCAT_u8_u16_1432_inst 
    ApConcat_group_2: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= temp_2_1420 & temp_3_1423;
      temp_f_2_1433 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_1432_inst_req_0;
      CONCAT_u8_u16_1432_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_1432_inst_req_1;
      CONCAT_u8_u16_1432_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_2_gI: SplitGuardInterface generic map(name => "ApConcat_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_2",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 2
    -- shared inport operator group (0) : RPIPE_input_d_1413_inst RPIPE_input_d_1416_inst RPIPE_input_d_1419_inst RPIPE_input_d_1422_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(31 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 3 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 3 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant outBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2);
      -- 
    begin -- 
      reqL_unguarded(3) <= RPIPE_input_d_1413_inst_req_0;
      reqL_unguarded(2) <= RPIPE_input_d_1416_inst_req_0;
      reqL_unguarded(1) <= RPIPE_input_d_1419_inst_req_0;
      reqL_unguarded(0) <= RPIPE_input_d_1422_inst_req_0;
      RPIPE_input_d_1413_inst_ack_0 <= ackL_unguarded(3);
      RPIPE_input_d_1416_inst_ack_0 <= ackL_unguarded(2);
      RPIPE_input_d_1419_inst_ack_0 <= ackL_unguarded(1);
      RPIPE_input_d_1422_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(3) <= RPIPE_input_d_1413_inst_req_1;
      reqR_unguarded(2) <= RPIPE_input_d_1416_inst_req_1;
      reqR_unguarded(1) <= RPIPE_input_d_1419_inst_req_1;
      reqR_unguarded(0) <= RPIPE_input_d_1422_inst_req_1;
      RPIPE_input_d_1413_inst_ack_1 <= ackR_unguarded(3);
      RPIPE_input_d_1416_inst_ack_1 <= ackR_unguarded(2);
      RPIPE_input_d_1419_inst_ack_1 <= ackR_unguarded(1);
      RPIPE_input_d_1422_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      temp_0_1414 <= data_out(31 downto 24);
      temp_1_1417 <= data_out(23 downto 16);
      temp_2_1420 <= data_out(15 downto 8);
      temp_3_1423 <= data_out(7 downto 0);
      input_d_read_0_gI: SplitGuardInterface generic map(name => "input_d_read_0_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      input_d_read_0: InputPortRevised -- 
        generic map ( name => "input_d_read_0", data_width => 8,  num_reqs => 4,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => input_d_pipe_read_req(0),
          oack => input_d_pipe_read_ack(0),
          odata => input_d_pipe_read_data(7 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- 
  end Block; -- data_path
  -- 
end encryption_key_reception_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity handshaking is -- 
  generic (tag_length : integer); 
  port ( -- 
    input_d_pipe_read_req : out  std_logic_vector(0 downto 0);
    input_d_pipe_read_ack : in   std_logic_vector(0 downto 0);
    input_d_pipe_read_data : in   std_logic_vector(7 downto 0);
    out_e_pipe_write_req : out  std_logic_vector(0 downto 0);
    out_e_pipe_write_ack : in   std_logic_vector(0 downto 0);
    out_e_pipe_write_data : out  std_logic_vector(7 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity handshaking;
architecture handshaking_arch of handshaking is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal handshaking_CP_4832_start: Boolean;
  signal handshaking_CP_4832_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal RPIPE_input_d_1468_inst_req_0 : boolean;
  signal RPIPE_input_d_1468_inst_ack_0 : boolean;
  signal RPIPE_input_d_1468_inst_req_1 : boolean;
  signal RPIPE_input_d_1468_inst_ack_1 : boolean;
  signal if_stmt_1470_branch_ack_0 : boolean;
  signal if_stmt_1470_branch_ack_1 : boolean;
  signal if_stmt_1470_branch_req_0 : boolean;
  signal WPIPE_out_e_1444_inst_req_0 : boolean;
  signal WPIPE_out_e_1444_inst_ack_0 : boolean;
  signal WPIPE_out_e_1444_inst_req_1 : boolean;
  signal WPIPE_out_e_1444_inst_ack_1 : boolean;
  signal RPIPE_input_d_1450_inst_req_0 : boolean;
  signal RPIPE_input_d_1450_inst_ack_0 : boolean;
  signal RPIPE_input_d_1450_inst_req_1 : boolean;
  signal RPIPE_input_d_1450_inst_ack_1 : boolean;
  signal if_stmt_1452_branch_req_0 : boolean;
  signal if_stmt_1452_branch_ack_1 : boolean;
  signal if_stmt_1452_branch_ack_0 : boolean;
  signal WPIPE_out_e_1459_inst_req_0 : boolean;
  signal WPIPE_out_e_1459_inst_ack_0 : boolean;
  signal WPIPE_out_e_1459_inst_req_1 : boolean;
  signal WPIPE_out_e_1459_inst_ack_1 : boolean;
  signal WPIPE_out_e_1462_inst_req_0 : boolean;
  signal WPIPE_out_e_1462_inst_ack_0 : boolean;
  signal WPIPE_out_e_1462_inst_req_1 : boolean;
  signal WPIPE_out_e_1462_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "handshaking_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  handshaking_CP_4832_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "handshaking_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= handshaking_CP_4832_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= handshaking_CP_4832_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= handshaking_CP_4832_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  handshaking_CP_4832: Block -- control-path 
    signal handshaking_CP_4832_elements: BooleanArray(16 downto 0);
    -- 
  begin -- 
    handshaking_CP_4832_elements(0) <= handshaking_CP_4832_start;
    handshaking_CP_4832_symbol <= handshaking_CP_4832_elements(15);
    -- CP-element group 0:  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0:  members (5) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_1446/$entry
      -- CP-element group 0: 	 assign_stmt_1446/WPIPE_out_e_1444_sample_start_
      -- CP-element group 0: 	 assign_stmt_1446/WPIPE_out_e_1444_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1446/WPIPE_out_e_1444_Sample/req
      -- 
    req_4845_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4845_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => handshaking_CP_4832_elements(0), ack => WPIPE_out_e_1444_inst_req_0); -- 
    -- CP-element group 1:  transition  input  output  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	2 
    -- CP-element group 1:  members (6) 
      -- CP-element group 1: 	 assign_stmt_1446/WPIPE_out_e_1444_sample_completed_
      -- CP-element group 1: 	 assign_stmt_1446/WPIPE_out_e_1444_update_start_
      -- CP-element group 1: 	 assign_stmt_1446/WPIPE_out_e_1444_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_1446/WPIPE_out_e_1444_Sample/ack
      -- CP-element group 1: 	 assign_stmt_1446/WPIPE_out_e_1444_Update/$entry
      -- CP-element group 1: 	 assign_stmt_1446/WPIPE_out_e_1444_Update/req
      -- 
    ack_4846_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1444_inst_ack_0, ack => handshaking_CP_4832_elements(1)); -- 
    req_4850_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4850_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => handshaking_CP_4832_elements(1), ack => WPIPE_out_e_1444_inst_req_1); -- 
    -- CP-element group 2:  branch  transition  place  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	1 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	7 
    -- CP-element group 2:  members (10) 
      -- CP-element group 2: 	 assign_stmt_1446/$exit
      -- CP-element group 2: 	 assign_stmt_1446/WPIPE_out_e_1444_update_completed_
      -- CP-element group 2: 	 assign_stmt_1446/WPIPE_out_e_1444_Update/$exit
      -- CP-element group 2: 	 assign_stmt_1446/WPIPE_out_e_1444_Update/ack
      -- CP-element group 2: 	 branch_block_stmt_1447/$entry
      -- CP-element group 2: 	 branch_block_stmt_1447/branch_block_stmt_1447__entry__
      -- CP-element group 2: 	 branch_block_stmt_1447/merge_stmt_1448__entry__
      -- CP-element group 2: 	 branch_block_stmt_1447/merge_stmt_1448_dead_link/$entry
      -- CP-element group 2: 	 branch_block_stmt_1447/merge_stmt_1448__entry___PhiReq/$entry
      -- CP-element group 2: 	 branch_block_stmt_1447/merge_stmt_1448__entry___PhiReq/$exit
      -- 
    ack_4851_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1444_inst_ack_1, ack => handshaking_CP_4832_elements(2)); -- 
    -- CP-element group 3:  transition  input  output  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	7 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	4 
    -- CP-element group 3:  members (6) 
      -- CP-element group 3: 	 branch_block_stmt_1447/assign_stmt_1451/RPIPE_input_d_1450_sample_completed_
      -- CP-element group 3: 	 branch_block_stmt_1447/assign_stmt_1451/RPIPE_input_d_1450_update_start_
      -- CP-element group 3: 	 branch_block_stmt_1447/assign_stmt_1451/RPIPE_input_d_1450_Sample/$exit
      -- CP-element group 3: 	 branch_block_stmt_1447/assign_stmt_1451/RPIPE_input_d_1450_Sample/ra
      -- CP-element group 3: 	 branch_block_stmt_1447/assign_stmt_1451/RPIPE_input_d_1450_Update/$entry
      -- CP-element group 3: 	 branch_block_stmt_1447/assign_stmt_1451/RPIPE_input_d_1450_Update/cr
      -- 
    ra_4874_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1450_inst_ack_0, ack => handshaking_CP_4832_elements(3)); -- 
    cr_4878_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4878_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => handshaking_CP_4832_elements(3), ack => RPIPE_input_d_1450_inst_req_1); -- 
    -- CP-element group 4:  branch  transition  place  input  output  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	3 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	5 
    -- CP-element group 4: 	6 
    -- CP-element group 4:  members (27) 
      -- CP-element group 4: 	 branch_block_stmt_1447/assign_stmt_1451__exit__
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452__entry__
      -- CP-element group 4: 	 branch_block_stmt_1447/assign_stmt_1451/$exit
      -- CP-element group 4: 	 branch_block_stmt_1447/assign_stmt_1451/RPIPE_input_d_1450_update_completed_
      -- CP-element group 4: 	 branch_block_stmt_1447/assign_stmt_1451/RPIPE_input_d_1450_Update/$exit
      -- CP-element group 4: 	 branch_block_stmt_1447/assign_stmt_1451/RPIPE_input_d_1450_Update/ca
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_dead_link/$entry
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/$entry
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/$exit
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/$entry
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/$exit
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/NEQ_u8_u1_1455_inputs/$entry
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/NEQ_u8_u1_1455_inputs/$exit
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/SplitProtocol/$entry
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/SplitProtocol/$exit
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/SplitProtocol/Sample/$entry
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/SplitProtocol/Sample/$exit
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/SplitProtocol/Sample/rr
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/SplitProtocol/Sample/ra
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/SplitProtocol/Update/$entry
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/SplitProtocol/Update/$exit
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/SplitProtocol/Update/cr
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/NEQ_u8_u1_1455/SplitProtocol/Update/ca
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_eval_test/branch_req
      -- CP-element group 4: 	 branch_block_stmt_1447/NEQ_u8_u1_1455_place
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_if_link/$entry
      -- CP-element group 4: 	 branch_block_stmt_1447/if_stmt_1452_else_link/$entry
      -- 
    ca_4879_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1450_inst_ack_1, ack => handshaking_CP_4832_elements(4)); -- 
    branch_req_4906_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_4906_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => handshaking_CP_4832_elements(4), ack => if_stmt_1452_branch_req_0); -- 
    -- CP-element group 5:  transition  place  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	4 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	7 
    -- CP-element group 5:  members (5) 
      -- CP-element group 5: 	 branch_block_stmt_1447/if_stmt_1452_if_link/$exit
      -- CP-element group 5: 	 branch_block_stmt_1447/if_stmt_1452_if_link/if_choice_transition
      -- CP-element group 5: 	 branch_block_stmt_1447/loopback_1
      -- CP-element group 5: 	 branch_block_stmt_1447/loopback_1_PhiReq/$entry
      -- CP-element group 5: 	 branch_block_stmt_1447/loopback_1_PhiReq/$exit
      -- 
    if_choice_transition_4911_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1452_branch_ack_1, ack => handshaking_CP_4832_elements(5)); -- 
    -- CP-element group 6:  merge  transition  place  input  output  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	4 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	8 
    -- CP-element group 6:  members (9) 
      -- CP-element group 6: 	 branch_block_stmt_1447/$exit
      -- CP-element group 6: 	 branch_block_stmt_1447/branch_block_stmt_1447__exit__
      -- CP-element group 6: 	 branch_block_stmt_1447/if_stmt_1452__exit__
      -- CP-element group 6: 	 branch_block_stmt_1447/if_stmt_1452_else_link/$exit
      -- CP-element group 6: 	 branch_block_stmt_1447/if_stmt_1452_else_link/else_choice_transition
      -- CP-element group 6: 	 assign_stmt_1461_to_assign_stmt_1464/$entry
      -- CP-element group 6: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1459_sample_start_
      -- CP-element group 6: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1459_Sample/$entry
      -- CP-element group 6: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1459_Sample/req
      -- 
    else_choice_transition_4915_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1452_branch_ack_0, ack => handshaking_CP_4832_elements(6)); -- 
    req_4942_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4942_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => handshaking_CP_4832_elements(6), ack => WPIPE_out_e_1459_inst_req_0); -- 
    -- CP-element group 7:  merge  transition  place  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	5 
    -- CP-element group 7: 	2 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	3 
    -- CP-element group 7:  members (10) 
      -- CP-element group 7: 	 branch_block_stmt_1447/merge_stmt_1448__exit__
      -- CP-element group 7: 	 branch_block_stmt_1447/assign_stmt_1451__entry__
      -- CP-element group 7: 	 branch_block_stmt_1447/assign_stmt_1451/$entry
      -- CP-element group 7: 	 branch_block_stmt_1447/assign_stmt_1451/RPIPE_input_d_1450_sample_start_
      -- CP-element group 7: 	 branch_block_stmt_1447/assign_stmt_1451/RPIPE_input_d_1450_Sample/$entry
      -- CP-element group 7: 	 branch_block_stmt_1447/assign_stmt_1451/RPIPE_input_d_1450_Sample/rr
      -- CP-element group 7: 	 branch_block_stmt_1447/merge_stmt_1448_PhiReqMerge
      -- CP-element group 7: 	 branch_block_stmt_1447/merge_stmt_1448_PhiAck/$entry
      -- CP-element group 7: 	 branch_block_stmt_1447/merge_stmt_1448_PhiAck/$exit
      -- CP-element group 7: 	 branch_block_stmt_1447/merge_stmt_1448_PhiAck/dummy
      -- 
    rr_4873_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4873_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => handshaking_CP_4832_elements(7), ack => RPIPE_input_d_1450_inst_req_0); -- 
    handshaking_CP_4832_elements(7) <= OrReduce(handshaking_CP_4832_elements(5) & handshaking_CP_4832_elements(2));
    -- CP-element group 8:  transition  input  output  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	6 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	9 
    -- CP-element group 8:  members (6) 
      -- CP-element group 8: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1459_sample_completed_
      -- CP-element group 8: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1459_update_start_
      -- CP-element group 8: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1459_Sample/$exit
      -- CP-element group 8: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1459_Sample/ack
      -- CP-element group 8: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1459_Update/$entry
      -- CP-element group 8: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1459_Update/req
      -- 
    ack_4943_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1459_inst_ack_0, ack => handshaking_CP_4832_elements(8)); -- 
    req_4947_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4947_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => handshaking_CP_4832_elements(8), ack => WPIPE_out_e_1459_inst_req_1); -- 
    -- CP-element group 9:  transition  input  output  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	8 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	10 
    -- CP-element group 9:  members (6) 
      -- CP-element group 9: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1459_update_completed_
      -- CP-element group 9: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1459_Update/$exit
      -- CP-element group 9: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1459_Update/ack
      -- CP-element group 9: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1462_sample_start_
      -- CP-element group 9: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1462_Sample/$entry
      -- CP-element group 9: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1462_Sample/req
      -- 
    ack_4948_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1459_inst_ack_1, ack => handshaking_CP_4832_elements(9)); -- 
    req_4956_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4956_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => handshaking_CP_4832_elements(9), ack => WPIPE_out_e_1462_inst_req_0); -- 
    -- CP-element group 10:  transition  input  output  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	9 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	11 
    -- CP-element group 10:  members (6) 
      -- CP-element group 10: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1462_sample_completed_
      -- CP-element group 10: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1462_update_start_
      -- CP-element group 10: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1462_Sample/$exit
      -- CP-element group 10: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1462_Sample/ack
      -- CP-element group 10: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1462_Update/$entry
      -- CP-element group 10: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1462_Update/req
      -- 
    ack_4957_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1462_inst_ack_0, ack => handshaking_CP_4832_elements(10)); -- 
    req_4961_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4961_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => handshaking_CP_4832_elements(10), ack => WPIPE_out_e_1462_inst_req_1); -- 
    -- CP-element group 11:  branch  transition  place  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	10 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	16 
    -- CP-element group 11:  members (10) 
      -- CP-element group 11: 	 branch_block_stmt_1465/merge_stmt_1466__entry___PhiReq/$exit
      -- CP-element group 11: 	 branch_block_stmt_1465/merge_stmt_1466__entry___PhiReq/$entry
      -- CP-element group 11: 	 branch_block_stmt_1465/merge_stmt_1466_dead_link/$entry
      -- CP-element group 11: 	 assign_stmt_1461_to_assign_stmt_1464/$exit
      -- CP-element group 11: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1462_update_completed_
      -- CP-element group 11: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1462_Update/$exit
      -- CP-element group 11: 	 assign_stmt_1461_to_assign_stmt_1464/WPIPE_out_e_1462_Update/ack
      -- CP-element group 11: 	 branch_block_stmt_1465/$entry
      -- CP-element group 11: 	 branch_block_stmt_1465/branch_block_stmt_1465__entry__
      -- CP-element group 11: 	 branch_block_stmt_1465/merge_stmt_1466__entry__
      -- 
    ack_4962_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1462_inst_ack_1, ack => handshaking_CP_4832_elements(11)); -- 
    -- CP-element group 12:  transition  input  output  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	16 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	13 
    -- CP-element group 12:  members (6) 
      -- CP-element group 12: 	 branch_block_stmt_1465/assign_stmt_1469/RPIPE_input_d_1468_Sample/ra
      -- CP-element group 12: 	 branch_block_stmt_1465/assign_stmt_1469/RPIPE_input_d_1468_Sample/$exit
      -- CP-element group 12: 	 branch_block_stmt_1465/assign_stmt_1469/RPIPE_input_d_1468_Update/$entry
      -- CP-element group 12: 	 branch_block_stmt_1465/assign_stmt_1469/RPIPE_input_d_1468_sample_completed_
      -- CP-element group 12: 	 branch_block_stmt_1465/assign_stmt_1469/RPIPE_input_d_1468_Update/cr
      -- CP-element group 12: 	 branch_block_stmt_1465/assign_stmt_1469/RPIPE_input_d_1468_update_start_
      -- 
    ra_4985_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1468_inst_ack_0, ack => handshaking_CP_4832_elements(12)); -- 
    cr_4989_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4989_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => handshaking_CP_4832_elements(12), ack => RPIPE_input_d_1468_inst_req_1); -- 
    -- CP-element group 13:  branch  transition  place  input  output  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	12 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	14 
    -- CP-element group 13: 	15 
    -- CP-element group 13:  members (27) 
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/$entry
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/NEQ_u8_u1_1473_inputs/$entry
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/SplitProtocol/Update/$exit
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/$exit
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/$exit
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/$entry
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_dead_link/$entry
      -- CP-element group 13: 	 branch_block_stmt_1465/NEQ_u8_u1_1473_place
      -- CP-element group 13: 	 branch_block_stmt_1465/assign_stmt_1469/$exit
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/SplitProtocol/Sample/$exit
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/SplitProtocol/Sample/rr
      -- CP-element group 13: 	 branch_block_stmt_1465/assign_stmt_1469/RPIPE_input_d_1468_Update/$exit
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/SplitProtocol/$exit
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/SplitProtocol/Sample/ra
      -- CP-element group 13: 	 branch_block_stmt_1465/assign_stmt_1469/RPIPE_input_d_1468_update_completed_
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/SplitProtocol/Update/$entry
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/SplitProtocol/Sample/$entry
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/NEQ_u8_u1_1473_inputs/$exit
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/SplitProtocol/$entry
      -- CP-element group 13: 	 branch_block_stmt_1465/assign_stmt_1469/RPIPE_input_d_1468_Update/ca
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_else_link/$entry
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_if_link/$entry
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/branch_req
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/SplitProtocol/Update/ca
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470_eval_test/NEQ_u8_u1_1473/SplitProtocol/Update/cr
      -- CP-element group 13: 	 branch_block_stmt_1465/assign_stmt_1469__exit__
      -- CP-element group 13: 	 branch_block_stmt_1465/if_stmt_1470__entry__
      -- 
    ca_4990_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1468_inst_ack_1, ack => handshaking_CP_4832_elements(13)); -- 
    branch_req_5017_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_5017_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => handshaking_CP_4832_elements(13), ack => if_stmt_1470_branch_req_0); -- 
    -- CP-element group 14:  transition  place  input  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	13 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	16 
    -- CP-element group 14:  members (5) 
      -- CP-element group 14: 	 branch_block_stmt_1465/loopback_2
      -- CP-element group 14: 	 branch_block_stmt_1465/loopback_2_PhiReq/$exit
      -- CP-element group 14: 	 branch_block_stmt_1465/loopback_2_PhiReq/$entry
      -- CP-element group 14: 	 branch_block_stmt_1465/if_stmt_1470_if_link/if_choice_transition
      -- CP-element group 14: 	 branch_block_stmt_1465/if_stmt_1470_if_link/$exit
      -- 
    if_choice_transition_5022_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1470_branch_ack_1, ack => handshaking_CP_4832_elements(14)); -- 
    -- CP-element group 15:  merge  transition  place  input  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	13 
    -- CP-element group 15: successors 
    -- CP-element group 15:  members (6) 
      -- CP-element group 15: 	 branch_block_stmt_1465/if_stmt_1470_else_link/else_choice_transition
      -- CP-element group 15: 	 branch_block_stmt_1465/if_stmt_1470_else_link/$exit
      -- CP-element group 15: 	 $exit
      -- CP-element group 15: 	 branch_block_stmt_1465/$exit
      -- CP-element group 15: 	 branch_block_stmt_1465/branch_block_stmt_1465__exit__
      -- CP-element group 15: 	 branch_block_stmt_1465/if_stmt_1470__exit__
      -- 
    else_choice_transition_5026_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1470_branch_ack_0, ack => handshaking_CP_4832_elements(15)); -- 
    -- CP-element group 16:  merge  transition  place  output  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	11 
    -- CP-element group 16: 	14 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	12 
    -- CP-element group 16:  members (10) 
      -- CP-element group 16: 	 branch_block_stmt_1465/assign_stmt_1469/RPIPE_input_d_1468_sample_start_
      -- CP-element group 16: 	 branch_block_stmt_1465/merge_stmt_1466_PhiAck/$exit
      -- CP-element group 16: 	 branch_block_stmt_1465/merge_stmt_1466_PhiAck/$entry
      -- CP-element group 16: 	 branch_block_stmt_1465/assign_stmt_1469/RPIPE_input_d_1468_Sample/rr
      -- CP-element group 16: 	 branch_block_stmt_1465/merge_stmt_1466_PhiReqMerge
      -- CP-element group 16: 	 branch_block_stmt_1465/merge_stmt_1466_PhiAck/dummy
      -- CP-element group 16: 	 branch_block_stmt_1465/assign_stmt_1469/RPIPE_input_d_1468_Sample/$entry
      -- CP-element group 16: 	 branch_block_stmt_1465/merge_stmt_1466__exit__
      -- CP-element group 16: 	 branch_block_stmt_1465/assign_stmt_1469__entry__
      -- CP-element group 16: 	 branch_block_stmt_1465/assign_stmt_1469/$entry
      -- 
    rr_4984_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4984_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => handshaking_CP_4832_elements(16), ack => RPIPE_input_d_1468_inst_req_0); -- 
    handshaking_CP_4832_elements(16) <= OrReduce(handshaking_CP_4832_elements(11) & handshaking_CP_4832_elements(14));
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal NEQ_u8_u1_1455_wire : std_logic_vector(0 downto 0);
    signal NEQ_u8_u1_1473_wire : std_logic_vector(0 downto 0);
    signal R_one_1463_wire_constant : std_logic_vector(7 downto 0);
    signal R_one_1472_wire_constant : std_logic_vector(7 downto 0);
    signal R_zero_1445_wire_constant : std_logic_vector(7 downto 0);
    signal R_zero_1454_wire_constant : std_logic_vector(7 downto 0);
    signal R_zero_1460_wire_constant : std_logic_vector(7 downto 0);
    signal temp_0_1451 : std_logic_vector(7 downto 0);
    signal temp_1_1469 : std_logic_vector(7 downto 0);
    -- 
  begin -- 
    R_one_1463_wire_constant <= "00000001";
    R_one_1472_wire_constant <= "00000001";
    R_zero_1445_wire_constant <= "00000000";
    R_zero_1454_wire_constant <= "00000000";
    R_zero_1460_wire_constant <= "00000000";
    if_stmt_1452_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= NEQ_u8_u1_1455_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_1452_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_1452_branch_req_0,
          ack0 => if_stmt_1452_branch_ack_0,
          ack1 => if_stmt_1452_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_1470_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= NEQ_u8_u1_1473_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_1470_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_1470_branch_req_0,
          ack0 => if_stmt_1470_branch_ack_0,
          ack1 => if_stmt_1470_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- binary operator NEQ_u8_u1_1455_inst
    process(temp_0_1451) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntNe_proc(temp_0_1451, R_zero_1454_wire_constant, tmp_var);
      NEQ_u8_u1_1455_wire <= tmp_var; --
    end process;
    -- binary operator NEQ_u8_u1_1473_inst
    process(temp_1_1469) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntNe_proc(temp_1_1469, R_one_1472_wire_constant, tmp_var);
      NEQ_u8_u1_1473_wire <= tmp_var; --
    end process;
    -- shared inport operator group (0) : RPIPE_input_d_1450_inst RPIPE_input_d_1468_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(15 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 1 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 1 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 1 downto 0);
      signal guard_vector : std_logic_vector( 1 downto 0);
      constant outBUFs : IntegerArray(1 downto 0) := (1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(1 downto 0) := (0 => false, 1 => false);
      constant guardBuffering: IntegerArray(1 downto 0)  := (0 => 2, 1 => 2);
      -- 
    begin -- 
      reqL_unguarded(1) <= RPIPE_input_d_1450_inst_req_0;
      reqL_unguarded(0) <= RPIPE_input_d_1468_inst_req_0;
      RPIPE_input_d_1450_inst_ack_0 <= ackL_unguarded(1);
      RPIPE_input_d_1468_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(1) <= RPIPE_input_d_1450_inst_req_1;
      reqR_unguarded(0) <= RPIPE_input_d_1468_inst_req_1;
      RPIPE_input_d_1450_inst_ack_1 <= ackR_unguarded(1);
      RPIPE_input_d_1468_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      temp_0_1451 <= data_out(15 downto 8);
      temp_1_1469 <= data_out(7 downto 0);
      input_d_read_0_gI: SplitGuardInterface generic map(name => "input_d_read_0_gI", nreqs => 2, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      input_d_read_0: InputPortRevised -- 
        generic map ( name => "input_d_read_0", data_width => 8,  num_reqs => 2,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => input_d_pipe_read_req(0),
          oack => input_d_pipe_read_ack(0),
          odata => input_d_pipe_read_data(7 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- shared outport operator group (0) : WPIPE_out_e_1444_inst WPIPE_out_e_1462_inst WPIPE_out_e_1459_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(23 downto 0);
      signal sample_req, sample_ack : BooleanArray( 2 downto 0);
      signal update_req, update_ack : BooleanArray( 2 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 2 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 2 downto 0);
      signal guard_vector : std_logic_vector( 2 downto 0);
      constant inBUFs : IntegerArray(2 downto 0) := (2 => 0, 1 => 0, 0 => 0);
      constant guardFlags : BooleanArray(2 downto 0) := (0 => false, 1 => false, 2 => false);
      constant guardBuffering: IntegerArray(2 downto 0)  := (0 => 2, 1 => 2, 2 => 2);
      -- 
    begin -- 
      sample_req_unguarded(2) <= WPIPE_out_e_1444_inst_req_0;
      sample_req_unguarded(1) <= WPIPE_out_e_1462_inst_req_0;
      sample_req_unguarded(0) <= WPIPE_out_e_1459_inst_req_0;
      WPIPE_out_e_1444_inst_ack_0 <= sample_ack_unguarded(2);
      WPIPE_out_e_1462_inst_ack_0 <= sample_ack_unguarded(1);
      WPIPE_out_e_1459_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(2) <= WPIPE_out_e_1444_inst_req_1;
      update_req_unguarded(1) <= WPIPE_out_e_1462_inst_req_1;
      update_req_unguarded(0) <= WPIPE_out_e_1459_inst_req_1;
      WPIPE_out_e_1444_inst_ack_1 <= update_ack_unguarded(2);
      WPIPE_out_e_1462_inst_ack_1 <= update_ack_unguarded(1);
      WPIPE_out_e_1459_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      data_in <= R_zero_1445_wire_constant & R_one_1463_wire_constant & R_zero_1460_wire_constant;
      out_e_write_0_gI: SplitGuardInterface generic map(name => "out_e_write_0_gI", nreqs => 3, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      out_e_write_0: OutputPortRevised -- 
        generic map ( name => "out_e", data_width => 8, num_reqs => 3, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => out_e_pipe_write_req(0),
          oack => out_e_pipe_write_ack(0),
          odata => out_e_pipe_write_data(7 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- 
  end Block; -- data_path
  -- 
end handshaking_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity mix_column is -- 
  generic (tag_length : integer); 
  port ( -- 
    w : in  std_logic_vector(31 downto 0);
    nw : out  std_logic_vector(31 downto 0);
    two_mult_call_reqs : out  std_logic_vector(0 downto 0);
    two_mult_call_acks : in   std_logic_vector(0 downto 0);
    two_mult_call_data : out  std_logic_vector(7 downto 0);
    two_mult_call_tag  :  out  std_logic_vector(2 downto 0);
    two_mult_return_reqs : out  std_logic_vector(0 downto 0);
    two_mult_return_acks : in   std_logic_vector(0 downto 0);
    two_mult_return_data : in   std_logic_vector(7 downto 0);
    two_mult_return_tag :  in   std_logic_vector(2 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity mix_column;
architecture mix_column_arch of mix_column is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 32)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 32)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal w_buffer :  std_logic_vector(31 downto 0);
  signal w_update_enable: Boolean;
  -- output port buffer signals
  signal nw_buffer :  std_logic_vector(31 downto 0);
  signal nw_update_enable: Boolean;
  signal mix_column_CP_1694_start: Boolean;
  signal mix_column_CP_1694_symbol: Boolean;
  -- volatile/operator module components. 
  component two_mult is -- 
    generic (tag_length : integer); 
    port ( -- 
      num_0 : in  std_logic_vector(7 downto 0);
      op_0 : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal slice_581_inst_ack_0 : boolean;
  signal slice_589_inst_ack_1 : boolean;
  signal slice_581_inst_req_0 : boolean;
  signal call_stmt_597_call_ack_1 : boolean;
  signal call_stmt_597_call_req_1 : boolean;
  signal call_stmt_603_call_ack_0 : boolean;
  signal XOR_u8_u8_645_inst_req_1 : boolean;
  signal XOR_u8_u8_645_inst_ack_1 : boolean;
  signal slice_589_inst_req_1 : boolean;
  signal call_stmt_597_call_req_0 : boolean;
  signal call_stmt_603_call_req_1 : boolean;
  signal call_stmt_603_call_ack_1 : boolean;
  signal slice_593_inst_req_0 : boolean;
  signal slice_581_inst_req_1 : boolean;
  signal call_stmt_597_call_ack_0 : boolean;
  signal slice_581_inst_ack_1 : boolean;
  signal XOR_u8_u8_650_inst_req_1 : boolean;
  signal XOR_u8_u8_650_inst_ack_1 : boolean;
  signal call_stmt_606_call_ack_1 : boolean;
  signal call_stmt_606_call_req_1 : boolean;
  signal slice_589_inst_ack_0 : boolean;
  signal slice_589_inst_req_0 : boolean;
  signal XOR_u8_u8_645_inst_req_0 : boolean;
  signal XOR_u8_u8_645_inst_ack_0 : boolean;
  signal XOR_u8_u8_610_inst_ack_1 : boolean;
  signal XOR_u8_u8_610_inst_req_1 : boolean;
  signal call_stmt_606_call_ack_0 : boolean;
  signal XOR_u8_u8_610_inst_ack_0 : boolean;
  signal call_stmt_606_call_req_0 : boolean;
  signal XOR_u8_u8_610_inst_req_0 : boolean;
  signal call_stmt_603_call_req_0 : boolean;
  signal XOR_u8_u8_615_inst_ack_0 : boolean;
  signal slice_585_inst_ack_1 : boolean;
  signal slice_585_inst_req_1 : boolean;
  signal XOR_u8_u8_650_inst_req_0 : boolean;
  signal XOR_u8_u8_650_inst_ack_0 : boolean;
  signal slice_585_inst_ack_0 : boolean;
  signal slice_585_inst_req_0 : boolean;
  signal slice_593_inst_ack_1 : boolean;
  signal XOR_u8_u8_620_inst_ack_1 : boolean;
  signal slice_593_inst_req_1 : boolean;
  signal XOR_u8_u8_615_inst_req_0 : boolean;
  signal XOR_u8_u8_635_inst_ack_1 : boolean;
  signal slice_593_inst_ack_0 : boolean;
  signal XOR_u8_u8_635_inst_ack_0 : boolean;
  signal XOR_u8_u8_635_inst_req_0 : boolean;
  signal XOR_u8_u8_630_inst_ack_1 : boolean;
  signal XOR_u8_u8_630_inst_req_1 : boolean;
  signal XOR_u8_u8_630_inst_ack_0 : boolean;
  signal XOR_u8_u8_630_inst_req_0 : boolean;
  signal XOR_u8_u8_635_inst_req_1 : boolean;
  signal XOR_u8_u8_620_inst_req_1 : boolean;
  signal XOR_u8_u8_640_inst_ack_1 : boolean;
  signal call_stmt_600_call_ack_1 : boolean;
  signal XOR_u8_u8_620_inst_ack_0 : boolean;
  signal XOR_u8_u8_640_inst_req_1 : boolean;
  signal call_stmt_600_call_req_1 : boolean;
  signal XOR_u8_u8_620_inst_req_0 : boolean;
  signal XOR_u8_u8_640_inst_ack_0 : boolean;
  signal XOR_u8_u8_640_inst_req_0 : boolean;
  signal call_stmt_600_call_ack_0 : boolean;
  signal call_stmt_600_call_req_0 : boolean;
  signal XOR_u8_u8_615_inst_ack_1 : boolean;
  signal XOR_u8_u8_615_inst_req_1 : boolean;
  signal XOR_u8_u8_625_inst_req_1 : boolean;
  signal XOR_u8_u8_625_inst_ack_0 : boolean;
  signal XOR_u8_u8_625_inst_req_0 : boolean;
  signal XOR_u8_u8_625_inst_ack_1 : boolean;
  signal XOR_u8_u8_655_inst_req_0 : boolean;
  signal XOR_u8_u8_655_inst_ack_0 : boolean;
  signal XOR_u8_u8_655_inst_req_1 : boolean;
  signal XOR_u8_u8_655_inst_ack_1 : boolean;
  signal XOR_u8_u8_660_inst_req_0 : boolean;
  signal XOR_u8_u8_660_inst_ack_0 : boolean;
  signal XOR_u8_u8_660_inst_req_1 : boolean;
  signal XOR_u8_u8_660_inst_ack_1 : boolean;
  signal XOR_u8_u8_665_inst_req_0 : boolean;
  signal XOR_u8_u8_665_inst_ack_0 : boolean;
  signal XOR_u8_u8_665_inst_req_1 : boolean;
  signal XOR_u8_u8_665_inst_ack_1 : boolean;
  signal XOR_u8_u8_670_inst_req_0 : boolean;
  signal XOR_u8_u8_670_inst_ack_0 : boolean;
  signal XOR_u8_u8_670_inst_req_1 : boolean;
  signal XOR_u8_u8_670_inst_ack_1 : boolean;
  signal XOR_u8_u8_675_inst_req_0 : boolean;
  signal XOR_u8_u8_675_inst_ack_0 : boolean;
  signal XOR_u8_u8_675_inst_req_1 : boolean;
  signal XOR_u8_u8_675_inst_ack_1 : boolean;
  signal XOR_u8_u8_680_inst_req_0 : boolean;
  signal XOR_u8_u8_680_inst_ack_0 : boolean;
  signal XOR_u8_u8_680_inst_req_1 : boolean;
  signal XOR_u8_u8_680_inst_ack_1 : boolean;
  signal XOR_u8_u8_685_inst_req_0 : boolean;
  signal XOR_u8_u8_685_inst_ack_0 : boolean;
  signal XOR_u8_u8_685_inst_req_1 : boolean;
  signal XOR_u8_u8_685_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_690_inst_req_0 : boolean;
  signal CONCAT_u8_u16_690_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_690_inst_req_1 : boolean;
  signal CONCAT_u8_u16_690_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_695_inst_req_0 : boolean;
  signal CONCAT_u8_u16_695_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_695_inst_req_1 : boolean;
  signal CONCAT_u8_u16_695_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_700_inst_req_0 : boolean;
  signal CONCAT_u16_u32_700_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_700_inst_req_1 : boolean;
  signal CONCAT_u16_u32_700_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "mix_column_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 32) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(31 downto 0) <= w;
  w_buffer <= in_buffer_data_out(31 downto 0);
  in_buffer_data_in(tag_length + 31 downto 32) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 31 downto 32);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  mix_column_CP_1694_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "mix_column_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 32) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(31 downto 0) <= nw_buffer;
  nw <= out_buffer_data_out(31 downto 0);
  out_buffer_data_in(tag_length + 31 downto 32) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 31 downto 32);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= mix_column_CP_1694_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= mix_column_CP_1694_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= mix_column_CP_1694_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  mix_column_CP_1694: Block -- control-path 
    signal mix_column_CP_1694_elements: BooleanArray(73 downto 0);
    -- 
  begin -- 
    mix_column_CP_1694_elements(0) <= mix_column_CP_1694_start;
    mix_column_CP_1694_symbol <= mix_column_CP_1694_elements(73);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	5 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	7 
    -- CP-element group 0: 	8 
    -- CP-element group 0: 	10 
    -- CP-element group 0: 	12 
    -- CP-element group 0: 	14 
    -- CP-element group 0: 	16 
    -- CP-element group 0: 	19 
    -- CP-element group 0: 	22 
    -- CP-element group 0: 	25 
    -- CP-element group 0: 	28 
    -- CP-element group 0: 	31 
    -- CP-element group 0: 	34 
    -- CP-element group 0: 	37 
    -- CP-element group 0: 	40 
    -- CP-element group 0: 	43 
    -- CP-element group 0: 	46 
    -- CP-element group 0: 	49 
    -- CP-element group 0: 	52 
    -- CP-element group 0: 	55 
    -- CP-element group 0: 	58 
    -- CP-element group 0: 	61 
    -- CP-element group 0: 	64 
    -- CP-element group 0: 	67 
    -- CP-element group 0: 	70 
    -- CP-element group 0: 	73 
    -- CP-element group 0:  members (95) 
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_597_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_620_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_581_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_593_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_581_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_581_Sample/rr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_597_Update/ccr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_593_sample_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_600_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_593_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_615_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_645_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_589_Update/cr
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_606_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_603_Update/ccr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_593_Sample/rr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_581_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_581_sample_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_610_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_650_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_597_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_581_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_650_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_603_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_589_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_606_Update/ccr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_615_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_645_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_589_Sample/rr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_606_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_589_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_610_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_650_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_610_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_589_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_589_sample_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_585_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_585_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_585_sample_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_585_Sample/rr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_593_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_585_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_593_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_625_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_635_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_635_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_630_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_630_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_630_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_635_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_603_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_620_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_640_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_600_Update/ccr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_640_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_600_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_620_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_640_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_615_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_645_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/slice_585_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_625_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_625_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_655_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_655_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_655_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_660_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_660_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_660_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_665_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_665_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_665_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_670_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_670_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_670_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_675_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_675_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_675_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_680_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_680_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_680_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_685_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_685_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_685_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_690_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_690_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_690_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_695_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_695_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_695_Update/cr
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u16_u32_700_update_start_
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u16_u32_700_Update/$entry
      -- CP-element group 0: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u16_u32_700_Update/cr
      -- 
    rr_1707_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1707_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => slice_581_inst_req_0); -- 
    cr_1712_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1712_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => slice_581_inst_req_1); -- 
    rr_1721_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1721_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => slice_585_inst_req_0); -- 
    cr_1726_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1726_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => slice_585_inst_req_1); -- 
    rr_1735_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1735_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => slice_589_inst_req_0); -- 
    cr_1740_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1740_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => slice_589_inst_req_1); -- 
    rr_1749_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1749_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => slice_593_inst_req_0); -- 
    cr_1754_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1754_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => slice_593_inst_req_1); -- 
    ccr_1768_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1768_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => call_stmt_597_call_req_1); -- 
    ccr_1782_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1782_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => call_stmt_600_call_req_1); -- 
    ccr_1796_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1796_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => call_stmt_603_call_req_1); -- 
    ccr_1810_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1810_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => call_stmt_606_call_req_1); -- 
    cr_1824_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1824_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_610_inst_req_1); -- 
    cr_1838_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1838_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_615_inst_req_1); -- 
    cr_1852_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1852_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_620_inst_req_1); -- 
    cr_1866_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1866_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_625_inst_req_1); -- 
    cr_1880_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1880_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_630_inst_req_1); -- 
    cr_1894_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1894_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_635_inst_req_1); -- 
    cr_1908_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1908_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_640_inst_req_1); -- 
    cr_1922_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1922_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_645_inst_req_1); -- 
    cr_1936_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1936_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_650_inst_req_1); -- 
    cr_1950_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1950_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_655_inst_req_1); -- 
    cr_1964_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1964_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_660_inst_req_1); -- 
    cr_1978_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1978_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_665_inst_req_1); -- 
    cr_1992_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1992_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_670_inst_req_1); -- 
    cr_2006_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2006_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_675_inst_req_1); -- 
    cr_2020_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2020_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_680_inst_req_1); -- 
    cr_2034_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2034_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => XOR_u8_u8_685_inst_req_1); -- 
    cr_2048_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2048_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => CONCAT_u8_u16_690_inst_req_1); -- 
    cr_2062_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2062_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => CONCAT_u8_u16_695_inst_req_1); -- 
    cr_2076_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2076_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(0), ack => CONCAT_u16_u32_700_inst_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_582_to_assign_stmt_701/slice_581_Sample/ra
      -- CP-element group 1: 	 assign_stmt_582_to_assign_stmt_701/slice_581_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_582_to_assign_stmt_701/slice_581_sample_completed_
      -- 
    ra_1708_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_581_inst_ack_0, ack => mix_column_CP_1694_elements(1)); -- 
    -- CP-element group 2:  fork  transition  input  output  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	9 
    -- CP-element group 2: 	32 
    -- CP-element group 2: 	44 
    -- CP-element group 2: 	53 
    -- CP-element group 2:  members (6) 
      -- CP-element group 2: 	 assign_stmt_582_to_assign_stmt_701/slice_581_update_completed_
      -- CP-element group 2: 	 assign_stmt_582_to_assign_stmt_701/slice_581_Update/$exit
      -- CP-element group 2: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_597_Sample/$entry
      -- CP-element group 2: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_597_Sample/crr
      -- CP-element group 2: 	 assign_stmt_582_to_assign_stmt_701/slice_581_Update/ca
      -- CP-element group 2: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_597_sample_start_
      -- 
    ca_1713_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_581_inst_ack_1, ack => mix_column_CP_1694_elements(2)); -- 
    crr_1763_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1763_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(2), ack => call_stmt_597_call_req_0); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 assign_stmt_582_to_assign_stmt_701/slice_585_sample_completed_
      -- CP-element group 3: 	 assign_stmt_582_to_assign_stmt_701/slice_585_Sample/ra
      -- CP-element group 3: 	 assign_stmt_582_to_assign_stmt_701/slice_585_Sample/$exit
      -- 
    ra_1722_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_585_inst_ack_0, ack => mix_column_CP_1694_elements(3)); -- 
    -- CP-element group 4:  fork  transition  input  output  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	11 
    -- CP-element group 4: 	17 
    -- CP-element group 4: 	44 
    -- CP-element group 4: 	56 
    -- CP-element group 4:  members (6) 
      -- CP-element group 4: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_600_sample_start_
      -- CP-element group 4: 	 assign_stmt_582_to_assign_stmt_701/slice_585_Update/ca
      -- CP-element group 4: 	 assign_stmt_582_to_assign_stmt_701/slice_585_Update/$exit
      -- CP-element group 4: 	 assign_stmt_582_to_assign_stmt_701/slice_585_update_completed_
      -- CP-element group 4: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_600_Sample/crr
      -- CP-element group 4: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_600_Sample/$entry
      -- 
    ca_1727_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_585_inst_ack_1, ack => mix_column_CP_1694_elements(4)); -- 
    crr_1777_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1777_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(4), ack => call_stmt_600_call_req_0); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	0 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_582_to_assign_stmt_701/slice_589_Sample/ra
      -- CP-element group 5: 	 assign_stmt_582_to_assign_stmt_701/slice_589_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_582_to_assign_stmt_701/slice_589_sample_completed_
      -- 
    ra_1736_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_589_inst_ack_0, ack => mix_column_CP_1694_elements(5)); -- 
    -- CP-element group 6:  fork  transition  input  output  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	13 
    -- CP-element group 6: 	20 
    -- CP-element group 6: 	29 
    -- CP-element group 6: 	56 
    -- CP-element group 6:  members (6) 
      -- CP-element group 6: 	 assign_stmt_582_to_assign_stmt_701/slice_589_Update/ca
      -- CP-element group 6: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_603_Sample/$entry
      -- CP-element group 6: 	 assign_stmt_582_to_assign_stmt_701/slice_589_Update/$exit
      -- CP-element group 6: 	 assign_stmt_582_to_assign_stmt_701/slice_589_update_completed_
      -- CP-element group 6: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_603_Sample/crr
      -- CP-element group 6: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_603_sample_start_
      -- 
    ca_1741_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_589_inst_ack_1, ack => mix_column_CP_1694_elements(6)); -- 
    crr_1791_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1791_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(6), ack => call_stmt_603_call_req_0); -- 
    -- CP-element group 7:  transition  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	0 
    -- CP-element group 7: successors 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 assign_stmt_582_to_assign_stmt_701/slice_593_Sample/$exit
      -- CP-element group 7: 	 assign_stmt_582_to_assign_stmt_701/slice_593_sample_completed_
      -- CP-element group 7: 	 assign_stmt_582_to_assign_stmt_701/slice_593_Sample/ra
      -- 
    ra_1750_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_593_inst_ack_0, ack => mix_column_CP_1694_elements(7)); -- 
    -- CP-element group 8:  fork  transition  input  output  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	0 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	15 
    -- CP-element group 8: 	20 
    -- CP-element group 8: 	32 
    -- CP-element group 8: 	41 
    -- CP-element group 8:  members (6) 
      -- CP-element group 8: 	 assign_stmt_582_to_assign_stmt_701/slice_593_update_completed_
      -- CP-element group 8: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_606_sample_start_
      -- CP-element group 8: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_606_Sample/crr
      -- CP-element group 8: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_606_Sample/$entry
      -- CP-element group 8: 	 assign_stmt_582_to_assign_stmt_701/slice_593_Update/ca
      -- CP-element group 8: 	 assign_stmt_582_to_assign_stmt_701/slice_593_Update/$exit
      -- 
    ca_1755_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_593_inst_ack_1, ack => mix_column_CP_1694_elements(8)); -- 
    crr_1805_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1805_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(8), ack => call_stmt_606_call_req_0); -- 
    -- CP-element group 9:  transition  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	2 
    -- CP-element group 9: successors 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_597_Sample/$exit
      -- CP-element group 9: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_597_Sample/cra
      -- CP-element group 9: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_597_sample_completed_
      -- 
    cra_1764_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_597_call_ack_0, ack => mix_column_CP_1694_elements(9)); -- 
    -- CP-element group 10:  fork  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	0 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	23 
    -- CP-element group 10: 	53 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_597_Update/cca
      -- CP-element group 10: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_597_update_completed_
      -- CP-element group 10: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_597_Update/$exit
      -- 
    cca_1769_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_597_call_ack_1, ack => mix_column_CP_1694_elements(10)); -- 
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	4 
    -- CP-element group 11: successors 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_600_sample_completed_
      -- CP-element group 11: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_600_Sample/cra
      -- CP-element group 11: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_600_Sample/$exit
      -- 
    cra_1778_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_600_call_ack_0, ack => mix_column_CP_1694_elements(11)); -- 
    -- CP-element group 12:  fork  transition  input  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	0 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	17 
    -- CP-element group 12: 	35 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_600_update_completed_
      -- CP-element group 12: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_600_Update/cca
      -- CP-element group 12: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_600_Update/$exit
      -- 
    cca_1783_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_600_call_ack_1, ack => mix_column_CP_1694_elements(12)); -- 
    -- CP-element group 13:  transition  input  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	6 
    -- CP-element group 13: successors 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_603_Sample/cra
      -- CP-element group 13: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_603_Sample/$exit
      -- CP-element group 13: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_603_sample_completed_
      -- 
    cra_1792_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_603_call_ack_0, ack => mix_column_CP_1694_elements(13)); -- 
    -- CP-element group 14:  fork  transition  input  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	0 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	29 
    -- CP-element group 14: 	47 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_603_update_completed_
      -- CP-element group 14: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_603_Update/cca
      -- CP-element group 14: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_603_Update/$exit
      -- 
    cca_1797_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_603_call_ack_1, ack => mix_column_CP_1694_elements(14)); -- 
    -- CP-element group 15:  transition  input  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	8 
    -- CP-element group 15: successors 
    -- CP-element group 15:  members (3) 
      -- CP-element group 15: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_606_sample_completed_
      -- CP-element group 15: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_606_Sample/cra
      -- CP-element group 15: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_606_Sample/$exit
      -- 
    cra_1806_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_606_call_ack_0, ack => mix_column_CP_1694_elements(15)); -- 
    -- CP-element group 16:  fork  transition  input  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	0 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	41 
    -- CP-element group 16: 	59 
    -- CP-element group 16:  members (3) 
      -- CP-element group 16: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_606_update_completed_
      -- CP-element group 16: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_606_Update/cca
      -- CP-element group 16: 	 assign_stmt_582_to_assign_stmt_701/call_stmt_606_Update/$exit
      -- 
    cca_1811_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_606_call_ack_1, ack => mix_column_CP_1694_elements(16)); -- 
    -- CP-element group 17:  join  transition  output  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	4 
    -- CP-element group 17: 	12 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	18 
    -- CP-element group 17:  members (3) 
      -- CP-element group 17: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_610_sample_start_
      -- CP-element group 17: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_610_Sample/rr
      -- CP-element group 17: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_610_Sample/$entry
      -- 
    rr_1819_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1819_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(17), ack => XOR_u8_u8_610_inst_req_0); -- 
    mix_column_cp_element_group_17: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_17"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(4) & mix_column_CP_1694_elements(12);
      gj_mix_column_cp_element_group_17 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(17), clk => clk, reset => reset); --
    end block;
    -- CP-element group 18:  transition  input  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	17 
    -- CP-element group 18: successors 
    -- CP-element group 18:  members (3) 
      -- CP-element group 18: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_610_sample_completed_
      -- CP-element group 18: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_610_Sample/ra
      -- CP-element group 18: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_610_Sample/$exit
      -- 
    ra_1820_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_610_inst_ack_0, ack => mix_column_CP_1694_elements(18)); -- 
    -- CP-element group 19:  transition  input  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	0 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	23 
    -- CP-element group 19:  members (3) 
      -- CP-element group 19: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_610_Update/ca
      -- CP-element group 19: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_610_Update/$exit
      -- CP-element group 19: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_610_update_completed_
      -- 
    ca_1825_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_610_inst_ack_1, ack => mix_column_CP_1694_elements(19)); -- 
    -- CP-element group 20:  join  transition  output  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	6 
    -- CP-element group 20: 	8 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	21 
    -- CP-element group 20:  members (3) 
      -- CP-element group 20: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_615_Sample/$entry
      -- CP-element group 20: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_615_sample_start_
      -- CP-element group 20: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_615_Sample/rr
      -- 
    rr_1833_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1833_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(20), ack => XOR_u8_u8_615_inst_req_0); -- 
    mix_column_cp_element_group_20: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_20"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(6) & mix_column_CP_1694_elements(8);
      gj_mix_column_cp_element_group_20 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(20), clk => clk, reset => reset); --
    end block;
    -- CP-element group 21:  transition  input  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	20 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (3) 
      -- CP-element group 21: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_615_Sample/$exit
      -- CP-element group 21: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_615_sample_completed_
      -- CP-element group 21: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_615_Sample/ra
      -- 
    ra_1834_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_615_inst_ack_0, ack => mix_column_CP_1694_elements(21)); -- 
    -- CP-element group 22:  transition  input  bypass 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	0 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	26 
    -- CP-element group 22:  members (3) 
      -- CP-element group 22: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_615_update_completed_
      -- CP-element group 22: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_615_Update/ca
      -- CP-element group 22: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_615_Update/$exit
      -- 
    ca_1839_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 22_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_615_inst_ack_1, ack => mix_column_CP_1694_elements(22)); -- 
    -- CP-element group 23:  join  transition  output  bypass 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	10 
    -- CP-element group 23: 	19 
    -- CP-element group 23: successors 
    -- CP-element group 23: 	24 
    -- CP-element group 23:  members (3) 
      -- CP-element group 23: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_620_Sample/rr
      -- CP-element group 23: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_620_Sample/$entry
      -- CP-element group 23: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_620_sample_start_
      -- 
    rr_1847_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1847_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(23), ack => XOR_u8_u8_620_inst_req_0); -- 
    mix_column_cp_element_group_23: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_23"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(10) & mix_column_CP_1694_elements(19);
      gj_mix_column_cp_element_group_23 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(23), clk => clk, reset => reset); --
    end block;
    -- CP-element group 24:  transition  input  bypass 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	23 
    -- CP-element group 24: successors 
    -- CP-element group 24:  members (3) 
      -- CP-element group 24: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_620_Sample/ra
      -- CP-element group 24: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_620_Sample/$exit
      -- CP-element group 24: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_620_sample_completed_
      -- 
    ra_1848_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_620_inst_ack_0, ack => mix_column_CP_1694_elements(24)); -- 
    -- CP-element group 25:  transition  input  bypass 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	0 
    -- CP-element group 25: successors 
    -- CP-element group 25: 	26 
    -- CP-element group 25:  members (3) 
      -- CP-element group 25: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_620_Update/ca
      -- CP-element group 25: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_620_Update/$exit
      -- CP-element group 25: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_620_update_completed_
      -- 
    ca_1853_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_620_inst_ack_1, ack => mix_column_CP_1694_elements(25)); -- 
    -- CP-element group 26:  join  transition  output  bypass 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	22 
    -- CP-element group 26: 	25 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	27 
    -- CP-element group 26:  members (3) 
      -- CP-element group 26: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_625_sample_start_
      -- CP-element group 26: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_625_Sample/rr
      -- CP-element group 26: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_625_Sample/$entry
      -- 
    rr_1861_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1861_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(26), ack => XOR_u8_u8_625_inst_req_0); -- 
    mix_column_cp_element_group_26: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_26"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(22) & mix_column_CP_1694_elements(25);
      gj_mix_column_cp_element_group_26 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(26), clk => clk, reset => reset); --
    end block;
    -- CP-element group 27:  transition  input  bypass 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	26 
    -- CP-element group 27: successors 
    -- CP-element group 27:  members (3) 
      -- CP-element group 27: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_625_sample_completed_
      -- CP-element group 27: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_625_Sample/ra
      -- CP-element group 27: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_625_Sample/$exit
      -- 
    ra_1862_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 27_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_625_inst_ack_0, ack => mix_column_CP_1694_elements(27)); -- 
    -- CP-element group 28:  transition  input  bypass 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	0 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	65 
    -- CP-element group 28:  members (3) 
      -- CP-element group 28: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_625_Update/$exit
      -- CP-element group 28: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_625_update_completed_
      -- CP-element group 28: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_625_Update/ca
      -- 
    ca_1867_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 28_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_625_inst_ack_1, ack => mix_column_CP_1694_elements(28)); -- 
    -- CP-element group 29:  join  transition  output  bypass 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	6 
    -- CP-element group 29: 	14 
    -- CP-element group 29: successors 
    -- CP-element group 29: 	30 
    -- CP-element group 29:  members (3) 
      -- CP-element group 29: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_630_Sample/rr
      -- CP-element group 29: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_630_Sample/$entry
      -- CP-element group 29: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_630_sample_start_
      -- 
    rr_1875_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1875_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(29), ack => XOR_u8_u8_630_inst_req_0); -- 
    mix_column_cp_element_group_29: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_29"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(6) & mix_column_CP_1694_elements(14);
      gj_mix_column_cp_element_group_29 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(29), clk => clk, reset => reset); --
    end block;
    -- CP-element group 30:  transition  input  bypass 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	29 
    -- CP-element group 30: successors 
    -- CP-element group 30:  members (3) 
      -- CP-element group 30: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_630_Sample/ra
      -- CP-element group 30: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_630_Sample/$exit
      -- CP-element group 30: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_630_sample_completed_
      -- 
    ra_1876_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 30_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_630_inst_ack_0, ack => mix_column_CP_1694_elements(30)); -- 
    -- CP-element group 31:  transition  input  bypass 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	0 
    -- CP-element group 31: successors 
    -- CP-element group 31: 	35 
    -- CP-element group 31:  members (3) 
      -- CP-element group 31: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_630_Update/ca
      -- CP-element group 31: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_630_Update/$exit
      -- CP-element group 31: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_630_update_completed_
      -- 
    ca_1881_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 31_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_630_inst_ack_1, ack => mix_column_CP_1694_elements(31)); -- 
    -- CP-element group 32:  join  transition  output  bypass 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	2 
    -- CP-element group 32: 	8 
    -- CP-element group 32: successors 
    -- CP-element group 32: 	33 
    -- CP-element group 32:  members (3) 
      -- CP-element group 32: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_635_Sample/rr
      -- CP-element group 32: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_635_Sample/$entry
      -- CP-element group 32: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_635_sample_start_
      -- 
    rr_1889_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1889_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(32), ack => XOR_u8_u8_635_inst_req_0); -- 
    mix_column_cp_element_group_32: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_32"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(2) & mix_column_CP_1694_elements(8);
      gj_mix_column_cp_element_group_32 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(32), clk => clk, reset => reset); --
    end block;
    -- CP-element group 33:  transition  input  bypass 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	32 
    -- CP-element group 33: successors 
    -- CP-element group 33:  members (3) 
      -- CP-element group 33: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_635_Sample/ra
      -- CP-element group 33: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_635_Sample/$exit
      -- CP-element group 33: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_635_sample_completed_
      -- 
    ra_1890_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 33_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_635_inst_ack_0, ack => mix_column_CP_1694_elements(33)); -- 
    -- CP-element group 34:  transition  input  bypass 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	0 
    -- CP-element group 34: successors 
    -- CP-element group 34: 	38 
    -- CP-element group 34:  members (3) 
      -- CP-element group 34: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_635_Update/ca
      -- CP-element group 34: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_635_Update/$exit
      -- CP-element group 34: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_635_update_completed_
      -- 
    ca_1895_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_635_inst_ack_1, ack => mix_column_CP_1694_elements(34)); -- 
    -- CP-element group 35:  join  transition  output  bypass 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	12 
    -- CP-element group 35: 	31 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	36 
    -- CP-element group 35:  members (3) 
      -- CP-element group 35: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_640_Sample/rr
      -- CP-element group 35: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_640_Sample/$entry
      -- CP-element group 35: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_640_sample_start_
      -- 
    rr_1903_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1903_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(35), ack => XOR_u8_u8_640_inst_req_0); -- 
    mix_column_cp_element_group_35: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_35"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(12) & mix_column_CP_1694_elements(31);
      gj_mix_column_cp_element_group_35 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(35), clk => clk, reset => reset); --
    end block;
    -- CP-element group 36:  transition  input  bypass 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	35 
    -- CP-element group 36: successors 
    -- CP-element group 36:  members (3) 
      -- CP-element group 36: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_640_Sample/ra
      -- CP-element group 36: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_640_Sample/$exit
      -- CP-element group 36: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_640_sample_completed_
      -- 
    ra_1904_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_640_inst_ack_0, ack => mix_column_CP_1694_elements(36)); -- 
    -- CP-element group 37:  transition  input  bypass 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	0 
    -- CP-element group 37: successors 
    -- CP-element group 37: 	38 
    -- CP-element group 37:  members (3) 
      -- CP-element group 37: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_640_Update/ca
      -- CP-element group 37: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_640_Update/$exit
      -- CP-element group 37: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_640_update_completed_
      -- 
    ca_1909_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_640_inst_ack_1, ack => mix_column_CP_1694_elements(37)); -- 
    -- CP-element group 38:  join  transition  output  bypass 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	34 
    -- CP-element group 38: 	37 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	39 
    -- CP-element group 38:  members (3) 
      -- CP-element group 38: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_645_Sample/rr
      -- CP-element group 38: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_645_Sample/$entry
      -- CP-element group 38: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_645_sample_start_
      -- 
    rr_1917_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1917_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(38), ack => XOR_u8_u8_645_inst_req_0); -- 
    mix_column_cp_element_group_38: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_38"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(34) & mix_column_CP_1694_elements(37);
      gj_mix_column_cp_element_group_38 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(38), clk => clk, reset => reset); --
    end block;
    -- CP-element group 39:  transition  input  bypass 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	38 
    -- CP-element group 39: successors 
    -- CP-element group 39:  members (3) 
      -- CP-element group 39: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_645_Sample/ra
      -- CP-element group 39: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_645_Sample/$exit
      -- CP-element group 39: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_645_sample_completed_
      -- 
    ra_1918_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 39_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_645_inst_ack_0, ack => mix_column_CP_1694_elements(39)); -- 
    -- CP-element group 40:  transition  input  bypass 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	0 
    -- CP-element group 40: successors 
    -- CP-element group 40: 	65 
    -- CP-element group 40:  members (3) 
      -- CP-element group 40: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_645_Update/ca
      -- CP-element group 40: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_645_update_completed_
      -- CP-element group 40: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_645_Update/$exit
      -- 
    ca_1923_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 40_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_645_inst_ack_1, ack => mix_column_CP_1694_elements(40)); -- 
    -- CP-element group 41:  join  transition  output  bypass 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	8 
    -- CP-element group 41: 	16 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	42 
    -- CP-element group 41:  members (3) 
      -- CP-element group 41: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_650_Sample/$entry
      -- CP-element group 41: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_650_sample_start_
      -- CP-element group 41: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_650_Sample/rr
      -- 
    rr_1931_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1931_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(41), ack => XOR_u8_u8_650_inst_req_0); -- 
    mix_column_cp_element_group_41: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_41"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(8) & mix_column_CP_1694_elements(16);
      gj_mix_column_cp_element_group_41 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(41), clk => clk, reset => reset); --
    end block;
    -- CP-element group 42:  transition  input  bypass 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	41 
    -- CP-element group 42: successors 
    -- CP-element group 42:  members (3) 
      -- CP-element group 42: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_650_Sample/$exit
      -- CP-element group 42: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_650_sample_completed_
      -- CP-element group 42: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_650_Sample/ra
      -- 
    ra_1932_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 42_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_650_inst_ack_0, ack => mix_column_CP_1694_elements(42)); -- 
    -- CP-element group 43:  transition  input  bypass 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	0 
    -- CP-element group 43: successors 
    -- CP-element group 43: 	47 
    -- CP-element group 43:  members (3) 
      -- CP-element group 43: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_650_Update/ca
      -- CP-element group 43: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_650_Update/$exit
      -- CP-element group 43: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_650_update_completed_
      -- 
    ca_1937_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 43_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_650_inst_ack_1, ack => mix_column_CP_1694_elements(43)); -- 
    -- CP-element group 44:  join  transition  output  bypass 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	2 
    -- CP-element group 44: 	4 
    -- CP-element group 44: successors 
    -- CP-element group 44: 	45 
    -- CP-element group 44:  members (3) 
      -- CP-element group 44: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_655_sample_start_
      -- CP-element group 44: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_655_Sample/$entry
      -- CP-element group 44: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_655_Sample/rr
      -- 
    rr_1945_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1945_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(44), ack => XOR_u8_u8_655_inst_req_0); -- 
    mix_column_cp_element_group_44: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_44"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(2) & mix_column_CP_1694_elements(4);
      gj_mix_column_cp_element_group_44 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(44), clk => clk, reset => reset); --
    end block;
    -- CP-element group 45:  transition  input  bypass 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	44 
    -- CP-element group 45: successors 
    -- CP-element group 45:  members (3) 
      -- CP-element group 45: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_655_sample_completed_
      -- CP-element group 45: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_655_Sample/$exit
      -- CP-element group 45: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_655_Sample/ra
      -- 
    ra_1946_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 45_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_655_inst_ack_0, ack => mix_column_CP_1694_elements(45)); -- 
    -- CP-element group 46:  transition  input  bypass 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	0 
    -- CP-element group 46: successors 
    -- CP-element group 46: 	50 
    -- CP-element group 46:  members (3) 
      -- CP-element group 46: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_655_update_completed_
      -- CP-element group 46: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_655_Update/$exit
      -- CP-element group 46: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_655_Update/ca
      -- 
    ca_1951_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 46_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_655_inst_ack_1, ack => mix_column_CP_1694_elements(46)); -- 
    -- CP-element group 47:  join  transition  output  bypass 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	14 
    -- CP-element group 47: 	43 
    -- CP-element group 47: successors 
    -- CP-element group 47: 	48 
    -- CP-element group 47:  members (3) 
      -- CP-element group 47: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_660_sample_start_
      -- CP-element group 47: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_660_Sample/$entry
      -- CP-element group 47: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_660_Sample/rr
      -- 
    rr_1959_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1959_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(47), ack => XOR_u8_u8_660_inst_req_0); -- 
    mix_column_cp_element_group_47: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_47"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(14) & mix_column_CP_1694_elements(43);
      gj_mix_column_cp_element_group_47 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(47), clk => clk, reset => reset); --
    end block;
    -- CP-element group 48:  transition  input  bypass 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	47 
    -- CP-element group 48: successors 
    -- CP-element group 48:  members (3) 
      -- CP-element group 48: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_660_sample_completed_
      -- CP-element group 48: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_660_Sample/$exit
      -- CP-element group 48: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_660_Sample/ra
      -- 
    ra_1960_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 48_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_660_inst_ack_0, ack => mix_column_CP_1694_elements(48)); -- 
    -- CP-element group 49:  transition  input  bypass 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: 	0 
    -- CP-element group 49: successors 
    -- CP-element group 49: 	50 
    -- CP-element group 49:  members (3) 
      -- CP-element group 49: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_660_update_completed_
      -- CP-element group 49: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_660_Update/$exit
      -- CP-element group 49: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_660_Update/ca
      -- 
    ca_1965_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 49_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_660_inst_ack_1, ack => mix_column_CP_1694_elements(49)); -- 
    -- CP-element group 50:  join  transition  output  bypass 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	46 
    -- CP-element group 50: 	49 
    -- CP-element group 50: successors 
    -- CP-element group 50: 	51 
    -- CP-element group 50:  members (3) 
      -- CP-element group 50: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_665_sample_start_
      -- CP-element group 50: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_665_Sample/$entry
      -- CP-element group 50: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_665_Sample/rr
      -- 
    rr_1973_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1973_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(50), ack => XOR_u8_u8_665_inst_req_0); -- 
    mix_column_cp_element_group_50: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_50"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(46) & mix_column_CP_1694_elements(49);
      gj_mix_column_cp_element_group_50 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(50), clk => clk, reset => reset); --
    end block;
    -- CP-element group 51:  transition  input  bypass 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	50 
    -- CP-element group 51: successors 
    -- CP-element group 51:  members (3) 
      -- CP-element group 51: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_665_sample_completed_
      -- CP-element group 51: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_665_Sample/$exit
      -- CP-element group 51: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_665_Sample/ra
      -- 
    ra_1974_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 51_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_665_inst_ack_0, ack => mix_column_CP_1694_elements(51)); -- 
    -- CP-element group 52:  transition  input  bypass 
    -- CP-element group 52: predecessors 
    -- CP-element group 52: 	0 
    -- CP-element group 52: successors 
    -- CP-element group 52: 	68 
    -- CP-element group 52:  members (3) 
      -- CP-element group 52: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_665_update_completed_
      -- CP-element group 52: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_665_Update/$exit
      -- CP-element group 52: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_665_Update/ca
      -- 
    ca_1979_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 52_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_665_inst_ack_1, ack => mix_column_CP_1694_elements(52)); -- 
    -- CP-element group 53:  join  transition  output  bypass 
    -- CP-element group 53: predecessors 
    -- CP-element group 53: 	2 
    -- CP-element group 53: 	10 
    -- CP-element group 53: successors 
    -- CP-element group 53: 	54 
    -- CP-element group 53:  members (3) 
      -- CP-element group 53: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_670_sample_start_
      -- CP-element group 53: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_670_Sample/$entry
      -- CP-element group 53: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_670_Sample/rr
      -- 
    rr_1987_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1987_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(53), ack => XOR_u8_u8_670_inst_req_0); -- 
    mix_column_cp_element_group_53: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_53"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(2) & mix_column_CP_1694_elements(10);
      gj_mix_column_cp_element_group_53 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(53), clk => clk, reset => reset); --
    end block;
    -- CP-element group 54:  transition  input  bypass 
    -- CP-element group 54: predecessors 
    -- CP-element group 54: 	53 
    -- CP-element group 54: successors 
    -- CP-element group 54:  members (3) 
      -- CP-element group 54: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_670_sample_completed_
      -- CP-element group 54: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_670_Sample/$exit
      -- CP-element group 54: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_670_Sample/ra
      -- 
    ra_1988_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 54_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_670_inst_ack_0, ack => mix_column_CP_1694_elements(54)); -- 
    -- CP-element group 55:  transition  input  bypass 
    -- CP-element group 55: predecessors 
    -- CP-element group 55: 	0 
    -- CP-element group 55: successors 
    -- CP-element group 55: 	59 
    -- CP-element group 55:  members (3) 
      -- CP-element group 55: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_670_update_completed_
      -- CP-element group 55: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_670_Update/$exit
      -- CP-element group 55: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_670_Update/ca
      -- 
    ca_1993_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 55_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_670_inst_ack_1, ack => mix_column_CP_1694_elements(55)); -- 
    -- CP-element group 56:  join  transition  output  bypass 
    -- CP-element group 56: predecessors 
    -- CP-element group 56: 	4 
    -- CP-element group 56: 	6 
    -- CP-element group 56: successors 
    -- CP-element group 56: 	57 
    -- CP-element group 56:  members (3) 
      -- CP-element group 56: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_675_sample_start_
      -- CP-element group 56: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_675_Sample/$entry
      -- CP-element group 56: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_675_Sample/rr
      -- 
    rr_2001_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2001_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(56), ack => XOR_u8_u8_675_inst_req_0); -- 
    mix_column_cp_element_group_56: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_56"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(4) & mix_column_CP_1694_elements(6);
      gj_mix_column_cp_element_group_56 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(56), clk => clk, reset => reset); --
    end block;
    -- CP-element group 57:  transition  input  bypass 
    -- CP-element group 57: predecessors 
    -- CP-element group 57: 	56 
    -- CP-element group 57: successors 
    -- CP-element group 57:  members (3) 
      -- CP-element group 57: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_675_sample_completed_
      -- CP-element group 57: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_675_Sample/$exit
      -- CP-element group 57: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_675_Sample/ra
      -- 
    ra_2002_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 57_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_675_inst_ack_0, ack => mix_column_CP_1694_elements(57)); -- 
    -- CP-element group 58:  transition  input  bypass 
    -- CP-element group 58: predecessors 
    -- CP-element group 58: 	0 
    -- CP-element group 58: successors 
    -- CP-element group 58: 	62 
    -- CP-element group 58:  members (3) 
      -- CP-element group 58: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_675_update_completed_
      -- CP-element group 58: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_675_Update/$exit
      -- CP-element group 58: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_675_Update/ca
      -- 
    ca_2007_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 58_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_675_inst_ack_1, ack => mix_column_CP_1694_elements(58)); -- 
    -- CP-element group 59:  join  transition  output  bypass 
    -- CP-element group 59: predecessors 
    -- CP-element group 59: 	16 
    -- CP-element group 59: 	55 
    -- CP-element group 59: successors 
    -- CP-element group 59: 	60 
    -- CP-element group 59:  members (3) 
      -- CP-element group 59: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_680_sample_start_
      -- CP-element group 59: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_680_Sample/$entry
      -- CP-element group 59: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_680_Sample/rr
      -- 
    rr_2015_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2015_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(59), ack => XOR_u8_u8_680_inst_req_0); -- 
    mix_column_cp_element_group_59: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_59"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(16) & mix_column_CP_1694_elements(55);
      gj_mix_column_cp_element_group_59 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(59), clk => clk, reset => reset); --
    end block;
    -- CP-element group 60:  transition  input  bypass 
    -- CP-element group 60: predecessors 
    -- CP-element group 60: 	59 
    -- CP-element group 60: successors 
    -- CP-element group 60:  members (3) 
      -- CP-element group 60: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_680_sample_completed_
      -- CP-element group 60: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_680_Sample/$exit
      -- CP-element group 60: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_680_Sample/ra
      -- 
    ra_2016_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 60_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_680_inst_ack_0, ack => mix_column_CP_1694_elements(60)); -- 
    -- CP-element group 61:  transition  input  bypass 
    -- CP-element group 61: predecessors 
    -- CP-element group 61: 	0 
    -- CP-element group 61: successors 
    -- CP-element group 61: 	62 
    -- CP-element group 61:  members (3) 
      -- CP-element group 61: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_680_update_completed_
      -- CP-element group 61: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_680_Update/$exit
      -- CP-element group 61: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_680_Update/ca
      -- 
    ca_2021_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 61_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_680_inst_ack_1, ack => mix_column_CP_1694_elements(61)); -- 
    -- CP-element group 62:  join  transition  output  bypass 
    -- CP-element group 62: predecessors 
    -- CP-element group 62: 	58 
    -- CP-element group 62: 	61 
    -- CP-element group 62: successors 
    -- CP-element group 62: 	63 
    -- CP-element group 62:  members (3) 
      -- CP-element group 62: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_685_sample_start_
      -- CP-element group 62: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_685_Sample/$entry
      -- CP-element group 62: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_685_Sample/rr
      -- 
    rr_2029_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2029_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(62), ack => XOR_u8_u8_685_inst_req_0); -- 
    mix_column_cp_element_group_62: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_62"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(58) & mix_column_CP_1694_elements(61);
      gj_mix_column_cp_element_group_62 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(62), clk => clk, reset => reset); --
    end block;
    -- CP-element group 63:  transition  input  bypass 
    -- CP-element group 63: predecessors 
    -- CP-element group 63: 	62 
    -- CP-element group 63: successors 
    -- CP-element group 63:  members (3) 
      -- CP-element group 63: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_685_sample_completed_
      -- CP-element group 63: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_685_Sample/$exit
      -- CP-element group 63: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_685_Sample/ra
      -- 
    ra_2030_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 63_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_685_inst_ack_0, ack => mix_column_CP_1694_elements(63)); -- 
    -- CP-element group 64:  transition  input  bypass 
    -- CP-element group 64: predecessors 
    -- CP-element group 64: 	0 
    -- CP-element group 64: successors 
    -- CP-element group 64: 	68 
    -- CP-element group 64:  members (3) 
      -- CP-element group 64: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_685_update_completed_
      -- CP-element group 64: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_685_Update/$exit
      -- CP-element group 64: 	 assign_stmt_582_to_assign_stmt_701/XOR_u8_u8_685_Update/ca
      -- 
    ca_2035_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 64_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_685_inst_ack_1, ack => mix_column_CP_1694_elements(64)); -- 
    -- CP-element group 65:  join  transition  output  bypass 
    -- CP-element group 65: predecessors 
    -- CP-element group 65: 	28 
    -- CP-element group 65: 	40 
    -- CP-element group 65: successors 
    -- CP-element group 65: 	66 
    -- CP-element group 65:  members (3) 
      -- CP-element group 65: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_690_sample_start_
      -- CP-element group 65: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_690_Sample/$entry
      -- CP-element group 65: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_690_Sample/rr
      -- 
    rr_2043_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2043_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(65), ack => CONCAT_u8_u16_690_inst_req_0); -- 
    mix_column_cp_element_group_65: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_65"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(28) & mix_column_CP_1694_elements(40);
      gj_mix_column_cp_element_group_65 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(65), clk => clk, reset => reset); --
    end block;
    -- CP-element group 66:  transition  input  bypass 
    -- CP-element group 66: predecessors 
    -- CP-element group 66: 	65 
    -- CP-element group 66: successors 
    -- CP-element group 66:  members (3) 
      -- CP-element group 66: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_690_sample_completed_
      -- CP-element group 66: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_690_Sample/$exit
      -- CP-element group 66: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_690_Sample/ra
      -- 
    ra_2044_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 66_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_690_inst_ack_0, ack => mix_column_CP_1694_elements(66)); -- 
    -- CP-element group 67:  transition  input  bypass 
    -- CP-element group 67: predecessors 
    -- CP-element group 67: 	0 
    -- CP-element group 67: successors 
    -- CP-element group 67: 	71 
    -- CP-element group 67:  members (3) 
      -- CP-element group 67: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_690_update_completed_
      -- CP-element group 67: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_690_Update/$exit
      -- CP-element group 67: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_690_Update/ca
      -- 
    ca_2049_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 67_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_690_inst_ack_1, ack => mix_column_CP_1694_elements(67)); -- 
    -- CP-element group 68:  join  transition  output  bypass 
    -- CP-element group 68: predecessors 
    -- CP-element group 68: 	52 
    -- CP-element group 68: 	64 
    -- CP-element group 68: successors 
    -- CP-element group 68: 	69 
    -- CP-element group 68:  members (3) 
      -- CP-element group 68: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_695_sample_start_
      -- CP-element group 68: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_695_Sample/$entry
      -- CP-element group 68: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_695_Sample/rr
      -- 
    rr_2057_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2057_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(68), ack => CONCAT_u8_u16_695_inst_req_0); -- 
    mix_column_cp_element_group_68: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_68"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(52) & mix_column_CP_1694_elements(64);
      gj_mix_column_cp_element_group_68 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(68), clk => clk, reset => reset); --
    end block;
    -- CP-element group 69:  transition  input  bypass 
    -- CP-element group 69: predecessors 
    -- CP-element group 69: 	68 
    -- CP-element group 69: successors 
    -- CP-element group 69:  members (3) 
      -- CP-element group 69: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_695_sample_completed_
      -- CP-element group 69: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_695_Sample/$exit
      -- CP-element group 69: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_695_Sample/ra
      -- 
    ra_2058_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 69_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_695_inst_ack_0, ack => mix_column_CP_1694_elements(69)); -- 
    -- CP-element group 70:  transition  input  bypass 
    -- CP-element group 70: predecessors 
    -- CP-element group 70: 	0 
    -- CP-element group 70: successors 
    -- CP-element group 70: 	71 
    -- CP-element group 70:  members (3) 
      -- CP-element group 70: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_695_update_completed_
      -- CP-element group 70: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_695_Update/$exit
      -- CP-element group 70: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u8_u16_695_Update/ca
      -- 
    ca_2063_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 70_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_695_inst_ack_1, ack => mix_column_CP_1694_elements(70)); -- 
    -- CP-element group 71:  join  transition  output  bypass 
    -- CP-element group 71: predecessors 
    -- CP-element group 71: 	67 
    -- CP-element group 71: 	70 
    -- CP-element group 71: successors 
    -- CP-element group 71: 	72 
    -- CP-element group 71:  members (3) 
      -- CP-element group 71: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u16_u32_700_sample_start_
      -- CP-element group 71: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u16_u32_700_Sample/$entry
      -- CP-element group 71: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u16_u32_700_Sample/rr
      -- 
    rr_2071_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2071_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => mix_column_CP_1694_elements(71), ack => CONCAT_u16_u32_700_inst_req_0); -- 
    mix_column_cp_element_group_71: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "mix_column_cp_element_group_71"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= mix_column_CP_1694_elements(67) & mix_column_CP_1694_elements(70);
      gj_mix_column_cp_element_group_71 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => mix_column_CP_1694_elements(71), clk => clk, reset => reset); --
    end block;
    -- CP-element group 72:  transition  input  bypass 
    -- CP-element group 72: predecessors 
    -- CP-element group 72: 	71 
    -- CP-element group 72: successors 
    -- CP-element group 72:  members (3) 
      -- CP-element group 72: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u16_u32_700_sample_completed_
      -- CP-element group 72: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u16_u32_700_Sample/$exit
      -- CP-element group 72: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u16_u32_700_Sample/ra
      -- 
    ra_2072_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 72_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_700_inst_ack_0, ack => mix_column_CP_1694_elements(72)); -- 
    -- CP-element group 73:  transition  input  bypass 
    -- CP-element group 73: predecessors 
    -- CP-element group 73: 	0 
    -- CP-element group 73: successors 
    -- CP-element group 73:  members (5) 
      -- CP-element group 73: 	 $exit
      -- CP-element group 73: 	 assign_stmt_582_to_assign_stmt_701/$exit
      -- CP-element group 73: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u16_u32_700_update_completed_
      -- CP-element group 73: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u16_u32_700_Update/$exit
      -- CP-element group 73: 	 assign_stmt_582_to_assign_stmt_701/CONCAT_u16_u32_700_Update/ca
      -- 
    ca_2077_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 73_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_700_inst_ack_1, ack => mix_column_CP_1694_elements(73)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal a_0_582 : std_logic_vector(7 downto 0);
    signal a_1_586 : std_logic_vector(7 downto 0);
    signal a_2_590 : std_logic_vector(7 downto 0);
    signal a_3_594 : std_logic_vector(7 downto 0);
    signal b_0_597 : std_logic_vector(7 downto 0);
    signal b_1_600 : std_logic_vector(7 downto 0);
    signal b_2_603 : std_logic_vector(7 downto 0);
    signal b_3_606 : std_logic_vector(7 downto 0);
    signal c_0_626 : std_logic_vector(7 downto 0);
    signal c_0_t1_611 : std_logic_vector(7 downto 0);
    signal c_0_t2_616 : std_logic_vector(7 downto 0);
    signal c_0_t3_621 : std_logic_vector(7 downto 0);
    signal c_1_646 : std_logic_vector(7 downto 0);
    signal c_1_t1_631 : std_logic_vector(7 downto 0);
    signal c_1_t2_636 : std_logic_vector(7 downto 0);
    signal c_1_t3_641 : std_logic_vector(7 downto 0);
    signal c_2_666 : std_logic_vector(7 downto 0);
    signal c_2_t1_651 : std_logic_vector(7 downto 0);
    signal c_2_t2_656 : std_logic_vector(7 downto 0);
    signal c_2_t3_661 : std_logic_vector(7 downto 0);
    signal c_3_686 : std_logic_vector(7 downto 0);
    signal c_3_t1_671 : std_logic_vector(7 downto 0);
    signal c_3_t2_676 : std_logic_vector(7 downto 0);
    signal c_3_t3_681 : std_logic_vector(7 downto 0);
    signal nw_t1_691 : std_logic_vector(15 downto 0);
    signal nw_t2_696 : std_logic_vector(15 downto 0);
    -- 
  begin -- 
    slice_581_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_581_inst_req_0;
      slice_581_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_581_inst_req_1;
      slice_581_inst_ack_1<= update_ack(0);
      slice_581_inst: SliceSplitProtocol generic map(name => "slice_581_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_buffer, dout => a_0_582, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_585_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_585_inst_req_0;
      slice_585_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_585_inst_req_1;
      slice_585_inst_ack_1<= update_ack(0);
      slice_585_inst: SliceSplitProtocol generic map(name => "slice_585_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_buffer, dout => a_1_586, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_589_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_589_inst_req_0;
      slice_589_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_589_inst_req_1;
      slice_589_inst_ack_1<= update_ack(0);
      slice_589_inst: SliceSplitProtocol generic map(name => "slice_589_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_buffer, dout => a_2_590, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_593_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_593_inst_req_0;
      slice_593_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_593_inst_req_1;
      slice_593_inst_ack_1<= update_ack(0);
      slice_593_inst: SliceSplitProtocol generic map(name => "slice_593_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_buffer, dout => a_3_594, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    -- shared split operator group (0) : CONCAT_u16_u32_700_inst 
    ApConcat_group_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= nw_t1_691 & nw_t2_696;
      nw_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_700_inst_req_0;
      CONCAT_u16_u32_700_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_700_inst_req_1;
      CONCAT_u16_u32_700_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_0_gI: SplitGuardInterface generic map(name => "ApConcat_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : CONCAT_u8_u16_690_inst 
    ApConcat_group_1: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_0_626 & c_1_646;
      nw_t1_691 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_690_inst_req_0;
      CONCAT_u8_u16_690_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_690_inst_req_1;
      CONCAT_u8_u16_690_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_1_gI: SplitGuardInterface generic map(name => "ApConcat_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- shared split operator group (2) : CONCAT_u8_u16_695_inst 
    ApConcat_group_2: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_2_666 & c_3_686;
      nw_t2_696 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_695_inst_req_0;
      CONCAT_u8_u16_695_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_695_inst_req_1;
      CONCAT_u8_u16_695_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_2_gI: SplitGuardInterface generic map(name => "ApConcat_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_2",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 2
    -- shared split operator group (3) : XOR_u8_u8_610_inst 
    ApIntXor_group_3: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= b_1_600 & a_1_586;
      c_0_t1_611 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_610_inst_req_0;
      XOR_u8_u8_610_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_610_inst_req_1;
      XOR_u8_u8_610_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_3_gI: SplitGuardInterface generic map(name => "ApIntXor_group_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_3",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 3
    -- shared split operator group (4) : XOR_u8_u8_615_inst 
    ApIntXor_group_4: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= a_2_590 & a_3_594;
      c_0_t2_616 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_615_inst_req_0;
      XOR_u8_u8_615_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_615_inst_req_1;
      XOR_u8_u8_615_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_4_gI: SplitGuardInterface generic map(name => "ApIntXor_group_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_4",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 4
    -- shared split operator group (5) : XOR_u8_u8_620_inst 
    ApIntXor_group_5: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= b_0_597 & c_0_t1_611;
      c_0_t3_621 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_620_inst_req_0;
      XOR_u8_u8_620_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_620_inst_req_1;
      XOR_u8_u8_620_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_5_gI: SplitGuardInterface generic map(name => "ApIntXor_group_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_5",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 5
    -- shared split operator group (6) : XOR_u8_u8_625_inst 
    ApIntXor_group_6: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_0_t2_616 & c_0_t3_621;
      c_0_626 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_625_inst_req_0;
      XOR_u8_u8_625_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_625_inst_req_1;
      XOR_u8_u8_625_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_6_gI: SplitGuardInterface generic map(name => "ApIntXor_group_6_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_6",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 6
    -- shared split operator group (7) : XOR_u8_u8_630_inst 
    ApIntXor_group_7: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= b_2_603 & a_2_590;
      c_1_t1_631 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_630_inst_req_0;
      XOR_u8_u8_630_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_630_inst_req_1;
      XOR_u8_u8_630_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_7_gI: SplitGuardInterface generic map(name => "ApIntXor_group_7_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_7",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 7
    -- shared split operator group (8) : XOR_u8_u8_635_inst 
    ApIntXor_group_8: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= a_0_582 & a_3_594;
      c_1_t2_636 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_635_inst_req_0;
      XOR_u8_u8_635_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_635_inst_req_1;
      XOR_u8_u8_635_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_8_gI: SplitGuardInterface generic map(name => "ApIntXor_group_8_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_8",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 8
    -- shared split operator group (9) : XOR_u8_u8_640_inst 
    ApIntXor_group_9: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= b_1_600 & c_1_t1_631;
      c_1_t3_641 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_640_inst_req_0;
      XOR_u8_u8_640_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_640_inst_req_1;
      XOR_u8_u8_640_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_9_gI: SplitGuardInterface generic map(name => "ApIntXor_group_9_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_9",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 9
    -- shared split operator group (10) : XOR_u8_u8_645_inst 
    ApIntXor_group_10: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_1_t2_636 & c_1_t3_641;
      c_1_646 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_645_inst_req_0;
      XOR_u8_u8_645_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_645_inst_req_1;
      XOR_u8_u8_645_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_10_gI: SplitGuardInterface generic map(name => "ApIntXor_group_10_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_10",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 10
    -- shared split operator group (11) : XOR_u8_u8_650_inst 
    ApIntXor_group_11: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= b_3_606 & a_3_594;
      c_2_t1_651 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_650_inst_req_0;
      XOR_u8_u8_650_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_650_inst_req_1;
      XOR_u8_u8_650_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_11_gI: SplitGuardInterface generic map(name => "ApIntXor_group_11_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_11",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 11
    -- shared split operator group (12) : XOR_u8_u8_655_inst 
    ApIntXor_group_12: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= a_0_582 & a_1_586;
      c_2_t2_656 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_655_inst_req_0;
      XOR_u8_u8_655_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_655_inst_req_1;
      XOR_u8_u8_655_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_12_gI: SplitGuardInterface generic map(name => "ApIntXor_group_12_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_12",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 12
    -- shared split operator group (13) : XOR_u8_u8_660_inst 
    ApIntXor_group_13: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= b_2_603 & c_2_t1_651;
      c_2_t3_661 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_660_inst_req_0;
      XOR_u8_u8_660_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_660_inst_req_1;
      XOR_u8_u8_660_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_13_gI: SplitGuardInterface generic map(name => "ApIntXor_group_13_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_13",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 13
    -- shared split operator group (14) : XOR_u8_u8_665_inst 
    ApIntXor_group_14: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_2_t2_656 & c_2_t3_661;
      c_2_666 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_665_inst_req_0;
      XOR_u8_u8_665_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_665_inst_req_1;
      XOR_u8_u8_665_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_14_gI: SplitGuardInterface generic map(name => "ApIntXor_group_14_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_14",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 14
    -- shared split operator group (15) : XOR_u8_u8_670_inst 
    ApIntXor_group_15: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= b_0_597 & a_0_582;
      c_3_t1_671 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_670_inst_req_0;
      XOR_u8_u8_670_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_670_inst_req_1;
      XOR_u8_u8_670_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_15_gI: SplitGuardInterface generic map(name => "ApIntXor_group_15_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_15",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 15
    -- shared split operator group (16) : XOR_u8_u8_675_inst 
    ApIntXor_group_16: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= a_1_586 & a_2_590;
      c_3_t2_676 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_675_inst_req_0;
      XOR_u8_u8_675_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_675_inst_req_1;
      XOR_u8_u8_675_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_16_gI: SplitGuardInterface generic map(name => "ApIntXor_group_16_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_16",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 16
    -- shared split operator group (17) : XOR_u8_u8_680_inst 
    ApIntXor_group_17: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= b_3_606 & c_3_t1_671;
      c_3_t3_681 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_680_inst_req_0;
      XOR_u8_u8_680_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_680_inst_req_1;
      XOR_u8_u8_680_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_17_gI: SplitGuardInterface generic map(name => "ApIntXor_group_17_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_17",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 17
    -- shared split operator group (18) : XOR_u8_u8_685_inst 
    ApIntXor_group_18: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_3_t2_676 & c_3_t3_681;
      c_3_686 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_685_inst_req_0;
      XOR_u8_u8_685_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_685_inst_req_1;
      XOR_u8_u8_685_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_18_gI: SplitGuardInterface generic map(name => "ApIntXor_group_18_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_18",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 18
    -- shared call operator group (0) : call_stmt_597_call call_stmt_600_call call_stmt_603_call call_stmt_606_call 
    two_mult_call_group_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 3 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 3 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant inBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant outBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2);
      -- 
    begin -- 
      reqL_unguarded(3) <= call_stmt_597_call_req_0;
      reqL_unguarded(2) <= call_stmt_600_call_req_0;
      reqL_unguarded(1) <= call_stmt_603_call_req_0;
      reqL_unguarded(0) <= call_stmt_606_call_req_0;
      call_stmt_597_call_ack_0 <= ackL_unguarded(3);
      call_stmt_600_call_ack_0 <= ackL_unguarded(2);
      call_stmt_603_call_ack_0 <= ackL_unguarded(1);
      call_stmt_606_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(3) <= call_stmt_597_call_req_1;
      reqR_unguarded(2) <= call_stmt_600_call_req_1;
      reqR_unguarded(1) <= call_stmt_603_call_req_1;
      reqR_unguarded(0) <= call_stmt_606_call_req_1;
      call_stmt_597_call_ack_1 <= ackR_unguarded(3);
      call_stmt_600_call_ack_1 <= ackR_unguarded(2);
      call_stmt_603_call_ack_1 <= ackR_unguarded(1);
      call_stmt_606_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      two_mult_call_group_0_accessRegulator_0: access_regulator_base generic map (name => "two_mult_call_group_0_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      two_mult_call_group_0_accessRegulator_1: access_regulator_base generic map (name => "two_mult_call_group_0_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      two_mult_call_group_0_accessRegulator_2: access_regulator_base generic map (name => "two_mult_call_group_0_accessRegulator_2", num_slots => 1) -- 
        port map (req => reqL_unregulated(2), -- 
          ack => ackL_unregulated(2),
          regulated_req => reqL(2),
          regulated_ack => ackL(2),
          release_req => reqR(2),
          release_ack => ackR(2),
          clk => clk, reset => reset); -- 
      two_mult_call_group_0_accessRegulator_3: access_regulator_base generic map (name => "two_mult_call_group_0_accessRegulator_3", num_slots => 1) -- 
        port map (req => reqL_unregulated(3), -- 
          ack => ackL_unregulated(3),
          regulated_req => reqL(3),
          regulated_ack => ackL(3),
          release_req => reqR(3),
          release_ack => ackR(3),
          clk => clk, reset => reset); -- 
      two_mult_call_group_0_gI: SplitGuardInterface generic map(name => "two_mult_call_group_0_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= a_0_582 & a_1_586 & a_2_590 & a_3_594;
      b_0_597 <= data_out(31 downto 24);
      b_1_600 <= data_out(23 downto 16);
      b_2_603 <= data_out(15 downto 8);
      b_3_606 <= data_out(7 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 32,
        owidth => 8,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 3,
        nreqs => 4,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => two_mult_call_reqs(0),
          ackR => two_mult_call_acks(0),
          dataR => two_mult_call_data(7 downto 0),
          tagR => two_mult_call_tag(2 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 8,
          owidth => 32,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 3,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 4) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => two_mult_return_acks(0), -- cross-over
          ackL => two_mult_return_reqs(0), -- cross-over
          dataL => two_mult_return_data(7 downto 0),
          tagL => two_mult_return_tag(2 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- 
  end Block; -- data_path
  -- 
end mix_column_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity password_sequence is -- 
  generic (tag_length : integer); 
  port ( -- 
    input_d_pipe_read_req : out  std_logic_vector(0 downto 0);
    input_d_pipe_read_ack : in   std_logic_vector(0 downto 0);
    input_d_pipe_read_data : in   std_logic_vector(7 downto 0);
    input_e_pipe_read_req : out  std_logic_vector(0 downto 0);
    input_e_pipe_read_ack : in   std_logic_vector(0 downto 0);
    input_e_pipe_read_data : in   std_logic_vector(7 downto 0);
    out_e_pipe_write_req : out  std_logic_vector(0 downto 0);
    out_e_pipe_write_ack : in   std_logic_vector(0 downto 0);
    out_e_pipe_write_data : out  std_logic_vector(7 downto 0);
    out_d_pipe_write_req : out  std_logic_vector(0 downto 0);
    out_d_pipe_write_ack : in   std_logic_vector(0 downto 0);
    out_d_pipe_write_data : out  std_logic_vector(7 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity password_sequence;
architecture password_sequence_arch of password_sequence is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal password_sequence_CP_5043_start: Boolean;
  signal password_sequence_CP_5043_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal if_stmt_1492_branch_ack_1 : boolean;
  signal WPIPE_out_d_1514_inst_req_0 : boolean;
  signal WPIPE_out_d_1514_inst_ack_0 : boolean;
  signal if_stmt_1492_branch_ack_0 : boolean;
  signal phi_stmt_1481_ack_0 : boolean;
  signal nxt_index_1_1500_1484_buf_ack_1 : boolean;
  signal RPIPE_input_d_1512_inst_ack_0 : boolean;
  signal nxt_index_1_1500_1484_buf_req_1 : boolean;
  signal ADD_u8_u8_1499_inst_ack_1 : boolean;
  signal nxt_index_1_1500_1484_buf_ack_0 : boolean;
  signal phi_stmt_1481_req_0 : boolean;
  signal ADD_u8_u8_1499_inst_req_0 : boolean;
  signal ADD_u8_u8_1499_inst_ack_0 : boolean;
  signal nxt_index_1_1500_1484_buf_req_0 : boolean;
  signal WPIPE_out_e_1489_inst_ack_1 : boolean;
  signal WPIPE_out_e_1489_inst_req_1 : boolean;
  signal WPIPE_out_e_1489_inst_ack_0 : boolean;
  signal WPIPE_out_e_1489_inst_req_0 : boolean;
  signal RPIPE_input_e_1487_inst_ack_1 : boolean;
  signal RPIPE_input_e_1487_inst_req_1 : boolean;
  signal ADD_u8_u8_1499_inst_req_1 : boolean;
  signal RPIPE_input_d_1512_inst_ack_1 : boolean;
  signal RPIPE_input_e_1487_inst_ack_0 : boolean;
  signal RPIPE_input_e_1487_inst_req_0 : boolean;
  signal RPIPE_input_d_1512_inst_req_1 : boolean;
  signal if_stmt_1492_branch_req_0 : boolean;
  signal phi_stmt_1481_req_1 : boolean;
  signal RPIPE_input_d_1512_inst_req_0 : boolean;
  signal WPIPE_out_d_1514_inst_req_1 : boolean;
  signal WPIPE_out_d_1514_inst_ack_1 : boolean;
  signal if_stmt_1517_branch_req_0 : boolean;
  signal if_stmt_1517_branch_ack_1 : boolean;
  signal if_stmt_1517_branch_ack_0 : boolean;
  signal ADD_u8_u8_1524_inst_req_0 : boolean;
  signal ADD_u8_u8_1524_inst_ack_0 : boolean;
  signal ADD_u8_u8_1524_inst_req_1 : boolean;
  signal ADD_u8_u8_1524_inst_ack_1 : boolean;
  signal phi_stmt_1506_req_0 : boolean;
  signal nxt_index_2_1525_1509_buf_req_0 : boolean;
  signal nxt_index_2_1525_1509_buf_ack_0 : boolean;
  signal nxt_index_2_1525_1509_buf_req_1 : boolean;
  signal nxt_index_2_1525_1509_buf_ack_1 : boolean;
  signal phi_stmt_1506_req_1 : boolean;
  signal phi_stmt_1506_ack_0 : boolean;
  signal RPIPE_input_e_1537_inst_req_0 : boolean;
  signal RPIPE_input_e_1537_inst_ack_0 : boolean;
  signal RPIPE_input_e_1537_inst_req_1 : boolean;
  signal RPIPE_input_e_1537_inst_ack_1 : boolean;
  signal WPIPE_out_e_1539_inst_req_0 : boolean;
  signal WPIPE_out_e_1539_inst_ack_0 : boolean;
  signal WPIPE_out_e_1539_inst_req_1 : boolean;
  signal WPIPE_out_e_1539_inst_ack_1 : boolean;
  signal if_stmt_1542_branch_req_0 : boolean;
  signal if_stmt_1542_branch_ack_1 : boolean;
  signal if_stmt_1542_branch_ack_0 : boolean;
  signal ADD_u8_u8_1549_inst_req_0 : boolean;
  signal ADD_u8_u8_1549_inst_ack_0 : boolean;
  signal ADD_u8_u8_1549_inst_req_1 : boolean;
  signal ADD_u8_u8_1549_inst_ack_1 : boolean;
  signal phi_stmt_1531_req_0 : boolean;
  signal nxt_index_3_1550_1534_buf_req_0 : boolean;
  signal nxt_index_3_1550_1534_buf_ack_0 : boolean;
  signal nxt_index_3_1550_1534_buf_req_1 : boolean;
  signal nxt_index_3_1550_1534_buf_ack_1 : boolean;
  signal phi_stmt_1531_req_1 : boolean;
  signal phi_stmt_1531_ack_0 : boolean;
  signal RPIPE_input_e_1562_inst_req_0 : boolean;
  signal RPIPE_input_e_1562_inst_ack_0 : boolean;
  signal RPIPE_input_e_1562_inst_req_1 : boolean;
  signal RPIPE_input_e_1562_inst_ack_1 : boolean;
  signal WPIPE_out_e_1564_inst_req_0 : boolean;
  signal WPIPE_out_e_1564_inst_ack_0 : boolean;
  signal WPIPE_out_e_1564_inst_req_1 : boolean;
  signal WPIPE_out_e_1564_inst_ack_1 : boolean;
  signal if_stmt_1567_branch_req_0 : boolean;
  signal if_stmt_1567_branch_ack_1 : boolean;
  signal if_stmt_1567_branch_ack_0 : boolean;
  signal ADD_u8_u8_1574_inst_req_0 : boolean;
  signal ADD_u8_u8_1574_inst_ack_0 : boolean;
  signal ADD_u8_u8_1574_inst_req_1 : boolean;
  signal ADD_u8_u8_1574_inst_ack_1 : boolean;
  signal phi_stmt_1556_req_0 : boolean;
  signal nxt_index_4_1575_1559_buf_req_0 : boolean;
  signal nxt_index_4_1575_1559_buf_ack_0 : boolean;
  signal nxt_index_4_1575_1559_buf_req_1 : boolean;
  signal nxt_index_4_1575_1559_buf_ack_1 : boolean;
  signal phi_stmt_1556_req_1 : boolean;
  signal phi_stmt_1556_ack_0 : boolean;
  signal RPIPE_input_d_1587_inst_req_0 : boolean;
  signal RPIPE_input_d_1587_inst_ack_0 : boolean;
  signal RPIPE_input_d_1587_inst_req_1 : boolean;
  signal RPIPE_input_d_1587_inst_ack_1 : boolean;
  signal WPIPE_out_d_1589_inst_req_0 : boolean;
  signal WPIPE_out_d_1589_inst_ack_0 : boolean;
  signal WPIPE_out_d_1589_inst_req_1 : boolean;
  signal WPIPE_out_d_1589_inst_ack_1 : boolean;
  signal if_stmt_1592_branch_req_0 : boolean;
  signal if_stmt_1592_branch_ack_1 : boolean;
  signal if_stmt_1592_branch_ack_0 : boolean;
  signal ADD_u8_u8_1599_inst_req_0 : boolean;
  signal ADD_u8_u8_1599_inst_ack_0 : boolean;
  signal ADD_u8_u8_1599_inst_req_1 : boolean;
  signal ADD_u8_u8_1599_inst_ack_1 : boolean;
  signal phi_stmt_1581_req_0 : boolean;
  signal nxt_index_5_1600_1584_buf_req_0 : boolean;
  signal nxt_index_5_1600_1584_buf_ack_0 : boolean;
  signal nxt_index_5_1600_1584_buf_req_1 : boolean;
  signal nxt_index_5_1600_1584_buf_ack_1 : boolean;
  signal phi_stmt_1581_req_1 : boolean;
  signal phi_stmt_1581_ack_0 : boolean;
  signal RPIPE_input_e_1612_inst_req_0 : boolean;
  signal RPIPE_input_e_1612_inst_ack_0 : boolean;
  signal RPIPE_input_e_1612_inst_req_1 : boolean;
  signal RPIPE_input_e_1612_inst_ack_1 : boolean;
  signal WPIPE_out_e_1614_inst_req_0 : boolean;
  signal WPIPE_out_e_1614_inst_ack_0 : boolean;
  signal WPIPE_out_e_1614_inst_req_1 : boolean;
  signal WPIPE_out_e_1614_inst_ack_1 : boolean;
  signal if_stmt_1617_branch_req_0 : boolean;
  signal if_stmt_1617_branch_ack_1 : boolean;
  signal if_stmt_1617_branch_ack_0 : boolean;
  signal ADD_u8_u8_1624_inst_req_0 : boolean;
  signal ADD_u8_u8_1624_inst_ack_0 : boolean;
  signal ADD_u8_u8_1624_inst_req_1 : boolean;
  signal ADD_u8_u8_1624_inst_ack_1 : boolean;
  signal phi_stmt_1606_req_0 : boolean;
  signal nxt_index_6_1625_1609_buf_req_0 : boolean;
  signal nxt_index_6_1625_1609_buf_ack_0 : boolean;
  signal nxt_index_6_1625_1609_buf_req_1 : boolean;
  signal nxt_index_6_1625_1609_buf_ack_1 : boolean;
  signal phi_stmt_1606_req_1 : boolean;
  signal phi_stmt_1606_ack_0 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "password_sequence_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  password_sequence_CP_5043_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "password_sequence_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= password_sequence_CP_5043_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= password_sequence_CP_5043_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= password_sequence_CP_5043_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  password_sequence_CP_5043: Block -- control-path 
    signal password_sequence_CP_5043_elements: BooleanArray(84 downto 0);
    -- 
  begin -- 
    password_sequence_CP_5043_elements(0) <= password_sequence_CP_5043_start;
    password_sequence_CP_5043_symbol <= password_sequence_CP_5043_elements(76);
    -- CP-element group 0:  branch  transition  place  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	9 
    -- CP-element group 0:  members (8) 
      -- CP-element group 0: 	 branch_block_stmt_1479/merge_stmt_1480__entry__
      -- CP-element group 0: 	 branch_block_stmt_1479/merge_stmt_1480__entry___PhiReq/phi_stmt_1481/phi_stmt_1481_sources/$entry
      -- CP-element group 0: 	 branch_block_stmt_1479/merge_stmt_1480_dead_link/$entry
      -- CP-element group 0: 	 branch_block_stmt_1479/branch_block_stmt_1479__entry__
      -- CP-element group 0: 	 branch_block_stmt_1479/merge_stmt_1480__entry___PhiReq/$entry
      -- CP-element group 0: 	 branch_block_stmt_1479/merge_stmt_1480__entry___PhiReq/phi_stmt_1481/$entry
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 branch_block_stmt_1479/$entry
      -- 
    -- CP-element group 1:  transition  input  output  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	14 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	2 
    -- CP-element group 1:  members (6) 
      -- CP-element group 1: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/RPIPE_input_e_1487_Update/cr
      -- CP-element group 1: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/RPIPE_input_e_1487_Update/$entry
      -- CP-element group 1: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/RPIPE_input_e_1487_Sample/ra
      -- CP-element group 1: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/RPIPE_input_e_1487_Sample/$exit
      -- CP-element group 1: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/RPIPE_input_e_1487_update_start_
      -- CP-element group 1: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/RPIPE_input_e_1487_sample_completed_
      -- 
    ra_5068_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1487_inst_ack_0, ack => password_sequence_CP_5043_elements(1)); -- 
    cr_5072_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5072_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(1), ack => RPIPE_input_e_1487_inst_req_1); -- 
    -- CP-element group 2:  transition  input  output  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	1 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	3 
    -- CP-element group 2:  members (6) 
      -- CP-element group 2: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/WPIPE_out_e_1489_Sample/req
      -- CP-element group 2: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/WPIPE_out_e_1489_Sample/$entry
      -- CP-element group 2: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/WPIPE_out_e_1489_sample_start_
      -- CP-element group 2: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/RPIPE_input_e_1487_Update/ca
      -- CP-element group 2: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/RPIPE_input_e_1487_Update/$exit
      -- CP-element group 2: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/RPIPE_input_e_1487_update_completed_
      -- 
    ca_5073_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1487_inst_ack_1, ack => password_sequence_CP_5043_elements(2)); -- 
    req_5081_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5081_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(2), ack => WPIPE_out_e_1489_inst_req_0); -- 
    -- CP-element group 3:  transition  input  output  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	2 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	4 
    -- CP-element group 3:  members (6) 
      -- CP-element group 3: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/WPIPE_out_e_1489_Update/req
      -- CP-element group 3: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/WPIPE_out_e_1489_Update/$entry
      -- CP-element group 3: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/WPIPE_out_e_1489_Sample/ack
      -- CP-element group 3: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/WPIPE_out_e_1489_Sample/$exit
      -- CP-element group 3: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/WPIPE_out_e_1489_update_start_
      -- CP-element group 3: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/WPIPE_out_e_1489_sample_completed_
      -- 
    ack_5082_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1489_inst_ack_0, ack => password_sequence_CP_5043_elements(3)); -- 
    req_5086_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5086_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(3), ack => WPIPE_out_e_1489_inst_req_1); -- 
    -- CP-element group 4:  branch  transition  place  input  output  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	3 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	5 
    -- CP-element group 4: 	6 
    -- CP-element group 4:  members (27) 
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_if_link/$entry
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_else_link/$entry
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/SplitProtocol/Update/$entry
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/SplitProtocol/$exit
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/SplitProtocol/Sample/rr
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/SplitProtocol/$entry
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/SplitProtocol/Sample/$entry
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_dead_link/$entry
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/SplitProtocol/Update/$exit
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/SplitProtocol/Sample/$exit
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/SplitProtocol/Update/cr
      -- CP-element group 4: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491__exit__
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/SplitProtocol/Sample/ra
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/$entry
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/$exit
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/$entry
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/$exit
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492__entry__
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/ULT_u8_u1_1495_inputs/$entry
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/ULT_u8_u1_1495_inputs/$exit
      -- CP-element group 4: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/$exit
      -- CP-element group 4: 	 branch_block_stmt_1479/ULT_u8_u1_1495_place
      -- CP-element group 4: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/WPIPE_out_e_1489_Update/ack
      -- CP-element group 4: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/WPIPE_out_e_1489_Update/$exit
      -- CP-element group 4: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/WPIPE_out_e_1489_update_completed_
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/branch_req
      -- CP-element group 4: 	 branch_block_stmt_1479/if_stmt_1492_eval_test/ULT_u8_u1_1495/SplitProtocol/Update/ca
      -- 
    ack_5087_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1489_inst_ack_1, ack => password_sequence_CP_5043_elements(4)); -- 
    branch_req_5114_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_5114_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(4), ack => if_stmt_1492_branch_req_0); -- 
    -- CP-element group 5:  fork  transition  place  input  output  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	4 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	7 
    -- CP-element group 5: 	8 
    -- CP-element group 5:  members (10) 
      -- CP-element group 5: 	 branch_block_stmt_1479/if_stmt_1492_if_link/if_choice_transition
      -- CP-element group 5: 	 branch_block_stmt_1479/assign_stmt_1500/ADD_u8_u8_1499_Update/$entry
      -- CP-element group 5: 	 branch_block_stmt_1479/if_stmt_1492_if_link/$exit
      -- CP-element group 5: 	 branch_block_stmt_1479/assign_stmt_1500__entry__
      -- CP-element group 5: 	 branch_block_stmt_1479/assign_stmt_1500/ADD_u8_u8_1499_Sample/rr
      -- CP-element group 5: 	 branch_block_stmt_1479/assign_stmt_1500/$entry
      -- CP-element group 5: 	 branch_block_stmt_1479/assign_stmt_1500/ADD_u8_u8_1499_Sample/$entry
      -- CP-element group 5: 	 branch_block_stmt_1479/assign_stmt_1500/ADD_u8_u8_1499_update_start_
      -- CP-element group 5: 	 branch_block_stmt_1479/assign_stmt_1500/ADD_u8_u8_1499_Update/cr
      -- CP-element group 5: 	 branch_block_stmt_1479/assign_stmt_1500/ADD_u8_u8_1499_sample_start_
      -- 
    if_choice_transition_5119_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1492_branch_ack_1, ack => password_sequence_CP_5043_elements(5)); -- 
    rr_5137_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5137_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(5), ack => ADD_u8_u8_1499_inst_req_0); -- 
    cr_5142_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5142_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(5), ack => ADD_u8_u8_1499_inst_req_1); -- 
    -- CP-element group 6:  merge  branch  transition  place  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	4 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	23 
    -- CP-element group 6:  members (12) 
      -- CP-element group 6: 	 branch_block_stmt_1504/merge_stmt_1505__entry__
      -- CP-element group 6: 	 branch_block_stmt_1504/branch_block_stmt_1504__entry__
      -- CP-element group 6: 	 branch_block_stmt_1479/if_stmt_1492_else_link/else_choice_transition
      -- CP-element group 6: 	 branch_block_stmt_1479/if_stmt_1492_else_link/$exit
      -- CP-element group 6: 	 branch_block_stmt_1504/$entry
      -- CP-element group 6: 	 branch_block_stmt_1479/branch_block_stmt_1479__exit__
      -- CP-element group 6: 	 branch_block_stmt_1479/$exit
      -- CP-element group 6: 	 branch_block_stmt_1479/if_stmt_1492__exit__
      -- CP-element group 6: 	 branch_block_stmt_1504/merge_stmt_1505_dead_link/$entry
      -- CP-element group 6: 	 branch_block_stmt_1504/merge_stmt_1505__entry___PhiReq/$entry
      -- CP-element group 6: 	 branch_block_stmt_1504/merge_stmt_1505__entry___PhiReq/phi_stmt_1506/$entry
      -- CP-element group 6: 	 branch_block_stmt_1504/merge_stmt_1505__entry___PhiReq/phi_stmt_1506/phi_stmt_1506_sources/$entry
      -- 
    else_choice_transition_5123_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1492_branch_ack_0, ack => password_sequence_CP_5043_elements(6)); -- 
    -- CP-element group 7:  transition  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	5 
    -- CP-element group 7: successors 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 branch_block_stmt_1479/assign_stmt_1500/ADD_u8_u8_1499_Sample/$exit
      -- CP-element group 7: 	 branch_block_stmt_1479/assign_stmt_1500/ADD_u8_u8_1499_Sample/ra
      -- CP-element group 7: 	 branch_block_stmt_1479/assign_stmt_1500/ADD_u8_u8_1499_sample_completed_
      -- 
    ra_5138_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1499_inst_ack_0, ack => password_sequence_CP_5043_elements(7)); -- 
    -- CP-element group 8:  fork  transition  place  input  output  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	5 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	10 
    -- CP-element group 8: 	11 
    -- CP-element group 8:  members (14) 
      -- CP-element group 8: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_sources/Interlock/Update/$entry
      -- CP-element group 8: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_sources/$entry
      -- CP-element group 8: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/$entry
      -- CP-element group 8: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_sources/Interlock/Sample/$entry
      -- CP-element group 8: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_sources/Interlock/Update/req
      -- CP-element group 8: 	 branch_block_stmt_1479/assign_stmt_1500__exit__
      -- CP-element group 8: 	 branch_block_stmt_1479/assign_stmt_1500/ADD_u8_u8_1499_Update/ca
      -- CP-element group 8: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_sources/Interlock/$entry
      -- CP-element group 8: 	 branch_block_stmt_1479/loopback_1
      -- CP-element group 8: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_sources/Interlock/Sample/req
      -- CP-element group 8: 	 branch_block_stmt_1479/loopback_1_PhiReq/$entry
      -- CP-element group 8: 	 branch_block_stmt_1479/assign_stmt_1500/ADD_u8_u8_1499_Update/$exit
      -- CP-element group 8: 	 branch_block_stmt_1479/assign_stmt_1500/ADD_u8_u8_1499_update_completed_
      -- CP-element group 8: 	 branch_block_stmt_1479/assign_stmt_1500/$exit
      -- 
    ca_5143_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1499_inst_ack_1, ack => password_sequence_CP_5043_elements(8)); -- 
    req_5179_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5179_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(8), ack => nxt_index_1_1500_1484_buf_req_1); -- 
    req_5174_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5174_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(8), ack => nxt_index_1_1500_1484_buf_req_0); -- 
    -- CP-element group 9:  transition  output  delay-element  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	0 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	13 
    -- CP-element group 9:  members (5) 
      -- CP-element group 9: 	 branch_block_stmt_1479/merge_stmt_1480__entry___PhiReq/phi_stmt_1481/phi_stmt_1481_sources/$exit
      -- CP-element group 9: 	 branch_block_stmt_1479/merge_stmt_1480__entry___PhiReq/$exit
      -- CP-element group 9: 	 branch_block_stmt_1479/merge_stmt_1480__entry___PhiReq/phi_stmt_1481/$exit
      -- CP-element group 9: 	 branch_block_stmt_1479/merge_stmt_1480__entry___PhiReq/phi_stmt_1481/phi_stmt_1481_req
      -- CP-element group 9: 	 branch_block_stmt_1479/merge_stmt_1480__entry___PhiReq/phi_stmt_1481/phi_stmt_1481_sources/R_zero_1483_konst_delay_trans
      -- 
    phi_stmt_1481_req_5158_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1481_req_5158_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(9), ack => phi_stmt_1481_req_0); -- 
    -- Element group password_sequence_CP_5043_elements(9) is a control-delay.
    cp_element_9_delay: control_delay_element  generic map(name => " 9_delay", delay_value => 1)  port map(req => password_sequence_CP_5043_elements(0), ack => password_sequence_CP_5043_elements(9), clk => clk, reset =>reset);
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	8 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	12 
    -- CP-element group 10:  members (2) 
      -- CP-element group 10: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_sources/Interlock/Sample/$exit
      -- CP-element group 10: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_sources/Interlock/Sample/ack
      -- 
    ack_5175_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_1_1500_1484_buf_ack_0, ack => password_sequence_CP_5043_elements(10)); -- 
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	8 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	12 
    -- CP-element group 11:  members (2) 
      -- CP-element group 11: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_sources/Interlock/Update/$exit
      -- CP-element group 11: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_sources/Interlock/Update/ack
      -- 
    ack_5180_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_1_1500_1484_buf_ack_1, ack => password_sequence_CP_5043_elements(11)); -- 
    -- CP-element group 12:  join  transition  output  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	10 
    -- CP-element group 12: 	11 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	13 
    -- CP-element group 12:  members (5) 
      -- CP-element group 12: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_sources/$exit
      -- CP-element group 12: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/$exit
      -- CP-element group 12: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_sources/Interlock/$exit
      -- CP-element group 12: 	 branch_block_stmt_1479/loopback_1_PhiReq/$exit
      -- CP-element group 12: 	 branch_block_stmt_1479/loopback_1_PhiReq/phi_stmt_1481/phi_stmt_1481_req
      -- 
    phi_stmt_1481_req_5181_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1481_req_5181_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(12), ack => phi_stmt_1481_req_1); -- 
    password_sequence_cp_element_group_12: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "password_sequence_cp_element_group_12"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= password_sequence_CP_5043_elements(10) & password_sequence_CP_5043_elements(11);
      gj_password_sequence_cp_element_group_12 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => password_sequence_CP_5043_elements(12), clk => clk, reset => reset); --
    end block;
    -- CP-element group 13:  merge  transition  place  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	12 
    -- CP-element group 13: 	9 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	14 
    -- CP-element group 13:  members (2) 
      -- CP-element group 13: 	 branch_block_stmt_1479/merge_stmt_1480_PhiAck/$entry
      -- CP-element group 13: 	 branch_block_stmt_1479/merge_stmt_1480_PhiReqMerge
      -- 
    password_sequence_CP_5043_elements(13) <= OrReduce(password_sequence_CP_5043_elements(12) & password_sequence_CP_5043_elements(9));
    -- CP-element group 14:  merge  transition  place  input  output  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	13 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	1 
    -- CP-element group 14:  members (8) 
      -- CP-element group 14: 	 branch_block_stmt_1479/merge_stmt_1480_PhiAck/phi_stmt_1481_ack
      -- CP-element group 14: 	 branch_block_stmt_1479/merge_stmt_1480_PhiAck/$exit
      -- CP-element group 14: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/RPIPE_input_e_1487_sample_start_
      -- CP-element group 14: 	 branch_block_stmt_1479/merge_stmt_1480__exit__
      -- CP-element group 14: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491__entry__
      -- CP-element group 14: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/$entry
      -- CP-element group 14: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/RPIPE_input_e_1487_Sample/rr
      -- CP-element group 14: 	 branch_block_stmt_1479/assign_stmt_1488_to_assign_stmt_1491/RPIPE_input_e_1487_Sample/$entry
      -- 
    phi_stmt_1481_ack_5186_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_1481_ack_0, ack => password_sequence_CP_5043_elements(14)); -- 
    rr_5067_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5067_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(14), ack => RPIPE_input_e_1487_inst_req_0); -- 
    -- CP-element group 15:  transition  input  output  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	28 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	16 
    -- CP-element group 15:  members (6) 
      -- CP-element group 15: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/RPIPE_input_d_1512_Sample/ra
      -- CP-element group 15: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/RPIPE_input_d_1512_Update/$entry
      -- CP-element group 15: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/RPIPE_input_d_1512_Sample/$exit
      -- CP-element group 15: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/RPIPE_input_d_1512_Update/cr
      -- CP-element group 15: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/RPIPE_input_d_1512_update_start_
      -- CP-element group 15: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/RPIPE_input_d_1512_sample_completed_
      -- 
    ra_5209_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1512_inst_ack_0, ack => password_sequence_CP_5043_elements(15)); -- 
    cr_5213_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5213_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(15), ack => RPIPE_input_d_1512_inst_req_1); -- 
    -- CP-element group 16:  transition  input  output  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	15 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	17 
    -- CP-element group 16:  members (6) 
      -- CP-element group 16: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/WPIPE_out_d_1514_Sample/req
      -- CP-element group 16: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/RPIPE_input_d_1512_Update/$exit
      -- CP-element group 16: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/WPIPE_out_d_1514_sample_start_
      -- CP-element group 16: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/WPIPE_out_d_1514_Sample/$entry
      -- CP-element group 16: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/RPIPE_input_d_1512_Update/ca
      -- CP-element group 16: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/RPIPE_input_d_1512_update_completed_
      -- 
    ca_5214_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1512_inst_ack_1, ack => password_sequence_CP_5043_elements(16)); -- 
    req_5222_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5222_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(16), ack => WPIPE_out_d_1514_inst_req_0); -- 
    -- CP-element group 17:  transition  input  output  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	16 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	18 
    -- CP-element group 17:  members (6) 
      -- CP-element group 17: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/WPIPE_out_d_1514_Sample/ack
      -- CP-element group 17: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/WPIPE_out_d_1514_Sample/$exit
      -- CP-element group 17: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/WPIPE_out_d_1514_update_start_
      -- CP-element group 17: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/WPIPE_out_d_1514_sample_completed_
      -- CP-element group 17: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/WPIPE_out_d_1514_Update/$entry
      -- CP-element group 17: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/WPIPE_out_d_1514_Update/req
      -- 
    ack_5223_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 17_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1514_inst_ack_0, ack => password_sequence_CP_5043_elements(17)); -- 
    req_5227_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5227_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(17), ack => WPIPE_out_d_1514_inst_req_1); -- 
    -- CP-element group 18:  branch  transition  place  input  output  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	17 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	19 
    -- CP-element group 18: 	20 
    -- CP-element group 18:  members (27) 
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517__entry__
      -- CP-element group 18: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/$exit
      -- CP-element group 18: 	 branch_block_stmt_1504/ULT_u8_u1_1520_place
      -- CP-element group 18: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516__exit__
      -- CP-element group 18: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/WPIPE_out_d_1514_update_completed_
      -- CP-element group 18: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/WPIPE_out_d_1514_Update/$exit
      -- CP-element group 18: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/WPIPE_out_d_1514_Update/ack
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_dead_link/$entry
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/$entry
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/$exit
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/$entry
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/$exit
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/ULT_u8_u1_1520_inputs/$entry
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/ULT_u8_u1_1520_inputs/$exit
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/SplitProtocol/$entry
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/SplitProtocol/$exit
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/SplitProtocol/Sample/$entry
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/SplitProtocol/Sample/$exit
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/SplitProtocol/Sample/rr
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/SplitProtocol/Sample/ra
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/SplitProtocol/Update/$entry
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/SplitProtocol/Update/$exit
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/SplitProtocol/Update/cr
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/ULT_u8_u1_1520/SplitProtocol/Update/ca
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_eval_test/branch_req
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_if_link/$entry
      -- CP-element group 18: 	 branch_block_stmt_1504/if_stmt_1517_else_link/$entry
      -- 
    ack_5228_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1514_inst_ack_1, ack => password_sequence_CP_5043_elements(18)); -- 
    branch_req_5255_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_5255_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(18), ack => if_stmt_1517_branch_req_0); -- 
    -- CP-element group 19:  fork  transition  place  input  output  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	18 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	22 
    -- CP-element group 19: 	21 
    -- CP-element group 19:  members (10) 
      -- CP-element group 19: 	 branch_block_stmt_1504/assign_stmt_1525__entry__
      -- CP-element group 19: 	 branch_block_stmt_1504/if_stmt_1517_if_link/$exit
      -- CP-element group 19: 	 branch_block_stmt_1504/if_stmt_1517_if_link/if_choice_transition
      -- CP-element group 19: 	 branch_block_stmt_1504/assign_stmt_1525/$entry
      -- CP-element group 19: 	 branch_block_stmt_1504/assign_stmt_1525/ADD_u8_u8_1524_sample_start_
      -- CP-element group 19: 	 branch_block_stmt_1504/assign_stmt_1525/ADD_u8_u8_1524_update_start_
      -- CP-element group 19: 	 branch_block_stmt_1504/assign_stmt_1525/ADD_u8_u8_1524_Sample/$entry
      -- CP-element group 19: 	 branch_block_stmt_1504/assign_stmt_1525/ADD_u8_u8_1524_Sample/rr
      -- CP-element group 19: 	 branch_block_stmt_1504/assign_stmt_1525/ADD_u8_u8_1524_Update/$entry
      -- CP-element group 19: 	 branch_block_stmt_1504/assign_stmt_1525/ADD_u8_u8_1524_Update/cr
      -- 
    if_choice_transition_5260_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1517_branch_ack_1, ack => password_sequence_CP_5043_elements(19)); -- 
    rr_5278_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5278_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(19), ack => ADD_u8_u8_1524_inst_req_0); -- 
    cr_5283_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5283_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(19), ack => ADD_u8_u8_1524_inst_req_1); -- 
    -- CP-element group 20:  merge  branch  transition  place  input  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	18 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	37 
    -- CP-element group 20:  members (12) 
      -- CP-element group 20: 	 branch_block_stmt_1504/if_stmt_1517__exit__
      -- CP-element group 20: 	 branch_block_stmt_1504/branch_block_stmt_1504__exit__
      -- CP-element group 20: 	 branch_block_stmt_1529/merge_stmt_1530__entry__
      -- CP-element group 20: 	 branch_block_stmt_1529/branch_block_stmt_1529__entry__
      -- CP-element group 20: 	 branch_block_stmt_1504/$exit
      -- CP-element group 20: 	 branch_block_stmt_1504/if_stmt_1517_else_link/$exit
      -- CP-element group 20: 	 branch_block_stmt_1504/if_stmt_1517_else_link/else_choice_transition
      -- CP-element group 20: 	 branch_block_stmt_1529/$entry
      -- CP-element group 20: 	 branch_block_stmt_1529/merge_stmt_1530_dead_link/$entry
      -- CP-element group 20: 	 branch_block_stmt_1529/merge_stmt_1530__entry___PhiReq/$entry
      -- CP-element group 20: 	 branch_block_stmt_1529/merge_stmt_1530__entry___PhiReq/phi_stmt_1531/$entry
      -- CP-element group 20: 	 branch_block_stmt_1529/merge_stmt_1530__entry___PhiReq/phi_stmt_1531/phi_stmt_1531_sources/$entry
      -- 
    else_choice_transition_5264_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 20_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1517_branch_ack_0, ack => password_sequence_CP_5043_elements(20)); -- 
    -- CP-element group 21:  transition  input  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	19 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (3) 
      -- CP-element group 21: 	 branch_block_stmt_1504/assign_stmt_1525/ADD_u8_u8_1524_sample_completed_
      -- CP-element group 21: 	 branch_block_stmt_1504/assign_stmt_1525/ADD_u8_u8_1524_Sample/$exit
      -- CP-element group 21: 	 branch_block_stmt_1504/assign_stmt_1525/ADD_u8_u8_1524_Sample/ra
      -- 
    ra_5279_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1524_inst_ack_0, ack => password_sequence_CP_5043_elements(21)); -- 
    -- CP-element group 22:  fork  transition  place  input  output  bypass 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	19 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	24 
    -- CP-element group 22: 	25 
    -- CP-element group 22:  members (14) 
      -- CP-element group 22: 	 branch_block_stmt_1504/assign_stmt_1525__exit__
      -- CP-element group 22: 	 branch_block_stmt_1504/loopback_2
      -- CP-element group 22: 	 branch_block_stmt_1504/assign_stmt_1525/$exit
      -- CP-element group 22: 	 branch_block_stmt_1504/assign_stmt_1525/ADD_u8_u8_1524_update_completed_
      -- CP-element group 22: 	 branch_block_stmt_1504/assign_stmt_1525/ADD_u8_u8_1524_Update/$exit
      -- CP-element group 22: 	 branch_block_stmt_1504/assign_stmt_1525/ADD_u8_u8_1524_Update/ca
      -- CP-element group 22: 	 branch_block_stmt_1504/loopback_2_PhiReq/$entry
      -- CP-element group 22: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/$entry
      -- CP-element group 22: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/$entry
      -- CP-element group 22: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/Interlock/$entry
      -- CP-element group 22: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/Interlock/Sample/$entry
      -- CP-element group 22: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/Interlock/Sample/req
      -- CP-element group 22: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/Interlock/Update/$entry
      -- CP-element group 22: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/Interlock/Update/req
      -- 
    ca_5284_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 22_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1524_inst_ack_1, ack => password_sequence_CP_5043_elements(22)); -- 
    req_5315_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5315_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(22), ack => nxt_index_2_1525_1509_buf_req_0); -- 
    req_5320_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5320_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(22), ack => nxt_index_2_1525_1509_buf_req_1); -- 
    -- CP-element group 23:  transition  output  delay-element  bypass 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	6 
    -- CP-element group 23: successors 
    -- CP-element group 23: 	27 
    -- CP-element group 23:  members (5) 
      -- CP-element group 23: 	 branch_block_stmt_1504/merge_stmt_1505__entry___PhiReq/$exit
      -- CP-element group 23: 	 branch_block_stmt_1504/merge_stmt_1505__entry___PhiReq/phi_stmt_1506/$exit
      -- CP-element group 23: 	 branch_block_stmt_1504/merge_stmt_1505__entry___PhiReq/phi_stmt_1506/phi_stmt_1506_sources/$exit
      -- CP-element group 23: 	 branch_block_stmt_1504/merge_stmt_1505__entry___PhiReq/phi_stmt_1506/phi_stmt_1506_sources/R_zero_1508_konst_delay_trans
      -- CP-element group 23: 	 branch_block_stmt_1504/merge_stmt_1505__entry___PhiReq/phi_stmt_1506/phi_stmt_1506_req
      -- 
    phi_stmt_1506_req_5299_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1506_req_5299_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(23), ack => phi_stmt_1506_req_0); -- 
    -- Element group password_sequence_CP_5043_elements(23) is a control-delay.
    cp_element_23_delay: control_delay_element  generic map(name => " 23_delay", delay_value => 1)  port map(req => password_sequence_CP_5043_elements(6), ack => password_sequence_CP_5043_elements(23), clk => clk, reset =>reset);
    -- CP-element group 24:  transition  input  bypass 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	22 
    -- CP-element group 24: successors 
    -- CP-element group 24: 	26 
    -- CP-element group 24:  members (2) 
      -- CP-element group 24: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/Interlock/Sample/$exit
      -- CP-element group 24: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/Interlock/Sample/ack
      -- 
    ack_5316_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_2_1525_1509_buf_ack_0, ack => password_sequence_CP_5043_elements(24)); -- 
    -- CP-element group 25:  transition  input  bypass 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	22 
    -- CP-element group 25: successors 
    -- CP-element group 25: 	26 
    -- CP-element group 25:  members (2) 
      -- CP-element group 25: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/Interlock/Update/$exit
      -- CP-element group 25: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/Interlock/Update/ack
      -- 
    ack_5321_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_2_1525_1509_buf_ack_1, ack => password_sequence_CP_5043_elements(25)); -- 
    -- CP-element group 26:  join  transition  output  bypass 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	24 
    -- CP-element group 26: 	25 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	27 
    -- CP-element group 26:  members (5) 
      -- CP-element group 26: 	 branch_block_stmt_1504/loopback_2_PhiReq/$exit
      -- CP-element group 26: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/$exit
      -- CP-element group 26: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/$exit
      -- CP-element group 26: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/Interlock/$exit
      -- CP-element group 26: 	 branch_block_stmt_1504/loopback_2_PhiReq/phi_stmt_1506/phi_stmt_1506_req
      -- 
    phi_stmt_1506_req_5322_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1506_req_5322_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(26), ack => phi_stmt_1506_req_1); -- 
    password_sequence_cp_element_group_26: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "password_sequence_cp_element_group_26"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= password_sequence_CP_5043_elements(24) & password_sequence_CP_5043_elements(25);
      gj_password_sequence_cp_element_group_26 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => password_sequence_CP_5043_elements(26), clk => clk, reset => reset); --
    end block;
    -- CP-element group 27:  merge  transition  place  bypass 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	23 
    -- CP-element group 27: 	26 
    -- CP-element group 27: successors 
    -- CP-element group 27: 	28 
    -- CP-element group 27:  members (2) 
      -- CP-element group 27: 	 branch_block_stmt_1504/merge_stmt_1505_PhiReqMerge
      -- CP-element group 27: 	 branch_block_stmt_1504/merge_stmt_1505_PhiAck/$entry
      -- 
    password_sequence_CP_5043_elements(27) <= OrReduce(password_sequence_CP_5043_elements(23) & password_sequence_CP_5043_elements(26));
    -- CP-element group 28:  merge  transition  place  input  output  bypass 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	27 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	15 
    -- CP-element group 28:  members (8) 
      -- CP-element group 28: 	 branch_block_stmt_1504/merge_stmt_1505__exit__
      -- CP-element group 28: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/$entry
      -- CP-element group 28: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516__entry__
      -- CP-element group 28: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/RPIPE_input_d_1512_Sample/$entry
      -- CP-element group 28: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/RPIPE_input_d_1512_sample_start_
      -- CP-element group 28: 	 branch_block_stmt_1504/assign_stmt_1513_to_assign_stmt_1516/RPIPE_input_d_1512_Sample/rr
      -- CP-element group 28: 	 branch_block_stmt_1504/merge_stmt_1505_PhiAck/$exit
      -- CP-element group 28: 	 branch_block_stmt_1504/merge_stmt_1505_PhiAck/phi_stmt_1506_ack
      -- 
    phi_stmt_1506_ack_5327_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 28_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_1506_ack_0, ack => password_sequence_CP_5043_elements(28)); -- 
    rr_5208_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5208_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(28), ack => RPIPE_input_d_1512_inst_req_0); -- 
    -- CP-element group 29:  transition  input  output  bypass 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	42 
    -- CP-element group 29: successors 
    -- CP-element group 29: 	30 
    -- CP-element group 29:  members (6) 
      -- CP-element group 29: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/RPIPE_input_e_1537_sample_completed_
      -- CP-element group 29: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/RPIPE_input_e_1537_update_start_
      -- CP-element group 29: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/RPIPE_input_e_1537_Sample/$exit
      -- CP-element group 29: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/RPIPE_input_e_1537_Sample/ra
      -- CP-element group 29: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/RPIPE_input_e_1537_Update/$entry
      -- CP-element group 29: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/RPIPE_input_e_1537_Update/cr
      -- 
    ra_5350_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 29_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1537_inst_ack_0, ack => password_sequence_CP_5043_elements(29)); -- 
    cr_5354_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5354_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(29), ack => RPIPE_input_e_1537_inst_req_1); -- 
    -- CP-element group 30:  transition  input  output  bypass 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	29 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	31 
    -- CP-element group 30:  members (6) 
      -- CP-element group 30: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/RPIPE_input_e_1537_update_completed_
      -- CP-element group 30: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/RPIPE_input_e_1537_Update/$exit
      -- CP-element group 30: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/RPIPE_input_e_1537_Update/ca
      -- CP-element group 30: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/WPIPE_out_e_1539_sample_start_
      -- CP-element group 30: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/WPIPE_out_e_1539_Sample/$entry
      -- CP-element group 30: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/WPIPE_out_e_1539_Sample/req
      -- 
    ca_5355_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 30_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1537_inst_ack_1, ack => password_sequence_CP_5043_elements(30)); -- 
    req_5363_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5363_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(30), ack => WPIPE_out_e_1539_inst_req_0); -- 
    -- CP-element group 31:  transition  input  output  bypass 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	30 
    -- CP-element group 31: successors 
    -- CP-element group 31: 	32 
    -- CP-element group 31:  members (6) 
      -- CP-element group 31: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/WPIPE_out_e_1539_sample_completed_
      -- CP-element group 31: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/WPIPE_out_e_1539_update_start_
      -- CP-element group 31: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/WPIPE_out_e_1539_Sample/$exit
      -- CP-element group 31: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/WPIPE_out_e_1539_Sample/ack
      -- CP-element group 31: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/WPIPE_out_e_1539_Update/$entry
      -- CP-element group 31: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/WPIPE_out_e_1539_Update/req
      -- 
    ack_5364_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 31_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1539_inst_ack_0, ack => password_sequence_CP_5043_elements(31)); -- 
    req_5368_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5368_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(31), ack => WPIPE_out_e_1539_inst_req_1); -- 
    -- CP-element group 32:  branch  transition  place  input  output  bypass 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	31 
    -- CP-element group 32: successors 
    -- CP-element group 32: 	33 
    -- CP-element group 32: 	34 
    -- CP-element group 32:  members (27) 
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542__entry__
      -- CP-element group 32: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541__exit__
      -- CP-element group 32: 	 branch_block_stmt_1529/ULT_u8_u1_1545_place
      -- CP-element group 32: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/$exit
      -- CP-element group 32: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/WPIPE_out_e_1539_update_completed_
      -- CP-element group 32: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/WPIPE_out_e_1539_Update/$exit
      -- CP-element group 32: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/WPIPE_out_e_1539_Update/ack
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_dead_link/$entry
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/$entry
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/$exit
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/$entry
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/$exit
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/ULT_u8_u1_1545_inputs/$entry
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/ULT_u8_u1_1545_inputs/$exit
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/SplitProtocol/$entry
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/SplitProtocol/$exit
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/SplitProtocol/Sample/$entry
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/SplitProtocol/Sample/$exit
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/SplitProtocol/Sample/rr
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/SplitProtocol/Sample/ra
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/SplitProtocol/Update/$entry
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/SplitProtocol/Update/$exit
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/SplitProtocol/Update/cr
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/ULT_u8_u1_1545/SplitProtocol/Update/ca
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_eval_test/branch_req
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_if_link/$entry
      -- CP-element group 32: 	 branch_block_stmt_1529/if_stmt_1542_else_link/$entry
      -- 
    ack_5369_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 32_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1539_inst_ack_1, ack => password_sequence_CP_5043_elements(32)); -- 
    branch_req_5396_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_5396_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(32), ack => if_stmt_1542_branch_req_0); -- 
    -- CP-element group 33:  fork  transition  place  input  output  bypass 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	32 
    -- CP-element group 33: successors 
    -- CP-element group 33: 	36 
    -- CP-element group 33: 	35 
    -- CP-element group 33:  members (10) 
      -- CP-element group 33: 	 branch_block_stmt_1529/assign_stmt_1550__entry__
      -- CP-element group 33: 	 branch_block_stmt_1529/if_stmt_1542_if_link/$exit
      -- CP-element group 33: 	 branch_block_stmt_1529/if_stmt_1542_if_link/if_choice_transition
      -- CP-element group 33: 	 branch_block_stmt_1529/assign_stmt_1550/$entry
      -- CP-element group 33: 	 branch_block_stmt_1529/assign_stmt_1550/ADD_u8_u8_1549_sample_start_
      -- CP-element group 33: 	 branch_block_stmt_1529/assign_stmt_1550/ADD_u8_u8_1549_update_start_
      -- CP-element group 33: 	 branch_block_stmt_1529/assign_stmt_1550/ADD_u8_u8_1549_Sample/$entry
      -- CP-element group 33: 	 branch_block_stmt_1529/assign_stmt_1550/ADD_u8_u8_1549_Sample/rr
      -- CP-element group 33: 	 branch_block_stmt_1529/assign_stmt_1550/ADD_u8_u8_1549_Update/$entry
      -- CP-element group 33: 	 branch_block_stmt_1529/assign_stmt_1550/ADD_u8_u8_1549_Update/cr
      -- 
    if_choice_transition_5401_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 33_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1542_branch_ack_1, ack => password_sequence_CP_5043_elements(33)); -- 
    rr_5419_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5419_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(33), ack => ADD_u8_u8_1549_inst_req_0); -- 
    cr_5424_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5424_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(33), ack => ADD_u8_u8_1549_inst_req_1); -- 
    -- CP-element group 34:  merge  branch  transition  place  input  bypass 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	32 
    -- CP-element group 34: successors 
    -- CP-element group 34: 	51 
    -- CP-element group 34:  members (12) 
      -- CP-element group 34: 	 branch_block_stmt_1529/if_stmt_1542__exit__
      -- CP-element group 34: 	 branch_block_stmt_1554/branch_block_stmt_1554__entry__
      -- CP-element group 34: 	 branch_block_stmt_1529/branch_block_stmt_1529__exit__
      -- CP-element group 34: 	 branch_block_stmt_1529/$exit
      -- CP-element group 34: 	 branch_block_stmt_1529/if_stmt_1542_else_link/$exit
      -- CP-element group 34: 	 branch_block_stmt_1529/if_stmt_1542_else_link/else_choice_transition
      -- CP-element group 34: 	 branch_block_stmt_1554/$entry
      -- CP-element group 34: 	 branch_block_stmt_1554/merge_stmt_1555__entry__
      -- CP-element group 34: 	 branch_block_stmt_1554/merge_stmt_1555_dead_link/$entry
      -- CP-element group 34: 	 branch_block_stmt_1554/merge_stmt_1555__entry___PhiReq/$entry
      -- CP-element group 34: 	 branch_block_stmt_1554/merge_stmt_1555__entry___PhiReq/phi_stmt_1556/$entry
      -- CP-element group 34: 	 branch_block_stmt_1554/merge_stmt_1555__entry___PhiReq/phi_stmt_1556/phi_stmt_1556_sources/$entry
      -- 
    else_choice_transition_5405_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1542_branch_ack_0, ack => password_sequence_CP_5043_elements(34)); -- 
    -- CP-element group 35:  transition  input  bypass 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	33 
    -- CP-element group 35: successors 
    -- CP-element group 35:  members (3) 
      -- CP-element group 35: 	 branch_block_stmt_1529/assign_stmt_1550/ADD_u8_u8_1549_sample_completed_
      -- CP-element group 35: 	 branch_block_stmt_1529/assign_stmt_1550/ADD_u8_u8_1549_Sample/$exit
      -- CP-element group 35: 	 branch_block_stmt_1529/assign_stmt_1550/ADD_u8_u8_1549_Sample/ra
      -- 
    ra_5420_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 35_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1549_inst_ack_0, ack => password_sequence_CP_5043_elements(35)); -- 
    -- CP-element group 36:  fork  transition  place  input  output  bypass 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	33 
    -- CP-element group 36: successors 
    -- CP-element group 36: 	38 
    -- CP-element group 36: 	39 
    -- CP-element group 36:  members (14) 
      -- CP-element group 36: 	 branch_block_stmt_1529/loopback_3
      -- CP-element group 36: 	 branch_block_stmt_1529/assign_stmt_1550__exit__
      -- CP-element group 36: 	 branch_block_stmt_1529/assign_stmt_1550/$exit
      -- CP-element group 36: 	 branch_block_stmt_1529/assign_stmt_1550/ADD_u8_u8_1549_update_completed_
      -- CP-element group 36: 	 branch_block_stmt_1529/assign_stmt_1550/ADD_u8_u8_1549_Update/$exit
      -- CP-element group 36: 	 branch_block_stmt_1529/assign_stmt_1550/ADD_u8_u8_1549_Update/ca
      -- CP-element group 36: 	 branch_block_stmt_1529/loopback_3_PhiReq/$entry
      -- CP-element group 36: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/$entry
      -- CP-element group 36: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_sources/$entry
      -- CP-element group 36: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_sources/Interlock/$entry
      -- CP-element group 36: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_sources/Interlock/Sample/$entry
      -- CP-element group 36: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_sources/Interlock/Sample/req
      -- CP-element group 36: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_sources/Interlock/Update/$entry
      -- CP-element group 36: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_sources/Interlock/Update/req
      -- 
    ca_5425_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1549_inst_ack_1, ack => password_sequence_CP_5043_elements(36)); -- 
    req_5456_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5456_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(36), ack => nxt_index_3_1550_1534_buf_req_0); -- 
    req_5461_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5461_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(36), ack => nxt_index_3_1550_1534_buf_req_1); -- 
    -- CP-element group 37:  transition  output  delay-element  bypass 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	20 
    -- CP-element group 37: successors 
    -- CP-element group 37: 	41 
    -- CP-element group 37:  members (5) 
      -- CP-element group 37: 	 branch_block_stmt_1529/merge_stmt_1530__entry___PhiReq/$exit
      -- CP-element group 37: 	 branch_block_stmt_1529/merge_stmt_1530__entry___PhiReq/phi_stmt_1531/$exit
      -- CP-element group 37: 	 branch_block_stmt_1529/merge_stmt_1530__entry___PhiReq/phi_stmt_1531/phi_stmt_1531_sources/$exit
      -- CP-element group 37: 	 branch_block_stmt_1529/merge_stmt_1530__entry___PhiReq/phi_stmt_1531/phi_stmt_1531_sources/R_zero_1533_konst_delay_trans
      -- CP-element group 37: 	 branch_block_stmt_1529/merge_stmt_1530__entry___PhiReq/phi_stmt_1531/phi_stmt_1531_req
      -- 
    phi_stmt_1531_req_5440_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1531_req_5440_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(37), ack => phi_stmt_1531_req_0); -- 
    -- Element group password_sequence_CP_5043_elements(37) is a control-delay.
    cp_element_37_delay: control_delay_element  generic map(name => " 37_delay", delay_value => 1)  port map(req => password_sequence_CP_5043_elements(20), ack => password_sequence_CP_5043_elements(37), clk => clk, reset =>reset);
    -- CP-element group 38:  transition  input  bypass 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	36 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	40 
    -- CP-element group 38:  members (2) 
      -- CP-element group 38: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_sources/Interlock/Sample/$exit
      -- CP-element group 38: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_sources/Interlock/Sample/ack
      -- 
    ack_5457_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 38_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_3_1550_1534_buf_ack_0, ack => password_sequence_CP_5043_elements(38)); -- 
    -- CP-element group 39:  transition  input  bypass 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	36 
    -- CP-element group 39: successors 
    -- CP-element group 39: 	40 
    -- CP-element group 39:  members (2) 
      -- CP-element group 39: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_sources/Interlock/Update/$exit
      -- CP-element group 39: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_sources/Interlock/Update/ack
      -- 
    ack_5462_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 39_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_3_1550_1534_buf_ack_1, ack => password_sequence_CP_5043_elements(39)); -- 
    -- CP-element group 40:  join  transition  output  bypass 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	38 
    -- CP-element group 40: 	39 
    -- CP-element group 40: successors 
    -- CP-element group 40: 	41 
    -- CP-element group 40:  members (5) 
      -- CP-element group 40: 	 branch_block_stmt_1529/loopback_3_PhiReq/$exit
      -- CP-element group 40: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/$exit
      -- CP-element group 40: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_sources/$exit
      -- CP-element group 40: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_sources/Interlock/$exit
      -- CP-element group 40: 	 branch_block_stmt_1529/loopback_3_PhiReq/phi_stmt_1531/phi_stmt_1531_req
      -- 
    phi_stmt_1531_req_5463_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1531_req_5463_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(40), ack => phi_stmt_1531_req_1); -- 
    password_sequence_cp_element_group_40: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "password_sequence_cp_element_group_40"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= password_sequence_CP_5043_elements(38) & password_sequence_CP_5043_elements(39);
      gj_password_sequence_cp_element_group_40 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => password_sequence_CP_5043_elements(40), clk => clk, reset => reset); --
    end block;
    -- CP-element group 41:  merge  transition  place  bypass 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	40 
    -- CP-element group 41: 	37 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	42 
    -- CP-element group 41:  members (2) 
      -- CP-element group 41: 	 branch_block_stmt_1529/merge_stmt_1530_PhiReqMerge
      -- CP-element group 41: 	 branch_block_stmt_1529/merge_stmt_1530_PhiAck/$entry
      -- 
    password_sequence_CP_5043_elements(41) <= OrReduce(password_sequence_CP_5043_elements(40) & password_sequence_CP_5043_elements(37));
    -- CP-element group 42:  merge  transition  place  input  output  bypass 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	41 
    -- CP-element group 42: successors 
    -- CP-element group 42: 	29 
    -- CP-element group 42:  members (8) 
      -- CP-element group 42: 	 branch_block_stmt_1529/merge_stmt_1530__exit__
      -- CP-element group 42: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541__entry__
      -- CP-element group 42: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/$entry
      -- CP-element group 42: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/RPIPE_input_e_1537_sample_start_
      -- CP-element group 42: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/RPIPE_input_e_1537_Sample/$entry
      -- CP-element group 42: 	 branch_block_stmt_1529/assign_stmt_1538_to_assign_stmt_1541/RPIPE_input_e_1537_Sample/rr
      -- CP-element group 42: 	 branch_block_stmt_1529/merge_stmt_1530_PhiAck/$exit
      -- CP-element group 42: 	 branch_block_stmt_1529/merge_stmt_1530_PhiAck/phi_stmt_1531_ack
      -- 
    phi_stmt_1531_ack_5468_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 42_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_1531_ack_0, ack => password_sequence_CP_5043_elements(42)); -- 
    rr_5349_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5349_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(42), ack => RPIPE_input_e_1537_inst_req_0); -- 
    -- CP-element group 43:  transition  input  output  bypass 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	56 
    -- CP-element group 43: successors 
    -- CP-element group 43: 	44 
    -- CP-element group 43:  members (6) 
      -- CP-element group 43: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/RPIPE_input_e_1562_sample_completed_
      -- CP-element group 43: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/RPIPE_input_e_1562_update_start_
      -- CP-element group 43: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/RPIPE_input_e_1562_Sample/$exit
      -- CP-element group 43: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/RPIPE_input_e_1562_Sample/ra
      -- CP-element group 43: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/RPIPE_input_e_1562_Update/$entry
      -- CP-element group 43: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/RPIPE_input_e_1562_Update/cr
      -- 
    ra_5491_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 43_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1562_inst_ack_0, ack => password_sequence_CP_5043_elements(43)); -- 
    cr_5495_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5495_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(43), ack => RPIPE_input_e_1562_inst_req_1); -- 
    -- CP-element group 44:  transition  input  output  bypass 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	43 
    -- CP-element group 44: successors 
    -- CP-element group 44: 	45 
    -- CP-element group 44:  members (6) 
      -- CP-element group 44: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/RPIPE_input_e_1562_update_completed_
      -- CP-element group 44: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/RPIPE_input_e_1562_Update/$exit
      -- CP-element group 44: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/RPIPE_input_e_1562_Update/ca
      -- CP-element group 44: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/WPIPE_out_e_1564_sample_start_
      -- CP-element group 44: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/WPIPE_out_e_1564_Sample/$entry
      -- CP-element group 44: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/WPIPE_out_e_1564_Sample/req
      -- 
    ca_5496_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 44_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1562_inst_ack_1, ack => password_sequence_CP_5043_elements(44)); -- 
    req_5504_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5504_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(44), ack => WPIPE_out_e_1564_inst_req_0); -- 
    -- CP-element group 45:  transition  input  output  bypass 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	44 
    -- CP-element group 45: successors 
    -- CP-element group 45: 	46 
    -- CP-element group 45:  members (6) 
      -- CP-element group 45: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/WPIPE_out_e_1564_sample_completed_
      -- CP-element group 45: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/WPIPE_out_e_1564_update_start_
      -- CP-element group 45: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/WPIPE_out_e_1564_Sample/$exit
      -- CP-element group 45: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/WPIPE_out_e_1564_Sample/ack
      -- CP-element group 45: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/WPIPE_out_e_1564_Update/$entry
      -- CP-element group 45: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/WPIPE_out_e_1564_Update/req
      -- 
    ack_5505_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 45_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1564_inst_ack_0, ack => password_sequence_CP_5043_elements(45)); -- 
    req_5509_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5509_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(45), ack => WPIPE_out_e_1564_inst_req_1); -- 
    -- CP-element group 46:  branch  transition  place  input  output  bypass 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	45 
    -- CP-element group 46: successors 
    -- CP-element group 46: 	47 
    -- CP-element group 46: 	48 
    -- CP-element group 46:  members (27) 
      -- CP-element group 46: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566__exit__
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567__entry__
      -- CP-element group 46: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/$exit
      -- CP-element group 46: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/WPIPE_out_e_1564_update_completed_
      -- CP-element group 46: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/WPIPE_out_e_1564_Update/$exit
      -- CP-element group 46: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/WPIPE_out_e_1564_Update/ack
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_dead_link/$entry
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/$entry
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/$exit
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/$entry
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/$exit
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/ULT_u8_u1_1570_inputs/$entry
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/ULT_u8_u1_1570_inputs/$exit
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/SplitProtocol/$entry
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/SplitProtocol/$exit
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/SplitProtocol/Sample/$entry
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/SplitProtocol/Sample/$exit
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/SplitProtocol/Sample/rr
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/SplitProtocol/Sample/ra
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/SplitProtocol/Update/$entry
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/SplitProtocol/Update/$exit
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/SplitProtocol/Update/cr
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/ULT_u8_u1_1570/SplitProtocol/Update/ca
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_eval_test/branch_req
      -- CP-element group 46: 	 branch_block_stmt_1554/ULT_u8_u1_1570_place
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_if_link/$entry
      -- CP-element group 46: 	 branch_block_stmt_1554/if_stmt_1567_else_link/$entry
      -- 
    ack_5510_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 46_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1564_inst_ack_1, ack => password_sequence_CP_5043_elements(46)); -- 
    branch_req_5537_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_5537_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(46), ack => if_stmt_1567_branch_req_0); -- 
    -- CP-element group 47:  fork  transition  place  input  output  bypass 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	46 
    -- CP-element group 47: successors 
    -- CP-element group 47: 	49 
    -- CP-element group 47: 	50 
    -- CP-element group 47:  members (10) 
      -- CP-element group 47: 	 branch_block_stmt_1554/if_stmt_1567_if_link/$exit
      -- CP-element group 47: 	 branch_block_stmt_1554/if_stmt_1567_if_link/if_choice_transition
      -- CP-element group 47: 	 branch_block_stmt_1554/assign_stmt_1575__entry__
      -- CP-element group 47: 	 branch_block_stmt_1554/assign_stmt_1575/$entry
      -- CP-element group 47: 	 branch_block_stmt_1554/assign_stmt_1575/ADD_u8_u8_1574_sample_start_
      -- CP-element group 47: 	 branch_block_stmt_1554/assign_stmt_1575/ADD_u8_u8_1574_update_start_
      -- CP-element group 47: 	 branch_block_stmt_1554/assign_stmt_1575/ADD_u8_u8_1574_Sample/$entry
      -- CP-element group 47: 	 branch_block_stmt_1554/assign_stmt_1575/ADD_u8_u8_1574_Sample/rr
      -- CP-element group 47: 	 branch_block_stmt_1554/assign_stmt_1575/ADD_u8_u8_1574_Update/$entry
      -- CP-element group 47: 	 branch_block_stmt_1554/assign_stmt_1575/ADD_u8_u8_1574_Update/cr
      -- 
    if_choice_transition_5542_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 47_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1567_branch_ack_1, ack => password_sequence_CP_5043_elements(47)); -- 
    rr_5560_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5560_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(47), ack => ADD_u8_u8_1574_inst_req_0); -- 
    cr_5565_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5565_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(47), ack => ADD_u8_u8_1574_inst_req_1); -- 
    -- CP-element group 48:  merge  branch  transition  place  input  bypass 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	46 
    -- CP-element group 48: successors 
    -- CP-element group 48: 	65 
    -- CP-element group 48:  members (12) 
      -- CP-element group 48: 	 branch_block_stmt_1554/$exit
      -- CP-element group 48: 	 branch_block_stmt_1554/branch_block_stmt_1554__exit__
      -- CP-element group 48: 	 branch_block_stmt_1554/if_stmt_1567__exit__
      -- CP-element group 48: 	 branch_block_stmt_1554/if_stmt_1567_else_link/$exit
      -- CP-element group 48: 	 branch_block_stmt_1554/if_stmt_1567_else_link/else_choice_transition
      -- CP-element group 48: 	 branch_block_stmt_1579/$entry
      -- CP-element group 48: 	 branch_block_stmt_1579/branch_block_stmt_1579__entry__
      -- CP-element group 48: 	 branch_block_stmt_1579/merge_stmt_1580__entry__
      -- CP-element group 48: 	 branch_block_stmt_1579/merge_stmt_1580_dead_link/$entry
      -- CP-element group 48: 	 branch_block_stmt_1579/merge_stmt_1580__entry___PhiReq/$entry
      -- CP-element group 48: 	 branch_block_stmt_1579/merge_stmt_1580__entry___PhiReq/phi_stmt_1581/$entry
      -- CP-element group 48: 	 branch_block_stmt_1579/merge_stmt_1580__entry___PhiReq/phi_stmt_1581/phi_stmt_1581_sources/$entry
      -- 
    else_choice_transition_5546_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 48_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1567_branch_ack_0, ack => password_sequence_CP_5043_elements(48)); -- 
    -- CP-element group 49:  transition  input  bypass 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: 	47 
    -- CP-element group 49: successors 
    -- CP-element group 49:  members (3) 
      -- CP-element group 49: 	 branch_block_stmt_1554/assign_stmt_1575/ADD_u8_u8_1574_sample_completed_
      -- CP-element group 49: 	 branch_block_stmt_1554/assign_stmt_1575/ADD_u8_u8_1574_Sample/$exit
      -- CP-element group 49: 	 branch_block_stmt_1554/assign_stmt_1575/ADD_u8_u8_1574_Sample/ra
      -- 
    ra_5561_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 49_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1574_inst_ack_0, ack => password_sequence_CP_5043_elements(49)); -- 
    -- CP-element group 50:  fork  transition  place  input  output  bypass 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	47 
    -- CP-element group 50: successors 
    -- CP-element group 50: 	52 
    -- CP-element group 50: 	53 
    -- CP-element group 50:  members (14) 
      -- CP-element group 50: 	 branch_block_stmt_1554/assign_stmt_1575__exit__
      -- CP-element group 50: 	 branch_block_stmt_1554/loopback_4
      -- CP-element group 50: 	 branch_block_stmt_1554/assign_stmt_1575/$exit
      -- CP-element group 50: 	 branch_block_stmt_1554/assign_stmt_1575/ADD_u8_u8_1574_update_completed_
      -- CP-element group 50: 	 branch_block_stmt_1554/assign_stmt_1575/ADD_u8_u8_1574_Update/$exit
      -- CP-element group 50: 	 branch_block_stmt_1554/assign_stmt_1575/ADD_u8_u8_1574_Update/ca
      -- CP-element group 50: 	 branch_block_stmt_1554/loopback_4_PhiReq/$entry
      -- CP-element group 50: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/$entry
      -- CP-element group 50: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_sources/$entry
      -- CP-element group 50: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_sources/Interlock/$entry
      -- CP-element group 50: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_sources/Interlock/Sample/$entry
      -- CP-element group 50: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_sources/Interlock/Sample/req
      -- CP-element group 50: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_sources/Interlock/Update/$entry
      -- CP-element group 50: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_sources/Interlock/Update/req
      -- 
    ca_5566_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 50_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1574_inst_ack_1, ack => password_sequence_CP_5043_elements(50)); -- 
    req_5597_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5597_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(50), ack => nxt_index_4_1575_1559_buf_req_0); -- 
    req_5602_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5602_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(50), ack => nxt_index_4_1575_1559_buf_req_1); -- 
    -- CP-element group 51:  transition  output  delay-element  bypass 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	34 
    -- CP-element group 51: successors 
    -- CP-element group 51: 	55 
    -- CP-element group 51:  members (5) 
      -- CP-element group 51: 	 branch_block_stmt_1554/merge_stmt_1555__entry___PhiReq/$exit
      -- CP-element group 51: 	 branch_block_stmt_1554/merge_stmt_1555__entry___PhiReq/phi_stmt_1556/$exit
      -- CP-element group 51: 	 branch_block_stmt_1554/merge_stmt_1555__entry___PhiReq/phi_stmt_1556/phi_stmt_1556_sources/$exit
      -- CP-element group 51: 	 branch_block_stmt_1554/merge_stmt_1555__entry___PhiReq/phi_stmt_1556/phi_stmt_1556_sources/R_zero_1558_konst_delay_trans
      -- CP-element group 51: 	 branch_block_stmt_1554/merge_stmt_1555__entry___PhiReq/phi_stmt_1556/phi_stmt_1556_req
      -- 
    phi_stmt_1556_req_5581_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1556_req_5581_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(51), ack => phi_stmt_1556_req_0); -- 
    -- Element group password_sequence_CP_5043_elements(51) is a control-delay.
    cp_element_51_delay: control_delay_element  generic map(name => " 51_delay", delay_value => 1)  port map(req => password_sequence_CP_5043_elements(34), ack => password_sequence_CP_5043_elements(51), clk => clk, reset =>reset);
    -- CP-element group 52:  transition  input  bypass 
    -- CP-element group 52: predecessors 
    -- CP-element group 52: 	50 
    -- CP-element group 52: successors 
    -- CP-element group 52: 	54 
    -- CP-element group 52:  members (2) 
      -- CP-element group 52: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_sources/Interlock/Sample/$exit
      -- CP-element group 52: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_sources/Interlock/Sample/ack
      -- 
    ack_5598_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 52_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_4_1575_1559_buf_ack_0, ack => password_sequence_CP_5043_elements(52)); -- 
    -- CP-element group 53:  transition  input  bypass 
    -- CP-element group 53: predecessors 
    -- CP-element group 53: 	50 
    -- CP-element group 53: successors 
    -- CP-element group 53: 	54 
    -- CP-element group 53:  members (2) 
      -- CP-element group 53: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_sources/Interlock/Update/$exit
      -- CP-element group 53: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_sources/Interlock/Update/ack
      -- 
    ack_5603_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 53_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_4_1575_1559_buf_ack_1, ack => password_sequence_CP_5043_elements(53)); -- 
    -- CP-element group 54:  join  transition  output  bypass 
    -- CP-element group 54: predecessors 
    -- CP-element group 54: 	52 
    -- CP-element group 54: 	53 
    -- CP-element group 54: successors 
    -- CP-element group 54: 	55 
    -- CP-element group 54:  members (5) 
      -- CP-element group 54: 	 branch_block_stmt_1554/loopback_4_PhiReq/$exit
      -- CP-element group 54: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/$exit
      -- CP-element group 54: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_sources/$exit
      -- CP-element group 54: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_sources/Interlock/$exit
      -- CP-element group 54: 	 branch_block_stmt_1554/loopback_4_PhiReq/phi_stmt_1556/phi_stmt_1556_req
      -- 
    phi_stmt_1556_req_5604_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1556_req_5604_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(54), ack => phi_stmt_1556_req_1); -- 
    password_sequence_cp_element_group_54: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "password_sequence_cp_element_group_54"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= password_sequence_CP_5043_elements(52) & password_sequence_CP_5043_elements(53);
      gj_password_sequence_cp_element_group_54 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => password_sequence_CP_5043_elements(54), clk => clk, reset => reset); --
    end block;
    -- CP-element group 55:  merge  transition  place  bypass 
    -- CP-element group 55: predecessors 
    -- CP-element group 55: 	54 
    -- CP-element group 55: 	51 
    -- CP-element group 55: successors 
    -- CP-element group 55: 	56 
    -- CP-element group 55:  members (2) 
      -- CP-element group 55: 	 branch_block_stmt_1554/merge_stmt_1555_PhiReqMerge
      -- CP-element group 55: 	 branch_block_stmt_1554/merge_stmt_1555_PhiAck/$entry
      -- 
    password_sequence_CP_5043_elements(55) <= OrReduce(password_sequence_CP_5043_elements(54) & password_sequence_CP_5043_elements(51));
    -- CP-element group 56:  merge  transition  place  input  output  bypass 
    -- CP-element group 56: predecessors 
    -- CP-element group 56: 	55 
    -- CP-element group 56: successors 
    -- CP-element group 56: 	43 
    -- CP-element group 56:  members (8) 
      -- CP-element group 56: 	 branch_block_stmt_1554/merge_stmt_1555__exit__
      -- CP-element group 56: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566__entry__
      -- CP-element group 56: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/$entry
      -- CP-element group 56: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/RPIPE_input_e_1562_sample_start_
      -- CP-element group 56: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/RPIPE_input_e_1562_Sample/$entry
      -- CP-element group 56: 	 branch_block_stmt_1554/assign_stmt_1563_to_assign_stmt_1566/RPIPE_input_e_1562_Sample/rr
      -- CP-element group 56: 	 branch_block_stmt_1554/merge_stmt_1555_PhiAck/$exit
      -- CP-element group 56: 	 branch_block_stmt_1554/merge_stmt_1555_PhiAck/phi_stmt_1556_ack
      -- 
    phi_stmt_1556_ack_5609_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 56_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_1556_ack_0, ack => password_sequence_CP_5043_elements(56)); -- 
    rr_5490_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5490_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(56), ack => RPIPE_input_e_1562_inst_req_0); -- 
    -- CP-element group 57:  transition  input  output  bypass 
    -- CP-element group 57: predecessors 
    -- CP-element group 57: 	70 
    -- CP-element group 57: successors 
    -- CP-element group 57: 	58 
    -- CP-element group 57:  members (6) 
      -- CP-element group 57: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/RPIPE_input_d_1587_sample_completed_
      -- CP-element group 57: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/RPIPE_input_d_1587_update_start_
      -- CP-element group 57: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/RPIPE_input_d_1587_Sample/$exit
      -- CP-element group 57: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/RPIPE_input_d_1587_Sample/ra
      -- CP-element group 57: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/RPIPE_input_d_1587_Update/$entry
      -- CP-element group 57: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/RPIPE_input_d_1587_Update/cr
      -- 
    ra_5632_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 57_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1587_inst_ack_0, ack => password_sequence_CP_5043_elements(57)); -- 
    cr_5636_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5636_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(57), ack => RPIPE_input_d_1587_inst_req_1); -- 
    -- CP-element group 58:  transition  input  output  bypass 
    -- CP-element group 58: predecessors 
    -- CP-element group 58: 	57 
    -- CP-element group 58: successors 
    -- CP-element group 58: 	59 
    -- CP-element group 58:  members (6) 
      -- CP-element group 58: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/RPIPE_input_d_1587_update_completed_
      -- CP-element group 58: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/RPIPE_input_d_1587_Update/$exit
      -- CP-element group 58: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/RPIPE_input_d_1587_Update/ca
      -- CP-element group 58: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/WPIPE_out_d_1589_sample_start_
      -- CP-element group 58: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/WPIPE_out_d_1589_Sample/$entry
      -- CP-element group 58: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/WPIPE_out_d_1589_Sample/req
      -- 
    ca_5637_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 58_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_d_1587_inst_ack_1, ack => password_sequence_CP_5043_elements(58)); -- 
    req_5645_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5645_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(58), ack => WPIPE_out_d_1589_inst_req_0); -- 
    -- CP-element group 59:  transition  input  output  bypass 
    -- CP-element group 59: predecessors 
    -- CP-element group 59: 	58 
    -- CP-element group 59: successors 
    -- CP-element group 59: 	60 
    -- CP-element group 59:  members (6) 
      -- CP-element group 59: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/WPIPE_out_d_1589_sample_completed_
      -- CP-element group 59: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/WPIPE_out_d_1589_update_start_
      -- CP-element group 59: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/WPIPE_out_d_1589_Sample/$exit
      -- CP-element group 59: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/WPIPE_out_d_1589_Sample/ack
      -- CP-element group 59: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/WPIPE_out_d_1589_Update/$entry
      -- CP-element group 59: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/WPIPE_out_d_1589_Update/req
      -- 
    ack_5646_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 59_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1589_inst_ack_0, ack => password_sequence_CP_5043_elements(59)); -- 
    req_5650_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5650_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(59), ack => WPIPE_out_d_1589_inst_req_1); -- 
    -- CP-element group 60:  branch  transition  place  input  output  bypass 
    -- CP-element group 60: predecessors 
    -- CP-element group 60: 	59 
    -- CP-element group 60: successors 
    -- CP-element group 60: 	61 
    -- CP-element group 60: 	62 
    -- CP-element group 60:  members (27) 
      -- CP-element group 60: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591__exit__
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592__entry__
      -- CP-element group 60: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/$exit
      -- CP-element group 60: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/WPIPE_out_d_1589_update_completed_
      -- CP-element group 60: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/WPIPE_out_d_1589_Update/$exit
      -- CP-element group 60: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/WPIPE_out_d_1589_Update/ack
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_dead_link/$entry
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/$entry
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/$exit
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/$entry
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/$exit
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/ULT_u8_u1_1595_inputs/$entry
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/ULT_u8_u1_1595_inputs/$exit
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/SplitProtocol/$entry
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/SplitProtocol/$exit
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/SplitProtocol/Sample/$entry
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/SplitProtocol/Sample/$exit
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/SplitProtocol/Sample/rr
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/SplitProtocol/Sample/ra
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/SplitProtocol/Update/$entry
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/SplitProtocol/Update/$exit
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/SplitProtocol/Update/cr
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/ULT_u8_u1_1595/SplitProtocol/Update/ca
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_eval_test/branch_req
      -- CP-element group 60: 	 branch_block_stmt_1579/ULT_u8_u1_1595_place
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_if_link/$entry
      -- CP-element group 60: 	 branch_block_stmt_1579/if_stmt_1592_else_link/$entry
      -- 
    ack_5651_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 60_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_d_1589_inst_ack_1, ack => password_sequence_CP_5043_elements(60)); -- 
    branch_req_5678_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_5678_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(60), ack => if_stmt_1592_branch_req_0); -- 
    -- CP-element group 61:  fork  transition  place  input  output  bypass 
    -- CP-element group 61: predecessors 
    -- CP-element group 61: 	60 
    -- CP-element group 61: successors 
    -- CP-element group 61: 	63 
    -- CP-element group 61: 	64 
    -- CP-element group 61:  members (10) 
      -- CP-element group 61: 	 branch_block_stmt_1579/if_stmt_1592_if_link/$exit
      -- CP-element group 61: 	 branch_block_stmt_1579/if_stmt_1592_if_link/if_choice_transition
      -- CP-element group 61: 	 branch_block_stmt_1579/assign_stmt_1600__entry__
      -- CP-element group 61: 	 branch_block_stmt_1579/assign_stmt_1600/$entry
      -- CP-element group 61: 	 branch_block_stmt_1579/assign_stmt_1600/ADD_u8_u8_1599_sample_start_
      -- CP-element group 61: 	 branch_block_stmt_1579/assign_stmt_1600/ADD_u8_u8_1599_update_start_
      -- CP-element group 61: 	 branch_block_stmt_1579/assign_stmt_1600/ADD_u8_u8_1599_Sample/$entry
      -- CP-element group 61: 	 branch_block_stmt_1579/assign_stmt_1600/ADD_u8_u8_1599_Sample/rr
      -- CP-element group 61: 	 branch_block_stmt_1579/assign_stmt_1600/ADD_u8_u8_1599_Update/$entry
      -- CP-element group 61: 	 branch_block_stmt_1579/assign_stmt_1600/ADD_u8_u8_1599_Update/cr
      -- 
    if_choice_transition_5683_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 61_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1592_branch_ack_1, ack => password_sequence_CP_5043_elements(61)); -- 
    rr_5701_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5701_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(61), ack => ADD_u8_u8_1599_inst_req_0); -- 
    cr_5706_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5706_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(61), ack => ADD_u8_u8_1599_inst_req_1); -- 
    -- CP-element group 62:  merge  branch  transition  place  input  bypass 
    -- CP-element group 62: predecessors 
    -- CP-element group 62: 	60 
    -- CP-element group 62: successors 
    -- CP-element group 62: 	79 
    -- CP-element group 62:  members (12) 
      -- CP-element group 62: 	 branch_block_stmt_1579/$exit
      -- CP-element group 62: 	 branch_block_stmt_1579/branch_block_stmt_1579__exit__
      -- CP-element group 62: 	 branch_block_stmt_1579/if_stmt_1592__exit__
      -- CP-element group 62: 	 branch_block_stmt_1579/if_stmt_1592_else_link/$exit
      -- CP-element group 62: 	 branch_block_stmt_1579/if_stmt_1592_else_link/else_choice_transition
      -- CP-element group 62: 	 branch_block_stmt_1604/$entry
      -- CP-element group 62: 	 branch_block_stmt_1604/branch_block_stmt_1604__entry__
      -- CP-element group 62: 	 branch_block_stmt_1604/merge_stmt_1605__entry__
      -- CP-element group 62: 	 branch_block_stmt_1604/merge_stmt_1605_dead_link/$entry
      -- CP-element group 62: 	 branch_block_stmt_1604/merge_stmt_1605__entry___PhiReq/$entry
      -- CP-element group 62: 	 branch_block_stmt_1604/merge_stmt_1605__entry___PhiReq/phi_stmt_1606/$entry
      -- CP-element group 62: 	 branch_block_stmt_1604/merge_stmt_1605__entry___PhiReq/phi_stmt_1606/phi_stmt_1606_sources/$entry
      -- 
    else_choice_transition_5687_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 62_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1592_branch_ack_0, ack => password_sequence_CP_5043_elements(62)); -- 
    -- CP-element group 63:  transition  input  bypass 
    -- CP-element group 63: predecessors 
    -- CP-element group 63: 	61 
    -- CP-element group 63: successors 
    -- CP-element group 63:  members (3) 
      -- CP-element group 63: 	 branch_block_stmt_1579/assign_stmt_1600/ADD_u8_u8_1599_sample_completed_
      -- CP-element group 63: 	 branch_block_stmt_1579/assign_stmt_1600/ADD_u8_u8_1599_Sample/$exit
      -- CP-element group 63: 	 branch_block_stmt_1579/assign_stmt_1600/ADD_u8_u8_1599_Sample/ra
      -- 
    ra_5702_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 63_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1599_inst_ack_0, ack => password_sequence_CP_5043_elements(63)); -- 
    -- CP-element group 64:  fork  transition  place  input  output  bypass 
    -- CP-element group 64: predecessors 
    -- CP-element group 64: 	61 
    -- CP-element group 64: successors 
    -- CP-element group 64: 	67 
    -- CP-element group 64: 	66 
    -- CP-element group 64:  members (14) 
      -- CP-element group 64: 	 branch_block_stmt_1579/assign_stmt_1600__exit__
      -- CP-element group 64: 	 branch_block_stmt_1579/loopback_5
      -- CP-element group 64: 	 branch_block_stmt_1579/assign_stmt_1600/$exit
      -- CP-element group 64: 	 branch_block_stmt_1579/assign_stmt_1600/ADD_u8_u8_1599_update_completed_
      -- CP-element group 64: 	 branch_block_stmt_1579/assign_stmt_1600/ADD_u8_u8_1599_Update/$exit
      -- CP-element group 64: 	 branch_block_stmt_1579/assign_stmt_1600/ADD_u8_u8_1599_Update/ca
      -- CP-element group 64: 	 branch_block_stmt_1579/loopback_5_PhiReq/$entry
      -- CP-element group 64: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/$entry
      -- CP-element group 64: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/$entry
      -- CP-element group 64: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/$entry
      -- CP-element group 64: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/Sample/$entry
      -- CP-element group 64: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/Sample/req
      -- CP-element group 64: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/Update/$entry
      -- CP-element group 64: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/Update/req
      -- 
    ca_5707_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 64_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1599_inst_ack_1, ack => password_sequence_CP_5043_elements(64)); -- 
    req_5738_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5738_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(64), ack => nxt_index_5_1600_1584_buf_req_0); -- 
    req_5743_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5743_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(64), ack => nxt_index_5_1600_1584_buf_req_1); -- 
    -- CP-element group 65:  transition  output  delay-element  bypass 
    -- CP-element group 65: predecessors 
    -- CP-element group 65: 	48 
    -- CP-element group 65: successors 
    -- CP-element group 65: 	69 
    -- CP-element group 65:  members (5) 
      -- CP-element group 65: 	 branch_block_stmt_1579/merge_stmt_1580__entry___PhiReq/$exit
      -- CP-element group 65: 	 branch_block_stmt_1579/merge_stmt_1580__entry___PhiReq/phi_stmt_1581/$exit
      -- CP-element group 65: 	 branch_block_stmt_1579/merge_stmt_1580__entry___PhiReq/phi_stmt_1581/phi_stmt_1581_sources/$exit
      -- CP-element group 65: 	 branch_block_stmt_1579/merge_stmt_1580__entry___PhiReq/phi_stmt_1581/phi_stmt_1581_sources/R_zero_1583_konst_delay_trans
      -- CP-element group 65: 	 branch_block_stmt_1579/merge_stmt_1580__entry___PhiReq/phi_stmt_1581/phi_stmt_1581_req
      -- 
    phi_stmt_1581_req_5722_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1581_req_5722_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(65), ack => phi_stmt_1581_req_0); -- 
    -- Element group password_sequence_CP_5043_elements(65) is a control-delay.
    cp_element_65_delay: control_delay_element  generic map(name => " 65_delay", delay_value => 1)  port map(req => password_sequence_CP_5043_elements(48), ack => password_sequence_CP_5043_elements(65), clk => clk, reset =>reset);
    -- CP-element group 66:  transition  input  bypass 
    -- CP-element group 66: predecessors 
    -- CP-element group 66: 	64 
    -- CP-element group 66: successors 
    -- CP-element group 66: 	68 
    -- CP-element group 66:  members (2) 
      -- CP-element group 66: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/Sample/$exit
      -- CP-element group 66: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/Sample/ack
      -- 
    ack_5739_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 66_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_5_1600_1584_buf_ack_0, ack => password_sequence_CP_5043_elements(66)); -- 
    -- CP-element group 67:  transition  input  bypass 
    -- CP-element group 67: predecessors 
    -- CP-element group 67: 	64 
    -- CP-element group 67: successors 
    -- CP-element group 67: 	68 
    -- CP-element group 67:  members (2) 
      -- CP-element group 67: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/Update/$exit
      -- CP-element group 67: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/Update/ack
      -- 
    ack_5744_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 67_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_5_1600_1584_buf_ack_1, ack => password_sequence_CP_5043_elements(67)); -- 
    -- CP-element group 68:  join  transition  output  bypass 
    -- CP-element group 68: predecessors 
    -- CP-element group 68: 	67 
    -- CP-element group 68: 	66 
    -- CP-element group 68: successors 
    -- CP-element group 68: 	69 
    -- CP-element group 68:  members (5) 
      -- CP-element group 68: 	 branch_block_stmt_1579/loopback_5_PhiReq/$exit
      -- CP-element group 68: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/$exit
      -- CP-element group 68: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/$exit
      -- CP-element group 68: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/$exit
      -- CP-element group 68: 	 branch_block_stmt_1579/loopback_5_PhiReq/phi_stmt_1581/phi_stmt_1581_req
      -- 
    phi_stmt_1581_req_5745_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1581_req_5745_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(68), ack => phi_stmt_1581_req_1); -- 
    password_sequence_cp_element_group_68: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "password_sequence_cp_element_group_68"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= password_sequence_CP_5043_elements(67) & password_sequence_CP_5043_elements(66);
      gj_password_sequence_cp_element_group_68 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => password_sequence_CP_5043_elements(68), clk => clk, reset => reset); --
    end block;
    -- CP-element group 69:  merge  transition  place  bypass 
    -- CP-element group 69: predecessors 
    -- CP-element group 69: 	68 
    -- CP-element group 69: 	65 
    -- CP-element group 69: successors 
    -- CP-element group 69: 	70 
    -- CP-element group 69:  members (2) 
      -- CP-element group 69: 	 branch_block_stmt_1579/merge_stmt_1580_PhiReqMerge
      -- CP-element group 69: 	 branch_block_stmt_1579/merge_stmt_1580_PhiAck/$entry
      -- 
    password_sequence_CP_5043_elements(69) <= OrReduce(password_sequence_CP_5043_elements(68) & password_sequence_CP_5043_elements(65));
    -- CP-element group 70:  merge  transition  place  input  output  bypass 
    -- CP-element group 70: predecessors 
    -- CP-element group 70: 	69 
    -- CP-element group 70: successors 
    -- CP-element group 70: 	57 
    -- CP-element group 70:  members (8) 
      -- CP-element group 70: 	 branch_block_stmt_1579/merge_stmt_1580__exit__
      -- CP-element group 70: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591__entry__
      -- CP-element group 70: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/$entry
      -- CP-element group 70: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/RPIPE_input_d_1587_sample_start_
      -- CP-element group 70: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/RPIPE_input_d_1587_Sample/$entry
      -- CP-element group 70: 	 branch_block_stmt_1579/assign_stmt_1588_to_assign_stmt_1591/RPIPE_input_d_1587_Sample/rr
      -- CP-element group 70: 	 branch_block_stmt_1579/merge_stmt_1580_PhiAck/$exit
      -- CP-element group 70: 	 branch_block_stmt_1579/merge_stmt_1580_PhiAck/phi_stmt_1581_ack
      -- 
    phi_stmt_1581_ack_5750_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 70_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_1581_ack_0, ack => password_sequence_CP_5043_elements(70)); -- 
    rr_5631_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5631_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(70), ack => RPIPE_input_d_1587_inst_req_0); -- 
    -- CP-element group 71:  transition  input  output  bypass 
    -- CP-element group 71: predecessors 
    -- CP-element group 71: 	84 
    -- CP-element group 71: successors 
    -- CP-element group 71: 	72 
    -- CP-element group 71:  members (6) 
      -- CP-element group 71: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/RPIPE_input_e_1612_sample_completed_
      -- CP-element group 71: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/RPIPE_input_e_1612_update_start_
      -- CP-element group 71: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/RPIPE_input_e_1612_Sample/$exit
      -- CP-element group 71: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/RPIPE_input_e_1612_Sample/ra
      -- CP-element group 71: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/RPIPE_input_e_1612_Update/$entry
      -- CP-element group 71: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/RPIPE_input_e_1612_Update/cr
      -- 
    ra_5773_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 71_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1612_inst_ack_0, ack => password_sequence_CP_5043_elements(71)); -- 
    cr_5777_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5777_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(71), ack => RPIPE_input_e_1612_inst_req_1); -- 
    -- CP-element group 72:  transition  input  output  bypass 
    -- CP-element group 72: predecessors 
    -- CP-element group 72: 	71 
    -- CP-element group 72: successors 
    -- CP-element group 72: 	73 
    -- CP-element group 72:  members (6) 
      -- CP-element group 72: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/RPIPE_input_e_1612_update_completed_
      -- CP-element group 72: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/RPIPE_input_e_1612_Update/$exit
      -- CP-element group 72: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/RPIPE_input_e_1612_Update/ca
      -- CP-element group 72: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/WPIPE_out_e_1614_sample_start_
      -- CP-element group 72: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/WPIPE_out_e_1614_Sample/$entry
      -- CP-element group 72: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/WPIPE_out_e_1614_Sample/req
      -- 
    ca_5778_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 72_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1612_inst_ack_1, ack => password_sequence_CP_5043_elements(72)); -- 
    req_5786_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5786_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(72), ack => WPIPE_out_e_1614_inst_req_0); -- 
    -- CP-element group 73:  transition  input  output  bypass 
    -- CP-element group 73: predecessors 
    -- CP-element group 73: 	72 
    -- CP-element group 73: successors 
    -- CP-element group 73: 	74 
    -- CP-element group 73:  members (6) 
      -- CP-element group 73: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/WPIPE_out_e_1614_sample_completed_
      -- CP-element group 73: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/WPIPE_out_e_1614_update_start_
      -- CP-element group 73: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/WPIPE_out_e_1614_Sample/$exit
      -- CP-element group 73: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/WPIPE_out_e_1614_Sample/ack
      -- CP-element group 73: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/WPIPE_out_e_1614_Update/$entry
      -- CP-element group 73: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/WPIPE_out_e_1614_Update/req
      -- 
    ack_5787_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 73_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1614_inst_ack_0, ack => password_sequence_CP_5043_elements(73)); -- 
    req_5791_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5791_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(73), ack => WPIPE_out_e_1614_inst_req_1); -- 
    -- CP-element group 74:  branch  transition  place  input  output  bypass 
    -- CP-element group 74: predecessors 
    -- CP-element group 74: 	73 
    -- CP-element group 74: successors 
    -- CP-element group 74: 	76 
    -- CP-element group 74: 	75 
    -- CP-element group 74:  members (27) 
      -- CP-element group 74: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616__exit__
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617__entry__
      -- CP-element group 74: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/$exit
      -- CP-element group 74: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/WPIPE_out_e_1614_update_completed_
      -- CP-element group 74: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/WPIPE_out_e_1614_Update/$exit
      -- CP-element group 74: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/WPIPE_out_e_1614_Update/ack
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_dead_link/$entry
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/$entry
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/$exit
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/$entry
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/$exit
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/ULT_u8_u1_1620_inputs/$entry
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/ULT_u8_u1_1620_inputs/$exit
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/SplitProtocol/$entry
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/SplitProtocol/$exit
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/SplitProtocol/Sample/$entry
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/SplitProtocol/Sample/$exit
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/SplitProtocol/Sample/rr
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/SplitProtocol/Sample/ra
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/SplitProtocol/Update/$entry
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/SplitProtocol/Update/$exit
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/SplitProtocol/Update/cr
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/ULT_u8_u1_1620/SplitProtocol/Update/ca
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_eval_test/branch_req
      -- CP-element group 74: 	 branch_block_stmt_1604/ULT_u8_u1_1620_place
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_if_link/$entry
      -- CP-element group 74: 	 branch_block_stmt_1604/if_stmt_1617_else_link/$entry
      -- 
    ack_5792_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 74_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1614_inst_ack_1, ack => password_sequence_CP_5043_elements(74)); -- 
    branch_req_5819_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_5819_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(74), ack => if_stmt_1617_branch_req_0); -- 
    -- CP-element group 75:  fork  transition  place  input  output  bypass 
    -- CP-element group 75: predecessors 
    -- CP-element group 75: 	74 
    -- CP-element group 75: successors 
    -- CP-element group 75: 	77 
    -- CP-element group 75: 	78 
    -- CP-element group 75:  members (10) 
      -- CP-element group 75: 	 branch_block_stmt_1604/if_stmt_1617_if_link/$exit
      -- CP-element group 75: 	 branch_block_stmt_1604/if_stmt_1617_if_link/if_choice_transition
      -- CP-element group 75: 	 branch_block_stmt_1604/assign_stmt_1625__entry__
      -- CP-element group 75: 	 branch_block_stmt_1604/assign_stmt_1625/$entry
      -- CP-element group 75: 	 branch_block_stmt_1604/assign_stmt_1625/ADD_u8_u8_1624_sample_start_
      -- CP-element group 75: 	 branch_block_stmt_1604/assign_stmt_1625/ADD_u8_u8_1624_update_start_
      -- CP-element group 75: 	 branch_block_stmt_1604/assign_stmt_1625/ADD_u8_u8_1624_Sample/$entry
      -- CP-element group 75: 	 branch_block_stmt_1604/assign_stmt_1625/ADD_u8_u8_1624_Sample/rr
      -- CP-element group 75: 	 branch_block_stmt_1604/assign_stmt_1625/ADD_u8_u8_1624_Update/$entry
      -- CP-element group 75: 	 branch_block_stmt_1604/assign_stmt_1625/ADD_u8_u8_1624_Update/cr
      -- 
    if_choice_transition_5824_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 75_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1617_branch_ack_1, ack => password_sequence_CP_5043_elements(75)); -- 
    rr_5842_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5842_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(75), ack => ADD_u8_u8_1624_inst_req_0); -- 
    cr_5847_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5847_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(75), ack => ADD_u8_u8_1624_inst_req_1); -- 
    -- CP-element group 76:  merge  transition  place  input  bypass 
    -- CP-element group 76: predecessors 
    -- CP-element group 76: 	74 
    -- CP-element group 76: successors 
    -- CP-element group 76:  members (6) 
      -- CP-element group 76: 	 $exit
      -- CP-element group 76: 	 branch_block_stmt_1604/$exit
      -- CP-element group 76: 	 branch_block_stmt_1604/branch_block_stmt_1604__exit__
      -- CP-element group 76: 	 branch_block_stmt_1604/if_stmt_1617__exit__
      -- CP-element group 76: 	 branch_block_stmt_1604/if_stmt_1617_else_link/$exit
      -- CP-element group 76: 	 branch_block_stmt_1604/if_stmt_1617_else_link/else_choice_transition
      -- 
    else_choice_transition_5828_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 76_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1617_branch_ack_0, ack => password_sequence_CP_5043_elements(76)); -- 
    -- CP-element group 77:  transition  input  bypass 
    -- CP-element group 77: predecessors 
    -- CP-element group 77: 	75 
    -- CP-element group 77: successors 
    -- CP-element group 77:  members (3) 
      -- CP-element group 77: 	 branch_block_stmt_1604/assign_stmt_1625/ADD_u8_u8_1624_sample_completed_
      -- CP-element group 77: 	 branch_block_stmt_1604/assign_stmt_1625/ADD_u8_u8_1624_Sample/$exit
      -- CP-element group 77: 	 branch_block_stmt_1604/assign_stmt_1625/ADD_u8_u8_1624_Sample/ra
      -- 
    ra_5843_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 77_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1624_inst_ack_0, ack => password_sequence_CP_5043_elements(77)); -- 
    -- CP-element group 78:  fork  transition  place  input  output  bypass 
    -- CP-element group 78: predecessors 
    -- CP-element group 78: 	75 
    -- CP-element group 78: successors 
    -- CP-element group 78: 	80 
    -- CP-element group 78: 	81 
    -- CP-element group 78:  members (14) 
      -- CP-element group 78: 	 branch_block_stmt_1604/assign_stmt_1625__exit__
      -- CP-element group 78: 	 branch_block_stmt_1604/loopback_6
      -- CP-element group 78: 	 branch_block_stmt_1604/assign_stmt_1625/$exit
      -- CP-element group 78: 	 branch_block_stmt_1604/assign_stmt_1625/ADD_u8_u8_1624_update_completed_
      -- CP-element group 78: 	 branch_block_stmt_1604/assign_stmt_1625/ADD_u8_u8_1624_Update/$exit
      -- CP-element group 78: 	 branch_block_stmt_1604/assign_stmt_1625/ADD_u8_u8_1624_Update/ca
      -- CP-element group 78: 	 branch_block_stmt_1604/loopback_6_PhiReq/$entry
      -- CP-element group 78: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/$entry
      -- CP-element group 78: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/$entry
      -- CP-element group 78: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/Interlock/$entry
      -- CP-element group 78: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/Interlock/Sample/$entry
      -- CP-element group 78: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/Interlock/Sample/req
      -- CP-element group 78: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/Interlock/Update/$entry
      -- CP-element group 78: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/Interlock/Update/req
      -- 
    ca_5848_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 78_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1624_inst_ack_1, ack => password_sequence_CP_5043_elements(78)); -- 
    req_5879_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5879_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(78), ack => nxt_index_6_1625_1609_buf_req_0); -- 
    req_5884_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_5884_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(78), ack => nxt_index_6_1625_1609_buf_req_1); -- 
    -- CP-element group 79:  transition  output  delay-element  bypass 
    -- CP-element group 79: predecessors 
    -- CP-element group 79: 	62 
    -- CP-element group 79: successors 
    -- CP-element group 79: 	83 
    -- CP-element group 79:  members (5) 
      -- CP-element group 79: 	 branch_block_stmt_1604/merge_stmt_1605__entry___PhiReq/$exit
      -- CP-element group 79: 	 branch_block_stmt_1604/merge_stmt_1605__entry___PhiReq/phi_stmt_1606/$exit
      -- CP-element group 79: 	 branch_block_stmt_1604/merge_stmt_1605__entry___PhiReq/phi_stmt_1606/phi_stmt_1606_sources/$exit
      -- CP-element group 79: 	 branch_block_stmt_1604/merge_stmt_1605__entry___PhiReq/phi_stmt_1606/phi_stmt_1606_sources/R_zero_1608_konst_delay_trans
      -- CP-element group 79: 	 branch_block_stmt_1604/merge_stmt_1605__entry___PhiReq/phi_stmt_1606/phi_stmt_1606_req
      -- 
    phi_stmt_1606_req_5863_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1606_req_5863_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(79), ack => phi_stmt_1606_req_0); -- 
    -- Element group password_sequence_CP_5043_elements(79) is a control-delay.
    cp_element_79_delay: control_delay_element  generic map(name => " 79_delay", delay_value => 1)  port map(req => password_sequence_CP_5043_elements(62), ack => password_sequence_CP_5043_elements(79), clk => clk, reset =>reset);
    -- CP-element group 80:  transition  input  bypass 
    -- CP-element group 80: predecessors 
    -- CP-element group 80: 	78 
    -- CP-element group 80: successors 
    -- CP-element group 80: 	82 
    -- CP-element group 80:  members (2) 
      -- CP-element group 80: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/Interlock/Sample/$exit
      -- CP-element group 80: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/Interlock/Sample/ack
      -- 
    ack_5880_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 80_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_6_1625_1609_buf_ack_0, ack => password_sequence_CP_5043_elements(80)); -- 
    -- CP-element group 81:  transition  input  bypass 
    -- CP-element group 81: predecessors 
    -- CP-element group 81: 	78 
    -- CP-element group 81: successors 
    -- CP-element group 81: 	82 
    -- CP-element group 81:  members (2) 
      -- CP-element group 81: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/Interlock/Update/$exit
      -- CP-element group 81: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/Interlock/Update/ack
      -- 
    ack_5885_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 81_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_6_1625_1609_buf_ack_1, ack => password_sequence_CP_5043_elements(81)); -- 
    -- CP-element group 82:  join  transition  output  bypass 
    -- CP-element group 82: predecessors 
    -- CP-element group 82: 	80 
    -- CP-element group 82: 	81 
    -- CP-element group 82: successors 
    -- CP-element group 82: 	83 
    -- CP-element group 82:  members (5) 
      -- CP-element group 82: 	 branch_block_stmt_1604/loopback_6_PhiReq/$exit
      -- CP-element group 82: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/$exit
      -- CP-element group 82: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/$exit
      -- CP-element group 82: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/Interlock/$exit
      -- CP-element group 82: 	 branch_block_stmt_1604/loopback_6_PhiReq/phi_stmt_1606/phi_stmt_1606_req
      -- 
    phi_stmt_1606_req_5886_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1606_req_5886_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(82), ack => phi_stmt_1606_req_1); -- 
    password_sequence_cp_element_group_82: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "password_sequence_cp_element_group_82"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= password_sequence_CP_5043_elements(80) & password_sequence_CP_5043_elements(81);
      gj_password_sequence_cp_element_group_82 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => password_sequence_CP_5043_elements(82), clk => clk, reset => reset); --
    end block;
    -- CP-element group 83:  merge  transition  place  bypass 
    -- CP-element group 83: predecessors 
    -- CP-element group 83: 	82 
    -- CP-element group 83: 	79 
    -- CP-element group 83: successors 
    -- CP-element group 83: 	84 
    -- CP-element group 83:  members (2) 
      -- CP-element group 83: 	 branch_block_stmt_1604/merge_stmt_1605_PhiReqMerge
      -- CP-element group 83: 	 branch_block_stmt_1604/merge_stmt_1605_PhiAck/$entry
      -- 
    password_sequence_CP_5043_elements(83) <= OrReduce(password_sequence_CP_5043_elements(82) & password_sequence_CP_5043_elements(79));
    -- CP-element group 84:  merge  transition  place  input  output  bypass 
    -- CP-element group 84: predecessors 
    -- CP-element group 84: 	83 
    -- CP-element group 84: successors 
    -- CP-element group 84: 	71 
    -- CP-element group 84:  members (8) 
      -- CP-element group 84: 	 branch_block_stmt_1604/merge_stmt_1605__exit__
      -- CP-element group 84: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616__entry__
      -- CP-element group 84: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/$entry
      -- CP-element group 84: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/RPIPE_input_e_1612_sample_start_
      -- CP-element group 84: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/RPIPE_input_e_1612_Sample/$entry
      -- CP-element group 84: 	 branch_block_stmt_1604/assign_stmt_1613_to_assign_stmt_1616/RPIPE_input_e_1612_Sample/rr
      -- CP-element group 84: 	 branch_block_stmt_1604/merge_stmt_1605_PhiAck/$exit
      -- CP-element group 84: 	 branch_block_stmt_1604/merge_stmt_1605_PhiAck/phi_stmt_1606_ack
      -- 
    phi_stmt_1606_ack_5891_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 84_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_1606_ack_0, ack => password_sequence_CP_5043_elements(84)); -- 
    rr_5772_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5772_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => password_sequence_CP_5043_elements(84), ack => RPIPE_input_e_1612_inst_req_0); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal R_zero_1483_wire_constant : std_logic_vector(7 downto 0);
    signal R_zero_1508_wire_constant : std_logic_vector(7 downto 0);
    signal R_zero_1533_wire_constant : std_logic_vector(7 downto 0);
    signal R_zero_1558_wire_constant : std_logic_vector(7 downto 0);
    signal R_zero_1583_wire_constant : std_logic_vector(7 downto 0);
    signal R_zero_1608_wire_constant : std_logic_vector(7 downto 0);
    signal ULT_u8_u1_1495_wire : std_logic_vector(0 downto 0);
    signal ULT_u8_u1_1520_wire : std_logic_vector(0 downto 0);
    signal ULT_u8_u1_1545_wire : std_logic_vector(0 downto 0);
    signal ULT_u8_u1_1570_wire : std_logic_vector(0 downto 0);
    signal ULT_u8_u1_1595_wire : std_logic_vector(0 downto 0);
    signal ULT_u8_u1_1620_wire : std_logic_vector(0 downto 0);
    signal index_1_1481 : std_logic_vector(7 downto 0);
    signal index_2_1506 : std_logic_vector(7 downto 0);
    signal index_3_1531 : std_logic_vector(7 downto 0);
    signal index_4_1556 : std_logic_vector(7 downto 0);
    signal index_5_1581 : std_logic_vector(7 downto 0);
    signal index_6_1606 : std_logic_vector(7 downto 0);
    signal konst_1494_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1498_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1519_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1523_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1544_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1548_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1569_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1573_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1594_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1598_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1619_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1623_wire_constant : std_logic_vector(7 downto 0);
    signal nxt_index_1_1500 : std_logic_vector(7 downto 0);
    signal nxt_index_1_1500_1484_buffered : std_logic_vector(7 downto 0);
    signal nxt_index_2_1525 : std_logic_vector(7 downto 0);
    signal nxt_index_2_1525_1509_buffered : std_logic_vector(7 downto 0);
    signal nxt_index_3_1550 : std_logic_vector(7 downto 0);
    signal nxt_index_3_1550_1534_buffered : std_logic_vector(7 downto 0);
    signal nxt_index_4_1575 : std_logic_vector(7 downto 0);
    signal nxt_index_4_1575_1559_buffered : std_logic_vector(7 downto 0);
    signal nxt_index_5_1600 : std_logic_vector(7 downto 0);
    signal nxt_index_5_1600_1584_buffered : std_logic_vector(7 downto 0);
    signal nxt_index_6_1625 : std_logic_vector(7 downto 0);
    signal nxt_index_6_1625_1609_buffered : std_logic_vector(7 downto 0);
    signal temp_1_1488 : std_logic_vector(7 downto 0);
    signal temp_2_1513 : std_logic_vector(7 downto 0);
    signal temp_3_1538 : std_logic_vector(7 downto 0);
    signal temp_4_1563 : std_logic_vector(7 downto 0);
    signal temp_5_1588 : std_logic_vector(7 downto 0);
    signal temp_6_1613 : std_logic_vector(7 downto 0);
    -- 
  begin -- 
    R_zero_1483_wire_constant <= "00000000";
    R_zero_1508_wire_constant <= "00000000";
    R_zero_1533_wire_constant <= "00000000";
    R_zero_1558_wire_constant <= "00000000";
    R_zero_1583_wire_constant <= "00000000";
    R_zero_1608_wire_constant <= "00000000";
    konst_1494_wire_constant <= "00100011";
    konst_1498_wire_constant <= "00000001";
    konst_1519_wire_constant <= "00000111";
    konst_1523_wire_constant <= "00000001";
    konst_1544_wire_constant <= "00001011";
    konst_1548_wire_constant <= "00000001";
    konst_1569_wire_constant <= "00100101";
    konst_1573_wire_constant <= "00000001";
    konst_1594_wire_constant <= "00000111";
    konst_1598_wire_constant <= "00000001";
    konst_1619_wire_constant <= "00010001";
    konst_1623_wire_constant <= "00000001";
    phi_stmt_1481: Block -- phi operator 
      signal idata: std_logic_vector(15 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= R_zero_1483_wire_constant & nxt_index_1_1500_1484_buffered;
      req <= phi_stmt_1481_req_0 & phi_stmt_1481_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_1481",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 8) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_1481_ack_0,
          idata => idata,
          odata => index_1_1481,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_1481
    phi_stmt_1506: Block -- phi operator 
      signal idata: std_logic_vector(15 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= R_zero_1508_wire_constant & nxt_index_2_1525_1509_buffered;
      req <= phi_stmt_1506_req_0 & phi_stmt_1506_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_1506",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 8) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_1506_ack_0,
          idata => idata,
          odata => index_2_1506,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_1506
    phi_stmt_1531: Block -- phi operator 
      signal idata: std_logic_vector(15 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= R_zero_1533_wire_constant & nxt_index_3_1550_1534_buffered;
      req <= phi_stmt_1531_req_0 & phi_stmt_1531_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_1531",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 8) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_1531_ack_0,
          idata => idata,
          odata => index_3_1531,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_1531
    phi_stmt_1556: Block -- phi operator 
      signal idata: std_logic_vector(15 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= R_zero_1558_wire_constant & nxt_index_4_1575_1559_buffered;
      req <= phi_stmt_1556_req_0 & phi_stmt_1556_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_1556",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 8) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_1556_ack_0,
          idata => idata,
          odata => index_4_1556,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_1556
    phi_stmt_1581: Block -- phi operator 
      signal idata: std_logic_vector(15 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= R_zero_1583_wire_constant & nxt_index_5_1600_1584_buffered;
      req <= phi_stmt_1581_req_0 & phi_stmt_1581_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_1581",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 8) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_1581_ack_0,
          idata => idata,
          odata => index_5_1581,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_1581
    phi_stmt_1606: Block -- phi operator 
      signal idata: std_logic_vector(15 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= R_zero_1608_wire_constant & nxt_index_6_1625_1609_buffered;
      req <= phi_stmt_1606_req_0 & phi_stmt_1606_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_1606",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 8) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_1606_ack_0,
          idata => idata,
          odata => index_6_1606,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_1606
    nxt_index_1_1500_1484_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nxt_index_1_1500_1484_buf_req_0;
      nxt_index_1_1500_1484_buf_ack_0<= wack(0);
      rreq(0) <= nxt_index_1_1500_1484_buf_req_1;
      nxt_index_1_1500_1484_buf_ack_1<= rack(0);
      nxt_index_1_1500_1484_buf : InterlockBuffer generic map ( -- 
        name => "nxt_index_1_1500_1484_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nxt_index_1_1500,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nxt_index_1_1500_1484_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    nxt_index_2_1525_1509_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nxt_index_2_1525_1509_buf_req_0;
      nxt_index_2_1525_1509_buf_ack_0<= wack(0);
      rreq(0) <= nxt_index_2_1525_1509_buf_req_1;
      nxt_index_2_1525_1509_buf_ack_1<= rack(0);
      nxt_index_2_1525_1509_buf : InterlockBuffer generic map ( -- 
        name => "nxt_index_2_1525_1509_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nxt_index_2_1525,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nxt_index_2_1525_1509_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    nxt_index_3_1550_1534_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nxt_index_3_1550_1534_buf_req_0;
      nxt_index_3_1550_1534_buf_ack_0<= wack(0);
      rreq(0) <= nxt_index_3_1550_1534_buf_req_1;
      nxt_index_3_1550_1534_buf_ack_1<= rack(0);
      nxt_index_3_1550_1534_buf : InterlockBuffer generic map ( -- 
        name => "nxt_index_3_1550_1534_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nxt_index_3_1550,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nxt_index_3_1550_1534_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    nxt_index_4_1575_1559_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nxt_index_4_1575_1559_buf_req_0;
      nxt_index_4_1575_1559_buf_ack_0<= wack(0);
      rreq(0) <= nxt_index_4_1575_1559_buf_req_1;
      nxt_index_4_1575_1559_buf_ack_1<= rack(0);
      nxt_index_4_1575_1559_buf : InterlockBuffer generic map ( -- 
        name => "nxt_index_4_1575_1559_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nxt_index_4_1575,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nxt_index_4_1575_1559_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    nxt_index_5_1600_1584_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nxt_index_5_1600_1584_buf_req_0;
      nxt_index_5_1600_1584_buf_ack_0<= wack(0);
      rreq(0) <= nxt_index_5_1600_1584_buf_req_1;
      nxt_index_5_1600_1584_buf_ack_1<= rack(0);
      nxt_index_5_1600_1584_buf : InterlockBuffer generic map ( -- 
        name => "nxt_index_5_1600_1584_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nxt_index_5_1600,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nxt_index_5_1600_1584_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    nxt_index_6_1625_1609_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nxt_index_6_1625_1609_buf_req_0;
      nxt_index_6_1625_1609_buf_ack_0<= wack(0);
      rreq(0) <= nxt_index_6_1625_1609_buf_req_1;
      nxt_index_6_1625_1609_buf_ack_1<= rack(0);
      nxt_index_6_1625_1609_buf : InterlockBuffer generic map ( -- 
        name => "nxt_index_6_1625_1609_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nxt_index_6_1625,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nxt_index_6_1625_1609_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    if_stmt_1492_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= ULT_u8_u1_1495_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_1492_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_1492_branch_req_0,
          ack0 => if_stmt_1492_branch_ack_0,
          ack1 => if_stmt_1492_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_1517_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= ULT_u8_u1_1520_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_1517_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_1517_branch_req_0,
          ack0 => if_stmt_1517_branch_ack_0,
          ack1 => if_stmt_1517_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_1542_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= ULT_u8_u1_1545_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_1542_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_1542_branch_req_0,
          ack0 => if_stmt_1542_branch_ack_0,
          ack1 => if_stmt_1542_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_1567_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= ULT_u8_u1_1570_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_1567_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_1567_branch_req_0,
          ack0 => if_stmt_1567_branch_ack_0,
          ack1 => if_stmt_1567_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_1592_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= ULT_u8_u1_1595_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_1592_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_1592_branch_req_0,
          ack0 => if_stmt_1592_branch_ack_0,
          ack1 => if_stmt_1592_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_1617_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= ULT_u8_u1_1620_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_1617_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_1617_branch_req_0,
          ack0 => if_stmt_1617_branch_ack_0,
          ack1 => if_stmt_1617_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- shared split operator group (0) : ADD_u8_u8_1499_inst 
    ApIntAdd_group_0: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= index_1_1481;
      nxt_index_1_1500 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= ADD_u8_u8_1499_inst_req_0;
      ADD_u8_u8_1499_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= ADD_u8_u8_1499_inst_req_1;
      ADD_u8_u8_1499_inst_ack_1 <= ackR_unguarded(0);
      ApIntAdd_group_0_gI: SplitGuardInterface generic map(name => "ApIntAdd_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          name => "ApIntAdd_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "00000001",
          constant_width => 8,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : ADD_u8_u8_1524_inst 
    ApIntAdd_group_1: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= index_2_1506;
      nxt_index_2_1525 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= ADD_u8_u8_1524_inst_req_0;
      ADD_u8_u8_1524_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= ADD_u8_u8_1524_inst_req_1;
      ADD_u8_u8_1524_inst_ack_1 <= ackR_unguarded(0);
      ApIntAdd_group_1_gI: SplitGuardInterface generic map(name => "ApIntAdd_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          name => "ApIntAdd_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "00000001",
          constant_width => 8,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- shared split operator group (2) : ADD_u8_u8_1549_inst 
    ApIntAdd_group_2: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= index_3_1531;
      nxt_index_3_1550 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= ADD_u8_u8_1549_inst_req_0;
      ADD_u8_u8_1549_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= ADD_u8_u8_1549_inst_req_1;
      ADD_u8_u8_1549_inst_ack_1 <= ackR_unguarded(0);
      ApIntAdd_group_2_gI: SplitGuardInterface generic map(name => "ApIntAdd_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          name => "ApIntAdd_group_2",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "00000001",
          constant_width => 8,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 2
    -- shared split operator group (3) : ADD_u8_u8_1574_inst 
    ApIntAdd_group_3: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= index_4_1556;
      nxt_index_4_1575 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= ADD_u8_u8_1574_inst_req_0;
      ADD_u8_u8_1574_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= ADD_u8_u8_1574_inst_req_1;
      ADD_u8_u8_1574_inst_ack_1 <= ackR_unguarded(0);
      ApIntAdd_group_3_gI: SplitGuardInterface generic map(name => "ApIntAdd_group_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          name => "ApIntAdd_group_3",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "00000001",
          constant_width => 8,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 3
    -- shared split operator group (4) : ADD_u8_u8_1599_inst 
    ApIntAdd_group_4: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= index_5_1581;
      nxt_index_5_1600 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= ADD_u8_u8_1599_inst_req_0;
      ADD_u8_u8_1599_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= ADD_u8_u8_1599_inst_req_1;
      ADD_u8_u8_1599_inst_ack_1 <= ackR_unguarded(0);
      ApIntAdd_group_4_gI: SplitGuardInterface generic map(name => "ApIntAdd_group_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          name => "ApIntAdd_group_4",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "00000001",
          constant_width => 8,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 4
    -- shared split operator group (5) : ADD_u8_u8_1624_inst 
    ApIntAdd_group_5: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= index_6_1606;
      nxt_index_6_1625 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= ADD_u8_u8_1624_inst_req_0;
      ADD_u8_u8_1624_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= ADD_u8_u8_1624_inst_req_1;
      ADD_u8_u8_1624_inst_ack_1 <= ackR_unguarded(0);
      ApIntAdd_group_5_gI: SplitGuardInterface generic map(name => "ApIntAdd_group_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          name => "ApIntAdd_group_5",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "00000001",
          constant_width => 8,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 5
    -- binary operator ULT_u8_u1_1495_inst
    process(index_1_1481) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(index_1_1481, konst_1494_wire_constant, tmp_var);
      ULT_u8_u1_1495_wire <= tmp_var; --
    end process;
    -- binary operator ULT_u8_u1_1520_inst
    process(index_2_1506) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(index_2_1506, konst_1519_wire_constant, tmp_var);
      ULT_u8_u1_1520_wire <= tmp_var; --
    end process;
    -- binary operator ULT_u8_u1_1545_inst
    process(index_3_1531) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(index_3_1531, konst_1544_wire_constant, tmp_var);
      ULT_u8_u1_1545_wire <= tmp_var; --
    end process;
    -- binary operator ULT_u8_u1_1570_inst
    process(index_4_1556) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(index_4_1556, konst_1569_wire_constant, tmp_var);
      ULT_u8_u1_1570_wire <= tmp_var; --
    end process;
    -- binary operator ULT_u8_u1_1595_inst
    process(index_5_1581) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(index_5_1581, konst_1594_wire_constant, tmp_var);
      ULT_u8_u1_1595_wire <= tmp_var; --
    end process;
    -- binary operator ULT_u8_u1_1620_inst
    process(index_6_1606) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(index_6_1606, konst_1619_wire_constant, tmp_var);
      ULT_u8_u1_1620_wire <= tmp_var; --
    end process;
    -- shared inport operator group (0) : RPIPE_input_d_1512_inst RPIPE_input_d_1587_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(15 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 1 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 1 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 1 downto 0);
      signal guard_vector : std_logic_vector( 1 downto 0);
      constant outBUFs : IntegerArray(1 downto 0) := (1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(1 downto 0) := (0 => false, 1 => false);
      constant guardBuffering: IntegerArray(1 downto 0)  := (0 => 2, 1 => 2);
      -- 
    begin -- 
      reqL_unguarded(1) <= RPIPE_input_d_1512_inst_req_0;
      reqL_unguarded(0) <= RPIPE_input_d_1587_inst_req_0;
      RPIPE_input_d_1512_inst_ack_0 <= ackL_unguarded(1);
      RPIPE_input_d_1587_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(1) <= RPIPE_input_d_1512_inst_req_1;
      reqR_unguarded(0) <= RPIPE_input_d_1587_inst_req_1;
      RPIPE_input_d_1512_inst_ack_1 <= ackR_unguarded(1);
      RPIPE_input_d_1587_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      temp_2_1513 <= data_out(15 downto 8);
      temp_5_1588 <= data_out(7 downto 0);
      input_d_read_0_gI: SplitGuardInterface generic map(name => "input_d_read_0_gI", nreqs => 2, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      input_d_read_0: InputPortRevised -- 
        generic map ( name => "input_d_read_0", data_width => 8,  num_reqs => 2,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => input_d_pipe_read_req(0),
          oack => input_d_pipe_read_ack(0),
          odata => input_d_pipe_read_data(7 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- shared inport operator group (1) : RPIPE_input_e_1487_inst RPIPE_input_e_1537_inst RPIPE_input_e_1562_inst RPIPE_input_e_1612_inst 
    InportGroup_1: Block -- 
      signal data_out: std_logic_vector(31 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 3 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 3 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant outBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2);
      -- 
    begin -- 
      reqL_unguarded(3) <= RPIPE_input_e_1487_inst_req_0;
      reqL_unguarded(2) <= RPIPE_input_e_1537_inst_req_0;
      reqL_unguarded(1) <= RPIPE_input_e_1562_inst_req_0;
      reqL_unguarded(0) <= RPIPE_input_e_1612_inst_req_0;
      RPIPE_input_e_1487_inst_ack_0 <= ackL_unguarded(3);
      RPIPE_input_e_1537_inst_ack_0 <= ackL_unguarded(2);
      RPIPE_input_e_1562_inst_ack_0 <= ackL_unguarded(1);
      RPIPE_input_e_1612_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(3) <= RPIPE_input_e_1487_inst_req_1;
      reqR_unguarded(2) <= RPIPE_input_e_1537_inst_req_1;
      reqR_unguarded(1) <= RPIPE_input_e_1562_inst_req_1;
      reqR_unguarded(0) <= RPIPE_input_e_1612_inst_req_1;
      RPIPE_input_e_1487_inst_ack_1 <= ackR_unguarded(3);
      RPIPE_input_e_1537_inst_ack_1 <= ackR_unguarded(2);
      RPIPE_input_e_1562_inst_ack_1 <= ackR_unguarded(1);
      RPIPE_input_e_1612_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      temp_1_1488 <= data_out(31 downto 24);
      temp_3_1538 <= data_out(23 downto 16);
      temp_4_1563 <= data_out(15 downto 8);
      temp_6_1613 <= data_out(7 downto 0);
      input_e_read_1_gI: SplitGuardInterface generic map(name => "input_e_read_1_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      input_e_read_1: InputPortRevised -- 
        generic map ( name => "input_e_read_1", data_width => 8,  num_reqs => 4,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => input_e_pipe_read_req(0),
          oack => input_e_pipe_read_ack(0),
          odata => input_e_pipe_read_data(7 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 1
    -- shared outport operator group (0) : WPIPE_out_d_1514_inst WPIPE_out_d_1589_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal sample_req, sample_ack : BooleanArray( 1 downto 0);
      signal update_req, update_ack : BooleanArray( 1 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 1 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 1 downto 0);
      signal guard_vector : std_logic_vector( 1 downto 0);
      constant inBUFs : IntegerArray(1 downto 0) := (1 => 0, 0 => 0);
      constant guardFlags : BooleanArray(1 downto 0) := (0 => false, 1 => false);
      constant guardBuffering: IntegerArray(1 downto 0)  := (0 => 2, 1 => 2);
      -- 
    begin -- 
      sample_req_unguarded(1) <= WPIPE_out_d_1514_inst_req_0;
      sample_req_unguarded(0) <= WPIPE_out_d_1589_inst_req_0;
      WPIPE_out_d_1514_inst_ack_0 <= sample_ack_unguarded(1);
      WPIPE_out_d_1589_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(1) <= WPIPE_out_d_1514_inst_req_1;
      update_req_unguarded(0) <= WPIPE_out_d_1589_inst_req_1;
      WPIPE_out_d_1514_inst_ack_1 <= update_ack_unguarded(1);
      WPIPE_out_d_1589_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      data_in <= temp_2_1513 & temp_5_1588;
      out_d_write_0_gI: SplitGuardInterface generic map(name => "out_d_write_0_gI", nreqs => 2, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      out_d_write_0: OutputPortRevised -- 
        generic map ( name => "out_d", data_width => 8, num_reqs => 2, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => out_d_pipe_write_req(0),
          oack => out_d_pipe_write_ack(0),
          odata => out_d_pipe_write_data(7 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- shared outport operator group (1) : WPIPE_out_e_1489_inst WPIPE_out_e_1539_inst WPIPE_out_e_1564_inst WPIPE_out_e_1614_inst 
    OutportGroup_1: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 3 downto 0);
      signal update_req, update_ack : BooleanArray( 3 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 3 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant inBUFs : IntegerArray(3 downto 0) := (3 => 0, 2 => 0, 1 => 0, 0 => 0);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2);
      -- 
    begin -- 
      sample_req_unguarded(3) <= WPIPE_out_e_1489_inst_req_0;
      sample_req_unguarded(2) <= WPIPE_out_e_1539_inst_req_0;
      sample_req_unguarded(1) <= WPIPE_out_e_1564_inst_req_0;
      sample_req_unguarded(0) <= WPIPE_out_e_1614_inst_req_0;
      WPIPE_out_e_1489_inst_ack_0 <= sample_ack_unguarded(3);
      WPIPE_out_e_1539_inst_ack_0 <= sample_ack_unguarded(2);
      WPIPE_out_e_1564_inst_ack_0 <= sample_ack_unguarded(1);
      WPIPE_out_e_1614_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(3) <= WPIPE_out_e_1489_inst_req_1;
      update_req_unguarded(2) <= WPIPE_out_e_1539_inst_req_1;
      update_req_unguarded(1) <= WPIPE_out_e_1564_inst_req_1;
      update_req_unguarded(0) <= WPIPE_out_e_1614_inst_req_1;
      WPIPE_out_e_1489_inst_ack_1 <= update_ack_unguarded(3);
      WPIPE_out_e_1539_inst_ack_1 <= update_ack_unguarded(2);
      WPIPE_out_e_1564_inst_ack_1 <= update_ack_unguarded(1);
      WPIPE_out_e_1614_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      data_in <= temp_1_1488 & temp_3_1538 & temp_4_1563 & temp_6_1613;
      out_e_write_1_gI: SplitGuardInterface generic map(name => "out_e_write_1_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      out_e_write_1: OutputPortRevised -- 
        generic map ( name => "out_e", data_width => 8, num_reqs => 4, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => out_e_pipe_write_req(0),
          oack => out_e_pipe_write_ack(0),
          odata => out_e_pipe_write_data(7 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 1
    -- 
  end Block; -- data_path
  -- 
end password_sequence_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity sbox_transform is -- 
  generic (tag_length : integer); 
  port ( -- 
    num_0 : in  std_logic_vector(7 downto 0);
    num_1 : out  std_logic_vector(7 downto 0);
    memory_space_2_lr_req : out  std_logic_vector(0 downto 0);
    memory_space_2_lr_ack : in   std_logic_vector(0 downto 0);
    memory_space_2_lr_addr : out  std_logic_vector(7 downto 0);
    memory_space_2_lr_tag :  out  std_logic_vector(17 downto 0);
    memory_space_2_lc_req : out  std_logic_vector(0 downto 0);
    memory_space_2_lc_ack : in   std_logic_vector(0 downto 0);
    memory_space_2_lc_data : in   std_logic_vector(7 downto 0);
    memory_space_2_lc_tag :  in  std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity sbox_transform;
architecture sbox_transform_arch of sbox_transform is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 8)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 8)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal num_0_buffer :  std_logic_vector(7 downto 0);
  signal num_0_update_enable: Boolean;
  -- output port buffer signals
  signal num_1_buffer :  std_logic_vector(7 downto 0);
  signal num_1_update_enable: Boolean;
  signal sbox_transform_CP_0_start: Boolean;
  signal sbox_transform_CP_0_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal slice_42_inst_req_0 : boolean;
  signal slice_42_inst_ack_0 : boolean;
  signal slice_42_inst_req_1 : boolean;
  signal slice_42_inst_ack_1 : boolean;
  signal slice_38_inst_req_0 : boolean;
  signal slice_38_inst_ack_0 : boolean;
  signal slice_38_inst_req_1 : boolean;
  signal slice_38_inst_ack_1 : boolean;
  signal MUL_u4_u4_47_inst_req_0 : boolean;
  signal MUL_u4_u4_47_inst_ack_0 : boolean;
  signal MUL_u4_u4_47_inst_req_1 : boolean;
  signal MUL_u4_u4_47_inst_ack_1 : boolean;
  signal ADD_u4_u4_52_inst_req_0 : boolean;
  signal ADD_u4_u4_52_inst_ack_0 : boolean;
  signal ADD_u4_u4_52_inst_req_1 : boolean;
  signal ADD_u4_u4_52_inst_ack_1 : boolean;
  signal array_obj_ref_56_load_0_req_0 : boolean;
  signal array_obj_ref_56_load_0_ack_0 : boolean;
  signal array_obj_ref_56_load_0_req_1 : boolean;
  signal array_obj_ref_56_load_0_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "sbox_transform_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 8) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(7 downto 0) <= num_0;
  num_0_buffer <= in_buffer_data_out(7 downto 0);
  in_buffer_data_in(tag_length + 7 downto 8) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 7 downto 8);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  sbox_transform_CP_0_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "sbox_transform_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 8) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(7 downto 0) <= num_1_buffer;
  num_1 <= out_buffer_data_out(7 downto 0);
  out_buffer_data_in(tag_length + 7 downto 8) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 7 downto 8);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= sbox_transform_CP_0_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= sbox_transform_CP_0_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= sbox_transform_CP_0_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  sbox_transform_CP_0: Block -- control-path 
    signal sbox_transform_CP_0_elements: BooleanArray(11 downto 0);
    -- 
  begin -- 
    sbox_transform_CP_0_elements(0) <= sbox_transform_CP_0_start;
    sbox_transform_CP_0_symbol <= sbox_transform_CP_0_elements(11);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	9 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	11 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	3 
    -- CP-element group 0:  members (25) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/slice_38_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/slice_42_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/slice_42_Sample/rr
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/slice_42_Update/$entry
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/slice_42_Update/cr
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/MUL_u4_u4_47_update_start_
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/$entry
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/slice_38_sample_start_
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/slice_38_update_start_
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/slice_38_Sample/rr
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/slice_38_Update/$entry
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/slice_38_Update/cr
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/slice_42_sample_start_
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/slice_42_update_start_
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/MUL_u4_u4_47_Update/$entry
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/MUL_u4_u4_47_Update/cr
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/ADD_u4_u4_52_update_start_
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/ADD_u4_u4_52_Update/$entry
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/ADD_u4_u4_52_Update/cr
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_update_start_
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Update/$entry
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Update/word_access_complete/$entry
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Update/word_access_complete/word_0/$entry
      -- CP-element group 0: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Update/word_access_complete/word_0/cr
      -- 
    cr_60_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_60_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transform_CP_0_elements(0), ack => ADD_u4_u4_52_inst_req_1); -- 
    cr_118_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_118_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transform_CP_0_elements(0), ack => array_obj_ref_56_load_0_req_1); -- 
    cr_46_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_46_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transform_CP_0_elements(0), ack => MUL_u4_u4_47_inst_req_1); -- 
    cr_18_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_18_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transform_CP_0_elements(0), ack => slice_38_inst_req_1); -- 
    rr_27_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_27_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transform_CP_0_elements(0), ack => slice_42_inst_req_0); -- 
    cr_32_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_32_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transform_CP_0_elements(0), ack => slice_42_inst_req_1); -- 
    rr_13_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_13_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transform_CP_0_elements(0), ack => slice_38_inst_req_0); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_39_to_assign_stmt_57/slice_38_sample_completed_
      -- CP-element group 1: 	 assign_stmt_39_to_assign_stmt_57/slice_38_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_39_to_assign_stmt_57/slice_38_Sample/ra
      -- 
    ra_14_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_38_inst_ack_0, ack => sbox_transform_CP_0_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	7 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 assign_stmt_39_to_assign_stmt_57/slice_38_update_completed_
      -- CP-element group 2: 	 assign_stmt_39_to_assign_stmt_57/slice_38_Update/$exit
      -- CP-element group 2: 	 assign_stmt_39_to_assign_stmt_57/slice_38_Update/ca
      -- 
    ca_19_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_38_inst_ack_1, ack => sbox_transform_CP_0_elements(2)); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 assign_stmt_39_to_assign_stmt_57/slice_42_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_39_to_assign_stmt_57/slice_42_Sample/ra
      -- CP-element group 3: 	 assign_stmt_39_to_assign_stmt_57/slice_42_sample_completed_
      -- 
    ra_28_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_42_inst_ack_0, ack => sbox_transform_CP_0_elements(3)); -- 
    -- CP-element group 4:  transition  input  output  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	5 
    -- CP-element group 4:  members (6) 
      -- CP-element group 4: 	 assign_stmt_39_to_assign_stmt_57/slice_42_update_completed_
      -- CP-element group 4: 	 assign_stmt_39_to_assign_stmt_57/slice_42_Update/$exit
      -- CP-element group 4: 	 assign_stmt_39_to_assign_stmt_57/slice_42_Update/ca
      -- CP-element group 4: 	 assign_stmt_39_to_assign_stmt_57/MUL_u4_u4_47_sample_start_
      -- CP-element group 4: 	 assign_stmt_39_to_assign_stmt_57/MUL_u4_u4_47_Sample/$entry
      -- CP-element group 4: 	 assign_stmt_39_to_assign_stmt_57/MUL_u4_u4_47_Sample/rr
      -- 
    ca_33_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_42_inst_ack_1, ack => sbox_transform_CP_0_elements(4)); -- 
    rr_41_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_41_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transform_CP_0_elements(4), ack => MUL_u4_u4_47_inst_req_0); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	4 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_39_to_assign_stmt_57/MUL_u4_u4_47_sample_completed_
      -- CP-element group 5: 	 assign_stmt_39_to_assign_stmt_57/MUL_u4_u4_47_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_39_to_assign_stmt_57/MUL_u4_u4_47_Sample/ra
      -- 
    ra_42_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUL_u4_u4_47_inst_ack_0, ack => sbox_transform_CP_0_elements(5)); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	7 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_39_to_assign_stmt_57/MUL_u4_u4_47_update_completed_
      -- CP-element group 6: 	 assign_stmt_39_to_assign_stmt_57/MUL_u4_u4_47_Update/$exit
      -- CP-element group 6: 	 assign_stmt_39_to_assign_stmt_57/MUL_u4_u4_47_Update/ca
      -- 
    ca_47_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUL_u4_u4_47_inst_ack_1, ack => sbox_transform_CP_0_elements(6)); -- 
    -- CP-element group 7:  join  transition  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	6 
    -- CP-element group 7: 	2 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 assign_stmt_39_to_assign_stmt_57/ADD_u4_u4_52_sample_start_
      -- CP-element group 7: 	 assign_stmt_39_to_assign_stmt_57/ADD_u4_u4_52_Sample/$entry
      -- CP-element group 7: 	 assign_stmt_39_to_assign_stmt_57/ADD_u4_u4_52_Sample/rr
      -- 
    rr_55_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_55_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transform_CP_0_elements(7), ack => ADD_u4_u4_52_inst_req_0); -- 
    sbox_transform_cp_element_group_7: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 33) := "sbox_transform_cp_element_group_7"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= sbox_transform_CP_0_elements(6) & sbox_transform_CP_0_elements(2);
      gj_sbox_transform_cp_element_group_7 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => sbox_transform_CP_0_elements(7), clk => clk, reset => reset); --
    end block;
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: successors 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 assign_stmt_39_to_assign_stmt_57/ADD_u4_u4_52_sample_completed_
      -- CP-element group 8: 	 assign_stmt_39_to_assign_stmt_57/ADD_u4_u4_52_Sample/$exit
      -- CP-element group 8: 	 assign_stmt_39_to_assign_stmt_57/ADD_u4_u4_52_Sample/ra
      -- 
    ra_56_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u4_u4_52_inst_ack_0, ack => sbox_transform_CP_0_elements(8)); -- 
    -- CP-element group 9:  transition  input  output  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	0 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	10 
    -- CP-element group 9:  members (34) 
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/ADD_u4_u4_52_update_completed_
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/ADD_u4_u4_52_Update/$exit
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/ADD_u4_u4_52_Update/ca
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_sample_start_
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_word_address_calculated
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_root_address_calculated
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_offset_calculated
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_index_resized_0
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_index_scaled_0
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_index_computed_0
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_index_resize_0/$entry
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_index_resize_0/$exit
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_index_resize_0/index_resize_req
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_index_resize_0/index_resize_ack
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_index_scale_0/$entry
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_index_scale_0/$exit
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_index_scale_0/scale_rename_req
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_index_scale_0/scale_rename_ack
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_final_index_sum_regn/$entry
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_final_index_sum_regn/$exit
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_final_index_sum_regn/req
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_final_index_sum_regn/ack
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_base_plus_offset/$entry
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_base_plus_offset/$exit
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_base_plus_offset/sum_rename_req
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_base_plus_offset/sum_rename_ack
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_word_addrgen/$entry
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_word_addrgen/$exit
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_word_addrgen/root_register_req
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_word_addrgen/root_register_ack
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Sample/$entry
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Sample/word_access_start/$entry
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Sample/word_access_start/word_0/$entry
      -- CP-element group 9: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Sample/word_access_start/word_0/rr
      -- 
    ca_61_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u4_u4_52_inst_ack_1, ack => sbox_transform_CP_0_elements(9)); -- 
    rr_107_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_107_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transform_CP_0_elements(9), ack => array_obj_ref_56_load_0_req_0); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	9 
    -- CP-element group 10: successors 
    -- CP-element group 10:  members (5) 
      -- CP-element group 10: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_sample_completed_
      -- CP-element group 10: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Sample/$exit
      -- CP-element group 10: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Sample/word_access_start/$exit
      -- CP-element group 10: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Sample/word_access_start/word_0/$exit
      -- CP-element group 10: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Sample/word_access_start/word_0/ra
      -- 
    ra_108_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_56_load_0_ack_0, ack => sbox_transform_CP_0_elements(10)); -- 
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	0 
    -- CP-element group 11: successors 
    -- CP-element group 11:  members (11) 
      -- CP-element group 11: 	 $exit
      -- CP-element group 11: 	 assign_stmt_39_to_assign_stmt_57/$exit
      -- CP-element group 11: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_update_completed_
      -- CP-element group 11: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Update/$exit
      -- CP-element group 11: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Update/word_access_complete/$exit
      -- CP-element group 11: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Update/word_access_complete/word_0/$exit
      -- CP-element group 11: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Update/word_access_complete/word_0/ca
      -- CP-element group 11: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Update/array_obj_ref_56_Merge/$entry
      -- CP-element group 11: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Update/array_obj_ref_56_Merge/$exit
      -- CP-element group 11: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Update/array_obj_ref_56_Merge/merge_req
      -- CP-element group 11: 	 assign_stmt_39_to_assign_stmt_57/array_obj_ref_56_Update/array_obj_ref_56_Merge/merge_ack
      -- 
    ca_119_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_56_load_0_ack_1, ack => sbox_transform_CP_0_elements(11)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal R_index_55_resized : std_logic_vector(7 downto 0);
    signal R_index_55_scaled : std_logic_vector(7 downto 0);
    signal array_obj_ref_56_data_0 : std_logic_vector(7 downto 0);
    signal array_obj_ref_56_final_offset : std_logic_vector(7 downto 0);
    signal array_obj_ref_56_offset_scale_factor_0 : std_logic_vector(7 downto 0);
    signal array_obj_ref_56_resized_base_address : std_logic_vector(7 downto 0);
    signal array_obj_ref_56_root_address : std_logic_vector(7 downto 0);
    signal array_obj_ref_56_word_address_0 : std_logic_vector(7 downto 0);
    signal array_obj_ref_56_word_offset_0 : std_logic_vector(7 downto 0);
    signal column_43 : std_logic_vector(3 downto 0);
    signal index_53 : std_logic_vector(3 downto 0);
    signal konst_45_wire_constant : std_logic_vector(3 downto 0);
    signal row_39 : std_logic_vector(3 downto 0);
    signal temp_0_48 : std_logic_vector(3 downto 0);
    -- 
  begin -- 
    array_obj_ref_56_offset_scale_factor_0 <= "00000001";
    array_obj_ref_56_resized_base_address <= "00000000";
    array_obj_ref_56_word_offset_0 <= "00000000";
    konst_45_wire_constant <= "0000";
    slice_38_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_38_inst_req_0;
      slice_38_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_38_inst_req_1;
      slice_38_inst_ack_1<= update_ack(0);
      slice_38_inst: SliceSplitProtocol generic map(name => "slice_38_inst", in_data_width => 8, high_index => 7, low_index => 4, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => num_0_buffer, dout => row_39, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_42_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_42_inst_req_0;
      slice_42_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_42_inst_req_1;
      slice_42_inst_ack_1<= update_ack(0);
      slice_42_inst: SliceSplitProtocol generic map(name => "slice_42_inst", in_data_width => 8, high_index => 3, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => num_0_buffer, dout => column_43, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    -- equivalence array_obj_ref_56_addr_0
    process(array_obj_ref_56_root_address) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(7 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_56_root_address;
      ov(7 downto 0) := iv;
      array_obj_ref_56_word_address_0 <= ov(7 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_56_gather_scatter
    process(array_obj_ref_56_data_0) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(7 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_56_data_0;
      ov(7 downto 0) := iv;
      num_1_buffer <= ov(7 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_56_index_0_rename
    process(R_index_55_resized) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(7 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_index_55_resized;
      ov(7 downto 0) := iv;
      R_index_55_scaled <= ov(7 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_56_index_0_resize
    process(index_53) --
      variable iv : std_logic_vector(3 downto 0);
      variable ov : std_logic_vector(7 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := index_53;
      ov(3 downto 0) := iv;
      R_index_55_resized <= ov(7 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_56_index_offset
    process(R_index_55_scaled) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(7 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_index_55_scaled;
      ov(7 downto 0) := iv;
      array_obj_ref_56_final_offset <= ov(7 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_56_root_address_inst
    process(array_obj_ref_56_final_offset) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(7 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_56_final_offset;
      ov(7 downto 0) := iv;
      array_obj_ref_56_root_address <= ov(7 downto 0);
      --
    end process;
    -- shared split operator group (0) : ADD_u4_u4_52_inst 
    ApIntAdd_group_0: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(3 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= temp_0_48 & row_39;
      index_53 <= data_out(3 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= ADD_u4_u4_52_inst_req_0;
      ADD_u4_u4_52_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= ADD_u4_u4_52_inst_req_1;
      ADD_u4_u4_52_inst_ack_1 <= ackR_unguarded(0);
      ApIntAdd_group_0_gI: SplitGuardInterface generic map(name => "ApIntAdd_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          name => "ApIntAdd_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 4,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 4, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 4,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : MUL_u4_u4_47_inst 
    ApIntMul_group_1: Block -- 
      signal data_in: std_logic_vector(3 downto 0);
      signal data_out: std_logic_vector(3 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= column_43;
      temp_0_48 <= data_out(3 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= MUL_u4_u4_47_inst_req_0;
      MUL_u4_u4_47_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= MUL_u4_u4_47_inst_req_1;
      MUL_u4_u4_47_inst_ack_1 <= ackR_unguarded(0);
      ApIntMul_group_1_gI: SplitGuardInterface generic map(name => "ApIntMul_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntMul",
          name => "ApIntMul_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 4,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 4,
          constant_operand => "0000",
          constant_width => 4,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- shared load operator group (0) : array_obj_ref_56_load_0 
    LoadGroup0: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated: BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= array_obj_ref_56_load_0_req_0;
      array_obj_ref_56_load_0_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= array_obj_ref_56_load_0_req_1;
      array_obj_ref_56_load_0_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      LoadGroup0_gI: SplitGuardInterface generic map(name => "LoadGroup0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= array_obj_ref_56_word_address_0;
      array_obj_ref_56_data_0 <= data_out(7 downto 0);
      LoadReq: LoadReqSharedWithInputBuffers -- 
        generic map ( name => "LoadGroup0", addr_width => 8,
        num_reqs => 1,
        tag_length => 1,
        time_stamp_width => 17,
        min_clock_period => false,
        input_buffering => inBUFs, 
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          mreq => memory_space_2_lr_req(0),
          mack => memory_space_2_lr_ack(0),
          maddr => memory_space_2_lr_addr(7 downto 0),
          mtag => memory_space_2_lr_tag(17 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      LoadComplete: LoadCompleteShared -- 
        generic map ( name => "LoadGroup0 load-complete ",
        data_width => 8,
        num_reqs => 1,
        tag_length => 1,
        detailed_buffering_per_output => outBUFs, 
        no_arbitration => false)
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          mreq => memory_space_2_lc_req(0),
          mack => memory_space_2_lc_ack(0),
          mdata => memory_space_2_lc_data(7 downto 0),
          mtag => memory_space_2_lc_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- load group 0
    -- 
  end Block; -- data_path
  -- 
end sbox_transform_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity sbox_transformation is -- 
  generic (tag_length : integer); 
  port ( -- 
    w : in  std_logic_vector(31 downto 0);
    nw : out  std_logic_vector(31 downto 0);
    sbox_transform_call_reqs : out  std_logic_vector(0 downto 0);
    sbox_transform_call_acks : in   std_logic_vector(0 downto 0);
    sbox_transform_call_data : out  std_logic_vector(7 downto 0);
    sbox_transform_call_tag  :  out  std_logic_vector(2 downto 0);
    sbox_transform_return_reqs : out  std_logic_vector(0 downto 0);
    sbox_transform_return_acks : in   std_logic_vector(0 downto 0);
    sbox_transform_return_data : in   std_logic_vector(7 downto 0);
    sbox_transform_return_tag :  in   std_logic_vector(2 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity sbox_transformation;
architecture sbox_transformation_arch of sbox_transformation is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 32)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 32)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal w_buffer :  std_logic_vector(31 downto 0);
  signal w_update_enable: Boolean;
  -- output port buffer signals
  signal nw_buffer :  std_logic_vector(31 downto 0);
  signal nw_update_enable: Boolean;
  signal sbox_transformation_CP_1074_start: Boolean;
  signal sbox_transformation_CP_1074_symbol: Boolean;
  -- volatile/operator module components. 
  component sbox_transform is -- 
    generic (tag_length : integer); 
    port ( -- 
      num_0 : in  std_logic_vector(7 downto 0);
      num_1 : out  std_logic_vector(7 downto 0);
      memory_space_2_lr_req : out  std_logic_vector(0 downto 0);
      memory_space_2_lr_ack : in   std_logic_vector(0 downto 0);
      memory_space_2_lr_addr : out  std_logic_vector(7 downto 0);
      memory_space_2_lr_tag :  out  std_logic_vector(17 downto 0);
      memory_space_2_lc_req : out  std_logic_vector(0 downto 0);
      memory_space_2_lc_ack : in   std_logic_vector(0 downto 0);
      memory_space_2_lc_data : in   std_logic_vector(7 downto 0);
      memory_space_2_lc_tag :  in  std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal slice_388_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_405_inst_ack_0 : boolean;
  signal call_stmt_401_call_req_0 : boolean;
  signal CONCAT_u8_u16_410_inst_req_0 : boolean;
  signal CONCAT_u8_u16_410_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_415_inst_req_0 : boolean;
  signal call_stmt_395_call_req_0 : boolean;
  signal CONCAT_u16_u32_415_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_405_inst_req_1 : boolean;
  signal CONCAT_u16_u32_415_inst_req_1 : boolean;
  signal call_stmt_392_call_ack_1 : boolean;
  signal call_stmt_401_call_req_1 : boolean;
  signal call_stmt_401_call_ack_0 : boolean;
  signal CONCAT_u16_u32_415_inst_ack_1 : boolean;
  signal call_stmt_395_call_ack_0 : boolean;
  signal CONCAT_u8_u16_410_inst_req_1 : boolean;
  signal call_stmt_395_call_ack_1 : boolean;
  signal CONCAT_u8_u16_405_inst_req_0 : boolean;
  signal call_stmt_392_call_req_0 : boolean;
  signal slice_388_inst_req_1 : boolean;
  signal call_stmt_401_call_ack_1 : boolean;
  signal slice_384_inst_req_1 : boolean;
  signal slice_388_inst_ack_0 : boolean;
  signal slice_388_inst_req_0 : boolean;
  signal call_stmt_392_call_req_1 : boolean;
  signal slice_384_inst_ack_1 : boolean;
  signal call_stmt_392_call_ack_0 : boolean;
  signal CONCAT_u8_u16_410_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_405_inst_ack_1 : boolean;
  signal call_stmt_395_call_req_1 : boolean;
  signal call_stmt_398_call_ack_1 : boolean;
  signal call_stmt_398_call_req_1 : boolean;
  signal call_stmt_398_call_ack_0 : boolean;
  signal call_stmt_398_call_req_0 : boolean;
  signal slice_384_inst_ack_0 : boolean;
  signal slice_384_inst_req_0 : boolean;
  signal slice_376_inst_req_0 : boolean;
  signal slice_376_inst_ack_0 : boolean;
  signal slice_376_inst_req_1 : boolean;
  signal slice_376_inst_ack_1 : boolean;
  signal slice_380_inst_req_0 : boolean;
  signal slice_380_inst_ack_0 : boolean;
  signal slice_380_inst_req_1 : boolean;
  signal slice_380_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "sbox_transformation_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 32) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(31 downto 0) <= w;
  w_buffer <= in_buffer_data_out(31 downto 0);
  in_buffer_data_in(tag_length + 31 downto 32) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 31 downto 32);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  sbox_transformation_CP_1074_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "sbox_transformation_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 32) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(31 downto 0) <= nw_buffer;
  nw <= out_buffer_data_out(31 downto 0);
  out_buffer_data_in(tag_length + 31 downto 32) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 31 downto 32);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= sbox_transformation_CP_1074_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= sbox_transformation_CP_1074_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= sbox_transformation_CP_1074_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  sbox_transformation_CP_1074: Block -- control-path 
    signal sbox_transformation_CP_1074_elements: BooleanArray(25 downto 0);
    -- 
  begin -- 
    sbox_transformation_CP_1074_elements(0) <= sbox_transformation_CP_1074_start;
    sbox_transformation_CP_1074_symbol <= sbox_transformation_CP_1074_elements(25);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	16 
    -- CP-element group 0: 	19 
    -- CP-element group 0: 	12 
    -- CP-element group 0: 	10 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	5 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	25 
    -- CP-element group 0: 	22 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	7 
    -- CP-element group 0: 	8 
    -- CP-element group 0: 	14 
    -- CP-element group 0:  members (47) 
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_388_update_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_388_sample_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_384_Update/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_405_Update/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_384_sample_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_401_Update/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_392_update_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u16_u32_415_update_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_388_Update/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_410_Update/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u16_u32_415_Update/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_405_Update/cr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u16_u32_415_Update/cr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_401_Update/ccr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_410_Update/cr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_388_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_388_Update/cr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_392_Update/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_405_update_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_384_update_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_384_Update/cr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_398_update_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_388_Sample/rr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_392_Update/ccr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_384_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_395_update_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_395_Update/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_410_update_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_395_Update/ccr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_401_update_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_398_Update/ccr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_398_Update/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_384_Sample/rr
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_376_sample_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_376_update_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_376_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_376_Sample/rr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_376_Update/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_376_Update/cr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_380_sample_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_380_update_start_
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_380_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_380_Sample/rr
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_380_Update/$entry
      -- CP-element group 0: 	 assign_stmt_377_to_assign_stmt_416/slice_380_Update/cr
      -- 
    cr_1204_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1204_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => CONCAT_u8_u16_405_inst_req_1); -- 
    ccr_1176_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1176_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => call_stmt_398_call_req_1); -- 
    ccr_1148_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1148_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => call_stmt_392_call_req_1); -- 
    ccr_1162_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1162_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => call_stmt_395_call_req_1); -- 
    rr_1115_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1115_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => slice_384_inst_req_0); -- 
    cr_1120_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1120_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => slice_384_inst_req_1); -- 
    cr_1092_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1092_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => slice_376_inst_req_1); -- 
    rr_1101_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1101_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => slice_380_inst_req_0); -- 
    cr_1106_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1106_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => slice_380_inst_req_1); -- 
    rr_1087_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1087_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => slice_376_inst_req_0); -- 
    cr_1218_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1218_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => CONCAT_u8_u16_410_inst_req_1); -- 
    cr_1232_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1232_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => CONCAT_u16_u32_415_inst_req_1); -- 
    rr_1129_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1129_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => slice_388_inst_req_0); -- 
    cr_1134_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1134_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => slice_388_inst_req_1); -- 
    ccr_1190_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1190_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(0), ack => call_stmt_401_call_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_377_to_assign_stmt_416/slice_376_sample_completed_
      -- CP-element group 1: 	 assign_stmt_377_to_assign_stmt_416/slice_376_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_377_to_assign_stmt_416/slice_376_Sample/ra
      -- 
    ra_1088_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_376_inst_ack_0, ack => sbox_transformation_CP_1074_elements(1)); -- 
    -- CP-element group 2:  transition  input  output  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	9 
    -- CP-element group 2:  members (6) 
      -- CP-element group 2: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_392_sample_start_
      -- CP-element group 2: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_392_Sample/crr
      -- CP-element group 2: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_392_Sample/$entry
      -- CP-element group 2: 	 assign_stmt_377_to_assign_stmt_416/slice_376_update_completed_
      -- CP-element group 2: 	 assign_stmt_377_to_assign_stmt_416/slice_376_Update/$exit
      -- CP-element group 2: 	 assign_stmt_377_to_assign_stmt_416/slice_376_Update/ca
      -- 
    ca_1093_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_376_inst_ack_1, ack => sbox_transformation_CP_1074_elements(2)); -- 
    crr_1143_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1143_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(2), ack => call_stmt_392_call_req_0); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 assign_stmt_377_to_assign_stmt_416/slice_380_sample_completed_
      -- CP-element group 3: 	 assign_stmt_377_to_assign_stmt_416/slice_380_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_377_to_assign_stmt_416/slice_380_Sample/ra
      -- 
    ra_1102_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_380_inst_ack_0, ack => sbox_transformation_CP_1074_elements(3)); -- 
    -- CP-element group 4:  transition  input  output  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	11 
    -- CP-element group 4:  members (6) 
      -- CP-element group 4: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_395_sample_start_
      -- CP-element group 4: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_395_Sample/crr
      -- CP-element group 4: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_395_Sample/$entry
      -- CP-element group 4: 	 assign_stmt_377_to_assign_stmt_416/slice_380_update_completed_
      -- CP-element group 4: 	 assign_stmt_377_to_assign_stmt_416/slice_380_Update/$exit
      -- CP-element group 4: 	 assign_stmt_377_to_assign_stmt_416/slice_380_Update/ca
      -- 
    ca_1107_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_380_inst_ack_1, ack => sbox_transformation_CP_1074_elements(4)); -- 
    crr_1157_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1157_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(4), ack => call_stmt_395_call_req_0); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	0 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_377_to_assign_stmt_416/slice_384_sample_completed_
      -- CP-element group 5: 	 assign_stmt_377_to_assign_stmt_416/slice_384_Sample/ra
      -- CP-element group 5: 	 assign_stmt_377_to_assign_stmt_416/slice_384_Sample/$exit
      -- 
    ra_1116_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_384_inst_ack_0, ack => sbox_transformation_CP_1074_elements(5)); -- 
    -- CP-element group 6:  transition  input  output  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	13 
    -- CP-element group 6:  members (6) 
      -- CP-element group 6: 	 assign_stmt_377_to_assign_stmt_416/slice_384_update_completed_
      -- CP-element group 6: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_398_sample_start_
      -- CP-element group 6: 	 assign_stmt_377_to_assign_stmt_416/slice_384_Update/$exit
      -- CP-element group 6: 	 assign_stmt_377_to_assign_stmt_416/slice_384_Update/ca
      -- CP-element group 6: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_398_Sample/crr
      -- CP-element group 6: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_398_Sample/$entry
      -- 
    ca_1121_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_384_inst_ack_1, ack => sbox_transformation_CP_1074_elements(6)); -- 
    crr_1171_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1171_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(6), ack => call_stmt_398_call_req_0); -- 
    -- CP-element group 7:  transition  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	0 
    -- CP-element group 7: successors 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 assign_stmt_377_to_assign_stmt_416/slice_388_Sample/$exit
      -- CP-element group 7: 	 assign_stmt_377_to_assign_stmt_416/slice_388_Sample/ra
      -- CP-element group 7: 	 assign_stmt_377_to_assign_stmt_416/slice_388_sample_completed_
      -- 
    ra_1130_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_388_inst_ack_0, ack => sbox_transformation_CP_1074_elements(7)); -- 
    -- CP-element group 8:  transition  input  output  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	0 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	15 
    -- CP-element group 8:  members (6) 
      -- CP-element group 8: 	 assign_stmt_377_to_assign_stmt_416/slice_388_Update/ca
      -- CP-element group 8: 	 assign_stmt_377_to_assign_stmt_416/slice_388_Update/$exit
      -- CP-element group 8: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_401_Sample/crr
      -- CP-element group 8: 	 assign_stmt_377_to_assign_stmt_416/slice_388_update_completed_
      -- CP-element group 8: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_401_Sample/$entry
      -- CP-element group 8: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_401_sample_start_
      -- 
    ca_1135_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_388_inst_ack_1, ack => sbox_transformation_CP_1074_elements(8)); -- 
    crr_1185_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1185_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(8), ack => call_stmt_401_call_req_0); -- 
    -- CP-element group 9:  transition  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	2 
    -- CP-element group 9: successors 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_392_sample_completed_
      -- CP-element group 9: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_392_Sample/$exit
      -- CP-element group 9: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_392_Sample/cra
      -- 
    cra_1144_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_392_call_ack_0, ack => sbox_transformation_CP_1074_elements(9)); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	0 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	17 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_392_Update/cca
      -- CP-element group 10: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_392_Update/$exit
      -- CP-element group 10: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_392_update_completed_
      -- 
    cca_1149_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_392_call_ack_1, ack => sbox_transformation_CP_1074_elements(10)); -- 
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	4 
    -- CP-element group 11: successors 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_395_sample_completed_
      -- CP-element group 11: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_395_Sample/$exit
      -- CP-element group 11: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_395_Sample/cra
      -- 
    cra_1158_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_395_call_ack_0, ack => sbox_transformation_CP_1074_elements(11)); -- 
    -- CP-element group 12:  transition  input  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	0 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	17 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_395_Update/cca
      -- CP-element group 12: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_395_Update/$exit
      -- CP-element group 12: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_395_update_completed_
      -- 
    cca_1163_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_395_call_ack_1, ack => sbox_transformation_CP_1074_elements(12)); -- 
    -- CP-element group 13:  transition  input  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	6 
    -- CP-element group 13: successors 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_398_sample_completed_
      -- CP-element group 13: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_398_Sample/cra
      -- CP-element group 13: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_398_Sample/$exit
      -- 
    cra_1172_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_398_call_ack_0, ack => sbox_transformation_CP_1074_elements(13)); -- 
    -- CP-element group 14:  transition  input  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	0 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	20 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_398_Update/cca
      -- CP-element group 14: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_398_Update/$exit
      -- CP-element group 14: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_398_update_completed_
      -- 
    cca_1177_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_398_call_ack_1, ack => sbox_transformation_CP_1074_elements(14)); -- 
    -- CP-element group 15:  transition  input  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	8 
    -- CP-element group 15: successors 
    -- CP-element group 15:  members (3) 
      -- CP-element group 15: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_401_Sample/$exit
      -- CP-element group 15: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_401_Sample/cra
      -- CP-element group 15: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_401_sample_completed_
      -- 
    cra_1186_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_401_call_ack_0, ack => sbox_transformation_CP_1074_elements(15)); -- 
    -- CP-element group 16:  transition  input  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	0 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	20 
    -- CP-element group 16:  members (3) 
      -- CP-element group 16: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_401_Update/$exit
      -- CP-element group 16: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_401_Update/cca
      -- CP-element group 16: 	 assign_stmt_377_to_assign_stmt_416/call_stmt_401_update_completed_
      -- 
    cca_1191_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_401_call_ack_1, ack => sbox_transformation_CP_1074_elements(16)); -- 
    -- CP-element group 17:  join  transition  output  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	12 
    -- CP-element group 17: 	10 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	18 
    -- CP-element group 17:  members (3) 
      -- CP-element group 17: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_405_sample_start_
      -- CP-element group 17: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_405_Sample/rr
      -- CP-element group 17: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_405_Sample/$entry
      -- 
    rr_1199_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1199_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(17), ack => CONCAT_u8_u16_405_inst_req_0); -- 
    sbox_transformation_cp_element_group_17: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 39) := "sbox_transformation_cp_element_group_17"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= sbox_transformation_CP_1074_elements(12) & sbox_transformation_CP_1074_elements(10);
      gj_sbox_transformation_cp_element_group_17 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => sbox_transformation_CP_1074_elements(17), clk => clk, reset => reset); --
    end block;
    -- CP-element group 18:  transition  input  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	17 
    -- CP-element group 18: successors 
    -- CP-element group 18:  members (3) 
      -- CP-element group 18: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_405_Sample/ra
      -- CP-element group 18: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_405_sample_completed_
      -- CP-element group 18: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_405_Sample/$exit
      -- 
    ra_1200_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_405_inst_ack_0, ack => sbox_transformation_CP_1074_elements(18)); -- 
    -- CP-element group 19:  transition  input  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	0 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	23 
    -- CP-element group 19:  members (3) 
      -- CP-element group 19: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_405_Update/$exit
      -- CP-element group 19: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_405_update_completed_
      -- CP-element group 19: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_405_Update/ca
      -- 
    ca_1205_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_405_inst_ack_1, ack => sbox_transformation_CP_1074_elements(19)); -- 
    -- CP-element group 20:  join  transition  output  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	16 
    -- CP-element group 20: 	14 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	21 
    -- CP-element group 20:  members (3) 
      -- CP-element group 20: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_410_Sample/$entry
      -- CP-element group 20: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_410_Sample/rr
      -- CP-element group 20: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_410_sample_start_
      -- 
    rr_1213_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1213_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(20), ack => CONCAT_u8_u16_410_inst_req_0); -- 
    sbox_transformation_cp_element_group_20: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 39) := "sbox_transformation_cp_element_group_20"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= sbox_transformation_CP_1074_elements(16) & sbox_transformation_CP_1074_elements(14);
      gj_sbox_transformation_cp_element_group_20 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => sbox_transformation_CP_1074_elements(20), clk => clk, reset => reset); --
    end block;
    -- CP-element group 21:  transition  input  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	20 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (3) 
      -- CP-element group 21: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_410_Sample/$exit
      -- CP-element group 21: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_410_Sample/ra
      -- CP-element group 21: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_410_sample_completed_
      -- 
    ra_1214_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_410_inst_ack_0, ack => sbox_transformation_CP_1074_elements(21)); -- 
    -- CP-element group 22:  transition  input  bypass 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	0 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	23 
    -- CP-element group 22:  members (3) 
      -- CP-element group 22: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_410_update_completed_
      -- CP-element group 22: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_410_Update/$exit
      -- CP-element group 22: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u8_u16_410_Update/ca
      -- 
    ca_1219_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 22_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_410_inst_ack_1, ack => sbox_transformation_CP_1074_elements(22)); -- 
    -- CP-element group 23:  join  transition  output  bypass 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	19 
    -- CP-element group 23: 	22 
    -- CP-element group 23: successors 
    -- CP-element group 23: 	24 
    -- CP-element group 23:  members (3) 
      -- CP-element group 23: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u16_u32_415_Sample/$entry
      -- CP-element group 23: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u16_u32_415_Sample/rr
      -- CP-element group 23: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u16_u32_415_sample_start_
      -- 
    rr_1227_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1227_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => sbox_transformation_CP_1074_elements(23), ack => CONCAT_u16_u32_415_inst_req_0); -- 
    sbox_transformation_cp_element_group_23: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 39) := "sbox_transformation_cp_element_group_23"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= sbox_transformation_CP_1074_elements(19) & sbox_transformation_CP_1074_elements(22);
      gj_sbox_transformation_cp_element_group_23 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => sbox_transformation_CP_1074_elements(23), clk => clk, reset => reset); --
    end block;
    -- CP-element group 24:  transition  input  bypass 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	23 
    -- CP-element group 24: successors 
    -- CP-element group 24:  members (3) 
      -- CP-element group 24: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u16_u32_415_sample_completed_
      -- CP-element group 24: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u16_u32_415_Sample/$exit
      -- CP-element group 24: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u16_u32_415_Sample/ra
      -- 
    ra_1228_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_415_inst_ack_0, ack => sbox_transformation_CP_1074_elements(24)); -- 
    -- CP-element group 25:  transition  input  bypass 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	0 
    -- CP-element group 25: successors 
    -- CP-element group 25:  members (5) 
      -- CP-element group 25: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u16_u32_415_update_completed_
      -- CP-element group 25: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u16_u32_415_Update/$exit
      -- CP-element group 25: 	 assign_stmt_377_to_assign_stmt_416/CONCAT_u16_u32_415_Update/ca
      -- CP-element group 25: 	 $exit
      -- CP-element group 25: 	 assign_stmt_377_to_assign_stmt_416/$exit
      -- 
    ca_1233_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_415_inst_ack_1, ack => sbox_transformation_CP_1074_elements(25)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal a_377 : std_logic_vector(7 downto 0);
    signal b_381 : std_logic_vector(7 downto 0);
    signal c_385 : std_logic_vector(7 downto 0);
    signal d_389 : std_logic_vector(7 downto 0);
    signal na_392 : std_logic_vector(7 downto 0);
    signal nb_395 : std_logic_vector(7 downto 0);
    signal nc_398 : std_logic_vector(7 downto 0);
    signal nd_401 : std_logic_vector(7 downto 0);
    signal nw_t1_406 : std_logic_vector(15 downto 0);
    signal nw_t2_411 : std_logic_vector(15 downto 0);
    -- 
  begin -- 
    slice_376_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_376_inst_req_0;
      slice_376_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_376_inst_req_1;
      slice_376_inst_ack_1<= update_ack(0);
      slice_376_inst: SliceSplitProtocol generic map(name => "slice_376_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_buffer, dout => a_377, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_380_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_380_inst_req_0;
      slice_380_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_380_inst_req_1;
      slice_380_inst_ack_1<= update_ack(0);
      slice_380_inst: SliceSplitProtocol generic map(name => "slice_380_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_buffer, dout => b_381, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_384_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_384_inst_req_0;
      slice_384_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_384_inst_req_1;
      slice_384_inst_ack_1<= update_ack(0);
      slice_384_inst: SliceSplitProtocol generic map(name => "slice_384_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_buffer, dout => c_385, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_388_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_388_inst_req_0;
      slice_388_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_388_inst_req_1;
      slice_388_inst_ack_1<= update_ack(0);
      slice_388_inst: SliceSplitProtocol generic map(name => "slice_388_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_buffer, dout => d_389, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    -- shared split operator group (0) : CONCAT_u16_u32_415_inst 
    ApConcat_group_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= nw_t1_406 & nw_t2_411;
      nw_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_415_inst_req_0;
      CONCAT_u16_u32_415_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_415_inst_req_1;
      CONCAT_u16_u32_415_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_0_gI: SplitGuardInterface generic map(name => "ApConcat_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : CONCAT_u8_u16_405_inst 
    ApConcat_group_1: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= na_392 & nb_395;
      nw_t1_406 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_405_inst_req_0;
      CONCAT_u8_u16_405_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_405_inst_req_1;
      CONCAT_u8_u16_405_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_1_gI: SplitGuardInterface generic map(name => "ApConcat_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- shared split operator group (2) : CONCAT_u8_u16_410_inst 
    ApConcat_group_2: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= nc_398 & nd_401;
      nw_t2_411 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_410_inst_req_0;
      CONCAT_u8_u16_410_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_410_inst_req_1;
      CONCAT_u8_u16_410_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_2_gI: SplitGuardInterface generic map(name => "ApConcat_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_2",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 2
    -- shared call operator group (0) : call_stmt_392_call call_stmt_401_call call_stmt_398_call call_stmt_395_call 
    sbox_transform_call_group_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 3 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 3 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant inBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant outBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2);
      -- 
    begin -- 
      reqL_unguarded(3) <= call_stmt_392_call_req_0;
      reqL_unguarded(2) <= call_stmt_401_call_req_0;
      reqL_unguarded(1) <= call_stmt_398_call_req_0;
      reqL_unguarded(0) <= call_stmt_395_call_req_0;
      call_stmt_392_call_ack_0 <= ackL_unguarded(3);
      call_stmt_401_call_ack_0 <= ackL_unguarded(2);
      call_stmt_398_call_ack_0 <= ackL_unguarded(1);
      call_stmt_395_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(3) <= call_stmt_392_call_req_1;
      reqR_unguarded(2) <= call_stmt_401_call_req_1;
      reqR_unguarded(1) <= call_stmt_398_call_req_1;
      reqR_unguarded(0) <= call_stmt_395_call_req_1;
      call_stmt_392_call_ack_1 <= ackR_unguarded(3);
      call_stmt_401_call_ack_1 <= ackR_unguarded(2);
      call_stmt_398_call_ack_1 <= ackR_unguarded(1);
      call_stmt_395_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      sbox_transform_call_group_0_accessRegulator_0: access_regulator_base generic map (name => "sbox_transform_call_group_0_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      sbox_transform_call_group_0_accessRegulator_1: access_regulator_base generic map (name => "sbox_transform_call_group_0_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      sbox_transform_call_group_0_accessRegulator_2: access_regulator_base generic map (name => "sbox_transform_call_group_0_accessRegulator_2", num_slots => 1) -- 
        port map (req => reqL_unregulated(2), -- 
          ack => ackL_unregulated(2),
          regulated_req => reqL(2),
          regulated_ack => ackL(2),
          release_req => reqR(2),
          release_ack => ackR(2),
          clk => clk, reset => reset); -- 
      sbox_transform_call_group_0_accessRegulator_3: access_regulator_base generic map (name => "sbox_transform_call_group_0_accessRegulator_3", num_slots => 1) -- 
        port map (req => reqL_unregulated(3), -- 
          ack => ackL_unregulated(3),
          regulated_req => reqL(3),
          regulated_ack => ackL(3),
          release_req => reqR(3),
          release_ack => ackR(3),
          clk => clk, reset => reset); -- 
      sbox_transform_call_group_0_gI: SplitGuardInterface generic map(name => "sbox_transform_call_group_0_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= a_377 & d_389 & c_385 & b_381;
      na_392 <= data_out(31 downto 24);
      nd_401 <= data_out(23 downto 16);
      nc_398 <= data_out(15 downto 8);
      nb_395 <= data_out(7 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 32,
        owidth => 8,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 3,
        nreqs => 4,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => sbox_transform_call_reqs(0),
          ackR => sbox_transform_call_acks(0),
          dataR => sbox_transform_call_data(7 downto 0),
          tagR => sbox_transform_call_tag(2 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 8,
          owidth => 32,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 3,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 4) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => sbox_transform_return_acks(0), -- cross-over
          ackL => sbox_transform_return_reqs(0), -- cross-over
          dataL => sbox_transform_return_data(7 downto 0),
          tagL => sbox_transform_return_tag(2 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- 
  end Block; -- data_path
  -- 
end sbox_transformation_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity send_msg is -- 
  generic (tag_length : integer); 
  port ( -- 
    msg : in  std_logic_vector(31 downto 0);
    out_e_pipe_write_req : out  std_logic_vector(0 downto 0);
    out_e_pipe_write_ack : in   std_logic_vector(0 downto 0);
    out_e_pipe_write_data : out  std_logic_vector(7 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity send_msg;
architecture send_msg_arch of send_msg is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 32)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal msg_buffer :  std_logic_vector(31 downto 0);
  signal msg_update_enable: Boolean;
  -- output port buffer signals
  signal send_msg_CP_3959_start: Boolean;
  signal send_msg_CP_3959_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal WPIPE_out_e_1223_inst_ack_1 : boolean;
  signal WPIPE_out_e_1223_inst_req_0 : boolean;
  signal WPIPE_out_e_1223_inst_ack_0 : boolean;
  signal WPIPE_out_e_1223_inst_req_1 : boolean;
  signal slice_1200_inst_req_0 : boolean;
  signal slice_1200_inst_ack_0 : boolean;
  signal slice_1200_inst_req_1 : boolean;
  signal slice_1200_inst_ack_1 : boolean;
  signal slice_1204_inst_req_0 : boolean;
  signal slice_1204_inst_ack_0 : boolean;
  signal slice_1204_inst_req_1 : boolean;
  signal slice_1204_inst_ack_1 : boolean;
  signal slice_1208_inst_req_0 : boolean;
  signal slice_1208_inst_ack_0 : boolean;
  signal slice_1208_inst_req_1 : boolean;
  signal slice_1208_inst_ack_1 : boolean;
  signal slice_1212_inst_req_0 : boolean;
  signal slice_1212_inst_ack_0 : boolean;
  signal slice_1212_inst_req_1 : boolean;
  signal slice_1212_inst_ack_1 : boolean;
  signal WPIPE_out_e_1214_inst_req_0 : boolean;
  signal WPIPE_out_e_1214_inst_ack_0 : boolean;
  signal WPIPE_out_e_1214_inst_req_1 : boolean;
  signal WPIPE_out_e_1214_inst_ack_1 : boolean;
  signal WPIPE_out_e_1217_inst_req_0 : boolean;
  signal WPIPE_out_e_1217_inst_ack_0 : boolean;
  signal WPIPE_out_e_1217_inst_req_1 : boolean;
  signal WPIPE_out_e_1217_inst_ack_1 : boolean;
  signal WPIPE_out_e_1220_inst_req_0 : boolean;
  signal WPIPE_out_e_1220_inst_ack_0 : boolean;
  signal WPIPE_out_e_1220_inst_req_1 : boolean;
  signal WPIPE_out_e_1220_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "send_msg_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 32) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(31 downto 0) <= msg;
  msg_buffer <= in_buffer_data_out(31 downto 0);
  in_buffer_data_in(tag_length + 31 downto 32) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 31 downto 32);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  send_msg_CP_3959_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "send_msg_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= send_msg_CP_3959_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= send_msg_CP_3959_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= send_msg_CP_3959_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  send_msg_CP_3959: Block -- control-path 
    signal send_msg_CP_3959_elements: BooleanArray(19 downto 0);
    -- 
  begin -- 
    send_msg_CP_3959_elements(0) <= send_msg_CP_3959_start;
    send_msg_CP_3959_symbol <= send_msg_CP_3959_elements(19);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	5 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	7 
    -- CP-element group 0: 	8 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	1 
    -- CP-element group 0:  members (26) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/$entry
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1200_sample_start_
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1200_update_start_
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1200_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1200_Sample/rr
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1200_Update/$entry
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1200_Update/cr
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1204_sample_start_
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1204_update_start_
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1204_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1204_Sample/rr
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1204_Update/$entry
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1204_Update/cr
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1208_sample_start_
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1208_update_start_
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1208_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1208_Sample/rr
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1208_Update/$entry
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1208_Update/cr
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1212_sample_start_
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1212_update_start_
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1212_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1212_Sample/rr
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1212_Update/$entry
      -- CP-element group 0: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1212_Update/cr
      -- 
    rr_3972_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3972_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(0), ack => slice_1200_inst_req_0); -- 
    rr_4000_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4000_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(0), ack => slice_1208_inst_req_0); -- 
    cr_4005_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4005_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(0), ack => slice_1208_inst_req_1); -- 
    rr_3986_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_3986_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(0), ack => slice_1204_inst_req_0); -- 
    cr_3991_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3991_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(0), ack => slice_1204_inst_req_1); -- 
    cr_4019_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_4019_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(0), ack => slice_1212_inst_req_1); -- 
    rr_4014_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_4014_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(0), ack => slice_1212_inst_req_0); -- 
    cr_3977_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_3977_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(0), ack => slice_1200_inst_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1200_sample_completed_
      -- CP-element group 1: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1200_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1200_Sample/ra
      -- 
    ra_3973_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1200_inst_ack_0, ack => send_msg_CP_3959_elements(1)); -- 
    -- CP-element group 2:  transition  input  output  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	9 
    -- CP-element group 2:  members (6) 
      -- CP-element group 2: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1200_update_completed_
      -- CP-element group 2: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1200_Update/$exit
      -- CP-element group 2: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1200_Update/ca
      -- CP-element group 2: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1214_sample_start_
      -- CP-element group 2: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1214_Sample/$entry
      -- CP-element group 2: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1214_Sample/req
      -- 
    ca_3978_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1200_inst_ack_1, ack => send_msg_CP_3959_elements(2)); -- 
    req_4028_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4028_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(2), ack => WPIPE_out_e_1214_inst_req_0); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1204_sample_completed_
      -- CP-element group 3: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1204_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1204_Sample/ra
      -- 
    ra_3987_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1204_inst_ack_0, ack => send_msg_CP_3959_elements(3)); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	11 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1204_update_completed_
      -- CP-element group 4: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1204_Update/$exit
      -- CP-element group 4: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1204_Update/ca
      -- 
    ca_3992_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1204_inst_ack_1, ack => send_msg_CP_3959_elements(4)); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	0 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1208_sample_completed_
      -- CP-element group 5: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1208_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1208_Sample/ra
      -- 
    ra_4001_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1208_inst_ack_0, ack => send_msg_CP_3959_elements(5)); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	14 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1208_update_completed_
      -- CP-element group 6: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1208_Update/$exit
      -- CP-element group 6: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1208_Update/ca
      -- 
    ca_4006_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1208_inst_ack_1, ack => send_msg_CP_3959_elements(6)); -- 
    -- CP-element group 7:  transition  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	0 
    -- CP-element group 7: successors 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1212_sample_completed_
      -- CP-element group 7: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1212_Sample/$exit
      -- CP-element group 7: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1212_Sample/ra
      -- 
    ra_4015_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1212_inst_ack_0, ack => send_msg_CP_3959_elements(7)); -- 
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	0 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	17 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1212_update_completed_
      -- CP-element group 8: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1212_Update/$exit
      -- CP-element group 8: 	 assign_stmt_1201_to_assign_stmt_1225/slice_1212_Update/ca
      -- 
    ca_4020_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_1212_inst_ack_1, ack => send_msg_CP_3959_elements(8)); -- 
    -- CP-element group 9:  transition  input  output  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	2 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	10 
    -- CP-element group 9:  members (6) 
      -- CP-element group 9: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1214_sample_completed_
      -- CP-element group 9: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1214_update_start_
      -- CP-element group 9: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1214_Sample/$exit
      -- CP-element group 9: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1214_Sample/ack
      -- CP-element group 9: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1214_Update/$entry
      -- CP-element group 9: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1214_Update/req
      -- 
    ack_4029_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1214_inst_ack_0, ack => send_msg_CP_3959_elements(9)); -- 
    req_4033_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4033_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(9), ack => WPIPE_out_e_1214_inst_req_1); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	9 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	11 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1214_update_completed_
      -- CP-element group 10: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1214_Update/$exit
      -- CP-element group 10: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1214_Update/ack
      -- 
    ack_4034_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1214_inst_ack_1, ack => send_msg_CP_3959_elements(10)); -- 
    -- CP-element group 11:  join  transition  output  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	10 
    -- CP-element group 11: 	4 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	12 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1217_sample_start_
      -- CP-element group 11: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1217_Sample/$entry
      -- CP-element group 11: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1217_Sample/req
      -- 
    req_4042_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4042_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(11), ack => WPIPE_out_e_1217_inst_req_0); -- 
    send_msg_cp_element_group_11: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 28) := "send_msg_cp_element_group_11"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_msg_CP_3959_elements(10) & send_msg_CP_3959_elements(4);
      gj_send_msg_cp_element_group_11 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_msg_CP_3959_elements(11), clk => clk, reset => reset); --
    end block;
    -- CP-element group 12:  transition  input  output  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	11 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	13 
    -- CP-element group 12:  members (6) 
      -- CP-element group 12: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1217_sample_completed_
      -- CP-element group 12: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1217_update_start_
      -- CP-element group 12: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1217_Sample/$exit
      -- CP-element group 12: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1217_Sample/ack
      -- CP-element group 12: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1217_Update/$entry
      -- CP-element group 12: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1217_Update/req
      -- 
    ack_4043_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1217_inst_ack_0, ack => send_msg_CP_3959_elements(12)); -- 
    req_4047_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4047_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(12), ack => WPIPE_out_e_1217_inst_req_1); -- 
    -- CP-element group 13:  transition  input  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	12 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	14 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1217_update_completed_
      -- CP-element group 13: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1217_Update/$exit
      -- CP-element group 13: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1217_Update/ack
      -- 
    ack_4048_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1217_inst_ack_1, ack => send_msg_CP_3959_elements(13)); -- 
    -- CP-element group 14:  join  transition  output  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	6 
    -- CP-element group 14: 	13 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	15 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1220_sample_start_
      -- CP-element group 14: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1220_Sample/$entry
      -- CP-element group 14: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1220_Sample/req
      -- 
    req_4056_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4056_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(14), ack => WPIPE_out_e_1220_inst_req_0); -- 
    send_msg_cp_element_group_14: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 28) := "send_msg_cp_element_group_14"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_msg_CP_3959_elements(6) & send_msg_CP_3959_elements(13);
      gj_send_msg_cp_element_group_14 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_msg_CP_3959_elements(14), clk => clk, reset => reset); --
    end block;
    -- CP-element group 15:  transition  input  output  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	14 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	16 
    -- CP-element group 15:  members (6) 
      -- CP-element group 15: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1220_sample_completed_
      -- CP-element group 15: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1220_update_start_
      -- CP-element group 15: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1220_Sample/$exit
      -- CP-element group 15: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1220_Sample/ack
      -- CP-element group 15: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1220_Update/$entry
      -- CP-element group 15: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1220_Update/req
      -- 
    ack_4057_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1220_inst_ack_0, ack => send_msg_CP_3959_elements(15)); -- 
    req_4061_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4061_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(15), ack => WPIPE_out_e_1220_inst_req_1); -- 
    -- CP-element group 16:  transition  input  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	15 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	17 
    -- CP-element group 16:  members (3) 
      -- CP-element group 16: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1220_update_completed_
      -- CP-element group 16: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1220_Update/$exit
      -- CP-element group 16: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1220_Update/ack
      -- 
    ack_4062_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1220_inst_ack_1, ack => send_msg_CP_3959_elements(16)); -- 
    -- CP-element group 17:  join  transition  output  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	16 
    -- CP-element group 17: 	8 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	18 
    -- CP-element group 17:  members (3) 
      -- CP-element group 17: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1223_Sample/req
      -- CP-element group 17: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1223_Sample/$entry
      -- CP-element group 17: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1223_sample_start_
      -- 
    req_4070_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4070_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(17), ack => WPIPE_out_e_1223_inst_req_0); -- 
    send_msg_cp_element_group_17: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 28) := "send_msg_cp_element_group_17"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_msg_CP_3959_elements(16) & send_msg_CP_3959_elements(8);
      gj_send_msg_cp_element_group_17 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_msg_CP_3959_elements(17), clk => clk, reset => reset); --
    end block;
    -- CP-element group 18:  transition  input  output  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	17 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	19 
    -- CP-element group 18:  members (6) 
      -- CP-element group 18: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1223_Sample/$exit
      -- CP-element group 18: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1223_Sample/ack
      -- CP-element group 18: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1223_Update/$entry
      -- CP-element group 18: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1223_Update/req
      -- CP-element group 18: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1223_sample_completed_
      -- CP-element group 18: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1223_update_start_
      -- 
    ack_4071_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1223_inst_ack_0, ack => send_msg_CP_3959_elements(18)); -- 
    req_4075_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_4075_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_msg_CP_3959_elements(18), ack => WPIPE_out_e_1223_inst_req_1); -- 
    -- CP-element group 19:  transition  input  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	18 
    -- CP-element group 19: successors 
    -- CP-element group 19:  members (5) 
      -- CP-element group 19: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1223_Update/ack
      -- CP-element group 19: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1223_update_completed_
      -- CP-element group 19: 	 assign_stmt_1201_to_assign_stmt_1225/WPIPE_out_e_1223_Update/$exit
      -- CP-element group 19: 	 $exit
      -- CP-element group 19: 	 assign_stmt_1201_to_assign_stmt_1225/$exit
      -- 
    ack_4076_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_out_e_1223_inst_ack_1, ack => send_msg_CP_3959_elements(19)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal s_0_1201 : std_logic_vector(7 downto 0);
    signal s_1_1205 : std_logic_vector(7 downto 0);
    signal s_2_1209 : std_logic_vector(7 downto 0);
    signal s_3_1213 : std_logic_vector(7 downto 0);
    -- 
  begin -- 
    slice_1200_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1200_inst_req_0;
      slice_1200_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1200_inst_req_1;
      slice_1200_inst_ack_1<= update_ack(0);
      slice_1200_inst: SliceSplitProtocol generic map(name => "slice_1200_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_buffer, dout => s_0_1201, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1204_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1204_inst_req_0;
      slice_1204_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1204_inst_req_1;
      slice_1204_inst_ack_1<= update_ack(0);
      slice_1204_inst: SliceSplitProtocol generic map(name => "slice_1204_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_buffer, dout => s_1_1205, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1208_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1208_inst_req_0;
      slice_1208_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1208_inst_req_1;
      slice_1208_inst_ack_1<= update_ack(0);
      slice_1208_inst: SliceSplitProtocol generic map(name => "slice_1208_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_buffer, dout => s_2_1209, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_1212_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_1212_inst_req_0;
      slice_1212_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_1212_inst_req_1;
      slice_1212_inst_ack_1<= update_ack(0);
      slice_1212_inst: SliceSplitProtocol generic map(name => "slice_1212_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => msg_buffer, dout => s_3_1213, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    -- shared outport operator group (0) : WPIPE_out_e_1217_inst WPIPE_out_e_1220_inst WPIPE_out_e_1223_inst WPIPE_out_e_1214_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 3 downto 0);
      signal update_req, update_ack : BooleanArray( 3 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 3 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant inBUFs : IntegerArray(3 downto 0) := (3 => 0, 2 => 0, 1 => 0, 0 => 0);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2);
      -- 
    begin -- 
      sample_req_unguarded(3) <= WPIPE_out_e_1217_inst_req_0;
      sample_req_unguarded(2) <= WPIPE_out_e_1220_inst_req_0;
      sample_req_unguarded(1) <= WPIPE_out_e_1223_inst_req_0;
      sample_req_unguarded(0) <= WPIPE_out_e_1214_inst_req_0;
      WPIPE_out_e_1217_inst_ack_0 <= sample_ack_unguarded(3);
      WPIPE_out_e_1220_inst_ack_0 <= sample_ack_unguarded(2);
      WPIPE_out_e_1223_inst_ack_0 <= sample_ack_unguarded(1);
      WPIPE_out_e_1214_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(3) <= WPIPE_out_e_1217_inst_req_1;
      update_req_unguarded(2) <= WPIPE_out_e_1220_inst_req_1;
      update_req_unguarded(1) <= WPIPE_out_e_1223_inst_req_1;
      update_req_unguarded(0) <= WPIPE_out_e_1214_inst_req_1;
      WPIPE_out_e_1217_inst_ack_1 <= update_ack_unguarded(3);
      WPIPE_out_e_1220_inst_ack_1 <= update_ack_unguarded(2);
      WPIPE_out_e_1223_inst_ack_1 <= update_ack_unguarded(1);
      WPIPE_out_e_1214_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      data_in <= s_1_1205 & s_2_1209 & s_3_1213 & s_0_1201;
      out_e_write_0_gI: SplitGuardInterface generic map(name => "out_e_write_0_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      out_e_write_0: OutputPortRevised -- 
        generic map ( name => "out_e", data_width => 8, num_reqs => 4, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => out_e_pipe_write_req(0),
          oack => out_e_pipe_write_ack(0),
          odata => out_e_pipe_write_data(7 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- 
  end Block; -- data_path
  -- 
end send_msg_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity set_rcon is -- 
  generic (tag_length : integer); 
  port ( -- 
    memory_space_1_sr_req : out  std_logic_vector(0 downto 0);
    memory_space_1_sr_ack : in   std_logic_vector(0 downto 0);
    memory_space_1_sr_addr : out  std_logic_vector(3 downto 0);
    memory_space_1_sr_data : out  std_logic_vector(31 downto 0);
    memory_space_1_sr_tag :  out  std_logic_vector(17 downto 0);
    memory_space_1_sc_req : out  std_logic_vector(0 downto 0);
    memory_space_1_sc_ack : in   std_logic_vector(0 downto 0);
    memory_space_1_sc_tag :  in  std_logic_vector(0 downto 0);
    input_e_pipe_read_req : out  std_logic_vector(0 downto 0);
    input_e_pipe_read_ack : in   std_logic_vector(0 downto 0);
    input_e_pipe_read_data : in   std_logic_vector(7 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity set_rcon;
architecture set_rcon_arch of set_rcon is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal set_rcon_CP_5892_start: Boolean;
  signal set_rcon_CP_5892_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal RPIPE_input_e_1639_inst_req_1 : boolean;
  signal CONCAT_u8_u32_1644_inst_req_1 : boolean;
  signal CONCAT_u8_u32_1644_inst_ack_1 : boolean;
  signal CONCAT_u8_u32_1644_inst_ack_0 : boolean;
  signal RPIPE_input_e_1639_inst_ack_1 : boolean;
  signal RPIPE_input_e_1639_inst_req_0 : boolean;
  signal RPIPE_input_e_1639_inst_ack_0 : boolean;
  signal CONCAT_u8_u32_1644_inst_req_0 : boolean;
  signal array_obj_ref_1647_store_0_req_0 : boolean;
  signal array_obj_ref_1647_store_0_ack_0 : boolean;
  signal array_obj_ref_1647_store_0_req_1 : boolean;
  signal array_obj_ref_1647_store_0_ack_1 : boolean;
  signal if_stmt_1650_branch_req_0 : boolean;
  signal if_stmt_1650_branch_ack_1 : boolean;
  signal if_stmt_1650_branch_ack_0 : boolean;
  signal ADD_u8_u8_1657_inst_req_0 : boolean;
  signal ADD_u8_u8_1657_inst_ack_0 : boolean;
  signal ADD_u8_u8_1657_inst_req_1 : boolean;
  signal ADD_u8_u8_1657_inst_ack_1 : boolean;
  signal phi_stmt_1633_req_0 : boolean;
  signal nxt_index_1658_1636_buf_req_0 : boolean;
  signal nxt_index_1658_1636_buf_ack_0 : boolean;
  signal nxt_index_1658_1636_buf_req_1 : boolean;
  signal nxt_index_1658_1636_buf_ack_1 : boolean;
  signal phi_stmt_1633_req_1 : boolean;
  signal phi_stmt_1633_ack_0 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "set_rcon_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  set_rcon_CP_5892_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "set_rcon_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= set_rcon_CP_5892_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= set_rcon_CP_5892_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= set_rcon_CP_5892_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  set_rcon_CP_5892: Block -- control-path 
    signal set_rcon_CP_5892_elements: BooleanArray(17 downto 0);
    -- 
  begin -- 
    set_rcon_CP_5892_elements(0) <= set_rcon_CP_5892_start;
    set_rcon_CP_5892_symbol <= set_rcon_CP_5892_elements(9);
    -- CP-element group 0:  branch  transition  place  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	12 
    -- CP-element group 0:  members (8) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 branch_block_stmt_1631/$entry
      -- CP-element group 0: 	 branch_block_stmt_1631/branch_block_stmt_1631__entry__
      -- CP-element group 0: 	 branch_block_stmt_1631/merge_stmt_1632__entry__
      -- CP-element group 0: 	 branch_block_stmt_1631/merge_stmt_1632_dead_link/$entry
      -- CP-element group 0: 	 branch_block_stmt_1631/merge_stmt_1632__entry___PhiReq/$entry
      -- CP-element group 0: 	 branch_block_stmt_1631/merge_stmt_1632__entry___PhiReq/phi_stmt_1633/$entry
      -- CP-element group 0: 	 branch_block_stmt_1631/merge_stmt_1632__entry___PhiReq/phi_stmt_1633/phi_stmt_1633_sources/$entry
      -- 
    -- CP-element group 1:  transition  input  output  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	17 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	2 
    -- CP-element group 1:  members (6) 
      -- CP-element group 1: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/RPIPE_input_e_1639_sample_completed_
      -- CP-element group 1: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/RPIPE_input_e_1639_Update/cr
      -- CP-element group 1: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/RPIPE_input_e_1639_update_start_
      -- CP-element group 1: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/RPIPE_input_e_1639_Sample/$exit
      -- CP-element group 1: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/RPIPE_input_e_1639_Sample/ra
      -- CP-element group 1: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/RPIPE_input_e_1639_Update/$entry
      -- 
    ra_5917_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1639_inst_ack_0, ack => set_rcon_CP_5892_elements(1)); -- 
    cr_5921_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5921_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(1), ack => RPIPE_input_e_1639_inst_req_1); -- 
    -- CP-element group 2:  transition  input  output  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	1 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	3 
    -- CP-element group 2:  members (6) 
      -- CP-element group 2: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/CONCAT_u8_u32_1644_sample_start_
      -- CP-element group 2: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/RPIPE_input_e_1639_update_completed_
      -- CP-element group 2: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/RPIPE_input_e_1639_Update/ca
      -- CP-element group 2: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/CONCAT_u8_u32_1644_Sample/rr
      -- CP-element group 2: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/RPIPE_input_e_1639_Update/$exit
      -- CP-element group 2: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/CONCAT_u8_u32_1644_Sample/$entry
      -- 
    ca_5922_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1639_inst_ack_1, ack => set_rcon_CP_5892_elements(2)); -- 
    rr_5930_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5930_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(2), ack => CONCAT_u8_u32_1644_inst_req_0); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	2 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/CONCAT_u8_u32_1644_sample_completed_
      -- CP-element group 3: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/CONCAT_u8_u32_1644_Sample/ra
      -- CP-element group 3: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/CONCAT_u8_u32_1644_Sample/$exit
      -- 
    ra_5931_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u32_1644_inst_ack_0, ack => set_rcon_CP_5892_elements(3)); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	17 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	5 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/CONCAT_u8_u32_1644_Update/ca
      -- CP-element group 4: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/CONCAT_u8_u32_1644_Update/$exit
      -- CP-element group 4: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/CONCAT_u8_u32_1644_update_completed_
      -- 
    ca_5936_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u32_1644_inst_ack_1, ack => set_rcon_CP_5892_elements(4)); -- 
    -- CP-element group 5:  join  transition  output  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	4 
    -- CP-element group 5: 	17 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	6 
    -- CP-element group 5:  members (9) 
      -- CP-element group 5: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_sample_start_
      -- CP-element group 5: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Sample/$entry
      -- CP-element group 5: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Sample/array_obj_ref_1647_Split/$entry
      -- CP-element group 5: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Sample/array_obj_ref_1647_Split/$exit
      -- CP-element group 5: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Sample/array_obj_ref_1647_Split/split_req
      -- CP-element group 5: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Sample/array_obj_ref_1647_Split/split_ack
      -- CP-element group 5: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Sample/word_access_start/$entry
      -- CP-element group 5: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Sample/word_access_start/word_0/$entry
      -- CP-element group 5: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Sample/word_access_start/word_0/rr
      -- 
    rr_5986_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5986_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(5), ack => array_obj_ref_1647_store_0_req_0); -- 
    set_rcon_cp_element_group_5: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 27) := "set_rcon_cp_element_group_5"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= set_rcon_CP_5892_elements(4) & set_rcon_CP_5892_elements(17);
      gj_set_rcon_cp_element_group_5 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => set_rcon_CP_5892_elements(5), clk => clk, reset => reset); --
    end block;
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	5 
    -- CP-element group 6: successors 
    -- CP-element group 6:  members (5) 
      -- CP-element group 6: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_sample_completed_
      -- CP-element group 6: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Sample/$exit
      -- CP-element group 6: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Sample/word_access_start/$exit
      -- CP-element group 6: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Sample/word_access_start/word_0/$exit
      -- CP-element group 6: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Sample/word_access_start/word_0/ra
      -- 
    ra_5987_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_1647_store_0_ack_0, ack => set_rcon_CP_5892_elements(6)); -- 
    -- CP-element group 7:  branch  transition  place  input  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	17 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7: 	9 
    -- CP-element group 7:  members (29) 
      -- CP-element group 7: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649__exit__
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650__entry__
      -- CP-element group 7: 	 branch_block_stmt_1631/ULT_u8_u1_1653_place
      -- CP-element group 7: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/$exit
      -- CP-element group 7: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_update_completed_
      -- CP-element group 7: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Update/$exit
      -- CP-element group 7: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Update/word_access_complete/$exit
      -- CP-element group 7: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Update/word_access_complete/word_0/$exit
      -- CP-element group 7: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Update/word_access_complete/word_0/ca
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_dead_link/$entry
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/$entry
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/$exit
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/$entry
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/$exit
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/ULT_u8_u1_1653_inputs/$entry
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/ULT_u8_u1_1653_inputs/$exit
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/SplitProtocol/$entry
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/SplitProtocol/$exit
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/SplitProtocol/Sample/$entry
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/SplitProtocol/Sample/$exit
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/SplitProtocol/Sample/rr
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/SplitProtocol/Sample/ra
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/SplitProtocol/Update/$entry
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/SplitProtocol/Update/$exit
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/SplitProtocol/Update/cr
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/ULT_u8_u1_1653/SplitProtocol/Update/ca
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_eval_test/branch_req
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_if_link/$entry
      -- CP-element group 7: 	 branch_block_stmt_1631/if_stmt_1650_else_link/$entry
      -- 
    ca_5998_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_1647_store_0_ack_1, ack => set_rcon_CP_5892_elements(7)); -- 
    branch_req_6025_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_6025_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(7), ack => if_stmt_1650_branch_req_0); -- 
    -- CP-element group 8:  fork  transition  place  input  output  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	10 
    -- CP-element group 8: 	11 
    -- CP-element group 8:  members (10) 
      -- CP-element group 8: 	 branch_block_stmt_1631/assign_stmt_1658__entry__
      -- CP-element group 8: 	 branch_block_stmt_1631/if_stmt_1650_if_link/$exit
      -- CP-element group 8: 	 branch_block_stmt_1631/if_stmt_1650_if_link/if_choice_transition
      -- CP-element group 8: 	 branch_block_stmt_1631/assign_stmt_1658/$entry
      -- CP-element group 8: 	 branch_block_stmt_1631/assign_stmt_1658/ADD_u8_u8_1657_sample_start_
      -- CP-element group 8: 	 branch_block_stmt_1631/assign_stmt_1658/ADD_u8_u8_1657_update_start_
      -- CP-element group 8: 	 branch_block_stmt_1631/assign_stmt_1658/ADD_u8_u8_1657_Sample/$entry
      -- CP-element group 8: 	 branch_block_stmt_1631/assign_stmt_1658/ADD_u8_u8_1657_Sample/rr
      -- CP-element group 8: 	 branch_block_stmt_1631/assign_stmt_1658/ADD_u8_u8_1657_Update/$entry
      -- CP-element group 8: 	 branch_block_stmt_1631/assign_stmt_1658/ADD_u8_u8_1657_Update/cr
      -- 
    if_choice_transition_6030_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1650_branch_ack_1, ack => set_rcon_CP_5892_elements(8)); -- 
    rr_6048_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_6048_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(8), ack => ADD_u8_u8_1657_inst_req_0); -- 
    cr_6053_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_6053_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(8), ack => ADD_u8_u8_1657_inst_req_1); -- 
    -- CP-element group 9:  merge  transition  place  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	7 
    -- CP-element group 9: successors 
    -- CP-element group 9:  members (6) 
      -- CP-element group 9: 	 branch_block_stmt_1631/if_stmt_1650__exit__
      -- CP-element group 9: 	 $exit
      -- CP-element group 9: 	 branch_block_stmt_1631/$exit
      -- CP-element group 9: 	 branch_block_stmt_1631/branch_block_stmt_1631__exit__
      -- CP-element group 9: 	 branch_block_stmt_1631/if_stmt_1650_else_link/$exit
      -- CP-element group 9: 	 branch_block_stmt_1631/if_stmt_1650_else_link/else_choice_transition
      -- 
    else_choice_transition_6034_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1650_branch_ack_0, ack => set_rcon_CP_5892_elements(9)); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	8 
    -- CP-element group 10: successors 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 branch_block_stmt_1631/assign_stmt_1658/ADD_u8_u8_1657_sample_completed_
      -- CP-element group 10: 	 branch_block_stmt_1631/assign_stmt_1658/ADD_u8_u8_1657_Sample/$exit
      -- CP-element group 10: 	 branch_block_stmt_1631/assign_stmt_1658/ADD_u8_u8_1657_Sample/ra
      -- 
    ra_6049_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1657_inst_ack_0, ack => set_rcon_CP_5892_elements(10)); -- 
    -- CP-element group 11:  fork  transition  place  input  output  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	8 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	13 
    -- CP-element group 11: 	14 
    -- CP-element group 11:  members (14) 
      -- CP-element group 11: 	 branch_block_stmt_1631/assign_stmt_1658__exit__
      -- CP-element group 11: 	 branch_block_stmt_1631/loopback
      -- CP-element group 11: 	 branch_block_stmt_1631/assign_stmt_1658/$exit
      -- CP-element group 11: 	 branch_block_stmt_1631/assign_stmt_1658/ADD_u8_u8_1657_update_completed_
      -- CP-element group 11: 	 branch_block_stmt_1631/assign_stmt_1658/ADD_u8_u8_1657_Update/$exit
      -- CP-element group 11: 	 branch_block_stmt_1631/assign_stmt_1658/ADD_u8_u8_1657_Update/ca
      -- CP-element group 11: 	 branch_block_stmt_1631/loopback_PhiReq/$entry
      -- CP-element group 11: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/$entry
      -- CP-element group 11: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/$entry
      -- CP-element group 11: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/$entry
      -- CP-element group 11: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/Sample/$entry
      -- CP-element group 11: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/Sample/req
      -- CP-element group 11: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/Update/$entry
      -- CP-element group 11: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/Update/req
      -- 
    ca_6054_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1657_inst_ack_1, ack => set_rcon_CP_5892_elements(11)); -- 
    req_6085_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6085_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(11), ack => nxt_index_1658_1636_buf_req_0); -- 
    req_6090_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6090_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(11), ack => nxt_index_1658_1636_buf_req_1); -- 
    -- CP-element group 12:  transition  output  delay-element  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	0 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	16 
    -- CP-element group 12:  members (5) 
      -- CP-element group 12: 	 branch_block_stmt_1631/merge_stmt_1632__entry___PhiReq/$exit
      -- CP-element group 12: 	 branch_block_stmt_1631/merge_stmt_1632__entry___PhiReq/phi_stmt_1633/$exit
      -- CP-element group 12: 	 branch_block_stmt_1631/merge_stmt_1632__entry___PhiReq/phi_stmt_1633/phi_stmt_1633_sources/$exit
      -- CP-element group 12: 	 branch_block_stmt_1631/merge_stmt_1632__entry___PhiReq/phi_stmt_1633/phi_stmt_1633_sources/R_zero_1635_konst_delay_trans
      -- CP-element group 12: 	 branch_block_stmt_1631/merge_stmt_1632__entry___PhiReq/phi_stmt_1633/phi_stmt_1633_req
      -- 
    phi_stmt_1633_req_6069_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1633_req_6069_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(12), ack => phi_stmt_1633_req_0); -- 
    -- Element group set_rcon_CP_5892_elements(12) is a control-delay.
    cp_element_12_delay: control_delay_element  generic map(name => " 12_delay", delay_value => 1)  port map(req => set_rcon_CP_5892_elements(0), ack => set_rcon_CP_5892_elements(12), clk => clk, reset =>reset);
    -- CP-element group 13:  transition  input  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	11 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	15 
    -- CP-element group 13:  members (2) 
      -- CP-element group 13: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/Sample/$exit
      -- CP-element group 13: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/Sample/ack
      -- 
    ack_6086_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_1658_1636_buf_ack_0, ack => set_rcon_CP_5892_elements(13)); -- 
    -- CP-element group 14:  transition  input  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	11 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	15 
    -- CP-element group 14:  members (2) 
      -- CP-element group 14: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/Update/$exit
      -- CP-element group 14: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/Update/ack
      -- 
    ack_6091_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_1658_1636_buf_ack_1, ack => set_rcon_CP_5892_elements(14)); -- 
    -- CP-element group 15:  join  transition  output  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	13 
    -- CP-element group 15: 	14 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	16 
    -- CP-element group 15:  members (5) 
      -- CP-element group 15: 	 branch_block_stmt_1631/loopback_PhiReq/$exit
      -- CP-element group 15: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/$exit
      -- CP-element group 15: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/$exit
      -- CP-element group 15: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/$exit
      -- CP-element group 15: 	 branch_block_stmt_1631/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_req
      -- 
    phi_stmt_1633_req_6092_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1633_req_6092_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(15), ack => phi_stmt_1633_req_1); -- 
    set_rcon_cp_element_group_15: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 28) := "set_rcon_cp_element_group_15"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= set_rcon_CP_5892_elements(13) & set_rcon_CP_5892_elements(14);
      gj_set_rcon_cp_element_group_15 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => set_rcon_CP_5892_elements(15), clk => clk, reset => reset); --
    end block;
    -- CP-element group 16:  merge  transition  place  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	15 
    -- CP-element group 16: 	12 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	17 
    -- CP-element group 16:  members (2) 
      -- CP-element group 16: 	 branch_block_stmt_1631/merge_stmt_1632_PhiReqMerge
      -- CP-element group 16: 	 branch_block_stmt_1631/merge_stmt_1632_PhiAck/$entry
      -- 
    set_rcon_CP_5892_elements(16) <= OrReduce(set_rcon_CP_5892_elements(15) & set_rcon_CP_5892_elements(12));
    -- CP-element group 17:  merge  fork  transition  place  input  output  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	16 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	1 
    -- CP-element group 17: 	4 
    -- CP-element group 17: 	5 
    -- CP-element group 17: 	7 
    -- CP-element group 17:  members (42) 
      -- CP-element group 17: 	 branch_block_stmt_1631/merge_stmt_1632__exit__
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649__entry__
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/$entry
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/CONCAT_u8_u32_1644_Update/cr
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/CONCAT_u8_u32_1644_Update/$entry
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/RPIPE_input_e_1639_Sample/$entry
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/RPIPE_input_e_1639_Sample/rr
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/CONCAT_u8_u32_1644_update_start_
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/RPIPE_input_e_1639_sample_start_
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_update_start_
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_word_address_calculated
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_root_address_calculated
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_offset_calculated
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_index_resized_0
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_index_scaled_0
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_index_computed_0
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_index_resize_0/$entry
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_index_resize_0/$exit
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_index_resize_0/index_resize_req
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_index_resize_0/index_resize_ack
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_index_scale_0/$entry
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_index_scale_0/$exit
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_index_scale_0/scale_rename_req
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_index_scale_0/scale_rename_ack
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_final_index_sum_regn/$entry
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_final_index_sum_regn/$exit
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_final_index_sum_regn/req
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_final_index_sum_regn/ack
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_base_plus_offset/$entry
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_base_plus_offset/$exit
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_base_plus_offset/sum_rename_req
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_base_plus_offset/sum_rename_ack
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_word_addrgen/$entry
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_word_addrgen/$exit
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_word_addrgen/root_register_req
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_word_addrgen/root_register_ack
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Update/$entry
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Update/word_access_complete/$entry
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Update/word_access_complete/word_0/$entry
      -- CP-element group 17: 	 branch_block_stmt_1631/assign_stmt_1640_to_assign_stmt_1649/array_obj_ref_1647_Update/word_access_complete/word_0/cr
      -- CP-element group 17: 	 branch_block_stmt_1631/merge_stmt_1632_PhiAck/$exit
      -- CP-element group 17: 	 branch_block_stmt_1631/merge_stmt_1632_PhiAck/phi_stmt_1633_ack
      -- 
    phi_stmt_1633_ack_6097_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 17_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_1633_ack_0, ack => set_rcon_CP_5892_elements(17)); -- 
    cr_5935_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5935_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(17), ack => CONCAT_u8_u32_1644_inst_req_1); -- 
    rr_5916_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_5916_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(17), ack => RPIPE_input_e_1639_inst_req_0); -- 
    cr_5997_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_5997_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_rcon_CP_5892_elements(17), ack => array_obj_ref_1647_store_0_req_1); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal R_index_1646_resized : std_logic_vector(3 downto 0);
    signal R_index_1646_scaled : std_logic_vector(3 downto 0);
    signal R_zero24_1643_wire_constant : std_logic_vector(23 downto 0);
    signal R_zero_1635_wire_constant : std_logic_vector(7 downto 0);
    signal ULT_u8_u1_1653_wire : std_logic_vector(0 downto 0);
    signal array_obj_ref_1647_data_0 : std_logic_vector(31 downto 0);
    signal array_obj_ref_1647_final_offset : std_logic_vector(3 downto 0);
    signal array_obj_ref_1647_offset_scale_factor_0 : std_logic_vector(3 downto 0);
    signal array_obj_ref_1647_resized_base_address : std_logic_vector(3 downto 0);
    signal array_obj_ref_1647_root_address : std_logic_vector(3 downto 0);
    signal array_obj_ref_1647_word_address_0 : std_logic_vector(3 downto 0);
    signal array_obj_ref_1647_word_offset_0 : std_logic_vector(3 downto 0);
    signal index_1633 : std_logic_vector(7 downto 0);
    signal konst_1652_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1656_wire_constant : std_logic_vector(7 downto 0);
    signal nxt_index_1658 : std_logic_vector(7 downto 0);
    signal nxt_index_1658_1636_buffered : std_logic_vector(7 downto 0);
    signal temp_1_0_1640 : std_logic_vector(7 downto 0);
    signal temp_1_1645 : std_logic_vector(31 downto 0);
    -- 
  begin -- 
    R_zero24_1643_wire_constant <= "000000000000000000000000";
    R_zero_1635_wire_constant <= "00000000";
    array_obj_ref_1647_offset_scale_factor_0 <= "0001";
    array_obj_ref_1647_resized_base_address <= "0000";
    array_obj_ref_1647_word_offset_0 <= "0000";
    konst_1652_wire_constant <= "00001001";
    konst_1656_wire_constant <= "00000001";
    phi_stmt_1633: Block -- phi operator 
      signal idata: std_logic_vector(15 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= R_zero_1635_wire_constant & nxt_index_1658_1636_buffered;
      req <= phi_stmt_1633_req_0 & phi_stmt_1633_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_1633",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 8) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_1633_ack_0,
          idata => idata,
          odata => index_1633,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_1633
    nxt_index_1658_1636_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nxt_index_1658_1636_buf_req_0;
      nxt_index_1658_1636_buf_ack_0<= wack(0);
      rreq(0) <= nxt_index_1658_1636_buf_req_1;
      nxt_index_1658_1636_buf_ack_1<= rack(0);
      nxt_index_1658_1636_buf : InterlockBuffer generic map ( -- 
        name => "nxt_index_1658_1636_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nxt_index_1658,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nxt_index_1658_1636_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    -- equivalence array_obj_ref_1647_addr_0
    process(array_obj_ref_1647_root_address) --
      variable iv : std_logic_vector(3 downto 0);
      variable ov : std_logic_vector(3 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_1647_root_address;
      ov(3 downto 0) := iv;
      array_obj_ref_1647_word_address_0 <= ov(3 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_1647_gather_scatter
    process(temp_1_1645) --
      variable iv : std_logic_vector(31 downto 0);
      variable ov : std_logic_vector(31 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := temp_1_1645;
      ov(31 downto 0) := iv;
      array_obj_ref_1647_data_0 <= ov(31 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_1647_index_0_rename
    process(R_index_1646_resized) --
      variable iv : std_logic_vector(3 downto 0);
      variable ov : std_logic_vector(3 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_index_1646_resized;
      ov(3 downto 0) := iv;
      R_index_1646_scaled <= ov(3 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_1647_index_0_resize
    process(index_1633) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(3 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := index_1633;
      ov := iv(3 downto 0);
      R_index_1646_resized <= ov(3 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_1647_index_offset
    process(R_index_1646_scaled) --
      variable iv : std_logic_vector(3 downto 0);
      variable ov : std_logic_vector(3 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_index_1646_scaled;
      ov(3 downto 0) := iv;
      array_obj_ref_1647_final_offset <= ov(3 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_1647_root_address_inst
    process(array_obj_ref_1647_final_offset) --
      variable iv : std_logic_vector(3 downto 0);
      variable ov : std_logic_vector(3 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_1647_final_offset;
      ov(3 downto 0) := iv;
      array_obj_ref_1647_root_address <= ov(3 downto 0);
      --
    end process;
    if_stmt_1650_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= ULT_u8_u1_1653_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_1650_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_1650_branch_req_0,
          ack0 => if_stmt_1650_branch_ack_0,
          ack1 => if_stmt_1650_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- shared split operator group (0) : ADD_u8_u8_1657_inst 
    ApIntAdd_group_0: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= index_1633;
      nxt_index_1658 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= ADD_u8_u8_1657_inst_req_0;
      ADD_u8_u8_1657_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= ADD_u8_u8_1657_inst_req_1;
      ADD_u8_u8_1657_inst_ack_1 <= ackR_unguarded(0);
      ApIntAdd_group_0_gI: SplitGuardInterface generic map(name => "ApIntAdd_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          name => "ApIntAdd_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "00000001",
          constant_width => 8,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : CONCAT_u8_u32_1644_inst 
    ApConcat_group_1: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= temp_1_0_1640;
      temp_1_1645 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u32_1644_inst_req_0;
      CONCAT_u8_u32_1644_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u32_1644_inst_req_1;
      CONCAT_u8_u32_1644_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_1_gI: SplitGuardInterface generic map(name => "ApConcat_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "000000000000000000000000",
          constant_width => 24,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- binary operator ULT_u8_u1_1653_inst
    process(index_1633) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(index_1633, konst_1652_wire_constant, tmp_var);
      ULT_u8_u1_1653_wire <= tmp_var; --
    end process;
    -- shared store operator group (0) : array_obj_ref_1647_store_0 
    StoreGroup0: Block -- 
      signal addr_in: std_logic_vector(3 downto 0);
      signal data_in: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= array_obj_ref_1647_store_0_req_0;
      array_obj_ref_1647_store_0_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= array_obj_ref_1647_store_0_req_1;
      array_obj_ref_1647_store_0_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      StoreGroup0_gI: SplitGuardInterface generic map(name => "StoreGroup0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      addr_in <= array_obj_ref_1647_word_address_0;
      data_in <= array_obj_ref_1647_data_0;
      StoreReq: StoreReqSharedWithInputBuffers -- 
        generic map ( name => "StoreGroup0 Req ", addr_width => 4,
        data_width => 32,
        num_reqs => 1,
        tag_length => 1,
        time_stamp_width => 17,
        min_clock_period => false,
        input_buffering => inBUFs, 
        no_arbitration => false)
        port map (--
          reqL => reqL , 
          ackL => ackL , 
          addr => addr_in, 
          data => data_in, 
          mreq => memory_space_1_sr_req(0),
          mack => memory_space_1_sr_ack(0),
          maddr => memory_space_1_sr_addr(3 downto 0),
          mdata => memory_space_1_sr_data(31 downto 0),
          mtag => memory_space_1_sr_tag(17 downto 0),
          clk => clk, reset => reset -- 
        );--
      StoreComplete: StoreCompleteShared -- 
        generic map ( -- 
          name => "StoreGroup0 Complete ",
          num_reqs => 1,
          detailed_buffering_per_output => outBUFs,
          tag_length => 1 -- 
        )
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          mreq => memory_space_1_sc_req(0),
          mack => memory_space_1_sc_ack(0),
          mtag => memory_space_1_sc_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- store group 0
    -- shared inport operator group (0) : RPIPE_input_e_1639_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(7 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_input_e_1639_inst_req_0;
      RPIPE_input_e_1639_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_input_e_1639_inst_req_1;
      RPIPE_input_e_1639_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      temp_1_0_1640 <= data_out(7 downto 0);
      input_e_read_0_gI: SplitGuardInterface generic map(name => "input_e_read_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      input_e_read_0: InputPortRevised -- 
        generic map ( name => "input_e_read_0", data_width => 8,  num_reqs => 1,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => input_e_pipe_read_req(0),
          oack => input_e_pipe_read_ack(0),
          odata => input_e_pipe_read_data(7 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- 
  end Block; -- data_path
  -- 
end set_rcon_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity set_sbox is -- 
  generic (tag_length : integer); 
  port ( -- 
    memory_space_2_sr_req : out  std_logic_vector(0 downto 0);
    memory_space_2_sr_ack : in   std_logic_vector(0 downto 0);
    memory_space_2_sr_addr : out  std_logic_vector(7 downto 0);
    memory_space_2_sr_data : out  std_logic_vector(7 downto 0);
    memory_space_2_sr_tag :  out  std_logic_vector(17 downto 0);
    memory_space_2_sc_req : out  std_logic_vector(0 downto 0);
    memory_space_2_sc_ack : in   std_logic_vector(0 downto 0);
    memory_space_2_sc_tag :  in  std_logic_vector(0 downto 0);
    input_e_pipe_read_req : out  std_logic_vector(0 downto 0);
    input_e_pipe_read_ack : in   std_logic_vector(0 downto 0);
    input_e_pipe_read_data : in   std_logic_vector(7 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity set_sbox;
architecture set_sbox_arch of set_sbox is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal set_sbox_CP_6098_start: Boolean;
  signal set_sbox_CP_6098_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal RPIPE_input_e_1672_inst_req_0 : boolean;
  signal RPIPE_input_e_1672_inst_ack_0 : boolean;
  signal RPIPE_input_e_1672_inst_req_1 : boolean;
  signal RPIPE_input_e_1672_inst_ack_1 : boolean;
  signal array_obj_ref_1675_store_0_req_0 : boolean;
  signal array_obj_ref_1675_store_0_ack_0 : boolean;
  signal array_obj_ref_1675_store_0_req_1 : boolean;
  signal array_obj_ref_1675_store_0_ack_1 : boolean;
  signal if_stmt_1678_branch_req_0 : boolean;
  signal if_stmt_1678_branch_ack_1 : boolean;
  signal if_stmt_1678_branch_ack_0 : boolean;
  signal ADD_u8_u8_1685_inst_req_0 : boolean;
  signal ADD_u8_u8_1685_inst_ack_0 : boolean;
  signal ADD_u8_u8_1685_inst_req_1 : boolean;
  signal ADD_u8_u8_1685_inst_ack_1 : boolean;
  signal phi_stmt_1666_req_0 : boolean;
  signal nxt_index_1686_1669_buf_req_0 : boolean;
  signal nxt_index_1686_1669_buf_ack_0 : boolean;
  signal nxt_index_1686_1669_buf_req_1 : boolean;
  signal nxt_index_1686_1669_buf_ack_1 : boolean;
  signal phi_stmt_1666_req_1 : boolean;
  signal phi_stmt_1666_ack_0 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "set_sbox_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  set_sbox_CP_6098_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "set_sbox_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= set_sbox_CP_6098_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= set_sbox_CP_6098_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= set_sbox_CP_6098_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  set_sbox_CP_6098: Block -- control-path 
    signal set_sbox_CP_6098_elements: BooleanArray(15 downto 0);
    -- 
  begin -- 
    set_sbox_CP_6098_elements(0) <= set_sbox_CP_6098_start;
    set_sbox_CP_6098_symbol <= set_sbox_CP_6098_elements(7);
    -- CP-element group 0:  branch  transition  place  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	10 
    -- CP-element group 0:  members (8) 
      -- CP-element group 0: 	 branch_block_stmt_1664/branch_block_stmt_1664__entry__
      -- CP-element group 0: 	 branch_block_stmt_1664/merge_stmt_1665__entry__
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 branch_block_stmt_1664/$entry
      -- CP-element group 0: 	 branch_block_stmt_1664/merge_stmt_1665_dead_link/$entry
      -- CP-element group 0: 	 branch_block_stmt_1664/merge_stmt_1665__entry___PhiReq/$entry
      -- CP-element group 0: 	 branch_block_stmt_1664/merge_stmt_1665__entry___PhiReq/phi_stmt_1666/$entry
      -- CP-element group 0: 	 branch_block_stmt_1664/merge_stmt_1665__entry___PhiReq/phi_stmt_1666/phi_stmt_1666_sources/$entry
      -- 
    -- CP-element group 1:  transition  input  output  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	15 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	2 
    -- CP-element group 1:  members (6) 
      -- CP-element group 1: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/RPIPE_input_e_1672_sample_completed_
      -- CP-element group 1: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/RPIPE_input_e_1672_update_start_
      -- CP-element group 1: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/RPIPE_input_e_1672_Sample/$exit
      -- CP-element group 1: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/RPIPE_input_e_1672_Sample/ra
      -- CP-element group 1: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/RPIPE_input_e_1672_Update/$entry
      -- CP-element group 1: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/RPIPE_input_e_1672_Update/cr
      -- 
    ra_6123_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1672_inst_ack_0, ack => set_sbox_CP_6098_elements(1)); -- 
    cr_6127_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_6127_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_sbox_CP_6098_elements(1), ack => RPIPE_input_e_1672_inst_req_1); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	1 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	3 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/RPIPE_input_e_1672_update_completed_
      -- CP-element group 2: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/RPIPE_input_e_1672_Update/$exit
      -- CP-element group 2: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/RPIPE_input_e_1672_Update/ca
      -- 
    ca_6128_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_input_e_1672_inst_ack_1, ack => set_sbox_CP_6098_elements(2)); -- 
    -- CP-element group 3:  join  transition  output  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	2 
    -- CP-element group 3: 	15 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	4 
    -- CP-element group 3:  members (9) 
      -- CP-element group 3: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_sample_start_
      -- CP-element group 3: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Sample/$entry
      -- CP-element group 3: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Sample/array_obj_ref_1675_Split/$entry
      -- CP-element group 3: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Sample/array_obj_ref_1675_Split/$exit
      -- CP-element group 3: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Sample/array_obj_ref_1675_Split/split_req
      -- CP-element group 3: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Sample/array_obj_ref_1675_Split/split_ack
      -- CP-element group 3: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Sample/word_access_start/$entry
      -- CP-element group 3: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Sample/word_access_start/word_0/$entry
      -- CP-element group 3: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Sample/word_access_start/word_0/rr
      -- 
    rr_6178_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_6178_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_sbox_CP_6098_elements(3), ack => array_obj_ref_1675_store_0_req_0); -- 
    set_sbox_cp_element_group_3: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 27) := "set_sbox_cp_element_group_3"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= set_sbox_CP_6098_elements(2) & set_sbox_CP_6098_elements(15);
      gj_set_sbox_cp_element_group_3 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => set_sbox_CP_6098_elements(3), clk => clk, reset => reset); --
    end block;
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	3 
    -- CP-element group 4: successors 
    -- CP-element group 4:  members (5) 
      -- CP-element group 4: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_sample_completed_
      -- CP-element group 4: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Sample/$exit
      -- CP-element group 4: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Sample/word_access_start/$exit
      -- CP-element group 4: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Sample/word_access_start/word_0/$exit
      -- CP-element group 4: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Sample/word_access_start/word_0/ra
      -- 
    ra_6179_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_1675_store_0_ack_0, ack => set_sbox_CP_6098_elements(4)); -- 
    -- CP-element group 5:  branch  transition  place  input  output  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	15 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	6 
    -- CP-element group 5: 	7 
    -- CP-element group 5:  members (29) 
      -- CP-element group 5: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677__exit__
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678__entry__
      -- CP-element group 5: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/$exit
      -- CP-element group 5: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_update_completed_
      -- CP-element group 5: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Update/$exit
      -- CP-element group 5: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Update/word_access_complete/$exit
      -- CP-element group 5: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Update/word_access_complete/word_0/$exit
      -- CP-element group 5: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Update/word_access_complete/word_0/ca
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_dead_link/$entry
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/$entry
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/$exit
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/$entry
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/$exit
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/ULT_u8_u1_1681_inputs/$entry
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/ULT_u8_u1_1681_inputs/$exit
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/SplitProtocol/$entry
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/SplitProtocol/$exit
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/SplitProtocol/Sample/$entry
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/SplitProtocol/Sample/$exit
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/SplitProtocol/Sample/rr
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/SplitProtocol/Sample/ra
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/SplitProtocol/Update/$entry
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/SplitProtocol/Update/$exit
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/SplitProtocol/Update/cr
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/ULT_u8_u1_1681/SplitProtocol/Update/ca
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_eval_test/branch_req
      -- CP-element group 5: 	 branch_block_stmt_1664/ULT_u8_u1_1681_place
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_if_link/$entry
      -- CP-element group 5: 	 branch_block_stmt_1664/if_stmt_1678_else_link/$entry
      -- 
    ca_6190_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => array_obj_ref_1675_store_0_ack_1, ack => set_sbox_CP_6098_elements(5)); -- 
    branch_req_6217_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_6217_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_sbox_CP_6098_elements(5), ack => if_stmt_1678_branch_req_0); -- 
    -- CP-element group 6:  fork  transition  place  input  output  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	5 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	8 
    -- CP-element group 6: 	9 
    -- CP-element group 6:  members (10) 
      -- CP-element group 6: 	 branch_block_stmt_1664/if_stmt_1678_if_link/$exit
      -- CP-element group 6: 	 branch_block_stmt_1664/if_stmt_1678_if_link/if_choice_transition
      -- CP-element group 6: 	 branch_block_stmt_1664/assign_stmt_1686__entry__
      -- CP-element group 6: 	 branch_block_stmt_1664/assign_stmt_1686/$entry
      -- CP-element group 6: 	 branch_block_stmt_1664/assign_stmt_1686/ADD_u8_u8_1685_sample_start_
      -- CP-element group 6: 	 branch_block_stmt_1664/assign_stmt_1686/ADD_u8_u8_1685_update_start_
      -- CP-element group 6: 	 branch_block_stmt_1664/assign_stmt_1686/ADD_u8_u8_1685_Sample/$entry
      -- CP-element group 6: 	 branch_block_stmt_1664/assign_stmt_1686/ADD_u8_u8_1685_Sample/rr
      -- CP-element group 6: 	 branch_block_stmt_1664/assign_stmt_1686/ADD_u8_u8_1685_Update/$entry
      -- CP-element group 6: 	 branch_block_stmt_1664/assign_stmt_1686/ADD_u8_u8_1685_Update/cr
      -- 
    if_choice_transition_6222_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1678_branch_ack_1, ack => set_sbox_CP_6098_elements(6)); -- 
    rr_6240_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_6240_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_sbox_CP_6098_elements(6), ack => ADD_u8_u8_1685_inst_req_0); -- 
    cr_6245_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_6245_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_sbox_CP_6098_elements(6), ack => ADD_u8_u8_1685_inst_req_1); -- 
    -- CP-element group 7:  merge  transition  place  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	5 
    -- CP-element group 7: successors 
    -- CP-element group 7:  members (6) 
      -- CP-element group 7: 	 branch_block_stmt_1664/branch_block_stmt_1664__exit__
      -- CP-element group 7: 	 $exit
      -- CP-element group 7: 	 branch_block_stmt_1664/$exit
      -- CP-element group 7: 	 branch_block_stmt_1664/if_stmt_1678__exit__
      -- CP-element group 7: 	 branch_block_stmt_1664/if_stmt_1678_else_link/$exit
      -- CP-element group 7: 	 branch_block_stmt_1664/if_stmt_1678_else_link/else_choice_transition
      -- 
    else_choice_transition_6226_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_1678_branch_ack_0, ack => set_sbox_CP_6098_elements(7)); -- 
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	6 
    -- CP-element group 8: successors 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 branch_block_stmt_1664/assign_stmt_1686/ADD_u8_u8_1685_sample_completed_
      -- CP-element group 8: 	 branch_block_stmt_1664/assign_stmt_1686/ADD_u8_u8_1685_Sample/$exit
      -- CP-element group 8: 	 branch_block_stmt_1664/assign_stmt_1686/ADD_u8_u8_1685_Sample/ra
      -- 
    ra_6241_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1685_inst_ack_0, ack => set_sbox_CP_6098_elements(8)); -- 
    -- CP-element group 9:  fork  transition  place  input  output  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	6 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	11 
    -- CP-element group 9: 	12 
    -- CP-element group 9:  members (14) 
      -- CP-element group 9: 	 branch_block_stmt_1664/assign_stmt_1686__exit__
      -- CP-element group 9: 	 branch_block_stmt_1664/loopback
      -- CP-element group 9: 	 branch_block_stmt_1664/assign_stmt_1686/$exit
      -- CP-element group 9: 	 branch_block_stmt_1664/assign_stmt_1686/ADD_u8_u8_1685_update_completed_
      -- CP-element group 9: 	 branch_block_stmt_1664/assign_stmt_1686/ADD_u8_u8_1685_Update/$exit
      -- CP-element group 9: 	 branch_block_stmt_1664/assign_stmt_1686/ADD_u8_u8_1685_Update/ca
      -- CP-element group 9: 	 branch_block_stmt_1664/loopback_PhiReq/$entry
      -- CP-element group 9: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/$entry
      -- CP-element group 9: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_sources/$entry
      -- CP-element group 9: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_sources/Interlock/$entry
      -- CP-element group 9: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_sources/Interlock/Sample/$entry
      -- CP-element group 9: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_sources/Interlock/Sample/req
      -- CP-element group 9: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_sources/Interlock/Update/$entry
      -- CP-element group 9: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_sources/Interlock/Update/req
      -- 
    ca_6246_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ADD_u8_u8_1685_inst_ack_1, ack => set_sbox_CP_6098_elements(9)); -- 
    req_6277_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6277_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_sbox_CP_6098_elements(9), ack => nxt_index_1686_1669_buf_req_0); -- 
    req_6282_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6282_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_sbox_CP_6098_elements(9), ack => nxt_index_1686_1669_buf_req_1); -- 
    -- CP-element group 10:  transition  output  delay-element  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	0 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	14 
    -- CP-element group 10:  members (5) 
      -- CP-element group 10: 	 branch_block_stmt_1664/merge_stmt_1665__entry___PhiReq/$exit
      -- CP-element group 10: 	 branch_block_stmt_1664/merge_stmt_1665__entry___PhiReq/phi_stmt_1666/$exit
      -- CP-element group 10: 	 branch_block_stmt_1664/merge_stmt_1665__entry___PhiReq/phi_stmt_1666/phi_stmt_1666_sources/$exit
      -- CP-element group 10: 	 branch_block_stmt_1664/merge_stmt_1665__entry___PhiReq/phi_stmt_1666/phi_stmt_1666_sources/R_zero_1668_konst_delay_trans
      -- CP-element group 10: 	 branch_block_stmt_1664/merge_stmt_1665__entry___PhiReq/phi_stmt_1666/phi_stmt_1666_req
      -- 
    phi_stmt_1666_req_6261_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1666_req_6261_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_sbox_CP_6098_elements(10), ack => phi_stmt_1666_req_0); -- 
    -- Element group set_sbox_CP_6098_elements(10) is a control-delay.
    cp_element_10_delay: control_delay_element  generic map(name => " 10_delay", delay_value => 1)  port map(req => set_sbox_CP_6098_elements(0), ack => set_sbox_CP_6098_elements(10), clk => clk, reset =>reset);
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	9 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	13 
    -- CP-element group 11:  members (2) 
      -- CP-element group 11: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_sources/Interlock/Sample/$exit
      -- CP-element group 11: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_sources/Interlock/Sample/ack
      -- 
    ack_6278_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_1686_1669_buf_ack_0, ack => set_sbox_CP_6098_elements(11)); -- 
    -- CP-element group 12:  transition  input  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	9 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	13 
    -- CP-element group 12:  members (2) 
      -- CP-element group 12: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_sources/Interlock/Update/$exit
      -- CP-element group 12: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_sources/Interlock/Update/ack
      -- 
    ack_6283_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nxt_index_1686_1669_buf_ack_1, ack => set_sbox_CP_6098_elements(12)); -- 
    -- CP-element group 13:  join  transition  output  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	11 
    -- CP-element group 13: 	12 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	14 
    -- CP-element group 13:  members (5) 
      -- CP-element group 13: 	 branch_block_stmt_1664/loopback_PhiReq/$exit
      -- CP-element group 13: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/$exit
      -- CP-element group 13: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_sources/$exit
      -- CP-element group 13: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_sources/Interlock/$exit
      -- CP-element group 13: 	 branch_block_stmt_1664/loopback_PhiReq/phi_stmt_1666/phi_stmt_1666_req
      -- 
    phi_stmt_1666_req_6284_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1666_req_6284_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_sbox_CP_6098_elements(13), ack => phi_stmt_1666_req_1); -- 
    set_sbox_cp_element_group_13: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 28) := "set_sbox_cp_element_group_13"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= set_sbox_CP_6098_elements(11) & set_sbox_CP_6098_elements(12);
      gj_set_sbox_cp_element_group_13 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => set_sbox_CP_6098_elements(13), clk => clk, reset => reset); --
    end block;
    -- CP-element group 14:  merge  transition  place  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	10 
    -- CP-element group 14: 	13 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	15 
    -- CP-element group 14:  members (2) 
      -- CP-element group 14: 	 branch_block_stmt_1664/merge_stmt_1665_PhiReqMerge
      -- CP-element group 14: 	 branch_block_stmt_1664/merge_stmt_1665_PhiAck/$entry
      -- 
    set_sbox_CP_6098_elements(14) <= OrReduce(set_sbox_CP_6098_elements(10) & set_sbox_CP_6098_elements(13));
    -- CP-element group 15:  merge  fork  transition  place  input  output  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	14 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	3 
    -- CP-element group 15: 	5 
    -- CP-element group 15: 	1 
    -- CP-element group 15:  members (39) 
      -- CP-element group 15: 	 branch_block_stmt_1664/merge_stmt_1665__exit__
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677__entry__
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/$entry
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/RPIPE_input_e_1672_sample_start_
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/RPIPE_input_e_1672_Sample/$entry
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/RPIPE_input_e_1672_Sample/rr
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_update_start_
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_word_address_calculated
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_root_address_calculated
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_offset_calculated
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_index_resized_0
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_index_scaled_0
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_index_computed_0
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_index_resize_0/$entry
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_index_resize_0/$exit
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_index_resize_0/index_resize_req
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_index_resize_0/index_resize_ack
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_index_scale_0/$entry
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_index_scale_0/$exit
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_index_scale_0/scale_rename_req
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_index_scale_0/scale_rename_ack
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_final_index_sum_regn/$entry
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_final_index_sum_regn/$exit
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_final_index_sum_regn/req
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_final_index_sum_regn/ack
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_base_plus_offset/$entry
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_base_plus_offset/$exit
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_base_plus_offset/sum_rename_req
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_base_plus_offset/sum_rename_ack
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_word_addrgen/$entry
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_word_addrgen/$exit
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_word_addrgen/root_register_req
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_word_addrgen/root_register_ack
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Update/$entry
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Update/word_access_complete/$entry
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Update/word_access_complete/word_0/$entry
      -- CP-element group 15: 	 branch_block_stmt_1664/assign_stmt_1673_to_assign_stmt_1677/array_obj_ref_1675_Update/word_access_complete/word_0/cr
      -- CP-element group 15: 	 branch_block_stmt_1664/merge_stmt_1665_PhiAck/$exit
      -- CP-element group 15: 	 branch_block_stmt_1664/merge_stmt_1665_PhiAck/phi_stmt_1666_ack
      -- 
    phi_stmt_1666_ack_6289_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_1666_ack_0, ack => set_sbox_CP_6098_elements(15)); -- 
    rr_6122_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_6122_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_sbox_CP_6098_elements(15), ack => RPIPE_input_e_1672_inst_req_0); -- 
    cr_6189_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_6189_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => set_sbox_CP_6098_elements(15), ack => array_obj_ref_1675_store_0_req_1); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal R_index_1674_resized : std_logic_vector(7 downto 0);
    signal R_index_1674_scaled : std_logic_vector(7 downto 0);
    signal R_zero_1668_wire_constant : std_logic_vector(7 downto 0);
    signal ULT_u8_u1_1681_wire : std_logic_vector(0 downto 0);
    signal array_obj_ref_1675_data_0 : std_logic_vector(7 downto 0);
    signal array_obj_ref_1675_final_offset : std_logic_vector(7 downto 0);
    signal array_obj_ref_1675_offset_scale_factor_0 : std_logic_vector(7 downto 0);
    signal array_obj_ref_1675_resized_base_address : std_logic_vector(7 downto 0);
    signal array_obj_ref_1675_root_address : std_logic_vector(7 downto 0);
    signal array_obj_ref_1675_word_address_0 : std_logic_vector(7 downto 0);
    signal array_obj_ref_1675_word_offset_0 : std_logic_vector(7 downto 0);
    signal index_1666 : std_logic_vector(7 downto 0);
    signal konst_1680_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1684_wire_constant : std_logic_vector(7 downto 0);
    signal nxt_index_1686 : std_logic_vector(7 downto 0);
    signal nxt_index_1686_1669_buffered : std_logic_vector(7 downto 0);
    signal temp_0_1673 : std_logic_vector(7 downto 0);
    -- 
  begin -- 
    R_zero_1668_wire_constant <= "00000000";
    array_obj_ref_1675_offset_scale_factor_0 <= "00000001";
    array_obj_ref_1675_resized_base_address <= "00000000";
    array_obj_ref_1675_word_offset_0 <= "00000000";
    konst_1680_wire_constant <= "11111111";
    konst_1684_wire_constant <= "00000001";
    phi_stmt_1666: Block -- phi operator 
      signal idata: std_logic_vector(15 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= R_zero_1668_wire_constant & nxt_index_1686_1669_buffered;
      req <= phi_stmt_1666_req_0 & phi_stmt_1666_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_1666",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 8) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_1666_ack_0,
          idata => idata,
          odata => index_1666,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_1666
    nxt_index_1686_1669_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nxt_index_1686_1669_buf_req_0;
      nxt_index_1686_1669_buf_ack_0<= wack(0);
      rreq(0) <= nxt_index_1686_1669_buf_req_1;
      nxt_index_1686_1669_buf_ack_1<= rack(0);
      nxt_index_1686_1669_buf : InterlockBuffer generic map ( -- 
        name => "nxt_index_1686_1669_buf",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nxt_index_1686,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nxt_index_1686_1669_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    -- equivalence array_obj_ref_1675_addr_0
    process(array_obj_ref_1675_root_address) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(7 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_1675_root_address;
      ov(7 downto 0) := iv;
      array_obj_ref_1675_word_address_0 <= ov(7 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_1675_gather_scatter
    process(temp_0_1673) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(7 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := temp_0_1673;
      ov(7 downto 0) := iv;
      array_obj_ref_1675_data_0 <= ov(7 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_1675_index_0_rename
    process(R_index_1674_resized) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(7 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_index_1674_resized;
      ov(7 downto 0) := iv;
      R_index_1674_scaled <= ov(7 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_1675_index_0_resize
    process(index_1666) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(7 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := index_1666;
      ov(7 downto 0) := iv;
      R_index_1674_resized <= ov(7 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_1675_index_offset
    process(R_index_1674_scaled) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(7 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_index_1674_scaled;
      ov(7 downto 0) := iv;
      array_obj_ref_1675_final_offset <= ov(7 downto 0);
      --
    end process;
    -- equivalence array_obj_ref_1675_root_address_inst
    process(array_obj_ref_1675_final_offset) --
      variable iv : std_logic_vector(7 downto 0);
      variable ov : std_logic_vector(7 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := array_obj_ref_1675_final_offset;
      ov(7 downto 0) := iv;
      array_obj_ref_1675_root_address <= ov(7 downto 0);
      --
    end process;
    if_stmt_1678_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= ULT_u8_u1_1681_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_1678_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_1678_branch_req_0,
          ack0 => if_stmt_1678_branch_ack_0,
          ack1 => if_stmt_1678_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- shared split operator group (0) : ADD_u8_u8_1685_inst 
    ApIntAdd_group_0: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= index_1666;
      nxt_index_1686 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= ADD_u8_u8_1685_inst_req_0;
      ADD_u8_u8_1685_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= ADD_u8_u8_1685_inst_req_1;
      ADD_u8_u8_1685_inst_ack_1 <= ackR_unguarded(0);
      ApIntAdd_group_0_gI: SplitGuardInterface generic map(name => "ApIntAdd_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          name => "ApIntAdd_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "00000001",
          constant_width => 8,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- binary operator ULT_u8_u1_1681_inst
    process(index_1666) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(index_1666, konst_1680_wire_constant, tmp_var);
      ULT_u8_u1_1681_wire <= tmp_var; --
    end process;
    -- shared store operator group (0) : array_obj_ref_1675_store_0 
    StoreGroup0: Block -- 
      signal addr_in: std_logic_vector(7 downto 0);
      signal data_in: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= array_obj_ref_1675_store_0_req_0;
      array_obj_ref_1675_store_0_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= array_obj_ref_1675_store_0_req_1;
      array_obj_ref_1675_store_0_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      StoreGroup0_gI: SplitGuardInterface generic map(name => "StoreGroup0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      addr_in <= array_obj_ref_1675_word_address_0;
      data_in <= array_obj_ref_1675_data_0;
      StoreReq: StoreReqSharedWithInputBuffers -- 
        generic map ( name => "StoreGroup0 Req ", addr_width => 8,
        data_width => 8,
        num_reqs => 1,
        tag_length => 1,
        time_stamp_width => 17,
        min_clock_period => false,
        input_buffering => inBUFs, 
        no_arbitration => false)
        port map (--
          reqL => reqL , 
          ackL => ackL , 
          addr => addr_in, 
          data => data_in, 
          mreq => memory_space_2_sr_req(0),
          mack => memory_space_2_sr_ack(0),
          maddr => memory_space_2_sr_addr(7 downto 0),
          mdata => memory_space_2_sr_data(7 downto 0),
          mtag => memory_space_2_sr_tag(17 downto 0),
          clk => clk, reset => reset -- 
        );--
      StoreComplete: StoreCompleteShared -- 
        generic map ( -- 
          name => "StoreGroup0 Complete ",
          num_reqs => 1,
          detailed_buffering_per_output => outBUFs,
          tag_length => 1 -- 
        )
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          mreq => memory_space_2_sc_req(0),
          mack => memory_space_2_sc_ack(0),
          mtag => memory_space_2_sc_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- store group 0
    -- shared inport operator group (0) : RPIPE_input_e_1672_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(7 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_input_e_1672_inst_req_0;
      RPIPE_input_e_1672_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_input_e_1672_inst_req_1;
      RPIPE_input_e_1672_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      temp_0_1673 <= data_out(7 downto 0);
      input_e_read_0_gI: SplitGuardInterface generic map(name => "input_e_read_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      input_e_read_0: InputPortRevised -- 
        generic map ( name => "input_e_read_0", data_width => 8,  num_reqs => 1,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => input_e_pipe_read_req(0),
          oack => input_e_pipe_read_ack(0),
          odata => input_e_pipe_read_data(7 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- 
  end Block; -- data_path
  -- 
end set_sbox_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity shift_row is -- 
  generic (tag_length : integer); 
  port ( -- 
    w_0 : in  std_logic_vector(31 downto 0);
    w_1 : in  std_logic_vector(31 downto 0);
    w_2 : in  std_logic_vector(31 downto 0);
    w_3 : in  std_logic_vector(31 downto 0);
    nw_0 : out  std_logic_vector(31 downto 0);
    nw_1 : out  std_logic_vector(31 downto 0);
    nw_2 : out  std_logic_vector(31 downto 0);
    nw_3 : out  std_logic_vector(31 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity shift_row;
architecture shift_row_arch of shift_row is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 128)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 128)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal w_0_buffer :  std_logic_vector(31 downto 0);
  signal w_0_update_enable: Boolean;
  signal w_1_buffer :  std_logic_vector(31 downto 0);
  signal w_1_update_enable: Boolean;
  signal w_2_buffer :  std_logic_vector(31 downto 0);
  signal w_2_update_enable: Boolean;
  signal w_3_buffer :  std_logic_vector(31 downto 0);
  signal w_3_update_enable: Boolean;
  -- output port buffer signals
  signal nw_0_buffer :  std_logic_vector(31 downto 0);
  signal nw_0_update_enable: Boolean;
  signal nw_1_buffer :  std_logic_vector(31 downto 0);
  signal nw_1_update_enable: Boolean;
  signal nw_2_buffer :  std_logic_vector(31 downto 0);
  signal nw_2_update_enable: Boolean;
  signal nw_3_buffer :  std_logic_vector(31 downto 0);
  signal nw_3_update_enable: Boolean;
  signal shift_row_CP_1234_start: Boolean;
  signal shift_row_CP_1234_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal slice_433_inst_ack_0 : boolean;
  signal slice_457_inst_req_0 : boolean;
  signal slice_465_inst_ack_1 : boolean;
  signal slice_453_inst_ack_1 : boolean;
  signal slice_449_inst_req_1 : boolean;
  signal slice_457_inst_ack_0 : boolean;
  signal slice_433_inst_req_0 : boolean;
  signal slice_465_inst_req_1 : boolean;
  signal slice_457_inst_ack_1 : boolean;
  signal slice_429_inst_ack_0 : boolean;
  signal slice_437_inst_req_1 : boolean;
  signal slice_437_inst_ack_1 : boolean;
  signal slice_429_inst_ack_1 : boolean;
  signal slice_437_inst_ack_0 : boolean;
  signal slice_429_inst_req_1 : boolean;
  signal slice_449_inst_ack_1 : boolean;
  signal slice_437_inst_req_0 : boolean;
  signal slice_429_inst_req_0 : boolean;
  signal slice_469_inst_req_0 : boolean;
  signal CONCAT_u8_u16_499_inst_req_0 : boolean;
  signal CONCAT_u8_u16_499_inst_ack_0 : boolean;
  signal slice_465_inst_req_0 : boolean;
  signal slice_473_inst_ack_1 : boolean;
  signal slice_465_inst_ack_0 : boolean;
  signal slice_457_inst_req_1 : boolean;
  signal slice_469_inst_req_1 : boolean;
  signal slice_433_inst_req_1 : boolean;
  signal slice_433_inst_ack_1 : boolean;
  signal slice_453_inst_req_1 : boolean;
  signal slice_461_inst_ack_1 : boolean;
  signal slice_453_inst_ack_0 : boolean;
  signal slice_461_inst_req_1 : boolean;
  signal CONCAT_u8_u16_494_inst_req_1 : boolean;
  signal CONCAT_u8_u16_494_inst_ack_1 : boolean;
  signal slice_453_inst_req_0 : boolean;
  signal slice_461_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_494_inst_req_0 : boolean;
  signal CONCAT_u8_u16_494_inst_ack_0 : boolean;
  signal slice_461_inst_req_0 : boolean;
  signal slice_485_inst_ack_1 : boolean;
  signal slice_485_inst_req_1 : boolean;
  signal slice_485_inst_ack_0 : boolean;
  signal slice_485_inst_req_0 : boolean;
  signal slice_481_inst_ack_1 : boolean;
  signal slice_481_inst_req_1 : boolean;
  signal slice_481_inst_ack_0 : boolean;
  signal slice_481_inst_req_0 : boolean;
  signal slice_473_inst_req_1 : boolean;
  signal slice_445_inst_ack_1 : boolean;
  signal slice_473_inst_ack_0 : boolean;
  signal slice_445_inst_req_1 : boolean;
  signal slice_473_inst_req_0 : boolean;
  signal slice_489_inst_ack_1 : boolean;
  signal slice_489_inst_req_1 : boolean;
  signal slice_445_inst_ack_0 : boolean;
  signal slice_445_inst_req_0 : boolean;
  signal slice_489_inst_ack_0 : boolean;
  signal slice_489_inst_req_0 : boolean;
  signal slice_469_inst_ack_1 : boolean;
  signal slice_469_inst_ack_0 : boolean;
  signal slice_441_inst_ack_1 : boolean;
  signal slice_441_inst_req_1 : boolean;
  signal slice_477_inst_ack_1 : boolean;
  signal slice_477_inst_req_1 : boolean;
  signal slice_441_inst_ack_0 : boolean;
  signal slice_477_inst_ack_0 : boolean;
  signal slice_477_inst_req_0 : boolean;
  signal slice_441_inst_req_0 : boolean;
  signal CONCAT_u16_u32_504_inst_req_0 : boolean;
  signal CONCAT_u16_u32_504_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_499_inst_req_1 : boolean;
  signal CONCAT_u8_u16_499_inst_ack_1 : boolean;
  signal slice_449_inst_ack_0 : boolean;
  signal slice_449_inst_req_0 : boolean;
  signal CONCAT_u16_u32_504_inst_req_1 : boolean;
  signal CONCAT_u16_u32_504_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_509_inst_req_0 : boolean;
  signal CONCAT_u8_u16_509_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_509_inst_req_1 : boolean;
  signal CONCAT_u8_u16_509_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_514_inst_req_0 : boolean;
  signal CONCAT_u8_u16_514_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_514_inst_req_1 : boolean;
  signal CONCAT_u8_u16_514_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_519_inst_req_0 : boolean;
  signal CONCAT_u16_u32_519_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_519_inst_req_1 : boolean;
  signal CONCAT_u16_u32_519_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_524_inst_req_0 : boolean;
  signal CONCAT_u8_u16_524_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_524_inst_req_1 : boolean;
  signal CONCAT_u8_u16_524_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_529_inst_req_0 : boolean;
  signal CONCAT_u8_u16_529_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_529_inst_req_1 : boolean;
  signal CONCAT_u8_u16_529_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_534_inst_req_0 : boolean;
  signal CONCAT_u16_u32_534_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_534_inst_req_1 : boolean;
  signal CONCAT_u16_u32_534_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_539_inst_req_0 : boolean;
  signal CONCAT_u8_u16_539_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_539_inst_req_1 : boolean;
  signal CONCAT_u8_u16_539_inst_ack_1 : boolean;
  signal CONCAT_u8_u16_544_inst_req_0 : boolean;
  signal CONCAT_u8_u16_544_inst_ack_0 : boolean;
  signal CONCAT_u8_u16_544_inst_req_1 : boolean;
  signal CONCAT_u8_u16_544_inst_ack_1 : boolean;
  signal CONCAT_u16_u32_549_inst_req_0 : boolean;
  signal CONCAT_u16_u32_549_inst_ack_0 : boolean;
  signal CONCAT_u16_u32_549_inst_req_1 : boolean;
  signal CONCAT_u16_u32_549_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "shift_row_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 128) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(31 downto 0) <= w_0;
  w_0_buffer <= in_buffer_data_out(31 downto 0);
  in_buffer_data_in(63 downto 32) <= w_1;
  w_1_buffer <= in_buffer_data_out(63 downto 32);
  in_buffer_data_in(95 downto 64) <= w_2;
  w_2_buffer <= in_buffer_data_out(95 downto 64);
  in_buffer_data_in(127 downto 96) <= w_3;
  w_3_buffer <= in_buffer_data_out(127 downto 96);
  in_buffer_data_in(tag_length + 127 downto 128) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 127 downto 128);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  shift_row_CP_1234_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "shift_row_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 128) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(31 downto 0) <= nw_0_buffer;
  nw_0 <= out_buffer_data_out(31 downto 0);
  out_buffer_data_in(63 downto 32) <= nw_1_buffer;
  nw_1 <= out_buffer_data_out(63 downto 32);
  out_buffer_data_in(95 downto 64) <= nw_2_buffer;
  nw_2 <= out_buffer_data_out(95 downto 64);
  out_buffer_data_in(127 downto 96) <= nw_3_buffer;
  nw_3 <= out_buffer_data_out(127 downto 96);
  out_buffer_data_in(tag_length + 127 downto 128) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 127 downto 128);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= shift_row_CP_1234_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= shift_row_CP_1234_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= shift_row_CP_1234_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  shift_row_CP_1234: Block -- control-path 
    signal shift_row_CP_1234_elements: BooleanArray(69 downto 0);
    -- 
  begin -- 
    shift_row_CP_1234_elements(0) <= shift_row_CP_1234_start;
    shift_row_CP_1234_symbol <= shift_row_CP_1234_elements(69);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	7 
    -- CP-element group 0: 	8 
    -- CP-element group 0: 	9 
    -- CP-element group 0: 	10 
    -- CP-element group 0: 	11 
    -- CP-element group 0: 	12 
    -- CP-element group 0: 	13 
    -- CP-element group 0: 	14 
    -- CP-element group 0: 	15 
    -- CP-element group 0: 	16 
    -- CP-element group 0: 	17 
    -- CP-element group 0: 	18 
    -- CP-element group 0: 	19 
    -- CP-element group 0: 	20 
    -- CP-element group 0: 	21 
    -- CP-element group 0: 	22 
    -- CP-element group 0: 	23 
    -- CP-element group 0: 	24 
    -- CP-element group 0: 	25 
    -- CP-element group 0: 	26 
    -- CP-element group 0: 	27 
    -- CP-element group 0: 	28 
    -- CP-element group 0: 	29 
    -- CP-element group 0: 	30 
    -- CP-element group 0: 	31 
    -- CP-element group 0: 	32 
    -- CP-element group 0: 	35 
    -- CP-element group 0: 	38 
    -- CP-element group 0: 	41 
    -- CP-element group 0: 	44 
    -- CP-element group 0: 	47 
    -- CP-element group 0: 	50 
    -- CP-element group 0: 	53 
    -- CP-element group 0: 	56 
    -- CP-element group 0: 	59 
    -- CP-element group 0: 	62 
    -- CP-element group 0: 	65 
    -- CP-element group 0: 	68 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	5 
    -- CP-element group 0:  members (134) 
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_449_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_457_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_457_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_453_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_489_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_461_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_445_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_429_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_449_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_465_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_433_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_449_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_433_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_433_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_457_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_469_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_437_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_433_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_429_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_465_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_465_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_437_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_469_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_429_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_453_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_437_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_429_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_433_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_437_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_429_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_469_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_477_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_465_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_457_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_457_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_469_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_437_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_469_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_433_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_453_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_465_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_499_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_453_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_465_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_461_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_494_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_453_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_461_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_494_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_453_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_461_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_461_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_441_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_461_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_499_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_441_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_485_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_485_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_485_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_485_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_485_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_485_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_481_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_481_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_481_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_481_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_481_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_489_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_473_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_449_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_494_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_473_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_445_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_473_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_445_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_489_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_473_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_489_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_473_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_445_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_489_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_473_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_445_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_489_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_469_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_445_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_429_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_441_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_477_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_441_Update/$entry
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_477_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_449_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_477_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_441_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_477_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_441_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_477_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_481_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_504_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_504_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_499_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_437_sample_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_449_Sample/rr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/slice_457_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_504_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_509_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_509_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_509_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_514_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_514_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_514_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_519_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_519_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_519_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_524_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_524_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_524_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_529_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_529_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_529_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_534_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_534_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_534_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_539_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_539_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_539_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_544_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_544_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_544_Update/cr
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_549_update_start_
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_549_Update/$entry
      -- CP-element group 0: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_549_Update/cr
      -- 
    rr_1289_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1289_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_441_inst_req_0); -- 
    cr_1294_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1294_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_441_inst_req_1); -- 
    rr_1303_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1303_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_445_inst_req_0); -- 
    cr_1308_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1308_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_445_inst_req_1); -- 
    rr_1317_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1317_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_449_inst_req_0); -- 
    cr_1322_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1322_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_449_inst_req_1); -- 
    rr_1331_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1331_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_453_inst_req_0); -- 
    cr_1336_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1336_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_453_inst_req_1); -- 
    rr_1345_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1345_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_457_inst_req_0); -- 
    cr_1350_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1350_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_457_inst_req_1); -- 
    rr_1359_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1359_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_461_inst_req_0); -- 
    cr_1364_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1364_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_461_inst_req_1); -- 
    rr_1373_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1373_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_465_inst_req_0); -- 
    cr_1378_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1378_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_465_inst_req_1); -- 
    rr_1387_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1387_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_469_inst_req_0); -- 
    cr_1392_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1392_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_469_inst_req_1); -- 
    rr_1401_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1401_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_473_inst_req_0); -- 
    cr_1406_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1406_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_473_inst_req_1); -- 
    rr_1415_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1415_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_477_inst_req_0); -- 
    cr_1420_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1420_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_477_inst_req_1); -- 
    rr_1429_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1429_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_481_inst_req_0); -- 
    cr_1434_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1434_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_481_inst_req_1); -- 
    rr_1443_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1443_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_485_inst_req_0); -- 
    cr_1448_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1448_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_485_inst_req_1); -- 
    rr_1457_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1457_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_489_inst_req_0); -- 
    cr_1462_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1462_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_489_inst_req_1); -- 
    cr_1476_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1476_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => CONCAT_u8_u16_494_inst_req_1); -- 
    cr_1490_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1490_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => CONCAT_u8_u16_499_inst_req_1); -- 
    cr_1504_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1504_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => CONCAT_u16_u32_504_inst_req_1); -- 
    cr_1518_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1518_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => CONCAT_u8_u16_509_inst_req_1); -- 
    cr_1532_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1532_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => CONCAT_u8_u16_514_inst_req_1); -- 
    cr_1546_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1546_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => CONCAT_u16_u32_519_inst_req_1); -- 
    cr_1560_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1560_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => CONCAT_u8_u16_524_inst_req_1); -- 
    cr_1574_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1574_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => CONCAT_u8_u16_529_inst_req_1); -- 
    cr_1588_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1588_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => CONCAT_u16_u32_534_inst_req_1); -- 
    cr_1602_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1602_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => CONCAT_u8_u16_539_inst_req_1); -- 
    cr_1616_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1616_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => CONCAT_u8_u16_544_inst_req_1); -- 
    cr_1630_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1630_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => CONCAT_u16_u32_549_inst_req_1); -- 
    cr_1252_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1252_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_429_inst_req_1); -- 
    rr_1261_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1261_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_433_inst_req_0); -- 
    cr_1266_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1266_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_433_inst_req_1); -- 
    rr_1275_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1275_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_437_inst_req_0); -- 
    cr_1280_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1280_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_437_inst_req_1); -- 
    rr_1247_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1247_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(0), ack => slice_429_inst_req_0); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_430_to_assign_stmt_550/slice_429_Sample/ra
      -- CP-element group 1: 	 assign_stmt_430_to_assign_stmt_550/slice_429_sample_completed_
      -- CP-element group 1: 	 assign_stmt_430_to_assign_stmt_550/slice_429_Sample/$exit
      -- 
    ra_1248_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_429_inst_ack_0, ack => shift_row_CP_1234_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	33 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 assign_stmt_430_to_assign_stmt_550/slice_429_update_completed_
      -- CP-element group 2: 	 assign_stmt_430_to_assign_stmt_550/slice_429_Update/ca
      -- CP-element group 2: 	 assign_stmt_430_to_assign_stmt_550/slice_429_Update/$exit
      -- 
    ca_1253_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_429_inst_ack_1, ack => shift_row_CP_1234_elements(2)); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 assign_stmt_430_to_assign_stmt_550/slice_433_Sample/ra
      -- CP-element group 3: 	 assign_stmt_430_to_assign_stmt_550/slice_433_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_430_to_assign_stmt_550/slice_433_sample_completed_
      -- 
    ra_1262_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_433_inst_ack_0, ack => shift_row_CP_1234_elements(3)); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	60 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_430_to_assign_stmt_550/slice_433_Update/$exit
      -- CP-element group 4: 	 assign_stmt_430_to_assign_stmt_550/slice_433_Update/ca
      -- CP-element group 4: 	 assign_stmt_430_to_assign_stmt_550/slice_433_update_completed_
      -- 
    ca_1267_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_433_inst_ack_1, ack => shift_row_CP_1234_elements(4)); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	0 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_430_to_assign_stmt_550/slice_437_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_430_to_assign_stmt_550/slice_437_Sample/ra
      -- CP-element group 5: 	 assign_stmt_430_to_assign_stmt_550/slice_437_sample_completed_
      -- 
    ra_1276_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_437_inst_ack_0, ack => shift_row_CP_1234_elements(5)); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	54 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_430_to_assign_stmt_550/slice_437_Update/$exit
      -- CP-element group 6: 	 assign_stmt_430_to_assign_stmt_550/slice_437_Update/ca
      -- CP-element group 6: 	 assign_stmt_430_to_assign_stmt_550/slice_437_update_completed_
      -- 
    ca_1281_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_437_inst_ack_1, ack => shift_row_CP_1234_elements(6)); -- 
    -- CP-element group 7:  transition  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	0 
    -- CP-element group 7: successors 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 assign_stmt_430_to_assign_stmt_550/slice_441_sample_completed_
      -- CP-element group 7: 	 assign_stmt_430_to_assign_stmt_550/slice_441_Sample/ra
      -- CP-element group 7: 	 assign_stmt_430_to_assign_stmt_550/slice_441_Sample/$exit
      -- 
    ra_1290_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_441_inst_ack_0, ack => shift_row_CP_1234_elements(7)); -- 
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	0 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	45 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 assign_stmt_430_to_assign_stmt_550/slice_441_Update/ca
      -- CP-element group 8: 	 assign_stmt_430_to_assign_stmt_550/slice_441_Update/$exit
      -- CP-element group 8: 	 assign_stmt_430_to_assign_stmt_550/slice_441_update_completed_
      -- 
    ca_1295_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_441_inst_ack_1, ack => shift_row_CP_1234_elements(8)); -- 
    -- CP-element group 9:  transition  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	0 
    -- CP-element group 9: successors 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 assign_stmt_430_to_assign_stmt_550/slice_445_sample_completed_
      -- CP-element group 9: 	 assign_stmt_430_to_assign_stmt_550/slice_445_Sample/ra
      -- CP-element group 9: 	 assign_stmt_430_to_assign_stmt_550/slice_445_Sample/$exit
      -- 
    ra_1304_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_445_inst_ack_0, ack => shift_row_CP_1234_elements(9)); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	0 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	42 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 assign_stmt_430_to_assign_stmt_550/slice_445_Update/ca
      -- CP-element group 10: 	 assign_stmt_430_to_assign_stmt_550/slice_445_Update/$exit
      -- CP-element group 10: 	 assign_stmt_430_to_assign_stmt_550/slice_445_update_completed_
      -- 
    ca_1309_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_445_inst_ack_1, ack => shift_row_CP_1234_elements(10)); -- 
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	0 
    -- CP-element group 11: successors 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 assign_stmt_430_to_assign_stmt_550/slice_449_Sample/$exit
      -- CP-element group 11: 	 assign_stmt_430_to_assign_stmt_550/slice_449_sample_completed_
      -- CP-element group 11: 	 assign_stmt_430_to_assign_stmt_550/slice_449_Sample/ra
      -- 
    ra_1318_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_449_inst_ack_0, ack => shift_row_CP_1234_elements(11)); -- 
    -- CP-element group 12:  transition  input  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	0 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	33 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 assign_stmt_430_to_assign_stmt_550/slice_449_update_completed_
      -- CP-element group 12: 	 assign_stmt_430_to_assign_stmt_550/slice_449_Update/$exit
      -- CP-element group 12: 	 assign_stmt_430_to_assign_stmt_550/slice_449_Update/ca
      -- 
    ca_1323_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_449_inst_ack_1, ack => shift_row_CP_1234_elements(12)); -- 
    -- CP-element group 13:  transition  input  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	0 
    -- CP-element group 13: successors 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 assign_stmt_430_to_assign_stmt_550/slice_453_sample_completed_
      -- CP-element group 13: 	 assign_stmt_430_to_assign_stmt_550/slice_453_Sample/ra
      -- CP-element group 13: 	 assign_stmt_430_to_assign_stmt_550/slice_453_Sample/$exit
      -- 
    ra_1332_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_453_inst_ack_0, ack => shift_row_CP_1234_elements(13)); -- 
    -- CP-element group 14:  transition  input  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	0 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	63 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 assign_stmt_430_to_assign_stmt_550/slice_453_Update/ca
      -- CP-element group 14: 	 assign_stmt_430_to_assign_stmt_550/slice_453_Update/$exit
      -- CP-element group 14: 	 assign_stmt_430_to_assign_stmt_550/slice_453_update_completed_
      -- 
    ca_1337_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_453_inst_ack_1, ack => shift_row_CP_1234_elements(14)); -- 
    -- CP-element group 15:  transition  input  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	0 
    -- CP-element group 15: successors 
    -- CP-element group 15:  members (3) 
      -- CP-element group 15: 	 assign_stmt_430_to_assign_stmt_550/slice_457_Sample/ra
      -- CP-element group 15: 	 assign_stmt_430_to_assign_stmt_550/slice_457_Sample/$exit
      -- CP-element group 15: 	 assign_stmt_430_to_assign_stmt_550/slice_457_sample_completed_
      -- 
    ra_1346_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_457_inst_ack_0, ack => shift_row_CP_1234_elements(15)); -- 
    -- CP-element group 16:  transition  input  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	0 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	54 
    -- CP-element group 16:  members (3) 
      -- CP-element group 16: 	 assign_stmt_430_to_assign_stmt_550/slice_457_Update/ca
      -- CP-element group 16: 	 assign_stmt_430_to_assign_stmt_550/slice_457_update_completed_
      -- CP-element group 16: 	 assign_stmt_430_to_assign_stmt_550/slice_457_Update/$exit
      -- 
    ca_1351_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_457_inst_ack_1, ack => shift_row_CP_1234_elements(16)); -- 
    -- CP-element group 17:  transition  input  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	0 
    -- CP-element group 17: successors 
    -- CP-element group 17:  members (3) 
      -- CP-element group 17: 	 assign_stmt_430_to_assign_stmt_550/slice_461_Sample/ra
      -- CP-element group 17: 	 assign_stmt_430_to_assign_stmt_550/slice_461_Sample/$exit
      -- CP-element group 17: 	 assign_stmt_430_to_assign_stmt_550/slice_461_sample_completed_
      -- 
    ra_1360_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 17_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_461_inst_ack_0, ack => shift_row_CP_1234_elements(17)); -- 
    -- CP-element group 18:  transition  input  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	0 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	51 
    -- CP-element group 18:  members (3) 
      -- CP-element group 18: 	 assign_stmt_430_to_assign_stmt_550/slice_461_Update/ca
      -- CP-element group 18: 	 assign_stmt_430_to_assign_stmt_550/slice_461_Update/$exit
      -- CP-element group 18: 	 assign_stmt_430_to_assign_stmt_550/slice_461_update_completed_
      -- 
    ca_1365_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_461_inst_ack_1, ack => shift_row_CP_1234_elements(18)); -- 
    -- CP-element group 19:  transition  input  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	0 
    -- CP-element group 19: successors 
    -- CP-element group 19:  members (3) 
      -- CP-element group 19: 	 assign_stmt_430_to_assign_stmt_550/slice_465_Sample/$exit
      -- CP-element group 19: 	 assign_stmt_430_to_assign_stmt_550/slice_465_Sample/ra
      -- CP-element group 19: 	 assign_stmt_430_to_assign_stmt_550/slice_465_sample_completed_
      -- 
    ra_1374_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_465_inst_ack_0, ack => shift_row_CP_1234_elements(19)); -- 
    -- CP-element group 20:  transition  input  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	0 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	42 
    -- CP-element group 20:  members (3) 
      -- CP-element group 20: 	 assign_stmt_430_to_assign_stmt_550/slice_465_Update/ca
      -- CP-element group 20: 	 assign_stmt_430_to_assign_stmt_550/slice_465_Update/$exit
      -- CP-element group 20: 	 assign_stmt_430_to_assign_stmt_550/slice_465_update_completed_
      -- 
    ca_1379_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 20_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_465_inst_ack_1, ack => shift_row_CP_1234_elements(20)); -- 
    -- CP-element group 21:  transition  input  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	0 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (3) 
      -- CP-element group 21: 	 assign_stmt_430_to_assign_stmt_550/slice_469_Sample/$exit
      -- CP-element group 21: 	 assign_stmt_430_to_assign_stmt_550/slice_469_sample_completed_
      -- CP-element group 21: 	 assign_stmt_430_to_assign_stmt_550/slice_469_Sample/ra
      -- 
    ra_1388_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_469_inst_ack_0, ack => shift_row_CP_1234_elements(21)); -- 
    -- CP-element group 22:  transition  input  bypass 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	0 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	36 
    -- CP-element group 22:  members (3) 
      -- CP-element group 22: 	 assign_stmt_430_to_assign_stmt_550/slice_469_update_completed_
      -- CP-element group 22: 	 assign_stmt_430_to_assign_stmt_550/slice_469_Update/ca
      -- CP-element group 22: 	 assign_stmt_430_to_assign_stmt_550/slice_469_Update/$exit
      -- 
    ca_1393_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 22_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_469_inst_ack_1, ack => shift_row_CP_1234_elements(22)); -- 
    -- CP-element group 23:  transition  input  bypass 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	0 
    -- CP-element group 23: successors 
    -- CP-element group 23:  members (3) 
      -- CP-element group 23: 	 assign_stmt_430_to_assign_stmt_550/slice_473_Sample/ra
      -- CP-element group 23: 	 assign_stmt_430_to_assign_stmt_550/slice_473_Sample/$exit
      -- CP-element group 23: 	 assign_stmt_430_to_assign_stmt_550/slice_473_sample_completed_
      -- 
    ra_1402_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 23_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_473_inst_ack_0, ack => shift_row_CP_1234_elements(23)); -- 
    -- CP-element group 24:  transition  input  bypass 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	0 
    -- CP-element group 24: successors 
    -- CP-element group 24: 	63 
    -- CP-element group 24:  members (3) 
      -- CP-element group 24: 	 assign_stmt_430_to_assign_stmt_550/slice_473_Update/ca
      -- CP-element group 24: 	 assign_stmt_430_to_assign_stmt_550/slice_473_Update/$exit
      -- CP-element group 24: 	 assign_stmt_430_to_assign_stmt_550/slice_473_update_completed_
      -- 
    ca_1407_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_473_inst_ack_1, ack => shift_row_CP_1234_elements(24)); -- 
    -- CP-element group 25:  transition  input  bypass 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	0 
    -- CP-element group 25: successors 
    -- CP-element group 25:  members (3) 
      -- CP-element group 25: 	 assign_stmt_430_to_assign_stmt_550/slice_477_sample_completed_
      -- CP-element group 25: 	 assign_stmt_430_to_assign_stmt_550/slice_477_Sample/ra
      -- CP-element group 25: 	 assign_stmt_430_to_assign_stmt_550/slice_477_Sample/$exit
      -- 
    ra_1416_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_477_inst_ack_0, ack => shift_row_CP_1234_elements(25)); -- 
    -- CP-element group 26:  transition  input  bypass 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	0 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	60 
    -- CP-element group 26:  members (3) 
      -- CP-element group 26: 	 assign_stmt_430_to_assign_stmt_550/slice_477_Update/ca
      -- CP-element group 26: 	 assign_stmt_430_to_assign_stmt_550/slice_477_Update/$exit
      -- CP-element group 26: 	 assign_stmt_430_to_assign_stmt_550/slice_477_update_completed_
      -- 
    ca_1421_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 26_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_477_inst_ack_1, ack => shift_row_CP_1234_elements(26)); -- 
    -- CP-element group 27:  transition  input  bypass 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	0 
    -- CP-element group 27: successors 
    -- CP-element group 27:  members (3) 
      -- CP-element group 27: 	 assign_stmt_430_to_assign_stmt_550/slice_481_Sample/ra
      -- CP-element group 27: 	 assign_stmt_430_to_assign_stmt_550/slice_481_Sample/$exit
      -- CP-element group 27: 	 assign_stmt_430_to_assign_stmt_550/slice_481_sample_completed_
      -- 
    ra_1430_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 27_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_481_inst_ack_0, ack => shift_row_CP_1234_elements(27)); -- 
    -- CP-element group 28:  transition  input  bypass 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	0 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	51 
    -- CP-element group 28:  members (3) 
      -- CP-element group 28: 	 assign_stmt_430_to_assign_stmt_550/slice_481_Update/ca
      -- CP-element group 28: 	 assign_stmt_430_to_assign_stmt_550/slice_481_Update/$exit
      -- CP-element group 28: 	 assign_stmt_430_to_assign_stmt_550/slice_481_update_completed_
      -- 
    ca_1435_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 28_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_481_inst_ack_1, ack => shift_row_CP_1234_elements(28)); -- 
    -- CP-element group 29:  transition  input  bypass 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	0 
    -- CP-element group 29: successors 
    -- CP-element group 29:  members (3) 
      -- CP-element group 29: 	 assign_stmt_430_to_assign_stmt_550/slice_485_Sample/ra
      -- CP-element group 29: 	 assign_stmt_430_to_assign_stmt_550/slice_485_Sample/$exit
      -- CP-element group 29: 	 assign_stmt_430_to_assign_stmt_550/slice_485_sample_completed_
      -- 
    ra_1444_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 29_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_485_inst_ack_0, ack => shift_row_CP_1234_elements(29)); -- 
    -- CP-element group 30:  transition  input  bypass 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	0 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	45 
    -- CP-element group 30:  members (3) 
      -- CP-element group 30: 	 assign_stmt_430_to_assign_stmt_550/slice_485_Update/ca
      -- CP-element group 30: 	 assign_stmt_430_to_assign_stmt_550/slice_485_Update/$exit
      -- CP-element group 30: 	 assign_stmt_430_to_assign_stmt_550/slice_485_update_completed_
      -- 
    ca_1449_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 30_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_485_inst_ack_1, ack => shift_row_CP_1234_elements(30)); -- 
    -- CP-element group 31:  transition  input  bypass 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	0 
    -- CP-element group 31: successors 
    -- CP-element group 31:  members (3) 
      -- CP-element group 31: 	 assign_stmt_430_to_assign_stmt_550/slice_489_sample_completed_
      -- CP-element group 31: 	 assign_stmt_430_to_assign_stmt_550/slice_489_Sample/ra
      -- CP-element group 31: 	 assign_stmt_430_to_assign_stmt_550/slice_489_Sample/$exit
      -- 
    ra_1458_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 31_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_489_inst_ack_0, ack => shift_row_CP_1234_elements(31)); -- 
    -- CP-element group 32:  transition  input  bypass 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	0 
    -- CP-element group 32: successors 
    -- CP-element group 32: 	36 
    -- CP-element group 32:  members (3) 
      -- CP-element group 32: 	 assign_stmt_430_to_assign_stmt_550/slice_489_update_completed_
      -- CP-element group 32: 	 assign_stmt_430_to_assign_stmt_550/slice_489_Update/ca
      -- CP-element group 32: 	 assign_stmt_430_to_assign_stmt_550/slice_489_Update/$exit
      -- 
    ca_1463_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 32_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_489_inst_ack_1, ack => shift_row_CP_1234_elements(32)); -- 
    -- CP-element group 33:  join  transition  output  bypass 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	12 
    -- CP-element group 33: 	2 
    -- CP-element group 33: successors 
    -- CP-element group 33: 	34 
    -- CP-element group 33:  members (3) 
      -- CP-element group 33: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_494_Sample/rr
      -- CP-element group 33: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_494_sample_start_
      -- CP-element group 33: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_494_Sample/$entry
      -- 
    rr_1471_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1471_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(33), ack => CONCAT_u8_u16_494_inst_req_0); -- 
    shift_row_cp_element_group_33: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_33"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(12) & shift_row_CP_1234_elements(2);
      gj_shift_row_cp_element_group_33 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(33), clk => clk, reset => reset); --
    end block;
    -- CP-element group 34:  transition  input  bypass 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	33 
    -- CP-element group 34: successors 
    -- CP-element group 34:  members (3) 
      -- CP-element group 34: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_494_Sample/ra
      -- CP-element group 34: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_494_Sample/$exit
      -- CP-element group 34: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_494_sample_completed_
      -- 
    ra_1472_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_494_inst_ack_0, ack => shift_row_CP_1234_elements(34)); -- 
    -- CP-element group 35:  transition  input  bypass 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	0 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	39 
    -- CP-element group 35:  members (3) 
      -- CP-element group 35: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_494_Update/ca
      -- CP-element group 35: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_494_Update/$exit
      -- CP-element group 35: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_494_update_completed_
      -- 
    ca_1477_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 35_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_494_inst_ack_1, ack => shift_row_CP_1234_elements(35)); -- 
    -- CP-element group 36:  join  transition  output  bypass 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	22 
    -- CP-element group 36: 	32 
    -- CP-element group 36: successors 
    -- CP-element group 36: 	37 
    -- CP-element group 36:  members (3) 
      -- CP-element group 36: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_499_Sample/$entry
      -- CP-element group 36: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_499_Sample/rr
      -- CP-element group 36: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_499_sample_start_
      -- 
    rr_1485_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1485_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(36), ack => CONCAT_u8_u16_499_inst_req_0); -- 
    shift_row_cp_element_group_36: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_36"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(22) & shift_row_CP_1234_elements(32);
      gj_shift_row_cp_element_group_36 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(36), clk => clk, reset => reset); --
    end block;
    -- CP-element group 37:  transition  input  bypass 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	36 
    -- CP-element group 37: successors 
    -- CP-element group 37:  members (3) 
      -- CP-element group 37: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_499_Sample/$exit
      -- CP-element group 37: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_499_Sample/ra
      -- CP-element group 37: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_499_sample_completed_
      -- 
    ra_1486_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_499_inst_ack_0, ack => shift_row_CP_1234_elements(37)); -- 
    -- CP-element group 38:  transition  input  bypass 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	0 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	39 
    -- CP-element group 38:  members (3) 
      -- CP-element group 38: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_499_update_completed_
      -- CP-element group 38: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_499_Update/$exit
      -- CP-element group 38: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_499_Update/ca
      -- 
    ca_1491_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 38_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_499_inst_ack_1, ack => shift_row_CP_1234_elements(38)); -- 
    -- CP-element group 39:  join  transition  output  bypass 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	35 
    -- CP-element group 39: 	38 
    -- CP-element group 39: successors 
    -- CP-element group 39: 	40 
    -- CP-element group 39:  members (3) 
      -- CP-element group 39: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_504_Sample/rr
      -- CP-element group 39: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_504_sample_start_
      -- CP-element group 39: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_504_Sample/$entry
      -- 
    rr_1499_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1499_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(39), ack => CONCAT_u16_u32_504_inst_req_0); -- 
    shift_row_cp_element_group_39: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_39"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(35) & shift_row_CP_1234_elements(38);
      gj_shift_row_cp_element_group_39 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(39), clk => clk, reset => reset); --
    end block;
    -- CP-element group 40:  transition  input  bypass 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	39 
    -- CP-element group 40: successors 
    -- CP-element group 40:  members (3) 
      -- CP-element group 40: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_504_Sample/ra
      -- CP-element group 40: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_504_sample_completed_
      -- CP-element group 40: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_504_Sample/$exit
      -- 
    ra_1500_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 40_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_504_inst_ack_0, ack => shift_row_CP_1234_elements(40)); -- 
    -- CP-element group 41:  transition  input  bypass 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	0 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	69 
    -- CP-element group 41:  members (3) 
      -- CP-element group 41: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_504_Update/$exit
      -- CP-element group 41: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_504_update_completed_
      -- CP-element group 41: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_504_Update/ca
      -- 
    ca_1505_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 41_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_504_inst_ack_1, ack => shift_row_CP_1234_elements(41)); -- 
    -- CP-element group 42:  join  transition  output  bypass 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	10 
    -- CP-element group 42: 	20 
    -- CP-element group 42: successors 
    -- CP-element group 42: 	43 
    -- CP-element group 42:  members (3) 
      -- CP-element group 42: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_509_sample_start_
      -- CP-element group 42: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_509_Sample/$entry
      -- CP-element group 42: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_509_Sample/rr
      -- 
    rr_1513_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1513_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(42), ack => CONCAT_u8_u16_509_inst_req_0); -- 
    shift_row_cp_element_group_42: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_42"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(10) & shift_row_CP_1234_elements(20);
      gj_shift_row_cp_element_group_42 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(42), clk => clk, reset => reset); --
    end block;
    -- CP-element group 43:  transition  input  bypass 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	42 
    -- CP-element group 43: successors 
    -- CP-element group 43:  members (3) 
      -- CP-element group 43: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_509_sample_completed_
      -- CP-element group 43: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_509_Sample/$exit
      -- CP-element group 43: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_509_Sample/ra
      -- 
    ra_1514_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 43_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_509_inst_ack_0, ack => shift_row_CP_1234_elements(43)); -- 
    -- CP-element group 44:  transition  input  bypass 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	0 
    -- CP-element group 44: successors 
    -- CP-element group 44: 	48 
    -- CP-element group 44:  members (3) 
      -- CP-element group 44: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_509_update_completed_
      -- CP-element group 44: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_509_Update/$exit
      -- CP-element group 44: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_509_Update/ca
      -- 
    ca_1519_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 44_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_509_inst_ack_1, ack => shift_row_CP_1234_elements(44)); -- 
    -- CP-element group 45:  join  transition  output  bypass 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	8 
    -- CP-element group 45: 	30 
    -- CP-element group 45: successors 
    -- CP-element group 45: 	46 
    -- CP-element group 45:  members (3) 
      -- CP-element group 45: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_514_sample_start_
      -- CP-element group 45: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_514_Sample/$entry
      -- CP-element group 45: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_514_Sample/rr
      -- 
    rr_1527_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1527_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(45), ack => CONCAT_u8_u16_514_inst_req_0); -- 
    shift_row_cp_element_group_45: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_45"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(8) & shift_row_CP_1234_elements(30);
      gj_shift_row_cp_element_group_45 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(45), clk => clk, reset => reset); --
    end block;
    -- CP-element group 46:  transition  input  bypass 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	45 
    -- CP-element group 46: successors 
    -- CP-element group 46:  members (3) 
      -- CP-element group 46: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_514_sample_completed_
      -- CP-element group 46: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_514_Sample/$exit
      -- CP-element group 46: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_514_Sample/ra
      -- 
    ra_1528_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 46_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_514_inst_ack_0, ack => shift_row_CP_1234_elements(46)); -- 
    -- CP-element group 47:  transition  input  bypass 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	0 
    -- CP-element group 47: successors 
    -- CP-element group 47: 	48 
    -- CP-element group 47:  members (3) 
      -- CP-element group 47: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_514_update_completed_
      -- CP-element group 47: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_514_Update/$exit
      -- CP-element group 47: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_514_Update/ca
      -- 
    ca_1533_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 47_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_514_inst_ack_1, ack => shift_row_CP_1234_elements(47)); -- 
    -- CP-element group 48:  join  transition  output  bypass 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	44 
    -- CP-element group 48: 	47 
    -- CP-element group 48: successors 
    -- CP-element group 48: 	49 
    -- CP-element group 48:  members (3) 
      -- CP-element group 48: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_519_sample_start_
      -- CP-element group 48: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_519_Sample/$entry
      -- CP-element group 48: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_519_Sample/rr
      -- 
    rr_1541_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1541_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(48), ack => CONCAT_u16_u32_519_inst_req_0); -- 
    shift_row_cp_element_group_48: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_48"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(44) & shift_row_CP_1234_elements(47);
      gj_shift_row_cp_element_group_48 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(48), clk => clk, reset => reset); --
    end block;
    -- CP-element group 49:  transition  input  bypass 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: 	48 
    -- CP-element group 49: successors 
    -- CP-element group 49:  members (3) 
      -- CP-element group 49: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_519_sample_completed_
      -- CP-element group 49: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_519_Sample/$exit
      -- CP-element group 49: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_519_Sample/ra
      -- 
    ra_1542_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 49_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_519_inst_ack_0, ack => shift_row_CP_1234_elements(49)); -- 
    -- CP-element group 50:  transition  input  bypass 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	0 
    -- CP-element group 50: successors 
    -- CP-element group 50: 	69 
    -- CP-element group 50:  members (3) 
      -- CP-element group 50: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_519_update_completed_
      -- CP-element group 50: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_519_Update/$exit
      -- CP-element group 50: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_519_Update/ca
      -- 
    ca_1547_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 50_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_519_inst_ack_1, ack => shift_row_CP_1234_elements(50)); -- 
    -- CP-element group 51:  join  transition  output  bypass 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	18 
    -- CP-element group 51: 	28 
    -- CP-element group 51: successors 
    -- CP-element group 51: 	52 
    -- CP-element group 51:  members (3) 
      -- CP-element group 51: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_524_sample_start_
      -- CP-element group 51: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_524_Sample/$entry
      -- CP-element group 51: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_524_Sample/rr
      -- 
    rr_1555_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1555_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(51), ack => CONCAT_u8_u16_524_inst_req_0); -- 
    shift_row_cp_element_group_51: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_51"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(18) & shift_row_CP_1234_elements(28);
      gj_shift_row_cp_element_group_51 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(51), clk => clk, reset => reset); --
    end block;
    -- CP-element group 52:  transition  input  bypass 
    -- CP-element group 52: predecessors 
    -- CP-element group 52: 	51 
    -- CP-element group 52: successors 
    -- CP-element group 52:  members (3) 
      -- CP-element group 52: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_524_sample_completed_
      -- CP-element group 52: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_524_Sample/$exit
      -- CP-element group 52: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_524_Sample/ra
      -- 
    ra_1556_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 52_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_524_inst_ack_0, ack => shift_row_CP_1234_elements(52)); -- 
    -- CP-element group 53:  transition  input  bypass 
    -- CP-element group 53: predecessors 
    -- CP-element group 53: 	0 
    -- CP-element group 53: successors 
    -- CP-element group 53: 	57 
    -- CP-element group 53:  members (3) 
      -- CP-element group 53: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_524_update_completed_
      -- CP-element group 53: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_524_Update/$exit
      -- CP-element group 53: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_524_Update/ca
      -- 
    ca_1561_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 53_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_524_inst_ack_1, ack => shift_row_CP_1234_elements(53)); -- 
    -- CP-element group 54:  join  transition  output  bypass 
    -- CP-element group 54: predecessors 
    -- CP-element group 54: 	6 
    -- CP-element group 54: 	16 
    -- CP-element group 54: successors 
    -- CP-element group 54: 	55 
    -- CP-element group 54:  members (3) 
      -- CP-element group 54: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_529_sample_start_
      -- CP-element group 54: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_529_Sample/$entry
      -- CP-element group 54: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_529_Sample/rr
      -- 
    rr_1569_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1569_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(54), ack => CONCAT_u8_u16_529_inst_req_0); -- 
    shift_row_cp_element_group_54: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_54"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(6) & shift_row_CP_1234_elements(16);
      gj_shift_row_cp_element_group_54 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(54), clk => clk, reset => reset); --
    end block;
    -- CP-element group 55:  transition  input  bypass 
    -- CP-element group 55: predecessors 
    -- CP-element group 55: 	54 
    -- CP-element group 55: successors 
    -- CP-element group 55:  members (3) 
      -- CP-element group 55: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_529_sample_completed_
      -- CP-element group 55: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_529_Sample/$exit
      -- CP-element group 55: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_529_Sample/ra
      -- 
    ra_1570_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 55_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_529_inst_ack_0, ack => shift_row_CP_1234_elements(55)); -- 
    -- CP-element group 56:  transition  input  bypass 
    -- CP-element group 56: predecessors 
    -- CP-element group 56: 	0 
    -- CP-element group 56: successors 
    -- CP-element group 56: 	57 
    -- CP-element group 56:  members (3) 
      -- CP-element group 56: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_529_update_completed_
      -- CP-element group 56: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_529_Update/$exit
      -- CP-element group 56: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_529_Update/ca
      -- 
    ca_1575_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 56_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_529_inst_ack_1, ack => shift_row_CP_1234_elements(56)); -- 
    -- CP-element group 57:  join  transition  output  bypass 
    -- CP-element group 57: predecessors 
    -- CP-element group 57: 	53 
    -- CP-element group 57: 	56 
    -- CP-element group 57: successors 
    -- CP-element group 57: 	58 
    -- CP-element group 57:  members (3) 
      -- CP-element group 57: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_534_sample_start_
      -- CP-element group 57: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_534_Sample/$entry
      -- CP-element group 57: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_534_Sample/rr
      -- 
    rr_1583_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1583_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(57), ack => CONCAT_u16_u32_534_inst_req_0); -- 
    shift_row_cp_element_group_57: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_57"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(53) & shift_row_CP_1234_elements(56);
      gj_shift_row_cp_element_group_57 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(57), clk => clk, reset => reset); --
    end block;
    -- CP-element group 58:  transition  input  bypass 
    -- CP-element group 58: predecessors 
    -- CP-element group 58: 	57 
    -- CP-element group 58: successors 
    -- CP-element group 58:  members (3) 
      -- CP-element group 58: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_534_sample_completed_
      -- CP-element group 58: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_534_Sample/$exit
      -- CP-element group 58: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_534_Sample/ra
      -- 
    ra_1584_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 58_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_534_inst_ack_0, ack => shift_row_CP_1234_elements(58)); -- 
    -- CP-element group 59:  transition  input  bypass 
    -- CP-element group 59: predecessors 
    -- CP-element group 59: 	0 
    -- CP-element group 59: successors 
    -- CP-element group 59: 	69 
    -- CP-element group 59:  members (3) 
      -- CP-element group 59: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_534_update_completed_
      -- CP-element group 59: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_534_Update/$exit
      -- CP-element group 59: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_534_Update/ca
      -- 
    ca_1589_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 59_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_534_inst_ack_1, ack => shift_row_CP_1234_elements(59)); -- 
    -- CP-element group 60:  join  transition  output  bypass 
    -- CP-element group 60: predecessors 
    -- CP-element group 60: 	26 
    -- CP-element group 60: 	4 
    -- CP-element group 60: successors 
    -- CP-element group 60: 	61 
    -- CP-element group 60:  members (3) 
      -- CP-element group 60: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_539_sample_start_
      -- CP-element group 60: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_539_Sample/$entry
      -- CP-element group 60: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_539_Sample/rr
      -- 
    rr_1597_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1597_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(60), ack => CONCAT_u8_u16_539_inst_req_0); -- 
    shift_row_cp_element_group_60: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_60"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(26) & shift_row_CP_1234_elements(4);
      gj_shift_row_cp_element_group_60 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(60), clk => clk, reset => reset); --
    end block;
    -- CP-element group 61:  transition  input  bypass 
    -- CP-element group 61: predecessors 
    -- CP-element group 61: 	60 
    -- CP-element group 61: successors 
    -- CP-element group 61:  members (3) 
      -- CP-element group 61: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_539_sample_completed_
      -- CP-element group 61: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_539_Sample/$exit
      -- CP-element group 61: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_539_Sample/ra
      -- 
    ra_1598_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 61_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_539_inst_ack_0, ack => shift_row_CP_1234_elements(61)); -- 
    -- CP-element group 62:  transition  input  bypass 
    -- CP-element group 62: predecessors 
    -- CP-element group 62: 	0 
    -- CP-element group 62: successors 
    -- CP-element group 62: 	66 
    -- CP-element group 62:  members (3) 
      -- CP-element group 62: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_539_update_completed_
      -- CP-element group 62: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_539_Update/$exit
      -- CP-element group 62: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_539_Update/ca
      -- 
    ca_1603_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 62_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_539_inst_ack_1, ack => shift_row_CP_1234_elements(62)); -- 
    -- CP-element group 63:  join  transition  output  bypass 
    -- CP-element group 63: predecessors 
    -- CP-element group 63: 	14 
    -- CP-element group 63: 	24 
    -- CP-element group 63: successors 
    -- CP-element group 63: 	64 
    -- CP-element group 63:  members (3) 
      -- CP-element group 63: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_544_sample_start_
      -- CP-element group 63: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_544_Sample/$entry
      -- CP-element group 63: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_544_Sample/rr
      -- 
    rr_1611_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1611_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(63), ack => CONCAT_u8_u16_544_inst_req_0); -- 
    shift_row_cp_element_group_63: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_63"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(14) & shift_row_CP_1234_elements(24);
      gj_shift_row_cp_element_group_63 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(63), clk => clk, reset => reset); --
    end block;
    -- CP-element group 64:  transition  input  bypass 
    -- CP-element group 64: predecessors 
    -- CP-element group 64: 	63 
    -- CP-element group 64: successors 
    -- CP-element group 64:  members (3) 
      -- CP-element group 64: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_544_sample_completed_
      -- CP-element group 64: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_544_Sample/$exit
      -- CP-element group 64: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_544_Sample/ra
      -- 
    ra_1612_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 64_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_544_inst_ack_0, ack => shift_row_CP_1234_elements(64)); -- 
    -- CP-element group 65:  transition  input  bypass 
    -- CP-element group 65: predecessors 
    -- CP-element group 65: 	0 
    -- CP-element group 65: successors 
    -- CP-element group 65: 	66 
    -- CP-element group 65:  members (3) 
      -- CP-element group 65: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_544_update_completed_
      -- CP-element group 65: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_544_Update/$exit
      -- CP-element group 65: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u8_u16_544_Update/ca
      -- 
    ca_1617_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 65_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u8_u16_544_inst_ack_1, ack => shift_row_CP_1234_elements(65)); -- 
    -- CP-element group 66:  join  transition  output  bypass 
    -- CP-element group 66: predecessors 
    -- CP-element group 66: 	62 
    -- CP-element group 66: 	65 
    -- CP-element group 66: successors 
    -- CP-element group 66: 	67 
    -- CP-element group 66:  members (3) 
      -- CP-element group 66: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_549_sample_start_
      -- CP-element group 66: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_549_Sample/$entry
      -- CP-element group 66: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_549_Sample/rr
      -- 
    rr_1625_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1625_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => shift_row_CP_1234_elements(66), ack => CONCAT_u16_u32_549_inst_req_0); -- 
    shift_row_cp_element_group_66: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_66"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(62) & shift_row_CP_1234_elements(65);
      gj_shift_row_cp_element_group_66 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(66), clk => clk, reset => reset); --
    end block;
    -- CP-element group 67:  transition  input  bypass 
    -- CP-element group 67: predecessors 
    -- CP-element group 67: 	66 
    -- CP-element group 67: successors 
    -- CP-element group 67:  members (3) 
      -- CP-element group 67: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_549_sample_completed_
      -- CP-element group 67: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_549_Sample/$exit
      -- CP-element group 67: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_549_Sample/ra
      -- 
    ra_1626_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 67_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_549_inst_ack_0, ack => shift_row_CP_1234_elements(67)); -- 
    -- CP-element group 68:  transition  input  bypass 
    -- CP-element group 68: predecessors 
    -- CP-element group 68: 	0 
    -- CP-element group 68: successors 
    -- CP-element group 68: 	69 
    -- CP-element group 68:  members (3) 
      -- CP-element group 68: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_549_update_completed_
      -- CP-element group 68: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_549_Update/$exit
      -- CP-element group 68: 	 assign_stmt_430_to_assign_stmt_550/CONCAT_u16_u32_549_Update/ca
      -- 
    ca_1631_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 68_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u16_u32_549_inst_ack_1, ack => shift_row_CP_1234_elements(68)); -- 
    -- CP-element group 69:  join  transition  bypass 
    -- CP-element group 69: predecessors 
    -- CP-element group 69: 	41 
    -- CP-element group 69: 	50 
    -- CP-element group 69: 	59 
    -- CP-element group 69: 	68 
    -- CP-element group 69: successors 
    -- CP-element group 69:  members (2) 
      -- CP-element group 69: 	 assign_stmt_430_to_assign_stmt_550/$exit
      -- CP-element group 69: 	 $exit
      -- 
    shift_row_cp_element_group_69: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant joinName: string(1 to 29) := "shift_row_cp_element_group_69"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= shift_row_CP_1234_elements(41) & shift_row_CP_1234_elements(50) & shift_row_CP_1234_elements(59) & shift_row_CP_1234_elements(68);
      gj_shift_row_cp_element_group_69 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => shift_row_CP_1234_elements(69), clk => clk, reset => reset); --
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal a_0_430 : std_logic_vector(7 downto 0);
    signal a_1_434 : std_logic_vector(7 downto 0);
    signal a_2_438 : std_logic_vector(7 downto 0);
    signal a_3_442 : std_logic_vector(7 downto 0);
    signal b_0_446 : std_logic_vector(7 downto 0);
    signal b_1_450 : std_logic_vector(7 downto 0);
    signal b_2_454 : std_logic_vector(7 downto 0);
    signal b_3_458 : std_logic_vector(7 downto 0);
    signal c_0_462 : std_logic_vector(7 downto 0);
    signal c_1_466 : std_logic_vector(7 downto 0);
    signal c_2_470 : std_logic_vector(7 downto 0);
    signal c_3_474 : std_logic_vector(7 downto 0);
    signal d_0_478 : std_logic_vector(7 downto 0);
    signal d_1_482 : std_logic_vector(7 downto 0);
    signal d_2_486 : std_logic_vector(7 downto 0);
    signal d_3_490 : std_logic_vector(7 downto 0);
    signal nw_0_t1_495 : std_logic_vector(15 downto 0);
    signal nw_0_t2_500 : std_logic_vector(15 downto 0);
    signal nw_1_t1_510 : std_logic_vector(15 downto 0);
    signal nw_1_t2_515 : std_logic_vector(15 downto 0);
    signal nw_2_t1_525 : std_logic_vector(15 downto 0);
    signal nw_2_t2_530 : std_logic_vector(15 downto 0);
    signal nw_3_t1_540 : std_logic_vector(15 downto 0);
    signal nw_3_t2_545 : std_logic_vector(15 downto 0);
    -- 
  begin -- 
    slice_429_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_429_inst_req_0;
      slice_429_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_429_inst_req_1;
      slice_429_inst_ack_1<= update_ack(0);
      slice_429_inst: SliceSplitProtocol generic map(name => "slice_429_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_0_buffer, dout => a_0_430, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_433_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_433_inst_req_0;
      slice_433_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_433_inst_req_1;
      slice_433_inst_ack_1<= update_ack(0);
      slice_433_inst: SliceSplitProtocol generic map(name => "slice_433_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_0_buffer, dout => a_1_434, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_437_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_437_inst_req_0;
      slice_437_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_437_inst_req_1;
      slice_437_inst_ack_1<= update_ack(0);
      slice_437_inst: SliceSplitProtocol generic map(name => "slice_437_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_0_buffer, dout => a_2_438, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_441_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_441_inst_req_0;
      slice_441_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_441_inst_req_1;
      slice_441_inst_ack_1<= update_ack(0);
      slice_441_inst: SliceSplitProtocol generic map(name => "slice_441_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_0_buffer, dout => a_3_442, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_445_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_445_inst_req_0;
      slice_445_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_445_inst_req_1;
      slice_445_inst_ack_1<= update_ack(0);
      slice_445_inst: SliceSplitProtocol generic map(name => "slice_445_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_1_buffer, dout => b_0_446, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_449_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_449_inst_req_0;
      slice_449_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_449_inst_req_1;
      slice_449_inst_ack_1<= update_ack(0);
      slice_449_inst: SliceSplitProtocol generic map(name => "slice_449_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_1_buffer, dout => b_1_450, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_453_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_453_inst_req_0;
      slice_453_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_453_inst_req_1;
      slice_453_inst_ack_1<= update_ack(0);
      slice_453_inst: SliceSplitProtocol generic map(name => "slice_453_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_1_buffer, dout => b_2_454, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_457_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_457_inst_req_0;
      slice_457_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_457_inst_req_1;
      slice_457_inst_ack_1<= update_ack(0);
      slice_457_inst: SliceSplitProtocol generic map(name => "slice_457_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_1_buffer, dout => b_3_458, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_461_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_461_inst_req_0;
      slice_461_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_461_inst_req_1;
      slice_461_inst_ack_1<= update_ack(0);
      slice_461_inst: SliceSplitProtocol generic map(name => "slice_461_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_2_buffer, dout => c_0_462, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_465_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_465_inst_req_0;
      slice_465_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_465_inst_req_1;
      slice_465_inst_ack_1<= update_ack(0);
      slice_465_inst: SliceSplitProtocol generic map(name => "slice_465_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_2_buffer, dout => c_1_466, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_469_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_469_inst_req_0;
      slice_469_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_469_inst_req_1;
      slice_469_inst_ack_1<= update_ack(0);
      slice_469_inst: SliceSplitProtocol generic map(name => "slice_469_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_2_buffer, dout => c_2_470, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_473_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_473_inst_req_0;
      slice_473_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_473_inst_req_1;
      slice_473_inst_ack_1<= update_ack(0);
      slice_473_inst: SliceSplitProtocol generic map(name => "slice_473_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_2_buffer, dout => c_3_474, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_477_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_477_inst_req_0;
      slice_477_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_477_inst_req_1;
      slice_477_inst_ack_1<= update_ack(0);
      slice_477_inst: SliceSplitProtocol generic map(name => "slice_477_inst", in_data_width => 32, high_index => 31, low_index => 24, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_3_buffer, dout => d_0_478, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_481_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_481_inst_req_0;
      slice_481_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_481_inst_req_1;
      slice_481_inst_ack_1<= update_ack(0);
      slice_481_inst: SliceSplitProtocol generic map(name => "slice_481_inst", in_data_width => 32, high_index => 23, low_index => 16, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_3_buffer, dout => d_1_482, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_485_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_485_inst_req_0;
      slice_485_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_485_inst_req_1;
      slice_485_inst_ack_1<= update_ack(0);
      slice_485_inst: SliceSplitProtocol generic map(name => "slice_485_inst", in_data_width => 32, high_index => 15, low_index => 8, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_3_buffer, dout => d_2_486, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_489_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_489_inst_req_0;
      slice_489_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_489_inst_req_1;
      slice_489_inst_ack_1<= update_ack(0);
      slice_489_inst: SliceSplitProtocol generic map(name => "slice_489_inst", in_data_width => 32, high_index => 7, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => w_3_buffer, dout => d_3_490, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    -- shared split operator group (0) : CONCAT_u16_u32_504_inst 
    ApConcat_group_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= nw_0_t1_495 & nw_0_t2_500;
      nw_0_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_504_inst_req_0;
      CONCAT_u16_u32_504_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_504_inst_req_1;
      CONCAT_u16_u32_504_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_0_gI: SplitGuardInterface generic map(name => "ApConcat_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : CONCAT_u16_u32_519_inst 
    ApConcat_group_1: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= nw_1_t1_510 & nw_1_t2_515;
      nw_1_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_519_inst_req_0;
      CONCAT_u16_u32_519_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_519_inst_req_1;
      CONCAT_u16_u32_519_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_1_gI: SplitGuardInterface generic map(name => "ApConcat_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- shared split operator group (2) : CONCAT_u16_u32_534_inst 
    ApConcat_group_2: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= nw_2_t1_525 & nw_2_t2_530;
      nw_2_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_534_inst_req_0;
      CONCAT_u16_u32_534_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_534_inst_req_1;
      CONCAT_u16_u32_534_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_2_gI: SplitGuardInterface generic map(name => "ApConcat_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_2",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 2
    -- shared split operator group (3) : CONCAT_u16_u32_549_inst 
    ApConcat_group_3: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= nw_3_t1_540 & nw_3_t2_545;
      nw_3_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u16_u32_549_inst_req_0;
      CONCAT_u16_u32_549_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u16_u32_549_inst_req_1;
      CONCAT_u16_u32_549_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_3_gI: SplitGuardInterface generic map(name => "ApConcat_group_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_3",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 16,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 16, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 3
    -- shared split operator group (4) : CONCAT_u8_u16_494_inst 
    ApConcat_group_4: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= a_0_430 & b_1_450;
      nw_0_t1_495 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_494_inst_req_0;
      CONCAT_u8_u16_494_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_494_inst_req_1;
      CONCAT_u8_u16_494_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_4_gI: SplitGuardInterface generic map(name => "ApConcat_group_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_4",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 4
    -- shared split operator group (5) : CONCAT_u8_u16_499_inst 
    ApConcat_group_5: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_2_470 & d_3_490;
      nw_0_t2_500 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_499_inst_req_0;
      CONCAT_u8_u16_499_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_499_inst_req_1;
      CONCAT_u8_u16_499_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_5_gI: SplitGuardInterface generic map(name => "ApConcat_group_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_5",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 5
    -- shared split operator group (6) : CONCAT_u8_u16_509_inst 
    ApConcat_group_6: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= b_0_446 & c_1_466;
      nw_1_t1_510 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_509_inst_req_0;
      CONCAT_u8_u16_509_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_509_inst_req_1;
      CONCAT_u8_u16_509_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_6_gI: SplitGuardInterface generic map(name => "ApConcat_group_6_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_6",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 6
    -- shared split operator group (7) : CONCAT_u8_u16_514_inst 
    ApConcat_group_7: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= d_2_486 & a_3_442;
      nw_1_t2_515 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_514_inst_req_0;
      CONCAT_u8_u16_514_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_514_inst_req_1;
      CONCAT_u8_u16_514_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_7_gI: SplitGuardInterface generic map(name => "ApConcat_group_7_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_7",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 7
    -- shared split operator group (8) : CONCAT_u8_u16_524_inst 
    ApConcat_group_8: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= c_0_462 & d_1_482;
      nw_2_t1_525 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_524_inst_req_0;
      CONCAT_u8_u16_524_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_524_inst_req_1;
      CONCAT_u8_u16_524_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_8_gI: SplitGuardInterface generic map(name => "ApConcat_group_8_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_8",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 8
    -- shared split operator group (9) : CONCAT_u8_u16_529_inst 
    ApConcat_group_9: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= a_2_438 & b_3_458;
      nw_2_t2_530 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_529_inst_req_0;
      CONCAT_u8_u16_529_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_529_inst_req_1;
      CONCAT_u8_u16_529_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_9_gI: SplitGuardInterface generic map(name => "ApConcat_group_9_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_9",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 9
    -- shared split operator group (10) : CONCAT_u8_u16_539_inst 
    ApConcat_group_10: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= d_0_478 & a_1_434;
      nw_3_t1_540 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_539_inst_req_0;
      CONCAT_u8_u16_539_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_539_inst_req_1;
      CONCAT_u8_u16_539_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_10_gI: SplitGuardInterface generic map(name => "ApConcat_group_10_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_10",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 10
    -- shared split operator group (11) : CONCAT_u8_u16_544_inst 
    ApConcat_group_11: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(15 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= b_2_454 & c_3_474;
      nw_3_t2_545 <= data_out(15 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u8_u16_544_inst_req_0;
      CONCAT_u8_u16_544_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u8_u16_544_inst_req_1;
      CONCAT_u8_u16_544_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_11_gI: SplitGuardInterface generic map(name => "ApConcat_group_11_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_11",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 16,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 11
    -- 
  end Block; -- data_path
  -- 
end shift_row_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity top_module is -- 
  generic (tag_length : integer); 
  port ( -- 
    memory_space_0_sr_req : out  std_logic_vector(0 downto 0);
    memory_space_0_sr_ack : in   std_logic_vector(0 downto 0);
    memory_space_0_sr_addr : out  std_logic_vector(0 downto 0);
    memory_space_0_sr_data : out  std_logic_vector(0 downto 0);
    memory_space_0_sr_tag :  out  std_logic_vector(18 downto 0);
    memory_space_0_sc_req : out  std_logic_vector(0 downto 0);
    memory_space_0_sc_ack : in   std_logic_vector(0 downto 0);
    memory_space_0_sc_tag :  in  std_logic_vector(1 downto 0);
    counter_encry_call_reqs : out  std_logic_vector(0 downto 0);
    counter_encry_call_acks : in   std_logic_vector(0 downto 0);
    counter_encry_call_data : out  std_logic_vector(255 downto 0);
    counter_encry_call_tag  :  out  std_logic_vector(0 downto 0);
    counter_encry_return_reqs : out  std_logic_vector(0 downto 0);
    counter_encry_return_acks : in   std_logic_vector(0 downto 0);
    counter_encry_return_data : in   std_logic_vector(127 downto 0);
    counter_encry_return_tag :  in   std_logic_vector(0 downto 0);
    decryption_engine_call_reqs : out  std_logic_vector(0 downto 0);
    decryption_engine_call_acks : in   std_logic_vector(0 downto 0);
    decryption_engine_call_data : out  std_logic_vector(255 downto 0);
    decryption_engine_call_tag  :  out  std_logic_vector(0 downto 0);
    decryption_engine_return_reqs : out  std_logic_vector(0 downto 0);
    decryption_engine_return_acks : in   std_logic_vector(0 downto 0);
    decryption_engine_return_tag :  in   std_logic_vector(0 downto 0);
    encryption_engine_call_reqs : out  std_logic_vector(0 downto 0);
    encryption_engine_call_acks : in   std_logic_vector(0 downto 0);
    encryption_engine_call_data : out  std_logic_vector(255 downto 0);
    encryption_engine_call_tag  :  out  std_logic_vector(0 downto 0);
    encryption_engine_return_reqs : out  std_logic_vector(0 downto 0);
    encryption_engine_return_acks : in   std_logic_vector(0 downto 0);
    encryption_engine_return_tag :  in   std_logic_vector(0 downto 0);
    encryption_key_reception_call_reqs : out  std_logic_vector(0 downto 0);
    encryption_key_reception_call_acks : in   std_logic_vector(0 downto 0);
    encryption_key_reception_call_tag  :  out  std_logic_vector(2 downto 0);
    encryption_key_reception_return_reqs : out  std_logic_vector(0 downto 0);
    encryption_key_reception_return_acks : in   std_logic_vector(0 downto 0);
    encryption_key_reception_return_data : in   std_logic_vector(31 downto 0);
    encryption_key_reception_return_tag :  in   std_logic_vector(2 downto 0);
    password_sequence_call_reqs : out  std_logic_vector(0 downto 0);
    password_sequence_call_acks : in   std_logic_vector(0 downto 0);
    password_sequence_call_tag  :  out  std_logic_vector(0 downto 0);
    password_sequence_return_reqs : out  std_logic_vector(0 downto 0);
    password_sequence_return_acks : in   std_logic_vector(0 downto 0);
    password_sequence_return_tag :  in   std_logic_vector(0 downto 0);
    handshaking_call_reqs : out  std_logic_vector(0 downto 0);
    handshaking_call_acks : in   std_logic_vector(0 downto 0);
    handshaking_call_tag  :  out  std_logic_vector(0 downto 0);
    handshaking_return_reqs : out  std_logic_vector(0 downto 0);
    handshaking_return_acks : in   std_logic_vector(0 downto 0);
    handshaking_return_tag :  in   std_logic_vector(0 downto 0);
    set_rcon_call_reqs : out  std_logic_vector(0 downto 0);
    set_rcon_call_acks : in   std_logic_vector(0 downto 0);
    set_rcon_call_tag  :  out  std_logic_vector(0 downto 0);
    set_rcon_return_reqs : out  std_logic_vector(0 downto 0);
    set_rcon_return_acks : in   std_logic_vector(0 downto 0);
    set_rcon_return_tag :  in   std_logic_vector(0 downto 0);
    set_sbox_call_reqs : out  std_logic_vector(0 downto 0);
    set_sbox_call_acks : in   std_logic_vector(0 downto 0);
    set_sbox_call_tag  :  out  std_logic_vector(0 downto 0);
    set_sbox_return_reqs : out  std_logic_vector(0 downto 0);
    set_sbox_return_acks : in   std_logic_vector(0 downto 0);
    set_sbox_return_tag :  in   std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity top_module;
architecture top_module_arch of top_module is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal top_module_CP_6290_start: Boolean;
  signal top_module_CP_6290_symbol: Boolean;
  -- volatile/operator module components. 
  component counter_encry is -- 
    generic (tag_length : integer); 
    port ( -- 
      k0_0 : in  std_logic_vector(31 downto 0);
      k0_1 : in  std_logic_vector(31 downto 0);
      k0_2 : in  std_logic_vector(31 downto 0);
      k0_3 : in  std_logic_vector(31 downto 0);
      counter : in  std_logic_vector(127 downto 0);
      lw7_0 : out  std_logic_vector(31 downto 0);
      lw7_1 : out  std_logic_vector(31 downto 0);
      lw7_2 : out  std_logic_vector(31 downto 0);
      lw7_3 : out  std_logic_vector(31 downto 0);
      add_round_key_call_reqs : out  std_logic_vector(0 downto 0);
      add_round_key_call_acks : in   std_logic_vector(0 downto 0);
      add_round_key_call_data : out  std_logic_vector(263 downto 0);
      add_round_key_call_tag  :  out  std_logic_vector(1 downto 0);
      add_round_key_return_reqs : out  std_logic_vector(0 downto 0);
      add_round_key_return_acks : in   std_logic_vector(0 downto 0);
      add_round_key_return_data : in   std_logic_vector(255 downto 0);
      add_round_key_return_tag :  in   std_logic_vector(1 downto 0);
      shift_row_call_reqs : out  std_logic_vector(0 downto 0);
      shift_row_call_acks : in   std_logic_vector(0 downto 0);
      shift_row_call_data : out  std_logic_vector(127 downto 0);
      shift_row_call_tag  :  out  std_logic_vector(1 downto 0);
      shift_row_return_reqs : out  std_logic_vector(0 downto 0);
      shift_row_return_acks : in   std_logic_vector(0 downto 0);
      shift_row_return_data : in   std_logic_vector(127 downto 0);
      shift_row_return_tag :  in   std_logic_vector(1 downto 0);
      mix_column_call_reqs : out  std_logic_vector(0 downto 0);
      mix_column_call_acks : in   std_logic_vector(0 downto 0);
      mix_column_call_data : out  std_logic_vector(31 downto 0);
      mix_column_call_tag  :  out  std_logic_vector(2 downto 0);
      mix_column_return_reqs : out  std_logic_vector(0 downto 0);
      mix_column_return_acks : in   std_logic_vector(0 downto 0);
      mix_column_return_data : in   std_logic_vector(31 downto 0);
      mix_column_return_tag :  in   std_logic_vector(2 downto 0);
      sbox_transformation_call_reqs : out  std_logic_vector(0 downto 0);
      sbox_transformation_call_acks : in   std_logic_vector(0 downto 0);
      sbox_transformation_call_data : out  std_logic_vector(31 downto 0);
      sbox_transformation_call_tag  :  out  std_logic_vector(3 downto 0);
      sbox_transformation_return_reqs : out  std_logic_vector(0 downto 0);
      sbox_transformation_return_acks : in   std_logic_vector(0 downto 0);
      sbox_transformation_return_data : in   std_logic_vector(31 downto 0);
      sbox_transformation_return_tag :  in   std_logic_vector(3 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component decryption_engine is -- 
    generic (tag_length : integer); 
    port ( -- 
      a0_0 : in  std_logic_vector(31 downto 0);
      a0_1 : in  std_logic_vector(31 downto 0);
      a0_2 : in  std_logic_vector(31 downto 0);
      a0_3 : in  std_logic_vector(31 downto 0);
      decry_counter : in  std_logic_vector(127 downto 0);
      memory_space_0_sr_req : out  std_logic_vector(0 downto 0);
      memory_space_0_sr_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_sr_addr : out  std_logic_vector(0 downto 0);
      memory_space_0_sr_data : out  std_logic_vector(0 downto 0);
      memory_space_0_sr_tag :  out  std_logic_vector(18 downto 0);
      memory_space_0_sc_req : out  std_logic_vector(0 downto 0);
      memory_space_0_sc_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_sc_tag :  in  std_logic_vector(1 downto 0);
      input_d_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_d_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_d_pipe_read_data : in   std_logic_vector(7 downto 0);
      out_d_pipe_write_req : out  std_logic_vector(0 downto 0);
      out_d_pipe_write_ack : in   std_logic_vector(0 downto 0);
      out_d_pipe_write_data : out  std_logic_vector(7 downto 0);
      checksum_calculation_call_reqs : out  std_logic_vector(0 downto 0);
      checksum_calculation_call_acks : in   std_logic_vector(0 downto 0);
      checksum_calculation_call_data : out  std_logic_vector(111 downto 0);
      checksum_calculation_call_tag  :  out  std_logic_vector(0 downto 0);
      checksum_calculation_return_reqs : out  std_logic_vector(0 downto 0);
      checksum_calculation_return_acks : in   std_logic_vector(0 downto 0);
      checksum_calculation_return_data : in   std_logic_vector(15 downto 0);
      checksum_calculation_return_tag :  in   std_logic_vector(0 downto 0);
      counter_encry_call_reqs : out  std_logic_vector(0 downto 0);
      counter_encry_call_acks : in   std_logic_vector(0 downto 0);
      counter_encry_call_data : out  std_logic_vector(255 downto 0);
      counter_encry_call_tag  :  out  std_logic_vector(0 downto 0);
      counter_encry_return_reqs : out  std_logic_vector(0 downto 0);
      counter_encry_return_acks : in   std_logic_vector(0 downto 0);
      counter_encry_return_data : in   std_logic_vector(127 downto 0);
      counter_encry_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component encryption_engine is -- 
    generic (tag_length : integer); 
    port ( -- 
      k0_0 : in  std_logic_vector(31 downto 0);
      k0_1 : in  std_logic_vector(31 downto 0);
      k0_2 : in  std_logic_vector(31 downto 0);
      k0_3 : in  std_logic_vector(31 downto 0);
      encry_counter : in  std_logic_vector(127 downto 0);
      memory_space_0_lr_req : out  std_logic_vector(0 downto 0);
      memory_space_0_lr_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_lr_addr : out  std_logic_vector(0 downto 0);
      memory_space_0_lr_tag :  out  std_logic_vector(18 downto 0);
      memory_space_0_lc_req : out  std_logic_vector(0 downto 0);
      memory_space_0_lc_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_lc_data : in   std_logic_vector(0 downto 0);
      memory_space_0_lc_tag :  in  std_logic_vector(1 downto 0);
      input_e_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_e_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_e_pipe_read_data : in   std_logic_vector(7 downto 0);
      checksum_calculation_call_reqs : out  std_logic_vector(0 downto 0);
      checksum_calculation_call_acks : in   std_logic_vector(0 downto 0);
      checksum_calculation_call_data : out  std_logic_vector(111 downto 0);
      checksum_calculation_call_tag  :  out  std_logic_vector(0 downto 0);
      checksum_calculation_return_reqs : out  std_logic_vector(0 downto 0);
      checksum_calculation_return_acks : in   std_logic_vector(0 downto 0);
      checksum_calculation_return_data : in   std_logic_vector(15 downto 0);
      checksum_calculation_return_tag :  in   std_logic_vector(0 downto 0);
      counter_encry_call_reqs : out  std_logic_vector(0 downto 0);
      counter_encry_call_acks : in   std_logic_vector(0 downto 0);
      counter_encry_call_data : out  std_logic_vector(255 downto 0);
      counter_encry_call_tag  :  out  std_logic_vector(0 downto 0);
      counter_encry_return_reqs : out  std_logic_vector(0 downto 0);
      counter_encry_return_acks : in   std_logic_vector(0 downto 0);
      counter_encry_return_data : in   std_logic_vector(127 downto 0);
      counter_encry_return_tag :  in   std_logic_vector(0 downto 0);
      send_msg_call_reqs : out  std_logic_vector(0 downto 0);
      send_msg_call_acks : in   std_logic_vector(0 downto 0);
      send_msg_call_data : out  std_logic_vector(31 downto 0);
      send_msg_call_tag  :  out  std_logic_vector(2 downto 0);
      send_msg_return_reqs : out  std_logic_vector(0 downto 0);
      send_msg_return_acks : in   std_logic_vector(0 downto 0);
      send_msg_return_tag :  in   std_logic_vector(2 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component encryption_key_reception is -- 
    generic (tag_length : integer); 
    port ( -- 
      key_out : out  std_logic_vector(31 downto 0);
      input_d_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_d_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_d_pipe_read_data : in   std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component password_sequence is -- 
    generic (tag_length : integer); 
    port ( -- 
      input_d_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_d_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_d_pipe_read_data : in   std_logic_vector(7 downto 0);
      input_e_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_e_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_e_pipe_read_data : in   std_logic_vector(7 downto 0);
      out_e_pipe_write_req : out  std_logic_vector(0 downto 0);
      out_e_pipe_write_ack : in   std_logic_vector(0 downto 0);
      out_e_pipe_write_data : out  std_logic_vector(7 downto 0);
      out_d_pipe_write_req : out  std_logic_vector(0 downto 0);
      out_d_pipe_write_ack : in   std_logic_vector(0 downto 0);
      out_d_pipe_write_data : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component handshaking is -- 
    generic (tag_length : integer); 
    port ( -- 
      input_d_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_d_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_d_pipe_read_data : in   std_logic_vector(7 downto 0);
      out_e_pipe_write_req : out  std_logic_vector(0 downto 0);
      out_e_pipe_write_ack : in   std_logic_vector(0 downto 0);
      out_e_pipe_write_data : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component set_rcon is -- 
    generic (tag_length : integer); 
    port ( -- 
      memory_space_1_sr_req : out  std_logic_vector(0 downto 0);
      memory_space_1_sr_ack : in   std_logic_vector(0 downto 0);
      memory_space_1_sr_addr : out  std_logic_vector(3 downto 0);
      memory_space_1_sr_data : out  std_logic_vector(31 downto 0);
      memory_space_1_sr_tag :  out  std_logic_vector(17 downto 0);
      memory_space_1_sc_req : out  std_logic_vector(0 downto 0);
      memory_space_1_sc_ack : in   std_logic_vector(0 downto 0);
      memory_space_1_sc_tag :  in  std_logic_vector(0 downto 0);
      input_e_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_e_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_e_pipe_read_data : in   std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component set_sbox is -- 
    generic (tag_length : integer); 
    port ( -- 
      memory_space_2_sr_req : out  std_logic_vector(0 downto 0);
      memory_space_2_sr_ack : in   std_logic_vector(0 downto 0);
      memory_space_2_sr_addr : out  std_logic_vector(7 downto 0);
      memory_space_2_sr_data : out  std_logic_vector(7 downto 0);
      memory_space_2_sr_tag :  out  std_logic_vector(17 downto 0);
      memory_space_2_sc_req : out  std_logic_vector(0 downto 0);
      memory_space_2_sc_ack : in   std_logic_vector(0 downto 0);
      memory_space_2_sc_tag :  in  std_logic_vector(0 downto 0);
      input_e_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_e_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_e_pipe_read_data : in   std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal W_a_1_1708_inst_req_1 : boolean;
  signal W_a_0_1700_inst_req_0 : boolean;
  signal call_stmt_1712_call_ack_0 : boolean;
  signal W_a_0_1700_inst_ack_0 : boolean;
  signal call_stmt_1712_call_req_1 : boolean;
  signal W_k_2_1713_inst_ack_0 : boolean;
  signal W_a_0_1700_inst_req_1 : boolean;
  signal call_stmt_1693_call_req_1 : boolean;
  signal call_stmt_1692_call_req_0 : boolean;
  signal call_stmt_1692_call_ack_0 : boolean;
  signal W_a_0_1700_inst_ack_1 : boolean;
  signal W_a_1_1708_inst_ack_1 : boolean;
  signal W_a_1_1708_inst_req_0 : boolean;
  signal call_stmt_1694_call_ack_1 : boolean;
  signal call_stmt_1712_call_req_0 : boolean;
  signal call_stmt_1704_call_req_0 : boolean;
  signal call_stmt_1704_call_ack_0 : boolean;
  signal call_stmt_1704_call_req_1 : boolean;
  signal call_stmt_1704_call_ack_1 : boolean;
  signal W_k_2_1713_inst_req_1 : boolean;
  signal call_stmt_1692_call_req_1 : boolean;
  signal W_k_2_1713_inst_ack_1 : boolean;
  signal call_stmt_1693_call_req_0 : boolean;
  signal W_k_2_1713_inst_req_0 : boolean;
  signal call_stmt_1692_call_ack_1 : boolean;
  signal call_stmt_1694_call_req_0 : boolean;
  signal call_stmt_1693_call_ack_0 : boolean;
  signal call_stmt_1693_call_ack_1 : boolean;
  signal call_stmt_1694_call_ack_0 : boolean;
  signal call_stmt_1694_call_req_1 : boolean;
  signal W_k_1_1705_inst_req_0 : boolean;
  signal W_k_1_1705_inst_ack_0 : boolean;
  signal W_k_1_1705_inst_req_1 : boolean;
  signal W_k_1_1705_inst_ack_1 : boolean;
  signal call_stmt_1712_call_ack_1 : boolean;
  signal W_k_3_1721_inst_ack_0 : boolean;
  signal W_a_2_1716_inst_ack_0 : boolean;
  signal call_stmt_1736_call_req_0 : boolean;
  signal call_stmt_1736_call_ack_0 : boolean;
  signal call_stmt_1736_call_req_1 : boolean;
  signal call_stmt_1720_call_ack_0 : boolean;
  signal W_k_0_1697_inst_ack_1 : boolean;
  signal W_k_0_1697_inst_req_1 : boolean;
  signal W_k_0_1697_inst_ack_0 : boolean;
  signal W_k_0_1697_inst_req_0 : boolean;
  signal call_stmt_1696_call_ack_1 : boolean;
  signal call_stmt_1696_call_req_1 : boolean;
  signal call_stmt_1696_call_ack_0 : boolean;
  signal call_stmt_1696_call_req_0 : boolean;
  signal W_a_2_1716_inst_req_0 : boolean;
  signal W_a_2_1716_inst_req_1 : boolean;
  signal W_a_2_1716_inst_ack_1 : boolean;
  signal W_a_3_1724_inst_ack_1 : boolean;
  signal W_a_3_1724_inst_req_1 : boolean;
  signal W_a_3_1724_inst_ack_0 : boolean;
  signal call_stmt_1736_call_ack_1 : boolean;
  signal W_k_3_1721_inst_req_0 : boolean;
  signal call_stmt_1720_call_req_1 : boolean;
  signal W_a_1_1708_inst_ack_0 : boolean;
  signal W_k_3_1721_inst_ack_1 : boolean;
  signal W_k_3_1721_inst_req_1 : boolean;
  signal call_stmt_1720_call_ack_1 : boolean;
  signal W_a_3_1724_inst_req_0 : boolean;
  signal CONCAT_u64_u128_1753_inst_req_0 : boolean;
  signal CONCAT_u64_u128_1753_inst_ack_0 : boolean;
  signal CONCAT_u64_u128_1753_inst_req_1 : boolean;
  signal CONCAT_u64_u128_1744_inst_req_0 : boolean;
  signal CONCAT_u64_u128_1744_inst_ack_0 : boolean;
  signal CONCAT_u64_u128_1744_inst_req_1 : boolean;
  signal CONCAT_u64_u128_1744_inst_ack_1 : boolean;
  signal call_stmt_1720_call_req_0 : boolean;
  signal CONCAT_u64_u128_1753_inst_ack_1 : boolean;
  signal STORE_check_1755_store_0_req_0 : boolean;
  signal STORE_check_1755_store_0_ack_0 : boolean;
  signal STORE_check_1755_store_0_req_1 : boolean;
  signal STORE_check_1755_store_0_ack_1 : boolean;
  signal call_stmt_1758_call_req_0 : boolean;
  signal call_stmt_1758_call_ack_0 : boolean;
  signal call_stmt_1758_call_req_1 : boolean;
  signal call_stmt_1758_call_ack_1 : boolean;
  signal call_stmt_1765_call_req_0 : boolean;
  signal call_stmt_1765_call_ack_0 : boolean;
  signal call_stmt_1765_call_req_1 : boolean;
  signal call_stmt_1765_call_ack_1 : boolean;
  signal call_stmt_1771_call_req_0 : boolean;
  signal call_stmt_1771_call_ack_0 : boolean;
  signal call_stmt_1771_call_req_1 : boolean;
  signal call_stmt_1771_call_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "top_module_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  top_module_CP_6290_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "top_module_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= top_module_CP_6290_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= top_module_CP_6290_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= top_module_CP_6290_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  top_module_CP_6290: Block -- control-path 
    signal top_module_CP_6290_elements: BooleanArray(50 downto 0);
    -- 
  begin -- 
    top_module_CP_6290_elements(0) <= top_module_CP_6290_start;
    top_module_CP_6290_symbol <= top_module_CP_6290_elements(50);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	12 
    -- CP-element group 0: 	14 
    -- CP-element group 0: 	16 
    -- CP-element group 0: 	26 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	35 
    -- CP-element group 0: 	37 
    -- CP-element group 0: 	18 
    -- CP-element group 0: 	20 
    -- CP-element group 0: 	33 
    -- CP-element group 0: 	42 
    -- CP-element group 0: 	28 
    -- CP-element group 0: 	30 
    -- CP-element group 0: 	38 
    -- CP-element group 0: 	39 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	8 
    -- CP-element group 0: 	10 
    -- CP-element group 0: 	22 
    -- CP-element group 0: 	24 
    -- CP-element group 0:  members (78) 
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1710_Update/req
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1694_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1702_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1702_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1712_Update/ccr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1718_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1702_Update/req
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1694_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_Update/ccr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_Sample/crr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1696_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1704_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1704_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1704_Update/ccr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1715_Update/req
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_Update/ccr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1710_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1707_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1694_Update/ccr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1707_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1707_Update/req
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1712_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1736_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1736_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1736_Update/ccr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1712_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1723_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_Sample/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1715_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1699_Update/req
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1699_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1720_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1744_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1720_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1699_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1696_Update/ccr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1696_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1710_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1718_Update/req
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1726_Update/req
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1726_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1726_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1723_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1720_Update/ccr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1715_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_sample_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1723_Update/req
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/$entry
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1718_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1753_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1753_Update/cr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1744_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1744_Update/cr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1753_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_sample_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_word_address_calculated
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_root_address_calculated
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Sample/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Sample/STORE_check_1755_Split/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Sample/STORE_check_1755_Split/$exit
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Sample/STORE_check_1755_Split/split_req
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Sample/STORE_check_1755_Split/split_ack
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Sample/word_access_start/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Sample/word_access_start/word_0/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Sample/word_access_start/word_0/rr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Update/word_access_complete/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Update/word_access_complete/word_0/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Update/word_access_complete/word_0/cr
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1758_update_start_
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1758_Update/$entry
      -- CP-element group 0: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1758_Update/ccr
      -- 
    req_6378_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6378_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => W_a_0_1700_inst_req_1); -- 
    ccr_6392_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_6392_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => call_stmt_1704_call_req_1); -- 
    req_6406_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6406_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => W_k_1_1705_inst_req_1); -- 
    req_6490_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6490_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => W_k_3_1721_inst_req_1); -- 
    crr_6303_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_6303_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => call_stmt_1692_call_req_0); -- 
    ccr_6308_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_6308_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => call_stmt_1692_call_req_1); -- 
    ccr_6322_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_6322_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => call_stmt_1693_call_req_1); -- 
    cr_6546_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_6546_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => CONCAT_u64_u128_1753_inst_req_1); -- 
    cr_6579_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_6579_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => STORE_check_1755_store_0_req_1); -- 
    req_6420_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6420_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => W_a_1_1708_inst_req_1); -- 
    ccr_6434_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_6434_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => call_stmt_1712_call_req_1); -- 
    req_6448_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6448_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => W_k_2_1713_inst_req_1); -- 
    cr_6532_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_6532_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => CONCAT_u64_u128_1744_inst_req_1); -- 
    ccr_6593_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_6593_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => call_stmt_1758_call_req_1); -- 
    req_6504_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6504_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => W_a_3_1724_inst_req_1); -- 
    ccr_6518_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_6518_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => call_stmt_1736_call_req_1); -- 
    rr_6568_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_6568_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => STORE_check_1755_store_0_req_0); -- 
    ccr_6336_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_6336_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => call_stmt_1694_call_req_1); -- 
    ccr_6350_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_6350_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => call_stmt_1696_call_req_1); -- 
    req_6364_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6364_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => W_k_0_1697_inst_req_1); -- 
    req_6462_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6462_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => W_a_2_1716_inst_req_1); -- 
    ccr_6476_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_6476_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(0), ack => call_stmt_1720_call_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_Sample/$exit
      -- CP-element group 1: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_Sample/cra
      -- CP-element group 1: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_sample_completed_
      -- 
    cra_6304_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1692_call_ack_0, ack => top_module_CP_6290_elements(1)); -- 
    -- CP-element group 2:  fork  transition  input  output  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	3 
    -- CP-element group 2: 	44 
    -- CP-element group 2:  members (6) 
      -- CP-element group 2: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_Sample/$entry
      -- CP-element group 2: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_Update/$exit
      -- CP-element group 2: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_Sample/crr
      -- CP-element group 2: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_Update/cca
      -- CP-element group 2: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_sample_start_
      -- CP-element group 2: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_update_completed_
      -- 
    cca_6309_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1692_call_ack_1, ack => top_module_CP_6290_elements(2)); -- 
    crr_6317_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_6317_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(2), ack => call_stmt_1693_call_req_0); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	2 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_Sample/$exit
      -- CP-element group 3: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_sample_completed_
      -- CP-element group 3: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_Sample/cra
      -- 
    cra_6318_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1693_call_ack_0, ack => top_module_CP_6290_elements(3)); -- 
    -- CP-element group 4:  fork  transition  input  output  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	43 
    -- CP-element group 4: 	5 
    -- CP-element group 4:  members (6) 
      -- CP-element group 4: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_update_completed_
      -- CP-element group 4: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1694_Sample/crr
      -- CP-element group 4: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_Update/cca
      -- CP-element group 4: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1694_Sample/$entry
      -- CP-element group 4: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_Update/$exit
      -- CP-element group 4: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1694_sample_start_
      -- 
    cca_6323_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1693_call_ack_1, ack => top_module_CP_6290_elements(4)); -- 
    crr_6331_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_6331_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(4), ack => call_stmt_1694_call_req_0); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	4 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1694_Sample/$exit
      -- CP-element group 5: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1694_Sample/cra
      -- CP-element group 5: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1694_sample_completed_
      -- 
    cra_6332_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1694_call_ack_0, ack => top_module_CP_6290_elements(5)); -- 
    -- CP-element group 6:  fork  transition  input  output  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	40 
    -- CP-element group 6: 	7 
    -- CP-element group 6:  members (6) 
      -- CP-element group 6: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1696_sample_start_
      -- CP-element group 6: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1694_Update/cca
      -- CP-element group 6: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1694_update_completed_
      -- CP-element group 6: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1694_Update/$exit
      -- CP-element group 6: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1696_Sample/crr
      -- CP-element group 6: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1696_Sample/$entry
      -- 
    cca_6337_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1694_call_ack_1, ack => top_module_CP_6290_elements(6)); -- 
    crr_6345_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_6345_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(6), ack => call_stmt_1696_call_req_0); -- 
    -- CP-element group 7:  transition  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	6 
    -- CP-element group 7: successors 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1696_sample_completed_
      -- CP-element group 7: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1696_Sample/cra
      -- CP-element group 7: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1696_Sample/$exit
      -- 
    cra_6346_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1696_call_ack_0, ack => top_module_CP_6290_elements(7)); -- 
    -- CP-element group 8:  fork  transition  input  output  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	0 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	11 
    -- CP-element group 8: 	13 
    -- CP-element group 8: 	9 
    -- CP-element group 8:  members (12) 
      -- CP-element group 8: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1702_Sample/$entry
      -- CP-element group 8: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1702_Sample/req
      -- CP-element group 8: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1704_sample_start_
      -- CP-element group 8: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1704_Sample/$entry
      -- CP-element group 8: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1704_Sample/crr
      -- CP-element group 8: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1696_update_completed_
      -- CP-element group 8: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1702_sample_start_
      -- CP-element group 8: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1699_Sample/req
      -- CP-element group 8: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1699_Sample/$entry
      -- CP-element group 8: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1699_sample_start_
      -- CP-element group 8: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1696_Update/cca
      -- CP-element group 8: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1696_Update/$exit
      -- 
    cca_6351_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1696_call_ack_1, ack => top_module_CP_6290_elements(8)); -- 
    req_6373_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6373_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(8), ack => W_a_0_1700_inst_req_0); -- 
    crr_6387_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_6387_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(8), ack => call_stmt_1704_call_req_0); -- 
    req_6359_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6359_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(8), ack => W_k_0_1697_inst_req_0); -- 
    -- CP-element group 9:  transition  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	8 
    -- CP-element group 9: successors 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1699_Sample/ack
      -- CP-element group 9: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1699_Sample/$exit
      -- CP-element group 9: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1699_sample_completed_
      -- 
    ack_6360_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_k_0_1697_inst_ack_0, ack => top_module_CP_6290_elements(9)); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	0 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	31 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1699_Update/ack
      -- CP-element group 10: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1699_Update/$exit
      -- CP-element group 10: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1699_update_completed_
      -- 
    ack_6365_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_k_0_1697_inst_ack_1, ack => top_module_CP_6290_elements(10)); -- 
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	8 
    -- CP-element group 11: successors 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1702_Sample/$exit
      -- CP-element group 11: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1702_Sample/ack
      -- CP-element group 11: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1702_sample_completed_
      -- 
    ack_6374_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_a_0_1700_inst_ack_0, ack => top_module_CP_6290_elements(11)); -- 
    -- CP-element group 12:  transition  input  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	0 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	45 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1702_update_completed_
      -- CP-element group 12: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1702_Update/$exit
      -- CP-element group 12: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1702_Update/ack
      -- 
    ack_6379_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_a_0_1700_inst_ack_1, ack => top_module_CP_6290_elements(12)); -- 
    -- CP-element group 13:  transition  input  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	8 
    -- CP-element group 13: successors 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1704_sample_completed_
      -- CP-element group 13: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1704_Sample/$exit
      -- CP-element group 13: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1704_Sample/cra
      -- 
    cra_6388_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1704_call_ack_0, ack => top_module_CP_6290_elements(13)); -- 
    -- CP-element group 14:  fork  transition  input  output  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	0 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	15 
    -- CP-element group 14: 	17 
    -- CP-element group 14: 	19 
    -- CP-element group 14:  members (12) 
      -- CP-element group 14: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1712_sample_start_
      -- CP-element group 14: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1710_sample_start_
      -- CP-element group 14: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1710_Sample/req
      -- CP-element group 14: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1704_update_completed_
      -- CP-element group 14: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1712_Sample/crr
      -- CP-element group 14: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1704_Update/$exit
      -- CP-element group 14: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1704_Update/cca
      -- CP-element group 14: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1707_sample_start_
      -- CP-element group 14: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1710_Sample/$entry
      -- CP-element group 14: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1707_Sample/$entry
      -- CP-element group 14: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1707_Sample/req
      -- CP-element group 14: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1712_Sample/$entry
      -- 
    cca_6393_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1704_call_ack_1, ack => top_module_CP_6290_elements(14)); -- 
    req_6401_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6401_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(14), ack => W_k_1_1705_inst_req_0); -- 
    req_6415_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6415_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(14), ack => W_a_1_1708_inst_req_0); -- 
    crr_6429_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_6429_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(14), ack => call_stmt_1712_call_req_0); -- 
    -- CP-element group 15:  transition  input  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	14 
    -- CP-element group 15: successors 
    -- CP-element group 15:  members (3) 
      -- CP-element group 15: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1707_sample_completed_
      -- CP-element group 15: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1707_Sample/$exit
      -- CP-element group 15: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1707_Sample/ack
      -- 
    ack_6402_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_k_1_1705_inst_ack_0, ack => top_module_CP_6290_elements(15)); -- 
    -- CP-element group 16:  transition  input  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	0 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	31 
    -- CP-element group 16:  members (3) 
      -- CP-element group 16: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1707_update_completed_
      -- CP-element group 16: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1707_Update/$exit
      -- CP-element group 16: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1707_Update/ack
      -- 
    ack_6407_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_k_1_1705_inst_ack_1, ack => top_module_CP_6290_elements(16)); -- 
    -- CP-element group 17:  transition  input  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	14 
    -- CP-element group 17: successors 
    -- CP-element group 17:  members (3) 
      -- CP-element group 17: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1710_sample_completed_
      -- CP-element group 17: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1710_Sample/$exit
      -- CP-element group 17: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1710_Sample/ack
      -- 
    ack_6416_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 17_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_a_1_1708_inst_ack_0, ack => top_module_CP_6290_elements(17)); -- 
    -- CP-element group 18:  transition  input  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	0 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	45 
    -- CP-element group 18:  members (3) 
      -- CP-element group 18: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1710_Update/ack
      -- CP-element group 18: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1710_update_completed_
      -- CP-element group 18: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1710_Update/$exit
      -- 
    ack_6421_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_a_1_1708_inst_ack_1, ack => top_module_CP_6290_elements(18)); -- 
    -- CP-element group 19:  transition  input  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	14 
    -- CP-element group 19: successors 
    -- CP-element group 19:  members (3) 
      -- CP-element group 19: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1712_Sample/cra
      -- CP-element group 19: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1712_sample_completed_
      -- CP-element group 19: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1712_Sample/$exit
      -- 
    cra_6430_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1712_call_ack_0, ack => top_module_CP_6290_elements(19)); -- 
    -- CP-element group 20:  fork  transition  input  output  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	0 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	25 
    -- CP-element group 20: 	21 
    -- CP-element group 20: 	23 
    -- CP-element group 20:  members (12) 
      -- CP-element group 20: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1712_Update/$exit
      -- CP-element group 20: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1715_sample_start_
      -- CP-element group 20: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1718_sample_start_
      -- CP-element group 20: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1715_Sample/req
      -- CP-element group 20: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1712_Update/cca
      -- CP-element group 20: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1715_Sample/$entry
      -- CP-element group 20: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1720_sample_start_
      -- CP-element group 20: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1718_Sample/req
      -- CP-element group 20: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1712_update_completed_
      -- CP-element group 20: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1720_Sample/$entry
      -- CP-element group 20: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1718_Sample/$entry
      -- CP-element group 20: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1720_Sample/crr
      -- 
    cca_6435_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 20_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1712_call_ack_1, ack => top_module_CP_6290_elements(20)); -- 
    req_6443_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6443_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(20), ack => W_k_2_1713_inst_req_0); -- 
    req_6457_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6457_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(20), ack => W_a_2_1716_inst_req_0); -- 
    crr_6471_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_6471_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(20), ack => call_stmt_1720_call_req_0); -- 
    -- CP-element group 21:  transition  input  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	20 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (3) 
      -- CP-element group 21: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1715_Sample/ack
      -- CP-element group 21: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1715_Sample/$exit
      -- CP-element group 21: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1715_sample_completed_
      -- 
    ack_6444_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_k_2_1713_inst_ack_0, ack => top_module_CP_6290_elements(21)); -- 
    -- CP-element group 22:  transition  input  bypass 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	0 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	31 
    -- CP-element group 22:  members (3) 
      -- CP-element group 22: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1715_Update/$exit
      -- CP-element group 22: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1715_update_completed_
      -- CP-element group 22: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1715_Update/ack
      -- 
    ack_6449_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 22_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_k_2_1713_inst_ack_1, ack => top_module_CP_6290_elements(22)); -- 
    -- CP-element group 23:  transition  input  bypass 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	20 
    -- CP-element group 23: successors 
    -- CP-element group 23:  members (3) 
      -- CP-element group 23: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1718_Sample/ack
      -- CP-element group 23: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1718_sample_completed_
      -- CP-element group 23: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1718_Sample/$exit
      -- 
    ack_6458_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 23_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_a_2_1716_inst_ack_0, ack => top_module_CP_6290_elements(23)); -- 
    -- CP-element group 24:  transition  input  bypass 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	0 
    -- CP-element group 24: successors 
    -- CP-element group 24: 	45 
    -- CP-element group 24:  members (3) 
      -- CP-element group 24: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1718_update_completed_
      -- CP-element group 24: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1718_Update/ack
      -- CP-element group 24: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1718_Update/$exit
      -- 
    ack_6463_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_a_2_1716_inst_ack_1, ack => top_module_CP_6290_elements(24)); -- 
    -- CP-element group 25:  transition  input  bypass 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	20 
    -- CP-element group 25: successors 
    -- CP-element group 25:  members (3) 
      -- CP-element group 25: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1720_Sample/cra
      -- CP-element group 25: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1720_sample_completed_
      -- CP-element group 25: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1720_Sample/$exit
      -- 
    cra_6472_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1720_call_ack_0, ack => top_module_CP_6290_elements(25)); -- 
    -- CP-element group 26:  fork  transition  input  output  bypass 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	0 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	27 
    -- CP-element group 26: 	40 
    -- CP-element group 26: 	29 
    -- CP-element group 26:  members (9) 
      -- CP-element group 26: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1720_update_completed_
      -- CP-element group 26: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1723_Sample/req
      -- CP-element group 26: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1723_Sample/$entry
      -- CP-element group 26: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1723_sample_start_
      -- CP-element group 26: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1726_sample_start_
      -- CP-element group 26: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1720_Update/$exit
      -- CP-element group 26: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1720_Update/cca
      -- CP-element group 26: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1726_Sample/req
      -- CP-element group 26: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1726_Sample/$entry
      -- 
    cca_6477_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 26_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1720_call_ack_1, ack => top_module_CP_6290_elements(26)); -- 
    req_6485_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6485_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(26), ack => W_k_3_1721_inst_req_0); -- 
    req_6499_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_6499_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(26), ack => W_a_3_1724_inst_req_0); -- 
    -- CP-element group 27:  transition  input  bypass 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	26 
    -- CP-element group 27: successors 
    -- CP-element group 27:  members (3) 
      -- CP-element group 27: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1723_Sample/ack
      -- CP-element group 27: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1723_Sample/$exit
      -- CP-element group 27: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1723_sample_completed_
      -- 
    ack_6486_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 27_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_k_3_1721_inst_ack_0, ack => top_module_CP_6290_elements(27)); -- 
    -- CP-element group 28:  transition  input  bypass 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	0 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	31 
    -- CP-element group 28:  members (3) 
      -- CP-element group 28: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1723_update_completed_
      -- CP-element group 28: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1723_Update/ack
      -- CP-element group 28: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1723_Update/$exit
      -- 
    ack_6491_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 28_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_k_3_1721_inst_ack_1, ack => top_module_CP_6290_elements(28)); -- 
    -- CP-element group 29:  transition  input  bypass 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	26 
    -- CP-element group 29: successors 
    -- CP-element group 29:  members (3) 
      -- CP-element group 29: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1726_Sample/ack
      -- CP-element group 29: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1726_sample_completed_
      -- CP-element group 29: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1726_Sample/$exit
      -- 
    ack_6500_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 29_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_a_3_1724_inst_ack_0, ack => top_module_CP_6290_elements(29)); -- 
    -- CP-element group 30:  transition  input  bypass 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	0 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	45 
    -- CP-element group 30:  members (3) 
      -- CP-element group 30: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1726_update_completed_
      -- CP-element group 30: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1726_Update/ack
      -- CP-element group 30: 	 call_stmt_1692_to_call_stmt_1758/assign_stmt_1726_Update/$exit
      -- 
    ack_6505_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 30_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_a_3_1724_inst_ack_1, ack => top_module_CP_6290_elements(30)); -- 
    -- CP-element group 31:  join  transition  output  bypass 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	16 
    -- CP-element group 31: 	43 
    -- CP-element group 31: 	44 
    -- CP-element group 31: 	28 
    -- CP-element group 31: 	10 
    -- CP-element group 31: 	22 
    -- CP-element group 31: successors 
    -- CP-element group 31: 	32 
    -- CP-element group 31:  members (3) 
      -- CP-element group 31: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1736_sample_start_
      -- CP-element group 31: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1736_Sample/$entry
      -- CP-element group 31: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1736_Sample/crr
      -- 
    crr_6513_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_6513_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(31), ack => call_stmt_1736_call_req_0); -- 
    top_module_cp_element_group_31: block -- 
      constant place_capacities: IntegerArray(0 to 5) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1);
      constant place_markings: IntegerArray(0 to 5)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0);
      constant place_delays: IntegerArray(0 to 5) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0);
      constant joinName: string(1 to 30) := "top_module_cp_element_group_31"; 
      signal preds: BooleanArray(1 to 6); -- 
    begin -- 
      preds <= top_module_CP_6290_elements(16) & top_module_CP_6290_elements(43) & top_module_CP_6290_elements(44) & top_module_CP_6290_elements(28) & top_module_CP_6290_elements(10) & top_module_CP_6290_elements(22);
      gj_top_module_cp_element_group_31 : generic_join generic map(name => joinName, number_of_predecessors => 6, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => top_module_CP_6290_elements(31), clk => clk, reset => reset); --
    end block;
    -- CP-element group 32:  transition  input  bypass 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	31 
    -- CP-element group 32: successors 
    -- CP-element group 32:  members (3) 
      -- CP-element group 32: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1736_sample_completed_
      -- CP-element group 32: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1736_Sample/$exit
      -- CP-element group 32: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1736_Sample/cra
      -- 
    cra_6514_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 32_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1736_call_ack_0, ack => top_module_CP_6290_elements(32)); -- 
    -- CP-element group 33:  fork  transition  input  output  bypass 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	0 
    -- CP-element group 33: successors 
    -- CP-element group 33: 	36 
    -- CP-element group 33: 	34 
    -- CP-element group 33:  members (9) 
      -- CP-element group 33: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1736_update_completed_
      -- CP-element group 33: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1736_Update/$exit
      -- CP-element group 33: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1744_sample_start_
      -- CP-element group 33: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1736_Update/cca
      -- CP-element group 33: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1744_Sample/$entry
      -- CP-element group 33: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1753_Sample/$entry
      -- CP-element group 33: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1753_Sample/rr
      -- CP-element group 33: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1744_Sample/rr
      -- CP-element group 33: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1753_sample_start_
      -- 
    cca_6519_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 33_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1736_call_ack_1, ack => top_module_CP_6290_elements(33)); -- 
    rr_6541_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_6541_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(33), ack => CONCAT_u64_u128_1753_inst_req_0); -- 
    rr_6527_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_6527_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(33), ack => CONCAT_u64_u128_1744_inst_req_0); -- 
    -- CP-element group 34:  transition  input  bypass 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	33 
    -- CP-element group 34: successors 
    -- CP-element group 34:  members (3) 
      -- CP-element group 34: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1744_sample_completed_
      -- CP-element group 34: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1744_Sample/$exit
      -- CP-element group 34: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1744_Sample/ra
      -- 
    ra_6528_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u64_u128_1744_inst_ack_0, ack => top_module_CP_6290_elements(34)); -- 
    -- CP-element group 35:  transition  input  bypass 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	0 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	45 
    -- CP-element group 35:  members (3) 
      -- CP-element group 35: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1744_update_completed_
      -- CP-element group 35: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1744_Update/$exit
      -- CP-element group 35: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1744_Update/ca
      -- 
    ca_6533_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 35_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u64_u128_1744_inst_ack_1, ack => top_module_CP_6290_elements(35)); -- 
    -- CP-element group 36:  transition  input  bypass 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	33 
    -- CP-element group 36: successors 
    -- CP-element group 36:  members (3) 
      -- CP-element group 36: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1753_Sample/$exit
      -- CP-element group 36: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1753_Sample/ra
      -- CP-element group 36: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1753_sample_completed_
      -- 
    ra_6542_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u64_u128_1753_inst_ack_0, ack => top_module_CP_6290_elements(36)); -- 
    -- CP-element group 37:  transition  input  bypass 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	0 
    -- CP-element group 37: successors 
    -- CP-element group 37: 	45 
    -- CP-element group 37:  members (3) 
      -- CP-element group 37: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1753_Update/$exit
      -- CP-element group 37: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1753_update_completed_
      -- CP-element group 37: 	 call_stmt_1692_to_call_stmt_1758/CONCAT_u64_u128_1753_Update/ca
      -- 
    ca_6547_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u64_u128_1753_inst_ack_1, ack => top_module_CP_6290_elements(37)); -- 
    -- CP-element group 38:  transition  input  bypass 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	0 
    -- CP-element group 38: successors 
    -- CP-element group 38:  members (5) 
      -- CP-element group 38: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_sample_completed_
      -- CP-element group 38: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Sample/$exit
      -- CP-element group 38: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Sample/word_access_start/$exit
      -- CP-element group 38: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Sample/word_access_start/word_0/$exit
      -- CP-element group 38: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Sample/word_access_start/word_0/ra
      -- 
    ra_6569_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 38_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => STORE_check_1755_store_0_ack_0, ack => top_module_CP_6290_elements(38)); -- 
    -- CP-element group 39:  transition  input  bypass 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	0 
    -- CP-element group 39: successors 
    -- CP-element group 39: 	45 
    -- CP-element group 39:  members (5) 
      -- CP-element group 39: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_update_completed_
      -- CP-element group 39: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Update/$exit
      -- CP-element group 39: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Update/word_access_complete/$exit
      -- CP-element group 39: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Update/word_access_complete/word_0/$exit
      -- CP-element group 39: 	 call_stmt_1692_to_call_stmt_1758/STORE_check_1755_Update/word_access_complete/word_0/ca
      -- 
    ca_6580_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 39_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => STORE_check_1755_store_0_ack_1, ack => top_module_CP_6290_elements(39)); -- 
    -- CP-element group 40:  join  transition  output  bypass 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	26 
    -- CP-element group 40: 	6 
    -- CP-element group 40: successors 
    -- CP-element group 40: 	41 
    -- CP-element group 40:  members (3) 
      -- CP-element group 40: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1758_sample_start_
      -- CP-element group 40: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1758_Sample/$entry
      -- CP-element group 40: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1758_Sample/crr
      -- 
    crr_6588_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_6588_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(40), ack => call_stmt_1758_call_req_0); -- 
    top_module_cp_element_group_40: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "top_module_cp_element_group_40"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= top_module_CP_6290_elements(26) & top_module_CP_6290_elements(6);
      gj_top_module_cp_element_group_40 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => top_module_CP_6290_elements(40), clk => clk, reset => reset); --
    end block;
    -- CP-element group 41:  transition  input  bypass 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	40 
    -- CP-element group 41: successors 
    -- CP-element group 41:  members (3) 
      -- CP-element group 41: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1758_sample_completed_
      -- CP-element group 41: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1758_Sample/$exit
      -- CP-element group 41: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1758_Sample/cra
      -- 
    cra_6589_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 41_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1758_call_ack_0, ack => top_module_CP_6290_elements(41)); -- 
    -- CP-element group 42:  transition  input  bypass 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	0 
    -- CP-element group 42: successors 
    -- CP-element group 42: 	45 
    -- CP-element group 42:  members (3) 
      -- CP-element group 42: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1758_update_completed_
      -- CP-element group 42: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1758_Update/$exit
      -- CP-element group 42: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1758_Update/cca
      -- 
    cca_6594_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 42_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1758_call_ack_1, ack => top_module_CP_6290_elements(42)); -- 
    -- CP-element group 43:  transition  delay-element  bypass 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	4 
    -- CP-element group 43: successors 
    -- CP-element group 43: 	31 
    -- CP-element group 43:  members (1) 
      -- CP-element group 43: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1693_call_stmt_1736_delay
      -- 
    -- Element group top_module_CP_6290_elements(43) is a control-delay.
    cp_element_43_delay: control_delay_element  generic map(name => " 43_delay", delay_value => 1)  port map(req => top_module_CP_6290_elements(4), ack => top_module_CP_6290_elements(43), clk => clk, reset =>reset);
    -- CP-element group 44:  transition  delay-element  bypass 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	2 
    -- CP-element group 44: successors 
    -- CP-element group 44: 	31 
    -- CP-element group 44:  members (1) 
      -- CP-element group 44: 	 call_stmt_1692_to_call_stmt_1758/call_stmt_1692_call_stmt_1736_delay
      -- 
    -- Element group top_module_CP_6290_elements(44) is a control-delay.
    cp_element_44_delay: control_delay_element  generic map(name => " 44_delay", delay_value => 1)  port map(req => top_module_CP_6290_elements(2), ack => top_module_CP_6290_elements(44), clk => clk, reset =>reset);
    -- CP-element group 45:  join  fork  transition  output  bypass 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	12 
    -- CP-element group 45: 	35 
    -- CP-element group 45: 	37 
    -- CP-element group 45: 	18 
    -- CP-element group 45: 	42 
    -- CP-element group 45: 	30 
    -- CP-element group 45: 	39 
    -- CP-element group 45: 	24 
    -- CP-element group 45: successors 
    -- CP-element group 45: 	46 
    -- CP-element group 45: 	47 
    -- CP-element group 45: 	48 
    -- CP-element group 45: 	49 
    -- CP-element group 45:  members (16) 
      -- CP-element group 45: 	 call_stmt_1692_to_call_stmt_1758/$exit
      -- CP-element group 45: 	 parallel_block_stmt_1759/$entry
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1765/$entry
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1765/call_stmt_1765_sample_start_
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1765/call_stmt_1765_update_start_
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1765/call_stmt_1765_Sample/$entry
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1765/call_stmt_1765_Sample/crr
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1765/call_stmt_1765_Update/$entry
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1765/call_stmt_1765_Update/ccr
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1771/$entry
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1771/call_stmt_1771_sample_start_
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1771/call_stmt_1771_update_start_
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1771/call_stmt_1771_Sample/$entry
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1771/call_stmt_1771_Sample/crr
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1771/call_stmt_1771_Update/$entry
      -- CP-element group 45: 	 parallel_block_stmt_1759/call_stmt_1771/call_stmt_1771_Update/ccr
      -- 
    crr_6610_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_6610_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(45), ack => call_stmt_1765_call_req_0); -- 
    ccr_6615_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_6615_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(45), ack => call_stmt_1765_call_req_1); -- 
    crr_6627_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_6627_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(45), ack => call_stmt_1771_call_req_0); -- 
    ccr_6632_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_6632_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => top_module_CP_6290_elements(45), ack => call_stmt_1771_call_req_1); -- 
    top_module_cp_element_group_45: block -- 
      constant place_capacities: IntegerArray(0 to 7) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1);
      constant place_markings: IntegerArray(0 to 7)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0);
      constant place_delays: IntegerArray(0 to 7) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0);
      constant joinName: string(1 to 30) := "top_module_cp_element_group_45"; 
      signal preds: BooleanArray(1 to 8); -- 
    begin -- 
      preds <= top_module_CP_6290_elements(12) & top_module_CP_6290_elements(35) & top_module_CP_6290_elements(37) & top_module_CP_6290_elements(18) & top_module_CP_6290_elements(42) & top_module_CP_6290_elements(30) & top_module_CP_6290_elements(39) & top_module_CP_6290_elements(24);
      gj_top_module_cp_element_group_45 : generic_join generic map(name => joinName, number_of_predecessors => 8, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => top_module_CP_6290_elements(45), clk => clk, reset => reset); --
    end block;
    -- CP-element group 46:  transition  input  bypass 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	45 
    -- CP-element group 46: successors 
    -- CP-element group 46:  members (3) 
      -- CP-element group 46: 	 parallel_block_stmt_1759/call_stmt_1765/call_stmt_1765_sample_completed_
      -- CP-element group 46: 	 parallel_block_stmt_1759/call_stmt_1765/call_stmt_1765_Sample/$exit
      -- CP-element group 46: 	 parallel_block_stmt_1759/call_stmt_1765/call_stmt_1765_Sample/cra
      -- 
    cra_6611_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 46_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1765_call_ack_0, ack => top_module_CP_6290_elements(46)); -- 
    -- CP-element group 47:  transition  input  bypass 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	45 
    -- CP-element group 47: successors 
    -- CP-element group 47: 	50 
    -- CP-element group 47:  members (4) 
      -- CP-element group 47: 	 parallel_block_stmt_1759/call_stmt_1765/$exit
      -- CP-element group 47: 	 parallel_block_stmt_1759/call_stmt_1765/call_stmt_1765_update_completed_
      -- CP-element group 47: 	 parallel_block_stmt_1759/call_stmt_1765/call_stmt_1765_Update/$exit
      -- CP-element group 47: 	 parallel_block_stmt_1759/call_stmt_1765/call_stmt_1765_Update/cca
      -- 
    cca_6616_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 47_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1765_call_ack_1, ack => top_module_CP_6290_elements(47)); -- 
    -- CP-element group 48:  transition  input  bypass 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	45 
    -- CP-element group 48: successors 
    -- CP-element group 48:  members (3) 
      -- CP-element group 48: 	 parallel_block_stmt_1759/call_stmt_1771/call_stmt_1771_sample_completed_
      -- CP-element group 48: 	 parallel_block_stmt_1759/call_stmt_1771/call_stmt_1771_Sample/$exit
      -- CP-element group 48: 	 parallel_block_stmt_1759/call_stmt_1771/call_stmt_1771_Sample/cra
      -- 
    cra_6628_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 48_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1771_call_ack_0, ack => top_module_CP_6290_elements(48)); -- 
    -- CP-element group 49:  transition  input  bypass 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: 	45 
    -- CP-element group 49: successors 
    -- CP-element group 49: 	50 
    -- CP-element group 49:  members (4) 
      -- CP-element group 49: 	 parallel_block_stmt_1759/call_stmt_1771/$exit
      -- CP-element group 49: 	 parallel_block_stmt_1759/call_stmt_1771/call_stmt_1771_update_completed_
      -- CP-element group 49: 	 parallel_block_stmt_1759/call_stmt_1771/call_stmt_1771_Update/$exit
      -- CP-element group 49: 	 parallel_block_stmt_1759/call_stmt_1771/call_stmt_1771_Update/cca
      -- 
    cca_6633_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 49_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_1771_call_ack_1, ack => top_module_CP_6290_elements(49)); -- 
    -- CP-element group 50:  join  transition  bypass 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	47 
    -- CP-element group 50: 	49 
    -- CP-element group 50: successors 
    -- CP-element group 50:  members (2) 
      -- CP-element group 50: 	 $exit
      -- CP-element group 50: 	 parallel_block_stmt_1759/$exit
      -- 
    top_module_cp_element_group_50: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "top_module_cp_element_group_50"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= top_module_CP_6290_elements(47) & top_module_CP_6290_elements(49);
      gj_top_module_cp_element_group_50 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => top_module_CP_6290_elements(50), clk => clk, reset => reset); --
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal CONCAT_u32_u64_1740_wire : std_logic_vector(63 downto 0);
    signal CONCAT_u32_u64_1743_wire : std_logic_vector(63 downto 0);
    signal CONCAT_u32_u64_1749_wire : std_logic_vector(63 downto 0);
    signal CONCAT_u32_u64_1752_wire : std_logic_vector(63 downto 0);
    signal R_one_128_1731_wire_constant : std_logic_vector(127 downto 0);
    signal R_one_1bit_1756_wire_constant : std_logic_vector(0 downto 0);
    signal STORE_check_1755_data_0 : std_logic_vector(0 downto 0);
    signal STORE_check_1755_word_address_0 : std_logic_vector(0 downto 0);
    signal a_0_1702 : std_logic_vector(31 downto 0);
    signal a_1_1710 : std_logic_vector(31 downto 0);
    signal a_2_1718 : std_logic_vector(31 downto 0);
    signal a_3_1726 : std_logic_vector(31 downto 0);
    signal cnt_0_1736 : std_logic_vector(31 downto 0);
    signal cnt_1_1736 : std_logic_vector(31 downto 0);
    signal cnt_2_1736 : std_logic_vector(31 downto 0);
    signal cnt_3_1736 : std_logic_vector(31 downto 0);
    signal decry_counter_1754 : std_logic_vector(127 downto 0);
    signal encry_counter_1745 : std_logic_vector(127 downto 0);
    signal k_0_1699 : std_logic_vector(31 downto 0);
    signal k_1_1707 : std_logic_vector(31 downto 0);
    signal k_2_1715 : std_logic_vector(31 downto 0);
    signal k_3_1723 : std_logic_vector(31 downto 0);
    signal key_out_0_1696 : std_logic_vector(31 downto 0);
    signal key_out_1_1704 : std_logic_vector(31 downto 0);
    signal key_out_2_1712 : std_logic_vector(31 downto 0);
    signal key_out_3_1720 : std_logic_vector(31 downto 0);
    -- 
  begin -- 
    R_one_128_1731_wire_constant <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    R_one_1bit_1756_wire_constant <= "1";
    STORE_check_1755_word_address_0 <= "0";
    W_a_0_1700_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_a_0_1700_inst_req_0;
      W_a_0_1700_inst_ack_0<= wack(0);
      rreq(0) <= W_a_0_1700_inst_req_1;
      W_a_0_1700_inst_ack_1<= rack(0);
      W_a_0_1700_inst : InterlockBuffer generic map ( -- 
        name => "W_a_0_1700_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => key_out_0_1696,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => a_0_1702,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_a_1_1708_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_a_1_1708_inst_req_0;
      W_a_1_1708_inst_ack_0<= wack(0);
      rreq(0) <= W_a_1_1708_inst_req_1;
      W_a_1_1708_inst_ack_1<= rack(0);
      W_a_1_1708_inst : InterlockBuffer generic map ( -- 
        name => "W_a_1_1708_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => key_out_1_1704,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => a_1_1710,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_a_2_1716_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_a_2_1716_inst_req_0;
      W_a_2_1716_inst_ack_0<= wack(0);
      rreq(0) <= W_a_2_1716_inst_req_1;
      W_a_2_1716_inst_ack_1<= rack(0);
      W_a_2_1716_inst : InterlockBuffer generic map ( -- 
        name => "W_a_2_1716_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => key_out_2_1712,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => a_2_1718,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_a_3_1724_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_a_3_1724_inst_req_0;
      W_a_3_1724_inst_ack_0<= wack(0);
      rreq(0) <= W_a_3_1724_inst_req_1;
      W_a_3_1724_inst_ack_1<= rack(0);
      W_a_3_1724_inst : InterlockBuffer generic map ( -- 
        name => "W_a_3_1724_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => key_out_3_1720,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => a_3_1726,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_k_0_1697_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_k_0_1697_inst_req_0;
      W_k_0_1697_inst_ack_0<= wack(0);
      rreq(0) <= W_k_0_1697_inst_req_1;
      W_k_0_1697_inst_ack_1<= rack(0);
      W_k_0_1697_inst : InterlockBuffer generic map ( -- 
        name => "W_k_0_1697_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => key_out_0_1696,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => k_0_1699,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_k_1_1705_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_k_1_1705_inst_req_0;
      W_k_1_1705_inst_ack_0<= wack(0);
      rreq(0) <= W_k_1_1705_inst_req_1;
      W_k_1_1705_inst_ack_1<= rack(0);
      W_k_1_1705_inst : InterlockBuffer generic map ( -- 
        name => "W_k_1_1705_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => key_out_1_1704,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => k_1_1707,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_k_2_1713_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_k_2_1713_inst_req_0;
      W_k_2_1713_inst_ack_0<= wack(0);
      rreq(0) <= W_k_2_1713_inst_req_1;
      W_k_2_1713_inst_ack_1<= rack(0);
      W_k_2_1713_inst : InterlockBuffer generic map ( -- 
        name => "W_k_2_1713_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => key_out_2_1712,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => k_2_1715,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_k_3_1721_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_k_3_1721_inst_req_0;
      W_k_3_1721_inst_ack_0<= wack(0);
      rreq(0) <= W_k_3_1721_inst_req_1;
      W_k_3_1721_inst_ack_1<= rack(0);
      W_k_3_1721_inst : InterlockBuffer generic map ( -- 
        name => "W_k_3_1721_inst",
        buffer_size => 1,
        flow_through =>  false ,
        full_rate =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag => true 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => key_out_3_1720,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => k_3_1723,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    -- equivalence STORE_check_1755_gather_scatter
    process(R_one_1bit_1756_wire_constant) --
      variable iv : std_logic_vector(0 downto 0);
      variable ov : std_logic_vector(0 downto 0);
      -- 
    begin -- 
      ov := (others => '0');
      iv := R_one_1bit_1756_wire_constant;
      ov(0 downto 0) := iv;
      STORE_check_1755_data_0 <= ov(0 downto 0);
      --
    end process;
    -- binary operator CONCAT_u32_u64_1740_inst
    process(cnt_0_1736, cnt_1_1736) -- 
      variable tmp_var : std_logic_vector(63 downto 0); -- 
    begin -- 
      ApConcat_proc(cnt_0_1736, cnt_1_1736, tmp_var);
      CONCAT_u32_u64_1740_wire <= tmp_var; --
    end process;
    -- binary operator CONCAT_u32_u64_1743_inst
    process(cnt_2_1736, cnt_3_1736) -- 
      variable tmp_var : std_logic_vector(63 downto 0); -- 
    begin -- 
      ApConcat_proc(cnt_2_1736, cnt_3_1736, tmp_var);
      CONCAT_u32_u64_1743_wire <= tmp_var; --
    end process;
    -- binary operator CONCAT_u32_u64_1749_inst
    process(cnt_0_1736, cnt_1_1736) -- 
      variable tmp_var : std_logic_vector(63 downto 0); -- 
    begin -- 
      ApConcat_proc(cnt_0_1736, cnt_1_1736, tmp_var);
      CONCAT_u32_u64_1749_wire <= tmp_var; --
    end process;
    -- binary operator CONCAT_u32_u64_1752_inst
    process(cnt_2_1736, cnt_3_1736) -- 
      variable tmp_var : std_logic_vector(63 downto 0); -- 
    begin -- 
      ApConcat_proc(cnt_2_1736, cnt_3_1736, tmp_var);
      CONCAT_u32_u64_1752_wire <= tmp_var; --
    end process;
    -- shared split operator group (4) : CONCAT_u64_u128_1744_inst 
    ApConcat_group_4: Block -- 
      signal data_in: std_logic_vector(127 downto 0);
      signal data_out: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= CONCAT_u32_u64_1740_wire & CONCAT_u32_u64_1743_wire;
      encry_counter_1745 <= data_out(127 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u64_u128_1744_inst_req_0;
      CONCAT_u64_u128_1744_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u64_u128_1744_inst_req_1;
      CONCAT_u64_u128_1744_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_4_gI: SplitGuardInterface generic map(name => "ApConcat_group_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_4",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 64,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 64, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 128,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 4
    -- shared split operator group (5) : CONCAT_u64_u128_1753_inst 
    ApConcat_group_5: Block -- 
      signal data_in: std_logic_vector(127 downto 0);
      signal data_out: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= CONCAT_u32_u64_1749_wire & CONCAT_u32_u64_1752_wire;
      decry_counter_1754 <= data_out(127 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u64_u128_1753_inst_req_0;
      CONCAT_u64_u128_1753_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u64_u128_1753_inst_req_1;
      CONCAT_u64_u128_1753_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_5_gI: SplitGuardInterface generic map(name => "ApConcat_group_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_5",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 64,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 64, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 128,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 5
    -- shared store operator group (0) : STORE_check_1755_store_0 
    StoreGroup0: Block -- 
      signal addr_in: std_logic_vector(0 downto 0);
      signal data_in: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= STORE_check_1755_store_0_req_0;
      STORE_check_1755_store_0_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= STORE_check_1755_store_0_req_1;
      STORE_check_1755_store_0_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      StoreGroup0_gI: SplitGuardInterface generic map(name => "StoreGroup0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      addr_in <= STORE_check_1755_word_address_0;
      data_in <= STORE_check_1755_data_0;
      StoreReq: StoreReqSharedWithInputBuffers -- 
        generic map ( name => "StoreGroup0 Req ", addr_width => 1,
        data_width => 1,
        num_reqs => 1,
        tag_length => 2,
        time_stamp_width => 17,
        min_clock_period => false,
        input_buffering => inBUFs, 
        no_arbitration => false)
        port map (--
          reqL => reqL , 
          ackL => ackL , 
          addr => addr_in, 
          data => data_in, 
          mreq => memory_space_0_sr_req(0),
          mack => memory_space_0_sr_ack(0),
          maddr => memory_space_0_sr_addr(0 downto 0),
          mdata => memory_space_0_sr_data(0 downto 0),
          mtag => memory_space_0_sr_tag(18 downto 0),
          clk => clk, reset => reset -- 
        );--
      StoreComplete: StoreCompleteShared -- 
        generic map ( -- 
          name => "StoreGroup0 Complete ",
          num_reqs => 1,
          detailed_buffering_per_output => outBUFs,
          tag_length => 2 -- 
        )
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          mreq => memory_space_0_sc_req(0),
          mack => memory_space_0_sc_ack(0),
          mtag => memory_space_0_sc_tag(1 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- store group 0
    -- shared call operator group (0) : call_stmt_1692_call 
    set_sbox_call_group_0: Block -- 
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs: IntegerArray(0 downto 0) := (others => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_1692_call_req_0;
      call_stmt_1692_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_1692_call_req_1;
      call_stmt_1692_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      set_sbox_call_group_0_gI: SplitGuardInterface generic map(name => "set_sbox_call_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      CallReq: InputMuxBaseNoData -- 
        generic map (name => "InputMuxBaseNoData",
        twidth => 1,
        nreqs => 1,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          reqR => set_sbox_call_reqs(0),
          ackR => set_sbox_call_acks(0),
          tagR => set_sbox_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseNoData -- 
        generic map ( -- 
          detailed_buffering_per_output => outBUFs, 
          twidth => 1,
          name => "OutputDemuxBaseNoData",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          reqL => set_sbox_return_acks(0), -- cross-over
          ackL => set_sbox_return_reqs(0), -- cross-over
          tagL => set_sbox_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- shared call operator group (1) : call_stmt_1693_call 
    set_rcon_call_group_1: Block -- 
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs: IntegerArray(0 downto 0) := (others => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_1693_call_req_0;
      call_stmt_1693_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_1693_call_req_1;
      call_stmt_1693_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      set_rcon_call_group_1_gI: SplitGuardInterface generic map(name => "set_rcon_call_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      CallReq: InputMuxBaseNoData -- 
        generic map (name => "InputMuxBaseNoData",
        twidth => 1,
        nreqs => 1,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          reqR => set_rcon_call_reqs(0),
          ackR => set_rcon_call_acks(0),
          tagR => set_rcon_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseNoData -- 
        generic map ( -- 
          detailed_buffering_per_output => outBUFs, 
          twidth => 1,
          name => "OutputDemuxBaseNoData",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          reqL => set_rcon_return_acks(0), -- cross-over
          ackL => set_rcon_return_reqs(0), -- cross-over
          tagL => set_rcon_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 1
    -- shared call operator group (2) : call_stmt_1694_call 
    password_sequence_call_group_2: Block -- 
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs: IntegerArray(0 downto 0) := (others => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_1694_call_req_0;
      call_stmt_1694_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_1694_call_req_1;
      call_stmt_1694_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      password_sequence_call_group_2_gI: SplitGuardInterface generic map(name => "password_sequence_call_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      CallReq: InputMuxBaseNoData -- 
        generic map (name => "InputMuxBaseNoData",
        twidth => 1,
        nreqs => 1,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          reqR => password_sequence_call_reqs(0),
          ackR => password_sequence_call_acks(0),
          tagR => password_sequence_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseNoData -- 
        generic map ( -- 
          detailed_buffering_per_output => outBUFs, 
          twidth => 1,
          name => "OutputDemuxBaseNoData",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          reqL => password_sequence_return_acks(0), -- cross-over
          ackL => password_sequence_return_reqs(0), -- cross-over
          tagL => password_sequence_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 2
    -- shared call operator group (3) : call_stmt_1696_call call_stmt_1704_call call_stmt_1712_call call_stmt_1720_call 
    encryption_key_reception_call_group_3: Block -- 
      signal data_out: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 3 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 3 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant inBUFs : IntegerArray(3 downto 0) := (3 => 0, 2 => 0, 1 => 0, 0 => 0);
      constant outBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => false, 1 => false, 2 => false, 3 => false);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 2, 1 => 2, 2 => 2, 3 => 2);
      -- 
    begin -- 
      reqL_unguarded(3) <= call_stmt_1696_call_req_0;
      reqL_unguarded(2) <= call_stmt_1704_call_req_0;
      reqL_unguarded(1) <= call_stmt_1712_call_req_0;
      reqL_unguarded(0) <= call_stmt_1720_call_req_0;
      call_stmt_1696_call_ack_0 <= ackL_unguarded(3);
      call_stmt_1704_call_ack_0 <= ackL_unguarded(2);
      call_stmt_1712_call_ack_0 <= ackL_unguarded(1);
      call_stmt_1720_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(3) <= call_stmt_1696_call_req_1;
      reqR_unguarded(2) <= call_stmt_1704_call_req_1;
      reqR_unguarded(1) <= call_stmt_1712_call_req_1;
      reqR_unguarded(0) <= call_stmt_1720_call_req_1;
      call_stmt_1696_call_ack_1 <= ackR_unguarded(3);
      call_stmt_1704_call_ack_1 <= ackR_unguarded(2);
      call_stmt_1712_call_ack_1 <= ackR_unguarded(1);
      call_stmt_1720_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      guard_vector(3)  <=  '1';
      encryption_key_reception_call_group_3_accessRegulator_0: access_regulator_base generic map (name => "encryption_key_reception_call_group_3_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      encryption_key_reception_call_group_3_accessRegulator_1: access_regulator_base generic map (name => "encryption_key_reception_call_group_3_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      encryption_key_reception_call_group_3_accessRegulator_2: access_regulator_base generic map (name => "encryption_key_reception_call_group_3_accessRegulator_2", num_slots => 1) -- 
        port map (req => reqL_unregulated(2), -- 
          ack => ackL_unregulated(2),
          regulated_req => reqL(2),
          regulated_ack => ackL(2),
          release_req => reqR(2),
          release_ack => ackR(2),
          clk => clk, reset => reset); -- 
      encryption_key_reception_call_group_3_accessRegulator_3: access_regulator_base generic map (name => "encryption_key_reception_call_group_3_accessRegulator_3", num_slots => 1) -- 
        port map (req => reqL_unregulated(3), -- 
          ack => ackL_unregulated(3),
          regulated_req => reqL(3),
          regulated_ack => ackL(3),
          release_req => reqR(3),
          release_ack => ackR(3),
          clk => clk, reset => reset); -- 
      encryption_key_reception_call_group_3_gI: SplitGuardInterface generic map(name => "encryption_key_reception_call_group_3_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      key_out_0_1696 <= data_out(127 downto 96);
      key_out_1_1704 <= data_out(95 downto 64);
      key_out_2_1712 <= data_out(63 downto 32);
      key_out_3_1720 <= data_out(31 downto 0);
      CallReq: InputMuxBaseNoData -- 
        generic map (name => "InputMuxBaseNoData",
        twidth => 3,
        nreqs => 4,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          reqR => encryption_key_reception_call_reqs(0),
          ackR => encryption_key_reception_call_acks(0),
          tagR => encryption_key_reception_call_tag(2 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 32,
          owidth => 128,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 3,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 4) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => encryption_key_reception_return_acks(0), -- cross-over
          ackL => encryption_key_reception_return_reqs(0), -- cross-over
          dataL => encryption_key_reception_return_data(31 downto 0),
          tagL => encryption_key_reception_return_tag(2 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 3
    -- shared call operator group (4) : call_stmt_1736_call 
    counter_encry_call_group_4: Block -- 
      signal data_in: std_logic_vector(255 downto 0);
      signal data_out: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_1736_call_req_0;
      call_stmt_1736_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_1736_call_req_1;
      call_stmt_1736_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      counter_encry_call_group_4_gI: SplitGuardInterface generic map(name => "counter_encry_call_group_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= k_0_1699 & k_1_1707 & k_2_1715 & k_3_1723 & R_one_128_1731_wire_constant;
      cnt_0_1736 <= data_out(127 downto 96);
      cnt_1_1736 <= data_out(95 downto 64);
      cnt_2_1736 <= data_out(63 downto 32);
      cnt_3_1736 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 256,
        owidth => 256,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => counter_encry_call_reqs(0),
          ackR => counter_encry_call_acks(0),
          dataR => counter_encry_call_data(255 downto 0),
          tagR => counter_encry_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 128,
          owidth => 128,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => counter_encry_return_acks(0), -- cross-over
          ackL => counter_encry_return_reqs(0), -- cross-over
          dataL => counter_encry_return_data(127 downto 0),
          tagL => counter_encry_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 4
    -- shared call operator group (5) : call_stmt_1758_call 
    handshaking_call_group_5: Block -- 
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs: IntegerArray(0 downto 0) := (others => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_1758_call_req_0;
      call_stmt_1758_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_1758_call_req_1;
      call_stmt_1758_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      handshaking_call_group_5_gI: SplitGuardInterface generic map(name => "handshaking_call_group_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      CallReq: InputMuxBaseNoData -- 
        generic map (name => "InputMuxBaseNoData",
        twidth => 1,
        nreqs => 1,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          reqR => handshaking_call_reqs(0),
          ackR => handshaking_call_acks(0),
          tagR => handshaking_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseNoData -- 
        generic map ( -- 
          detailed_buffering_per_output => outBUFs, 
          twidth => 1,
          name => "OutputDemuxBaseNoData",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          reqL => handshaking_return_acks(0), -- cross-over
          ackL => handshaking_return_reqs(0), -- cross-over
          tagL => handshaking_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 5
    -- shared call operator group (6) : call_stmt_1765_call 
    encryption_engine_call_group_6: Block -- 
      signal data_in: std_logic_vector(255 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs: IntegerArray(0 downto 0) := (others => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_1765_call_req_0;
      call_stmt_1765_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_1765_call_req_1;
      call_stmt_1765_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      encryption_engine_call_group_6_gI: SplitGuardInterface generic map(name => "encryption_engine_call_group_6_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= k_0_1699 & k_1_1707 & k_2_1715 & k_3_1723 & encry_counter_1745;
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 256,
        owidth => 256,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => encryption_engine_call_reqs(0),
          ackR => encryption_engine_call_acks(0),
          dataR => encryption_engine_call_data(255 downto 0),
          tagR => encryption_engine_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseNoData -- 
        generic map ( -- 
          detailed_buffering_per_output => outBUFs, 
          twidth => 1,
          name => "OutputDemuxBaseNoData",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          reqL => encryption_engine_return_acks(0), -- cross-over
          ackL => encryption_engine_return_reqs(0), -- cross-over
          tagL => encryption_engine_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 6
    -- shared call operator group (7) : call_stmt_1771_call 
    decryption_engine_call_group_7: Block -- 
      signal data_in: std_logic_vector(255 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs: IntegerArray(0 downto 0) := (others => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_1771_call_req_0;
      call_stmt_1771_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_1771_call_req_1;
      call_stmt_1771_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      decryption_engine_call_group_7_gI: SplitGuardInterface generic map(name => "decryption_engine_call_group_7_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= a_0_1702 & a_1_1710 & a_2_1718 & a_3_1726 & decry_counter_1754;
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 256,
        owidth => 256,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => decryption_engine_call_reqs(0),
          ackR => decryption_engine_call_acks(0),
          dataR => decryption_engine_call_data(255 downto 0),
          tagR => decryption_engine_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseNoData -- 
        generic map ( -- 
          detailed_buffering_per_output => outBUFs, 
          twidth => 1,
          name => "OutputDemuxBaseNoData",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          reqL => decryption_engine_return_acks(0), -- cross-over
          ackL => decryption_engine_return_reqs(0), -- cross-over
          tagL => decryption_engine_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 7
    -- 
  end Block; -- data_path
  -- 
end top_module_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity two_mult is -- 
  generic (tag_length : integer); 
  port ( -- 
    num_0 : in  std_logic_vector(7 downto 0);
    op_0 : out  std_logic_vector(7 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity two_mult;
architecture two_mult_arch of two_mult is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 8)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 8)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal num_0_buffer :  std_logic_vector(7 downto 0);
  signal num_0_update_enable: Boolean;
  -- output port buffer signals
  signal op_0_buffer :  std_logic_vector(7 downto 0);
  signal op_0_update_enable: Boolean;
  signal two_mult_CP_1632_start: Boolean;
  signal two_mult_CP_1632_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal XOR_u8_u8_573_inst_ack_1 : boolean;
  signal XOR_u8_u8_573_inst_req_0 : boolean;
  signal XOR_u8_u8_573_inst_req_1 : boolean;
  signal XOR_u8_u8_573_inst_ack_0 : boolean;
  signal SHL_u8_u8_558_inst_req_0 : boolean;
  signal SHL_u8_u8_558_inst_ack_0 : boolean;
  signal SHL_u8_u8_558_inst_req_1 : boolean;
  signal SHL_u8_u8_558_inst_ack_1 : boolean;
  signal slice_562_inst_req_0 : boolean;
  signal slice_562_inst_ack_0 : boolean;
  signal slice_562_inst_req_1 : boolean;
  signal slice_562_inst_ack_1 : boolean;
  signal MUX_568_inst_req_0 : boolean;
  signal MUX_568_inst_ack_0 : boolean;
  signal MUX_568_inst_req_1 : boolean;
  signal MUX_568_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "two_mult_input_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      bypass_flag => false,
      data_width => tag_length + 8) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(7 downto 0) <= num_0;
  num_0_buffer <= in_buffer_data_out(7 downto 0);
  in_buffer_data_in(tag_length + 7 downto 8) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 7 downto 8);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  two_mult_CP_1632_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "two_mult_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 8) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(7 downto 0) <= op_0_buffer;
  op_0 <= out_buffer_data_out(7 downto 0);
  out_buffer_data_in(tag_length + 7 downto 8) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 7 downto 8);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= two_mult_CP_1632_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= two_mult_CP_1632_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= two_mult_CP_1632_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  two_mult_CP_1632: Block -- control-path 
    signal two_mult_CP_1632_elements: BooleanArray(9 downto 0);
    -- 
  begin -- 
    two_mult_CP_1632_elements(0) <= two_mult_CP_1632_start;
    two_mult_CP_1632_symbol <= two_mult_CP_1632_elements(9);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	9 
    -- CP-element group 0: 	4 
    -- CP-element group 0:  members (20) 
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/XOR_u8_u8_573_Update/cr
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/XOR_u8_u8_573_Update/$entry
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/$entry
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/SHL_u8_u8_558_sample_start_
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/SHL_u8_u8_558_update_start_
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/SHL_u8_u8_558_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/SHL_u8_u8_558_Sample/rr
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/SHL_u8_u8_558_Update/$entry
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/SHL_u8_u8_558_Update/cr
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/slice_562_sample_start_
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/slice_562_update_start_
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/slice_562_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/slice_562_Sample/rr
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/slice_562_Update/$entry
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/slice_562_Update/cr
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/MUX_568_update_start_
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/MUX_568_complete/$entry
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/MUX_568_complete/req
      -- CP-element group 0: 	 assign_stmt_559_to_assign_stmt_574/XOR_u8_u8_573_update_start_
      -- 
    req_1678_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1678_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => two_mult_CP_1632_elements(0), ack => MUX_568_inst_req_1); -- 
    rr_1659_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1659_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => two_mult_CP_1632_elements(0), ack => slice_562_inst_req_0); -- 
    cr_1664_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1664_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => two_mult_CP_1632_elements(0), ack => slice_562_inst_req_1); -- 
    cr_1692_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1692_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => two_mult_CP_1632_elements(0), ack => XOR_u8_u8_573_inst_req_1); -- 
    rr_1645_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1645_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => two_mult_CP_1632_elements(0), ack => SHL_u8_u8_558_inst_req_0); -- 
    cr_1650_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1650_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => two_mult_CP_1632_elements(0), ack => SHL_u8_u8_558_inst_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_559_to_assign_stmt_574/SHL_u8_u8_558_sample_completed_
      -- CP-element group 1: 	 assign_stmt_559_to_assign_stmt_574/SHL_u8_u8_558_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_559_to_assign_stmt_574/SHL_u8_u8_558_Sample/ra
      -- 
    ra_1646_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => SHL_u8_u8_558_inst_ack_0, ack => two_mult_CP_1632_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	7 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 assign_stmt_559_to_assign_stmt_574/SHL_u8_u8_558_update_completed_
      -- CP-element group 2: 	 assign_stmt_559_to_assign_stmt_574/SHL_u8_u8_558_Update/$exit
      -- CP-element group 2: 	 assign_stmt_559_to_assign_stmt_574/SHL_u8_u8_558_Update/ca
      -- 
    ca_1651_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => SHL_u8_u8_558_inst_ack_1, ack => two_mult_CP_1632_elements(2)); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 assign_stmt_559_to_assign_stmt_574/slice_562_sample_completed_
      -- CP-element group 3: 	 assign_stmt_559_to_assign_stmt_574/slice_562_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_559_to_assign_stmt_574/slice_562_Sample/ra
      -- 
    ra_1660_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_562_inst_ack_0, ack => two_mult_CP_1632_elements(3)); -- 
    -- CP-element group 4:  transition  input  output  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	5 
    -- CP-element group 4:  members (6) 
      -- CP-element group 4: 	 assign_stmt_559_to_assign_stmt_574/slice_562_update_completed_
      -- CP-element group 4: 	 assign_stmt_559_to_assign_stmt_574/slice_562_Update/$exit
      -- CP-element group 4: 	 assign_stmt_559_to_assign_stmt_574/slice_562_Update/ca
      -- CP-element group 4: 	 assign_stmt_559_to_assign_stmt_574/MUX_568_sample_start_
      -- CP-element group 4: 	 assign_stmt_559_to_assign_stmt_574/MUX_568_start/$entry
      -- CP-element group 4: 	 assign_stmt_559_to_assign_stmt_574/MUX_568_start/req
      -- 
    ca_1665_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_562_inst_ack_1, ack => two_mult_CP_1632_elements(4)); -- 
    req_1673_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1673_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => two_mult_CP_1632_elements(4), ack => MUX_568_inst_req_0); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	4 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_559_to_assign_stmt_574/MUX_568_sample_completed_
      -- CP-element group 5: 	 assign_stmt_559_to_assign_stmt_574/MUX_568_start/$exit
      -- CP-element group 5: 	 assign_stmt_559_to_assign_stmt_574/MUX_568_start/ack
      -- 
    ack_1674_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUX_568_inst_ack_0, ack => two_mult_CP_1632_elements(5)); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	7 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_559_to_assign_stmt_574/MUX_568_update_completed_
      -- CP-element group 6: 	 assign_stmt_559_to_assign_stmt_574/MUX_568_complete/$exit
      -- CP-element group 6: 	 assign_stmt_559_to_assign_stmt_574/MUX_568_complete/ack
      -- 
    ack_1679_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUX_568_inst_ack_1, ack => two_mult_CP_1632_elements(6)); -- 
    -- CP-element group 7:  join  transition  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	6 
    -- CP-element group 7: 	2 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 assign_stmt_559_to_assign_stmt_574/XOR_u8_u8_573_Sample/rr
      -- CP-element group 7: 	 assign_stmt_559_to_assign_stmt_574/XOR_u8_u8_573_sample_start_
      -- CP-element group 7: 	 assign_stmt_559_to_assign_stmt_574/XOR_u8_u8_573_Sample/$entry
      -- 
    rr_1687_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1687_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => two_mult_CP_1632_elements(7), ack => XOR_u8_u8_573_inst_req_0); -- 
    two_mult_cp_element_group_7: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 27) := "two_mult_cp_element_group_7"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= two_mult_CP_1632_elements(6) & two_mult_CP_1632_elements(2);
      gj_two_mult_cp_element_group_7 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => two_mult_CP_1632_elements(7), clk => clk, reset => reset); --
    end block;
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: successors 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 assign_stmt_559_to_assign_stmt_574/XOR_u8_u8_573_Sample/ra
      -- CP-element group 8: 	 assign_stmt_559_to_assign_stmt_574/XOR_u8_u8_573_sample_completed_
      -- CP-element group 8: 	 assign_stmt_559_to_assign_stmt_574/XOR_u8_u8_573_Sample/$exit
      -- 
    ra_1688_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_573_inst_ack_0, ack => two_mult_CP_1632_elements(8)); -- 
    -- CP-element group 9:  transition  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	0 
    -- CP-element group 9: successors 
    -- CP-element group 9:  members (5) 
      -- CP-element group 9: 	 assign_stmt_559_to_assign_stmt_574/XOR_u8_u8_573_Update/ca
      -- CP-element group 9: 	 assign_stmt_559_to_assign_stmt_574/XOR_u8_u8_573_Update/$exit
      -- CP-element group 9: 	 $exit
      -- CP-element group 9: 	 assign_stmt_559_to_assign_stmt_574/$exit
      -- CP-element group 9: 	 assign_stmt_559_to_assign_stmt_574/XOR_u8_u8_573_update_completed_
      -- 
    ca_1693_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => XOR_u8_u8_573_inst_ack_1, ack => two_mult_CP_1632_elements(9)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal konst_557_wire_constant : std_logic_vector(7 downto 0);
    signal konst_566_wire_constant : std_logic_vector(7 downto 0);
    signal konst_567_wire_constant : std_logic_vector(7 downto 0);
    signal mux_in_563 : std_logic_vector(0 downto 0);
    signal temp_559 : std_logic_vector(7 downto 0);
    signal xor_num_569 : std_logic_vector(7 downto 0);
    -- 
  begin -- 
    konst_557_wire_constant <= "00000001";
    konst_566_wire_constant <= "00011011";
    konst_567_wire_constant <= "00000000";
    MUX_568_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= MUX_568_inst_req_0;
      MUX_568_inst_ack_0<= sample_ack(0);
      update_req(0) <= MUX_568_inst_req_1;
      MUX_568_inst_ack_1<= update_ack(0);
      MUX_568_inst: SelectSplitProtocol generic map(name => "MUX_568_inst", data_width => 8, buffering => 1, flow_through => false, full_rate => false) -- 
        port map( x => konst_566_wire_constant, y => konst_567_wire_constant, sel => mux_in_563, z => xor_num_569, sample_req => sample_req(0), sample_ack => sample_ack(0), update_req => update_req(0), update_ack => update_ack(0), clk => clk, reset => reset); -- 
      -- 
    end block;
    slice_562_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_562_inst_req_0;
      slice_562_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_562_inst_req_1;
      slice_562_inst_ack_1<= update_ack(0);
      slice_562_inst: SliceSplitProtocol generic map(name => "slice_562_inst", in_data_width => 8, high_index => 7, low_index => 7, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => num_0_buffer, dout => mux_in_563, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    -- shared split operator group (0) : SHL_u8_u8_558_inst 
    ApIntSHL_group_0: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= num_0_buffer;
      temp_559 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= SHL_u8_u8_558_inst_req_0;
      SHL_u8_u8_558_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= SHL_u8_u8_558_inst_req_1;
      SHL_u8_u8_558_inst_ack_1 <= ackR_unguarded(0);
      ApIntSHL_group_0_gI: SplitGuardInterface generic map(name => "ApIntSHL_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntSHL",
          name => "ApIntSHL_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "00000001",
          constant_width => 8,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : XOR_u8_u8_573_inst 
    ApIntXor_group_1: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= xor_num_569 & temp_559;
      op_0_buffer <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= XOR_u8_u8_573_inst_req_0;
      XOR_u8_u8_573_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= XOR_u8_u8_573_inst_req_1;
      XOR_u8_u8_573_inst_ack_1 <= ackR_unguarded(0);
      ApIntXor_group_1_gI: SplitGuardInterface generic map(name => "ApIntXor_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntXor",
          name => "ApIntXor_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- 
  end Block; -- data_path
  -- 
end two_mult_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library work;
use work.ahir_system_global_package.all;
entity ahir_system is  -- system 
  port (-- 
    clk : in std_logic;
    reset : in std_logic;
    input_d_pipe_write_data: in std_logic_vector(7 downto 0);
    input_d_pipe_write_req : in std_logic_vector(0 downto 0);
    input_d_pipe_write_ack : out std_logic_vector(0 downto 0);
    input_e_pipe_write_data: in std_logic_vector(7 downto 0);
    input_e_pipe_write_req : in std_logic_vector(0 downto 0);
    input_e_pipe_write_ack : out std_logic_vector(0 downto 0);
    out_d_pipe_read_data: out std_logic_vector(7 downto 0);
    out_d_pipe_read_req : in std_logic_vector(0 downto 0);
    out_d_pipe_read_ack : out std_logic_vector(0 downto 0);
    out_e_pipe_read_data: out std_logic_vector(7 downto 0);
    out_e_pipe_read_req : in std_logic_vector(0 downto 0);
    out_e_pipe_read_ack : out std_logic_vector(0 downto 0)); -- 
  -- 
end entity; 
architecture ahir_system_arch  of ahir_system is -- system-architecture 
  -- interface signals to connect to memory space memory_space_0
  signal memory_space_0_lr_req :  std_logic_vector(0 downto 0);
  signal memory_space_0_lr_ack : std_logic_vector(0 downto 0);
  signal memory_space_0_lr_addr : std_logic_vector(0 downto 0);
  signal memory_space_0_lr_tag : std_logic_vector(18 downto 0);
  signal memory_space_0_lc_req : std_logic_vector(0 downto 0);
  signal memory_space_0_lc_ack :  std_logic_vector(0 downto 0);
  signal memory_space_0_lc_data : std_logic_vector(0 downto 0);
  signal memory_space_0_lc_tag :  std_logic_vector(1 downto 0);
  signal memory_space_0_sr_req :  std_logic_vector(1 downto 0);
  signal memory_space_0_sr_ack : std_logic_vector(1 downto 0);
  signal memory_space_0_sr_addr : std_logic_vector(1 downto 0);
  signal memory_space_0_sr_data : std_logic_vector(1 downto 0);
  signal memory_space_0_sr_tag : std_logic_vector(37 downto 0);
  signal memory_space_0_sc_req : std_logic_vector(1 downto 0);
  signal memory_space_0_sc_ack :  std_logic_vector(1 downto 0);
  signal memory_space_0_sc_tag :  std_logic_vector(3 downto 0);
  -- interface signals to connect to memory space memory_space_1
  signal memory_space_1_lr_req :  std_logic_vector(0 downto 0);
  signal memory_space_1_lr_ack : std_logic_vector(0 downto 0);
  signal memory_space_1_lr_addr : std_logic_vector(3 downto 0);
  signal memory_space_1_lr_tag : std_logic_vector(17 downto 0);
  signal memory_space_1_lc_req : std_logic_vector(0 downto 0);
  signal memory_space_1_lc_ack :  std_logic_vector(0 downto 0);
  signal memory_space_1_lc_data : std_logic_vector(31 downto 0);
  signal memory_space_1_lc_tag :  std_logic_vector(0 downto 0);
  signal memory_space_1_sr_req :  std_logic_vector(0 downto 0);
  signal memory_space_1_sr_ack : std_logic_vector(0 downto 0);
  signal memory_space_1_sr_addr : std_logic_vector(3 downto 0);
  signal memory_space_1_sr_data : std_logic_vector(31 downto 0);
  signal memory_space_1_sr_tag : std_logic_vector(17 downto 0);
  signal memory_space_1_sc_req : std_logic_vector(0 downto 0);
  signal memory_space_1_sc_ack :  std_logic_vector(0 downto 0);
  signal memory_space_1_sc_tag :  std_logic_vector(0 downto 0);
  -- interface signals to connect to memory space memory_space_2
  signal memory_space_2_lr_req :  std_logic_vector(0 downto 0);
  signal memory_space_2_lr_ack : std_logic_vector(0 downto 0);
  signal memory_space_2_lr_addr : std_logic_vector(7 downto 0);
  signal memory_space_2_lr_tag : std_logic_vector(17 downto 0);
  signal memory_space_2_lc_req : std_logic_vector(0 downto 0);
  signal memory_space_2_lc_ack :  std_logic_vector(0 downto 0);
  signal memory_space_2_lc_data : std_logic_vector(7 downto 0);
  signal memory_space_2_lc_tag :  std_logic_vector(0 downto 0);
  signal memory_space_2_sr_req :  std_logic_vector(0 downto 0);
  signal memory_space_2_sr_ack : std_logic_vector(0 downto 0);
  signal memory_space_2_sr_addr : std_logic_vector(7 downto 0);
  signal memory_space_2_sr_data : std_logic_vector(7 downto 0);
  signal memory_space_2_sr_tag : std_logic_vector(17 downto 0);
  signal memory_space_2_sc_req : std_logic_vector(0 downto 0);
  signal memory_space_2_sc_ack :  std_logic_vector(0 downto 0);
  signal memory_space_2_sc_tag :  std_logic_vector(0 downto 0);
  -- declarations related to module add_round_key
  component add_round_key is -- 
    generic (tag_length : integer); 
    port ( -- 
      k_0 : in  std_logic_vector(31 downto 0);
      k_1 : in  std_logic_vector(31 downto 0);
      k_2 : in  std_logic_vector(31 downto 0);
      k_3 : in  std_logic_vector(31 downto 0);
      w_0 : in  std_logic_vector(31 downto 0);
      w_1 : in  std_logic_vector(31 downto 0);
      w_2 : in  std_logic_vector(31 downto 0);
      w_3 : in  std_logic_vector(31 downto 0);
      round_num : in  std_logic_vector(7 downto 0);
      nk_0 : out  std_logic_vector(31 downto 0);
      nk_1 : out  std_logic_vector(31 downto 0);
      nk_2 : out  std_logic_vector(31 downto 0);
      nk_3 : out  std_logic_vector(31 downto 0);
      nw_0 : out  std_logic_vector(31 downto 0);
      nw_1 : out  std_logic_vector(31 downto 0);
      nw_2 : out  std_logic_vector(31 downto 0);
      nw_3 : out  std_logic_vector(31 downto 0);
      memory_space_1_lr_req : out  std_logic_vector(0 downto 0);
      memory_space_1_lr_ack : in   std_logic_vector(0 downto 0);
      memory_space_1_lr_addr : out  std_logic_vector(3 downto 0);
      memory_space_1_lr_tag :  out  std_logic_vector(17 downto 0);
      memory_space_1_lc_req : out  std_logic_vector(0 downto 0);
      memory_space_1_lc_ack : in   std_logic_vector(0 downto 0);
      memory_space_1_lc_data : in   std_logic_vector(31 downto 0);
      memory_space_1_lc_tag :  in  std_logic_vector(0 downto 0);
      sbox_transform_call_reqs : out  std_logic_vector(0 downto 0);
      sbox_transform_call_acks : in   std_logic_vector(0 downto 0);
      sbox_transform_call_data : out  std_logic_vector(7 downto 0);
      sbox_transform_call_tag  :  out  std_logic_vector(2 downto 0);
      sbox_transform_return_reqs : out  std_logic_vector(0 downto 0);
      sbox_transform_return_acks : in   std_logic_vector(0 downto 0);
      sbox_transform_return_data : in   std_logic_vector(7 downto 0);
      sbox_transform_return_tag :  in   std_logic_vector(2 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module add_round_key
  signal add_round_key_k_0 :  std_logic_vector(31 downto 0);
  signal add_round_key_k_1 :  std_logic_vector(31 downto 0);
  signal add_round_key_k_2 :  std_logic_vector(31 downto 0);
  signal add_round_key_k_3 :  std_logic_vector(31 downto 0);
  signal add_round_key_w_0 :  std_logic_vector(31 downto 0);
  signal add_round_key_w_1 :  std_logic_vector(31 downto 0);
  signal add_round_key_w_2 :  std_logic_vector(31 downto 0);
  signal add_round_key_w_3 :  std_logic_vector(31 downto 0);
  signal add_round_key_round_num :  std_logic_vector(7 downto 0);
  signal add_round_key_nk_0 :  std_logic_vector(31 downto 0);
  signal add_round_key_nk_1 :  std_logic_vector(31 downto 0);
  signal add_round_key_nk_2 :  std_logic_vector(31 downto 0);
  signal add_round_key_nk_3 :  std_logic_vector(31 downto 0);
  signal add_round_key_nw_0 :  std_logic_vector(31 downto 0);
  signal add_round_key_nw_1 :  std_logic_vector(31 downto 0);
  signal add_round_key_nw_2 :  std_logic_vector(31 downto 0);
  signal add_round_key_nw_3 :  std_logic_vector(31 downto 0);
  signal add_round_key_in_args    : std_logic_vector(263 downto 0);
  signal add_round_key_out_args   : std_logic_vector(255 downto 0);
  signal add_round_key_tag_in    : std_logic_vector(2 downto 0) := (others => '0');
  signal add_round_key_tag_out   : std_logic_vector(2 downto 0);
  signal add_round_key_start_req : std_logic;
  signal add_round_key_start_ack : std_logic;
  signal add_round_key_fin_req   : std_logic;
  signal add_round_key_fin_ack : std_logic;
  -- caller side aggregated signals for module add_round_key
  signal add_round_key_call_reqs: std_logic_vector(0 downto 0);
  signal add_round_key_call_acks: std_logic_vector(0 downto 0);
  signal add_round_key_return_reqs: std_logic_vector(0 downto 0);
  signal add_round_key_return_acks: std_logic_vector(0 downto 0);
  signal add_round_key_call_data: std_logic_vector(263 downto 0);
  signal add_round_key_call_tag: std_logic_vector(1 downto 0);
  signal add_round_key_return_data: std_logic_vector(255 downto 0);
  signal add_round_key_return_tag: std_logic_vector(1 downto 0);
  -- declarations related to module checksum
  component checksum is -- 
    generic (tag_length : integer); 
    port ( -- 
      m_0 : in  std_logic_vector(7 downto 0);
      c_0 : out  std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module checksum
  signal checksum_m_0 :  std_logic_vector(7 downto 0);
  signal checksum_c_0 :  std_logic_vector(0 downto 0);
  signal checksum_in_args    : std_logic_vector(7 downto 0);
  signal checksum_out_args   : std_logic_vector(0 downto 0);
  signal checksum_tag_in    : std_logic_vector(4 downto 0) := (others => '0');
  signal checksum_tag_out   : std_logic_vector(4 downto 0);
  signal checksum_start_req : std_logic;
  signal checksum_start_ack : std_logic;
  signal checksum_fin_req   : std_logic;
  signal checksum_fin_ack : std_logic;
  -- caller side aggregated signals for module checksum
  signal checksum_call_reqs: std_logic_vector(0 downto 0);
  signal checksum_call_acks: std_logic_vector(0 downto 0);
  signal checksum_return_reqs: std_logic_vector(0 downto 0);
  signal checksum_return_acks: std_logic_vector(0 downto 0);
  signal checksum_call_data: std_logic_vector(7 downto 0);
  signal checksum_call_tag: std_logic_vector(3 downto 0);
  signal checksum_return_data: std_logic_vector(0 downto 0);
  signal checksum_return_tag: std_logic_vector(3 downto 0);
  -- declarations related to module checksum_calculation
  component checksum_calculation is -- 
    generic (tag_length : integer); 
    port ( -- 
      m_0 : in  std_logic_vector(7 downto 0);
      m_1 : in  std_logic_vector(7 downto 0);
      m_2 : in  std_logic_vector(7 downto 0);
      m_3 : in  std_logic_vector(7 downto 0);
      m_4 : in  std_logic_vector(7 downto 0);
      m_5 : in  std_logic_vector(7 downto 0);
      m_6 : in  std_logic_vector(7 downto 0);
      m_7 : in  std_logic_vector(7 downto 0);
      m_8 : in  std_logic_vector(7 downto 0);
      m_9 : in  std_logic_vector(7 downto 0);
      m_10 : in  std_logic_vector(7 downto 0);
      m_11 : in  std_logic_vector(7 downto 0);
      m_12 : in  std_logic_vector(7 downto 0);
      m_13 : in  std_logic_vector(7 downto 0);
      m_14 : out  std_logic_vector(7 downto 0);
      m_15 : out  std_logic_vector(7 downto 0);
      checksum_call_reqs : out  std_logic_vector(0 downto 0);
      checksum_call_acks : in   std_logic_vector(0 downto 0);
      checksum_call_data : out  std_logic_vector(7 downto 0);
      checksum_call_tag  :  out  std_logic_vector(3 downto 0);
      checksum_return_reqs : out  std_logic_vector(0 downto 0);
      checksum_return_acks : in   std_logic_vector(0 downto 0);
      checksum_return_data : in   std_logic_vector(0 downto 0);
      checksum_return_tag :  in   std_logic_vector(3 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module checksum_calculation
  signal checksum_calculation_m_0 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_1 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_2 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_3 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_4 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_5 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_6 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_7 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_8 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_9 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_10 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_11 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_12 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_13 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_14 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_m_15 :  std_logic_vector(7 downto 0);
  signal checksum_calculation_in_args    : std_logic_vector(111 downto 0);
  signal checksum_calculation_out_args   : std_logic_vector(15 downto 0);
  signal checksum_calculation_tag_in    : std_logic_vector(2 downto 0) := (others => '0');
  signal checksum_calculation_tag_out   : std_logic_vector(2 downto 0);
  signal checksum_calculation_start_req : std_logic;
  signal checksum_calculation_start_ack : std_logic;
  signal checksum_calculation_fin_req   : std_logic;
  signal checksum_calculation_fin_ack : std_logic;
  -- caller side aggregated signals for module checksum_calculation
  signal checksum_calculation_call_reqs: std_logic_vector(1 downto 0);
  signal checksum_calculation_call_acks: std_logic_vector(1 downto 0);
  signal checksum_calculation_return_reqs: std_logic_vector(1 downto 0);
  signal checksum_calculation_return_acks: std_logic_vector(1 downto 0);
  signal checksum_calculation_call_data: std_logic_vector(223 downto 0);
  signal checksum_calculation_call_tag: std_logic_vector(1 downto 0);
  signal checksum_calculation_return_data: std_logic_vector(31 downto 0);
  signal checksum_calculation_return_tag: std_logic_vector(1 downto 0);
  -- declarations related to module counter_encry
  component counter_encry is -- 
    generic (tag_length : integer); 
    port ( -- 
      k0_0 : in  std_logic_vector(31 downto 0);
      k0_1 : in  std_logic_vector(31 downto 0);
      k0_2 : in  std_logic_vector(31 downto 0);
      k0_3 : in  std_logic_vector(31 downto 0);
      counter : in  std_logic_vector(127 downto 0);
      lw7_0 : out  std_logic_vector(31 downto 0);
      lw7_1 : out  std_logic_vector(31 downto 0);
      lw7_2 : out  std_logic_vector(31 downto 0);
      lw7_3 : out  std_logic_vector(31 downto 0);
      add_round_key_call_reqs : out  std_logic_vector(0 downto 0);
      add_round_key_call_acks : in   std_logic_vector(0 downto 0);
      add_round_key_call_data : out  std_logic_vector(263 downto 0);
      add_round_key_call_tag  :  out  std_logic_vector(1 downto 0);
      add_round_key_return_reqs : out  std_logic_vector(0 downto 0);
      add_round_key_return_acks : in   std_logic_vector(0 downto 0);
      add_round_key_return_data : in   std_logic_vector(255 downto 0);
      add_round_key_return_tag :  in   std_logic_vector(1 downto 0);
      shift_row_call_reqs : out  std_logic_vector(0 downto 0);
      shift_row_call_acks : in   std_logic_vector(0 downto 0);
      shift_row_call_data : out  std_logic_vector(127 downto 0);
      shift_row_call_tag  :  out  std_logic_vector(1 downto 0);
      shift_row_return_reqs : out  std_logic_vector(0 downto 0);
      shift_row_return_acks : in   std_logic_vector(0 downto 0);
      shift_row_return_data : in   std_logic_vector(127 downto 0);
      shift_row_return_tag :  in   std_logic_vector(1 downto 0);
      mix_column_call_reqs : out  std_logic_vector(0 downto 0);
      mix_column_call_acks : in   std_logic_vector(0 downto 0);
      mix_column_call_data : out  std_logic_vector(31 downto 0);
      mix_column_call_tag  :  out  std_logic_vector(2 downto 0);
      mix_column_return_reqs : out  std_logic_vector(0 downto 0);
      mix_column_return_acks : in   std_logic_vector(0 downto 0);
      mix_column_return_data : in   std_logic_vector(31 downto 0);
      mix_column_return_tag :  in   std_logic_vector(2 downto 0);
      sbox_transformation_call_reqs : out  std_logic_vector(0 downto 0);
      sbox_transformation_call_acks : in   std_logic_vector(0 downto 0);
      sbox_transformation_call_data : out  std_logic_vector(31 downto 0);
      sbox_transformation_call_tag  :  out  std_logic_vector(3 downto 0);
      sbox_transformation_return_reqs : out  std_logic_vector(0 downto 0);
      sbox_transformation_return_acks : in   std_logic_vector(0 downto 0);
      sbox_transformation_return_data : in   std_logic_vector(31 downto 0);
      sbox_transformation_return_tag :  in   std_logic_vector(3 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module counter_encry
  signal counter_encry_k0_0 :  std_logic_vector(31 downto 0);
  signal counter_encry_k0_1 :  std_logic_vector(31 downto 0);
  signal counter_encry_k0_2 :  std_logic_vector(31 downto 0);
  signal counter_encry_k0_3 :  std_logic_vector(31 downto 0);
  signal counter_encry_counter :  std_logic_vector(127 downto 0);
  signal counter_encry_lw7_0 :  std_logic_vector(31 downto 0);
  signal counter_encry_lw7_1 :  std_logic_vector(31 downto 0);
  signal counter_encry_lw7_2 :  std_logic_vector(31 downto 0);
  signal counter_encry_lw7_3 :  std_logic_vector(31 downto 0);
  signal counter_encry_in_args    : std_logic_vector(255 downto 0);
  signal counter_encry_out_args   : std_logic_vector(127 downto 0);
  signal counter_encry_tag_in    : std_logic_vector(2 downto 0) := (others => '0');
  signal counter_encry_tag_out   : std_logic_vector(2 downto 0);
  signal counter_encry_start_req : std_logic;
  signal counter_encry_start_ack : std_logic;
  signal counter_encry_fin_req   : std_logic;
  signal counter_encry_fin_ack : std_logic;
  -- caller side aggregated signals for module counter_encry
  signal counter_encry_call_reqs: std_logic_vector(2 downto 0);
  signal counter_encry_call_acks: std_logic_vector(2 downto 0);
  signal counter_encry_return_reqs: std_logic_vector(2 downto 0);
  signal counter_encry_return_acks: std_logic_vector(2 downto 0);
  signal counter_encry_call_data: std_logic_vector(767 downto 0);
  signal counter_encry_call_tag: std_logic_vector(2 downto 0);
  signal counter_encry_return_data: std_logic_vector(383 downto 0);
  signal counter_encry_return_tag: std_logic_vector(2 downto 0);
  -- declarations related to module decryption_engine
  component decryption_engine is -- 
    generic (tag_length : integer); 
    port ( -- 
      a0_0 : in  std_logic_vector(31 downto 0);
      a0_1 : in  std_logic_vector(31 downto 0);
      a0_2 : in  std_logic_vector(31 downto 0);
      a0_3 : in  std_logic_vector(31 downto 0);
      decry_counter : in  std_logic_vector(127 downto 0);
      memory_space_0_sr_req : out  std_logic_vector(0 downto 0);
      memory_space_0_sr_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_sr_addr : out  std_logic_vector(0 downto 0);
      memory_space_0_sr_data : out  std_logic_vector(0 downto 0);
      memory_space_0_sr_tag :  out  std_logic_vector(18 downto 0);
      memory_space_0_sc_req : out  std_logic_vector(0 downto 0);
      memory_space_0_sc_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_sc_tag :  in  std_logic_vector(1 downto 0);
      input_d_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_d_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_d_pipe_read_data : in   std_logic_vector(7 downto 0);
      out_d_pipe_write_req : out  std_logic_vector(0 downto 0);
      out_d_pipe_write_ack : in   std_logic_vector(0 downto 0);
      out_d_pipe_write_data : out  std_logic_vector(7 downto 0);
      checksum_calculation_call_reqs : out  std_logic_vector(0 downto 0);
      checksum_calculation_call_acks : in   std_logic_vector(0 downto 0);
      checksum_calculation_call_data : out  std_logic_vector(111 downto 0);
      checksum_calculation_call_tag  :  out  std_logic_vector(0 downto 0);
      checksum_calculation_return_reqs : out  std_logic_vector(0 downto 0);
      checksum_calculation_return_acks : in   std_logic_vector(0 downto 0);
      checksum_calculation_return_data : in   std_logic_vector(15 downto 0);
      checksum_calculation_return_tag :  in   std_logic_vector(0 downto 0);
      counter_encry_call_reqs : out  std_logic_vector(0 downto 0);
      counter_encry_call_acks : in   std_logic_vector(0 downto 0);
      counter_encry_call_data : out  std_logic_vector(255 downto 0);
      counter_encry_call_tag  :  out  std_logic_vector(0 downto 0);
      counter_encry_return_reqs : out  std_logic_vector(0 downto 0);
      counter_encry_return_acks : in   std_logic_vector(0 downto 0);
      counter_encry_return_data : in   std_logic_vector(127 downto 0);
      counter_encry_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module decryption_engine
  signal decryption_engine_a0_0 :  std_logic_vector(31 downto 0);
  signal decryption_engine_a0_1 :  std_logic_vector(31 downto 0);
  signal decryption_engine_a0_2 :  std_logic_vector(31 downto 0);
  signal decryption_engine_a0_3 :  std_logic_vector(31 downto 0);
  signal decryption_engine_decry_counter :  std_logic_vector(127 downto 0);
  signal decryption_engine_in_args    : std_logic_vector(255 downto 0);
  signal decryption_engine_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal decryption_engine_tag_out   : std_logic_vector(1 downto 0);
  signal decryption_engine_start_req : std_logic;
  signal decryption_engine_start_ack : std_logic;
  signal decryption_engine_fin_req   : std_logic;
  signal decryption_engine_fin_ack : std_logic;
  -- caller side aggregated signals for module decryption_engine
  signal decryption_engine_call_reqs: std_logic_vector(0 downto 0);
  signal decryption_engine_call_acks: std_logic_vector(0 downto 0);
  signal decryption_engine_return_reqs: std_logic_vector(0 downto 0);
  signal decryption_engine_return_acks: std_logic_vector(0 downto 0);
  signal decryption_engine_call_data: std_logic_vector(255 downto 0);
  signal decryption_engine_call_tag: std_logic_vector(0 downto 0);
  signal decryption_engine_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module encryption_engine
  component encryption_engine is -- 
    generic (tag_length : integer); 
    port ( -- 
      k0_0 : in  std_logic_vector(31 downto 0);
      k0_1 : in  std_logic_vector(31 downto 0);
      k0_2 : in  std_logic_vector(31 downto 0);
      k0_3 : in  std_logic_vector(31 downto 0);
      encry_counter : in  std_logic_vector(127 downto 0);
      memory_space_0_lr_req : out  std_logic_vector(0 downto 0);
      memory_space_0_lr_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_lr_addr : out  std_logic_vector(0 downto 0);
      memory_space_0_lr_tag :  out  std_logic_vector(18 downto 0);
      memory_space_0_lc_req : out  std_logic_vector(0 downto 0);
      memory_space_0_lc_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_lc_data : in   std_logic_vector(0 downto 0);
      memory_space_0_lc_tag :  in  std_logic_vector(1 downto 0);
      input_e_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_e_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_e_pipe_read_data : in   std_logic_vector(7 downto 0);
      checksum_calculation_call_reqs : out  std_logic_vector(0 downto 0);
      checksum_calculation_call_acks : in   std_logic_vector(0 downto 0);
      checksum_calculation_call_data : out  std_logic_vector(111 downto 0);
      checksum_calculation_call_tag  :  out  std_logic_vector(0 downto 0);
      checksum_calculation_return_reqs : out  std_logic_vector(0 downto 0);
      checksum_calculation_return_acks : in   std_logic_vector(0 downto 0);
      checksum_calculation_return_data : in   std_logic_vector(15 downto 0);
      checksum_calculation_return_tag :  in   std_logic_vector(0 downto 0);
      counter_encry_call_reqs : out  std_logic_vector(0 downto 0);
      counter_encry_call_acks : in   std_logic_vector(0 downto 0);
      counter_encry_call_data : out  std_logic_vector(255 downto 0);
      counter_encry_call_tag  :  out  std_logic_vector(0 downto 0);
      counter_encry_return_reqs : out  std_logic_vector(0 downto 0);
      counter_encry_return_acks : in   std_logic_vector(0 downto 0);
      counter_encry_return_data : in   std_logic_vector(127 downto 0);
      counter_encry_return_tag :  in   std_logic_vector(0 downto 0);
      send_msg_call_reqs : out  std_logic_vector(0 downto 0);
      send_msg_call_acks : in   std_logic_vector(0 downto 0);
      send_msg_call_data : out  std_logic_vector(31 downto 0);
      send_msg_call_tag  :  out  std_logic_vector(2 downto 0);
      send_msg_return_reqs : out  std_logic_vector(0 downto 0);
      send_msg_return_acks : in   std_logic_vector(0 downto 0);
      send_msg_return_tag :  in   std_logic_vector(2 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module encryption_engine
  signal encryption_engine_k0_0 :  std_logic_vector(31 downto 0);
  signal encryption_engine_k0_1 :  std_logic_vector(31 downto 0);
  signal encryption_engine_k0_2 :  std_logic_vector(31 downto 0);
  signal encryption_engine_k0_3 :  std_logic_vector(31 downto 0);
  signal encryption_engine_encry_counter :  std_logic_vector(127 downto 0);
  signal encryption_engine_in_args    : std_logic_vector(255 downto 0);
  signal encryption_engine_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal encryption_engine_tag_out   : std_logic_vector(1 downto 0);
  signal encryption_engine_start_req : std_logic;
  signal encryption_engine_start_ack : std_logic;
  signal encryption_engine_fin_req   : std_logic;
  signal encryption_engine_fin_ack : std_logic;
  -- caller side aggregated signals for module encryption_engine
  signal encryption_engine_call_reqs: std_logic_vector(0 downto 0);
  signal encryption_engine_call_acks: std_logic_vector(0 downto 0);
  signal encryption_engine_return_reqs: std_logic_vector(0 downto 0);
  signal encryption_engine_return_acks: std_logic_vector(0 downto 0);
  signal encryption_engine_call_data: std_logic_vector(255 downto 0);
  signal encryption_engine_call_tag: std_logic_vector(0 downto 0);
  signal encryption_engine_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module encryption_key_reception
  component encryption_key_reception is -- 
    generic (tag_length : integer); 
    port ( -- 
      key_out : out  std_logic_vector(31 downto 0);
      input_d_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_d_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_d_pipe_read_data : in   std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module encryption_key_reception
  signal encryption_key_reception_key_out :  std_logic_vector(31 downto 0);
  signal encryption_key_reception_out_args   : std_logic_vector(31 downto 0);
  signal encryption_key_reception_tag_in    : std_logic_vector(3 downto 0) := (others => '0');
  signal encryption_key_reception_tag_out   : std_logic_vector(3 downto 0);
  signal encryption_key_reception_start_req : std_logic;
  signal encryption_key_reception_start_ack : std_logic;
  signal encryption_key_reception_fin_req   : std_logic;
  signal encryption_key_reception_fin_ack : std_logic;
  -- caller side aggregated signals for module encryption_key_reception
  signal encryption_key_reception_call_reqs: std_logic_vector(0 downto 0);
  signal encryption_key_reception_call_acks: std_logic_vector(0 downto 0);
  signal encryption_key_reception_return_reqs: std_logic_vector(0 downto 0);
  signal encryption_key_reception_return_acks: std_logic_vector(0 downto 0);
  signal encryption_key_reception_call_tag: std_logic_vector(2 downto 0);
  signal encryption_key_reception_return_data: std_logic_vector(31 downto 0);
  signal encryption_key_reception_return_tag: std_logic_vector(2 downto 0);
  -- declarations related to module handshaking
  component handshaking is -- 
    generic (tag_length : integer); 
    port ( -- 
      input_d_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_d_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_d_pipe_read_data : in   std_logic_vector(7 downto 0);
      out_e_pipe_write_req : out  std_logic_vector(0 downto 0);
      out_e_pipe_write_ack : in   std_logic_vector(0 downto 0);
      out_e_pipe_write_data : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module handshaking
  signal handshaking_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal handshaking_tag_out   : std_logic_vector(1 downto 0);
  signal handshaking_start_req : std_logic;
  signal handshaking_start_ack : std_logic;
  signal handshaking_fin_req   : std_logic;
  signal handshaking_fin_ack : std_logic;
  -- caller side aggregated signals for module handshaking
  signal handshaking_call_reqs: std_logic_vector(0 downto 0);
  signal handshaking_call_acks: std_logic_vector(0 downto 0);
  signal handshaking_return_reqs: std_logic_vector(0 downto 0);
  signal handshaking_return_acks: std_logic_vector(0 downto 0);
  signal handshaking_call_tag: std_logic_vector(0 downto 0);
  signal handshaking_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module mix_column
  component mix_column is -- 
    generic (tag_length : integer); 
    port ( -- 
      w : in  std_logic_vector(31 downto 0);
      nw : out  std_logic_vector(31 downto 0);
      two_mult_call_reqs : out  std_logic_vector(0 downto 0);
      two_mult_call_acks : in   std_logic_vector(0 downto 0);
      two_mult_call_data : out  std_logic_vector(7 downto 0);
      two_mult_call_tag  :  out  std_logic_vector(2 downto 0);
      two_mult_return_reqs : out  std_logic_vector(0 downto 0);
      two_mult_return_acks : in   std_logic_vector(0 downto 0);
      two_mult_return_data : in   std_logic_vector(7 downto 0);
      two_mult_return_tag :  in   std_logic_vector(2 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module mix_column
  signal mix_column_w :  std_logic_vector(31 downto 0);
  signal mix_column_nw :  std_logic_vector(31 downto 0);
  signal mix_column_in_args    : std_logic_vector(31 downto 0);
  signal mix_column_out_args   : std_logic_vector(31 downto 0);
  signal mix_column_tag_in    : std_logic_vector(3 downto 0) := (others => '0');
  signal mix_column_tag_out   : std_logic_vector(3 downto 0);
  signal mix_column_start_req : std_logic;
  signal mix_column_start_ack : std_logic;
  signal mix_column_fin_req   : std_logic;
  signal mix_column_fin_ack : std_logic;
  -- caller side aggregated signals for module mix_column
  signal mix_column_call_reqs: std_logic_vector(0 downto 0);
  signal mix_column_call_acks: std_logic_vector(0 downto 0);
  signal mix_column_return_reqs: std_logic_vector(0 downto 0);
  signal mix_column_return_acks: std_logic_vector(0 downto 0);
  signal mix_column_call_data: std_logic_vector(31 downto 0);
  signal mix_column_call_tag: std_logic_vector(2 downto 0);
  signal mix_column_return_data: std_logic_vector(31 downto 0);
  signal mix_column_return_tag: std_logic_vector(2 downto 0);
  -- declarations related to module password_sequence
  component password_sequence is -- 
    generic (tag_length : integer); 
    port ( -- 
      input_d_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_d_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_d_pipe_read_data : in   std_logic_vector(7 downto 0);
      input_e_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_e_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_e_pipe_read_data : in   std_logic_vector(7 downto 0);
      out_e_pipe_write_req : out  std_logic_vector(0 downto 0);
      out_e_pipe_write_ack : in   std_logic_vector(0 downto 0);
      out_e_pipe_write_data : out  std_logic_vector(7 downto 0);
      out_d_pipe_write_req : out  std_logic_vector(0 downto 0);
      out_d_pipe_write_ack : in   std_logic_vector(0 downto 0);
      out_d_pipe_write_data : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module password_sequence
  signal password_sequence_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal password_sequence_tag_out   : std_logic_vector(1 downto 0);
  signal password_sequence_start_req : std_logic;
  signal password_sequence_start_ack : std_logic;
  signal password_sequence_fin_req   : std_logic;
  signal password_sequence_fin_ack : std_logic;
  -- caller side aggregated signals for module password_sequence
  signal password_sequence_call_reqs: std_logic_vector(0 downto 0);
  signal password_sequence_call_acks: std_logic_vector(0 downto 0);
  signal password_sequence_return_reqs: std_logic_vector(0 downto 0);
  signal password_sequence_return_acks: std_logic_vector(0 downto 0);
  signal password_sequence_call_tag: std_logic_vector(0 downto 0);
  signal password_sequence_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module sbox_transform
  component sbox_transform is -- 
    generic (tag_length : integer); 
    port ( -- 
      num_0 : in  std_logic_vector(7 downto 0);
      num_1 : out  std_logic_vector(7 downto 0);
      memory_space_2_lr_req : out  std_logic_vector(0 downto 0);
      memory_space_2_lr_ack : in   std_logic_vector(0 downto 0);
      memory_space_2_lr_addr : out  std_logic_vector(7 downto 0);
      memory_space_2_lr_tag :  out  std_logic_vector(17 downto 0);
      memory_space_2_lc_req : out  std_logic_vector(0 downto 0);
      memory_space_2_lc_ack : in   std_logic_vector(0 downto 0);
      memory_space_2_lc_data : in   std_logic_vector(7 downto 0);
      memory_space_2_lc_tag :  in  std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module sbox_transform
  signal sbox_transform_num_0 :  std_logic_vector(7 downto 0);
  signal sbox_transform_num_1 :  std_logic_vector(7 downto 0);
  signal sbox_transform_in_args    : std_logic_vector(7 downto 0);
  signal sbox_transform_out_args   : std_logic_vector(7 downto 0);
  signal sbox_transform_tag_in    : std_logic_vector(4 downto 0) := (others => '0');
  signal sbox_transform_tag_out   : std_logic_vector(4 downto 0);
  signal sbox_transform_start_req : std_logic;
  signal sbox_transform_start_ack : std_logic;
  signal sbox_transform_fin_req   : std_logic;
  signal sbox_transform_fin_ack : std_logic;
  -- caller side aggregated signals for module sbox_transform
  signal sbox_transform_call_reqs: std_logic_vector(1 downto 0);
  signal sbox_transform_call_acks: std_logic_vector(1 downto 0);
  signal sbox_transform_return_reqs: std_logic_vector(1 downto 0);
  signal sbox_transform_return_acks: std_logic_vector(1 downto 0);
  signal sbox_transform_call_data: std_logic_vector(15 downto 0);
  signal sbox_transform_call_tag: std_logic_vector(5 downto 0);
  signal sbox_transform_return_data: std_logic_vector(15 downto 0);
  signal sbox_transform_return_tag: std_logic_vector(5 downto 0);
  -- declarations related to module sbox_transformation
  component sbox_transformation is -- 
    generic (tag_length : integer); 
    port ( -- 
      w : in  std_logic_vector(31 downto 0);
      nw : out  std_logic_vector(31 downto 0);
      sbox_transform_call_reqs : out  std_logic_vector(0 downto 0);
      sbox_transform_call_acks : in   std_logic_vector(0 downto 0);
      sbox_transform_call_data : out  std_logic_vector(7 downto 0);
      sbox_transform_call_tag  :  out  std_logic_vector(2 downto 0);
      sbox_transform_return_reqs : out  std_logic_vector(0 downto 0);
      sbox_transform_return_acks : in   std_logic_vector(0 downto 0);
      sbox_transform_return_data : in   std_logic_vector(7 downto 0);
      sbox_transform_return_tag :  in   std_logic_vector(2 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module sbox_transformation
  signal sbox_transformation_w :  std_logic_vector(31 downto 0);
  signal sbox_transformation_nw :  std_logic_vector(31 downto 0);
  signal sbox_transformation_in_args    : std_logic_vector(31 downto 0);
  signal sbox_transformation_out_args   : std_logic_vector(31 downto 0);
  signal sbox_transformation_tag_in    : std_logic_vector(4 downto 0) := (others => '0');
  signal sbox_transformation_tag_out   : std_logic_vector(4 downto 0);
  signal sbox_transformation_start_req : std_logic;
  signal sbox_transformation_start_ack : std_logic;
  signal sbox_transformation_fin_req   : std_logic;
  signal sbox_transformation_fin_ack : std_logic;
  -- caller side aggregated signals for module sbox_transformation
  signal sbox_transformation_call_reqs: std_logic_vector(0 downto 0);
  signal sbox_transformation_call_acks: std_logic_vector(0 downto 0);
  signal sbox_transformation_return_reqs: std_logic_vector(0 downto 0);
  signal sbox_transformation_return_acks: std_logic_vector(0 downto 0);
  signal sbox_transformation_call_data: std_logic_vector(31 downto 0);
  signal sbox_transformation_call_tag: std_logic_vector(3 downto 0);
  signal sbox_transformation_return_data: std_logic_vector(31 downto 0);
  signal sbox_transformation_return_tag: std_logic_vector(3 downto 0);
  -- declarations related to module send_msg
  component send_msg is -- 
    generic (tag_length : integer); 
    port ( -- 
      msg : in  std_logic_vector(31 downto 0);
      out_e_pipe_write_req : out  std_logic_vector(0 downto 0);
      out_e_pipe_write_ack : in   std_logic_vector(0 downto 0);
      out_e_pipe_write_data : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module send_msg
  signal send_msg_msg :  std_logic_vector(31 downto 0);
  signal send_msg_in_args    : std_logic_vector(31 downto 0);
  signal send_msg_tag_in    : std_logic_vector(3 downto 0) := (others => '0');
  signal send_msg_tag_out   : std_logic_vector(3 downto 0);
  signal send_msg_start_req : std_logic;
  signal send_msg_start_ack : std_logic;
  signal send_msg_fin_req   : std_logic;
  signal send_msg_fin_ack : std_logic;
  -- caller side aggregated signals for module send_msg
  signal send_msg_call_reqs: std_logic_vector(0 downto 0);
  signal send_msg_call_acks: std_logic_vector(0 downto 0);
  signal send_msg_return_reqs: std_logic_vector(0 downto 0);
  signal send_msg_return_acks: std_logic_vector(0 downto 0);
  signal send_msg_call_data: std_logic_vector(31 downto 0);
  signal send_msg_call_tag: std_logic_vector(2 downto 0);
  signal send_msg_return_tag: std_logic_vector(2 downto 0);
  -- declarations related to module set_rcon
  component set_rcon is -- 
    generic (tag_length : integer); 
    port ( -- 
      memory_space_1_sr_req : out  std_logic_vector(0 downto 0);
      memory_space_1_sr_ack : in   std_logic_vector(0 downto 0);
      memory_space_1_sr_addr : out  std_logic_vector(3 downto 0);
      memory_space_1_sr_data : out  std_logic_vector(31 downto 0);
      memory_space_1_sr_tag :  out  std_logic_vector(17 downto 0);
      memory_space_1_sc_req : out  std_logic_vector(0 downto 0);
      memory_space_1_sc_ack : in   std_logic_vector(0 downto 0);
      memory_space_1_sc_tag :  in  std_logic_vector(0 downto 0);
      input_e_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_e_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_e_pipe_read_data : in   std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module set_rcon
  signal set_rcon_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal set_rcon_tag_out   : std_logic_vector(1 downto 0);
  signal set_rcon_start_req : std_logic;
  signal set_rcon_start_ack : std_logic;
  signal set_rcon_fin_req   : std_logic;
  signal set_rcon_fin_ack : std_logic;
  -- caller side aggregated signals for module set_rcon
  signal set_rcon_call_reqs: std_logic_vector(0 downto 0);
  signal set_rcon_call_acks: std_logic_vector(0 downto 0);
  signal set_rcon_return_reqs: std_logic_vector(0 downto 0);
  signal set_rcon_return_acks: std_logic_vector(0 downto 0);
  signal set_rcon_call_tag: std_logic_vector(0 downto 0);
  signal set_rcon_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module set_sbox
  component set_sbox is -- 
    generic (tag_length : integer); 
    port ( -- 
      memory_space_2_sr_req : out  std_logic_vector(0 downto 0);
      memory_space_2_sr_ack : in   std_logic_vector(0 downto 0);
      memory_space_2_sr_addr : out  std_logic_vector(7 downto 0);
      memory_space_2_sr_data : out  std_logic_vector(7 downto 0);
      memory_space_2_sr_tag :  out  std_logic_vector(17 downto 0);
      memory_space_2_sc_req : out  std_logic_vector(0 downto 0);
      memory_space_2_sc_ack : in   std_logic_vector(0 downto 0);
      memory_space_2_sc_tag :  in  std_logic_vector(0 downto 0);
      input_e_pipe_read_req : out  std_logic_vector(0 downto 0);
      input_e_pipe_read_ack : in   std_logic_vector(0 downto 0);
      input_e_pipe_read_data : in   std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module set_sbox
  signal set_sbox_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal set_sbox_tag_out   : std_logic_vector(1 downto 0);
  signal set_sbox_start_req : std_logic;
  signal set_sbox_start_ack : std_logic;
  signal set_sbox_fin_req   : std_logic;
  signal set_sbox_fin_ack : std_logic;
  -- caller side aggregated signals for module set_sbox
  signal set_sbox_call_reqs: std_logic_vector(0 downto 0);
  signal set_sbox_call_acks: std_logic_vector(0 downto 0);
  signal set_sbox_return_reqs: std_logic_vector(0 downto 0);
  signal set_sbox_return_acks: std_logic_vector(0 downto 0);
  signal set_sbox_call_tag: std_logic_vector(0 downto 0);
  signal set_sbox_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module shift_row
  component shift_row is -- 
    generic (tag_length : integer); 
    port ( -- 
      w_0 : in  std_logic_vector(31 downto 0);
      w_1 : in  std_logic_vector(31 downto 0);
      w_2 : in  std_logic_vector(31 downto 0);
      w_3 : in  std_logic_vector(31 downto 0);
      nw_0 : out  std_logic_vector(31 downto 0);
      nw_1 : out  std_logic_vector(31 downto 0);
      nw_2 : out  std_logic_vector(31 downto 0);
      nw_3 : out  std_logic_vector(31 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module shift_row
  signal shift_row_w_0 :  std_logic_vector(31 downto 0);
  signal shift_row_w_1 :  std_logic_vector(31 downto 0);
  signal shift_row_w_2 :  std_logic_vector(31 downto 0);
  signal shift_row_w_3 :  std_logic_vector(31 downto 0);
  signal shift_row_nw_0 :  std_logic_vector(31 downto 0);
  signal shift_row_nw_1 :  std_logic_vector(31 downto 0);
  signal shift_row_nw_2 :  std_logic_vector(31 downto 0);
  signal shift_row_nw_3 :  std_logic_vector(31 downto 0);
  signal shift_row_in_args    : std_logic_vector(127 downto 0);
  signal shift_row_out_args   : std_logic_vector(127 downto 0);
  signal shift_row_tag_in    : std_logic_vector(2 downto 0) := (others => '0');
  signal shift_row_tag_out   : std_logic_vector(2 downto 0);
  signal shift_row_start_req : std_logic;
  signal shift_row_start_ack : std_logic;
  signal shift_row_fin_req   : std_logic;
  signal shift_row_fin_ack : std_logic;
  -- caller side aggregated signals for module shift_row
  signal shift_row_call_reqs: std_logic_vector(0 downto 0);
  signal shift_row_call_acks: std_logic_vector(0 downto 0);
  signal shift_row_return_reqs: std_logic_vector(0 downto 0);
  signal shift_row_return_acks: std_logic_vector(0 downto 0);
  signal shift_row_call_data: std_logic_vector(127 downto 0);
  signal shift_row_call_tag: std_logic_vector(1 downto 0);
  signal shift_row_return_data: std_logic_vector(127 downto 0);
  signal shift_row_return_tag: std_logic_vector(1 downto 0);
  -- declarations related to module top_module
  component top_module is -- 
    generic (tag_length : integer); 
    port ( -- 
      memory_space_0_sr_req : out  std_logic_vector(0 downto 0);
      memory_space_0_sr_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_sr_addr : out  std_logic_vector(0 downto 0);
      memory_space_0_sr_data : out  std_logic_vector(0 downto 0);
      memory_space_0_sr_tag :  out  std_logic_vector(18 downto 0);
      memory_space_0_sc_req : out  std_logic_vector(0 downto 0);
      memory_space_0_sc_ack : in   std_logic_vector(0 downto 0);
      memory_space_0_sc_tag :  in  std_logic_vector(1 downto 0);
      counter_encry_call_reqs : out  std_logic_vector(0 downto 0);
      counter_encry_call_acks : in   std_logic_vector(0 downto 0);
      counter_encry_call_data : out  std_logic_vector(255 downto 0);
      counter_encry_call_tag  :  out  std_logic_vector(0 downto 0);
      counter_encry_return_reqs : out  std_logic_vector(0 downto 0);
      counter_encry_return_acks : in   std_logic_vector(0 downto 0);
      counter_encry_return_data : in   std_logic_vector(127 downto 0);
      counter_encry_return_tag :  in   std_logic_vector(0 downto 0);
      decryption_engine_call_reqs : out  std_logic_vector(0 downto 0);
      decryption_engine_call_acks : in   std_logic_vector(0 downto 0);
      decryption_engine_call_data : out  std_logic_vector(255 downto 0);
      decryption_engine_call_tag  :  out  std_logic_vector(0 downto 0);
      decryption_engine_return_reqs : out  std_logic_vector(0 downto 0);
      decryption_engine_return_acks : in   std_logic_vector(0 downto 0);
      decryption_engine_return_tag :  in   std_logic_vector(0 downto 0);
      encryption_engine_call_reqs : out  std_logic_vector(0 downto 0);
      encryption_engine_call_acks : in   std_logic_vector(0 downto 0);
      encryption_engine_call_data : out  std_logic_vector(255 downto 0);
      encryption_engine_call_tag  :  out  std_logic_vector(0 downto 0);
      encryption_engine_return_reqs : out  std_logic_vector(0 downto 0);
      encryption_engine_return_acks : in   std_logic_vector(0 downto 0);
      encryption_engine_return_tag :  in   std_logic_vector(0 downto 0);
      encryption_key_reception_call_reqs : out  std_logic_vector(0 downto 0);
      encryption_key_reception_call_acks : in   std_logic_vector(0 downto 0);
      encryption_key_reception_call_tag  :  out  std_logic_vector(2 downto 0);
      encryption_key_reception_return_reqs : out  std_logic_vector(0 downto 0);
      encryption_key_reception_return_acks : in   std_logic_vector(0 downto 0);
      encryption_key_reception_return_data : in   std_logic_vector(31 downto 0);
      encryption_key_reception_return_tag :  in   std_logic_vector(2 downto 0);
      password_sequence_call_reqs : out  std_logic_vector(0 downto 0);
      password_sequence_call_acks : in   std_logic_vector(0 downto 0);
      password_sequence_call_tag  :  out  std_logic_vector(0 downto 0);
      password_sequence_return_reqs : out  std_logic_vector(0 downto 0);
      password_sequence_return_acks : in   std_logic_vector(0 downto 0);
      password_sequence_return_tag :  in   std_logic_vector(0 downto 0);
      handshaking_call_reqs : out  std_logic_vector(0 downto 0);
      handshaking_call_acks : in   std_logic_vector(0 downto 0);
      handshaking_call_tag  :  out  std_logic_vector(0 downto 0);
      handshaking_return_reqs : out  std_logic_vector(0 downto 0);
      handshaking_return_acks : in   std_logic_vector(0 downto 0);
      handshaking_return_tag :  in   std_logic_vector(0 downto 0);
      set_rcon_call_reqs : out  std_logic_vector(0 downto 0);
      set_rcon_call_acks : in   std_logic_vector(0 downto 0);
      set_rcon_call_tag  :  out  std_logic_vector(0 downto 0);
      set_rcon_return_reqs : out  std_logic_vector(0 downto 0);
      set_rcon_return_acks : in   std_logic_vector(0 downto 0);
      set_rcon_return_tag :  in   std_logic_vector(0 downto 0);
      set_sbox_call_reqs : out  std_logic_vector(0 downto 0);
      set_sbox_call_acks : in   std_logic_vector(0 downto 0);
      set_sbox_call_tag  :  out  std_logic_vector(0 downto 0);
      set_sbox_return_reqs : out  std_logic_vector(0 downto 0);
      set_sbox_return_acks : in   std_logic_vector(0 downto 0);
      set_sbox_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module top_module
  signal top_module_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal top_module_tag_out   : std_logic_vector(1 downto 0);
  signal top_module_start_req : std_logic;
  signal top_module_start_ack : std_logic;
  signal top_module_fin_req   : std_logic;
  signal top_module_fin_ack : std_logic;
  -- declarations related to module two_mult
  component two_mult is -- 
    generic (tag_length : integer); 
    port ( -- 
      num_0 : in  std_logic_vector(7 downto 0);
      op_0 : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module two_mult
  signal two_mult_num_0 :  std_logic_vector(7 downto 0);
  signal two_mult_op_0 :  std_logic_vector(7 downto 0);
  signal two_mult_in_args    : std_logic_vector(7 downto 0);
  signal two_mult_out_args   : std_logic_vector(7 downto 0);
  signal two_mult_tag_in    : std_logic_vector(3 downto 0) := (others => '0');
  signal two_mult_tag_out   : std_logic_vector(3 downto 0);
  signal two_mult_start_req : std_logic;
  signal two_mult_start_ack : std_logic;
  signal two_mult_fin_req   : std_logic;
  signal two_mult_fin_ack : std_logic;
  -- caller side aggregated signals for module two_mult
  signal two_mult_call_reqs: std_logic_vector(0 downto 0);
  signal two_mult_call_acks: std_logic_vector(0 downto 0);
  signal two_mult_return_reqs: std_logic_vector(0 downto 0);
  signal two_mult_return_acks: std_logic_vector(0 downto 0);
  signal two_mult_call_data: std_logic_vector(7 downto 0);
  signal two_mult_call_tag: std_logic_vector(2 downto 0);
  signal two_mult_return_data: std_logic_vector(7 downto 0);
  signal two_mult_return_tag: std_logic_vector(2 downto 0);
  -- aggregate signals for read from pipe input_d
  signal input_d_pipe_read_data: std_logic_vector(31 downto 0);
  signal input_d_pipe_read_req: std_logic_vector(3 downto 0);
  signal input_d_pipe_read_ack: std_logic_vector(3 downto 0);
  -- aggregate signals for read from pipe input_e
  signal input_e_pipe_read_data: std_logic_vector(31 downto 0);
  signal input_e_pipe_read_req: std_logic_vector(3 downto 0);
  signal input_e_pipe_read_ack: std_logic_vector(3 downto 0);
  -- aggregate signals for write to pipe out_d
  signal out_d_pipe_write_data: std_logic_vector(15 downto 0);
  signal out_d_pipe_write_req: std_logic_vector(1 downto 0);
  signal out_d_pipe_write_ack: std_logic_vector(1 downto 0);
  -- aggregate signals for write to pipe out_e
  signal out_e_pipe_write_data: std_logic_vector(23 downto 0);
  signal out_e_pipe_write_req: std_logic_vector(2 downto 0);
  signal out_e_pipe_write_ack: std_logic_vector(2 downto 0);
  -- 
begin -- 
  -- module add_round_key
  add_round_key_k_0 <= add_round_key_in_args(263 downto 232);
  add_round_key_k_1 <= add_round_key_in_args(231 downto 200);
  add_round_key_k_2 <= add_round_key_in_args(199 downto 168);
  add_round_key_k_3 <= add_round_key_in_args(167 downto 136);
  add_round_key_w_0 <= add_round_key_in_args(135 downto 104);
  add_round_key_w_1 <= add_round_key_in_args(103 downto 72);
  add_round_key_w_2 <= add_round_key_in_args(71 downto 40);
  add_round_key_w_3 <= add_round_key_in_args(39 downto 8);
  add_round_key_round_num <= add_round_key_in_args(7 downto 0);
  add_round_key_out_args <= add_round_key_nk_0 & add_round_key_nk_1 & add_round_key_nk_2 & add_round_key_nk_3 & add_round_key_nw_0 & add_round_key_nw_1 & add_round_key_nw_2 & add_round_key_nw_3 ;
  -- call arbiter for module add_round_key
  add_round_key_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 264,
      return_data_width => 256,
      callee_tag_length => 1,
      caller_tag_length => 2--
    )
    port map(-- 
      call_reqs => add_round_key_call_reqs,
      call_acks => add_round_key_call_acks,
      return_reqs => add_round_key_return_reqs,
      return_acks => add_round_key_return_acks,
      call_data  => add_round_key_call_data,
      call_tag  => add_round_key_call_tag,
      return_tag  => add_round_key_return_tag,
      call_mtag => add_round_key_tag_in,
      return_mtag => add_round_key_tag_out,
      return_data =>add_round_key_return_data,
      call_mreq => add_round_key_start_req,
      call_mack => add_round_key_start_ack,
      return_mreq => add_round_key_fin_req,
      return_mack => add_round_key_fin_ack,
      call_mdata => add_round_key_in_args,
      return_mdata => add_round_key_out_args,
      clk => clk, 
      reset => reset --
    ); --
  add_round_key_instance:add_round_key-- 
    generic map(tag_length => 3)
    port map(-- 
      k_0 => add_round_key_k_0,
      k_1 => add_round_key_k_1,
      k_2 => add_round_key_k_2,
      k_3 => add_round_key_k_3,
      w_0 => add_round_key_w_0,
      w_1 => add_round_key_w_1,
      w_2 => add_round_key_w_2,
      w_3 => add_round_key_w_3,
      round_num => add_round_key_round_num,
      nk_0 => add_round_key_nk_0,
      nk_1 => add_round_key_nk_1,
      nk_2 => add_round_key_nk_2,
      nk_3 => add_round_key_nk_3,
      nw_0 => add_round_key_nw_0,
      nw_1 => add_round_key_nw_1,
      nw_2 => add_round_key_nw_2,
      nw_3 => add_round_key_nw_3,
      start_req => add_round_key_start_req,
      start_ack => add_round_key_start_ack,
      fin_req => add_round_key_fin_req,
      fin_ack => add_round_key_fin_ack,
      clk => clk,
      reset => reset,
      memory_space_1_lr_req => memory_space_1_lr_req(0 downto 0),
      memory_space_1_lr_ack => memory_space_1_lr_ack(0 downto 0),
      memory_space_1_lr_addr => memory_space_1_lr_addr(3 downto 0),
      memory_space_1_lr_tag => memory_space_1_lr_tag(17 downto 0),
      memory_space_1_lc_req => memory_space_1_lc_req(0 downto 0),
      memory_space_1_lc_ack => memory_space_1_lc_ack(0 downto 0),
      memory_space_1_lc_data => memory_space_1_lc_data(31 downto 0),
      memory_space_1_lc_tag => memory_space_1_lc_tag(0 downto 0),
      sbox_transform_call_reqs => sbox_transform_call_reqs(1 downto 1),
      sbox_transform_call_acks => sbox_transform_call_acks(1 downto 1),
      sbox_transform_call_data => sbox_transform_call_data(15 downto 8),
      sbox_transform_call_tag => sbox_transform_call_tag(5 downto 3),
      sbox_transform_return_reqs => sbox_transform_return_reqs(1 downto 1),
      sbox_transform_return_acks => sbox_transform_return_acks(1 downto 1),
      sbox_transform_return_data => sbox_transform_return_data(15 downto 8),
      sbox_transform_return_tag => sbox_transform_return_tag(5 downto 3),
      tag_in => add_round_key_tag_in,
      tag_out => add_round_key_tag_out-- 
    ); -- 
  -- module checksum
  checksum_m_0 <= checksum_in_args(7 downto 0);
  checksum_out_args <= checksum_c_0 ;
  -- call arbiter for module checksum
  checksum_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 8,
      return_data_width => 1,
      callee_tag_length => 1,
      caller_tag_length => 4--
    )
    port map(-- 
      call_reqs => checksum_call_reqs,
      call_acks => checksum_call_acks,
      return_reqs => checksum_return_reqs,
      return_acks => checksum_return_acks,
      call_data  => checksum_call_data,
      call_tag  => checksum_call_tag,
      return_tag  => checksum_return_tag,
      call_mtag => checksum_tag_in,
      return_mtag => checksum_tag_out,
      return_data =>checksum_return_data,
      call_mreq => checksum_start_req,
      call_mack => checksum_start_ack,
      return_mreq => checksum_fin_req,
      return_mack => checksum_fin_ack,
      call_mdata => checksum_in_args,
      return_mdata => checksum_out_args,
      clk => clk, 
      reset => reset --
    ); --
  checksum_instance:checksum-- 
    generic map(tag_length => 5)
    port map(-- 
      m_0 => checksum_m_0,
      c_0 => checksum_c_0,
      start_req => checksum_start_req,
      start_ack => checksum_start_ack,
      fin_req => checksum_fin_req,
      fin_ack => checksum_fin_ack,
      clk => clk,
      reset => reset,
      tag_in => checksum_tag_in,
      tag_out => checksum_tag_out-- 
    ); -- 
  -- module checksum_calculation
  checksum_calculation_m_0 <= checksum_calculation_in_args(111 downto 104);
  checksum_calculation_m_1 <= checksum_calculation_in_args(103 downto 96);
  checksum_calculation_m_2 <= checksum_calculation_in_args(95 downto 88);
  checksum_calculation_m_3 <= checksum_calculation_in_args(87 downto 80);
  checksum_calculation_m_4 <= checksum_calculation_in_args(79 downto 72);
  checksum_calculation_m_5 <= checksum_calculation_in_args(71 downto 64);
  checksum_calculation_m_6 <= checksum_calculation_in_args(63 downto 56);
  checksum_calculation_m_7 <= checksum_calculation_in_args(55 downto 48);
  checksum_calculation_m_8 <= checksum_calculation_in_args(47 downto 40);
  checksum_calculation_m_9 <= checksum_calculation_in_args(39 downto 32);
  checksum_calculation_m_10 <= checksum_calculation_in_args(31 downto 24);
  checksum_calculation_m_11 <= checksum_calculation_in_args(23 downto 16);
  checksum_calculation_m_12 <= checksum_calculation_in_args(15 downto 8);
  checksum_calculation_m_13 <= checksum_calculation_in_args(7 downto 0);
  checksum_calculation_out_args <= checksum_calculation_m_14 & checksum_calculation_m_15 ;
  -- call arbiter for module checksum_calculation
  checksum_calculation_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 2,
      call_data_width => 112,
      return_data_width => 16,
      callee_tag_length => 2,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => checksum_calculation_call_reqs,
      call_acks => checksum_calculation_call_acks,
      return_reqs => checksum_calculation_return_reqs,
      return_acks => checksum_calculation_return_acks,
      call_data  => checksum_calculation_call_data,
      call_tag  => checksum_calculation_call_tag,
      return_tag  => checksum_calculation_return_tag,
      call_mtag => checksum_calculation_tag_in,
      return_mtag => checksum_calculation_tag_out,
      return_data =>checksum_calculation_return_data,
      call_mreq => checksum_calculation_start_req,
      call_mack => checksum_calculation_start_ack,
      return_mreq => checksum_calculation_fin_req,
      return_mack => checksum_calculation_fin_ack,
      call_mdata => checksum_calculation_in_args,
      return_mdata => checksum_calculation_out_args,
      clk => clk, 
      reset => reset --
    ); --
  checksum_calculation_instance:checksum_calculation-- 
    generic map(tag_length => 3)
    port map(-- 
      m_0 => checksum_calculation_m_0,
      m_1 => checksum_calculation_m_1,
      m_2 => checksum_calculation_m_2,
      m_3 => checksum_calculation_m_3,
      m_4 => checksum_calculation_m_4,
      m_5 => checksum_calculation_m_5,
      m_6 => checksum_calculation_m_6,
      m_7 => checksum_calculation_m_7,
      m_8 => checksum_calculation_m_8,
      m_9 => checksum_calculation_m_9,
      m_10 => checksum_calculation_m_10,
      m_11 => checksum_calculation_m_11,
      m_12 => checksum_calculation_m_12,
      m_13 => checksum_calculation_m_13,
      m_14 => checksum_calculation_m_14,
      m_15 => checksum_calculation_m_15,
      start_req => checksum_calculation_start_req,
      start_ack => checksum_calculation_start_ack,
      fin_req => checksum_calculation_fin_req,
      fin_ack => checksum_calculation_fin_ack,
      clk => clk,
      reset => reset,
      checksum_call_reqs => checksum_call_reqs(0 downto 0),
      checksum_call_acks => checksum_call_acks(0 downto 0),
      checksum_call_data => checksum_call_data(7 downto 0),
      checksum_call_tag => checksum_call_tag(3 downto 0),
      checksum_return_reqs => checksum_return_reqs(0 downto 0),
      checksum_return_acks => checksum_return_acks(0 downto 0),
      checksum_return_data => checksum_return_data(0 downto 0),
      checksum_return_tag => checksum_return_tag(3 downto 0),
      tag_in => checksum_calculation_tag_in,
      tag_out => checksum_calculation_tag_out-- 
    ); -- 
  -- module counter_encry
  counter_encry_k0_0 <= counter_encry_in_args(255 downto 224);
  counter_encry_k0_1 <= counter_encry_in_args(223 downto 192);
  counter_encry_k0_2 <= counter_encry_in_args(191 downto 160);
  counter_encry_k0_3 <= counter_encry_in_args(159 downto 128);
  counter_encry_counter <= counter_encry_in_args(127 downto 0);
  counter_encry_out_args <= counter_encry_lw7_0 & counter_encry_lw7_1 & counter_encry_lw7_2 & counter_encry_lw7_3 ;
  -- call arbiter for module counter_encry
  counter_encry_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 3,
      call_data_width => 256,
      return_data_width => 128,
      callee_tag_length => 2,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => counter_encry_call_reqs,
      call_acks => counter_encry_call_acks,
      return_reqs => counter_encry_return_reqs,
      return_acks => counter_encry_return_acks,
      call_data  => counter_encry_call_data,
      call_tag  => counter_encry_call_tag,
      return_tag  => counter_encry_return_tag,
      call_mtag => counter_encry_tag_in,
      return_mtag => counter_encry_tag_out,
      return_data =>counter_encry_return_data,
      call_mreq => counter_encry_start_req,
      call_mack => counter_encry_start_ack,
      return_mreq => counter_encry_fin_req,
      return_mack => counter_encry_fin_ack,
      call_mdata => counter_encry_in_args,
      return_mdata => counter_encry_out_args,
      clk => clk, 
      reset => reset --
    ); --
  counter_encry_instance:counter_encry-- 
    generic map(tag_length => 3)
    port map(-- 
      k0_0 => counter_encry_k0_0,
      k0_1 => counter_encry_k0_1,
      k0_2 => counter_encry_k0_2,
      k0_3 => counter_encry_k0_3,
      counter => counter_encry_counter,
      lw7_0 => counter_encry_lw7_0,
      lw7_1 => counter_encry_lw7_1,
      lw7_2 => counter_encry_lw7_2,
      lw7_3 => counter_encry_lw7_3,
      start_req => counter_encry_start_req,
      start_ack => counter_encry_start_ack,
      fin_req => counter_encry_fin_req,
      fin_ack => counter_encry_fin_ack,
      clk => clk,
      reset => reset,
      add_round_key_call_reqs => add_round_key_call_reqs(0 downto 0),
      add_round_key_call_acks => add_round_key_call_acks(0 downto 0),
      add_round_key_call_data => add_round_key_call_data(263 downto 0),
      add_round_key_call_tag => add_round_key_call_tag(1 downto 0),
      add_round_key_return_reqs => add_round_key_return_reqs(0 downto 0),
      add_round_key_return_acks => add_round_key_return_acks(0 downto 0),
      add_round_key_return_data => add_round_key_return_data(255 downto 0),
      add_round_key_return_tag => add_round_key_return_tag(1 downto 0),
      sbox_transformation_call_reqs => sbox_transformation_call_reqs(0 downto 0),
      sbox_transformation_call_acks => sbox_transformation_call_acks(0 downto 0),
      sbox_transformation_call_data => sbox_transformation_call_data(31 downto 0),
      sbox_transformation_call_tag => sbox_transformation_call_tag(3 downto 0),
      sbox_transformation_return_reqs => sbox_transformation_return_reqs(0 downto 0),
      sbox_transformation_return_acks => sbox_transformation_return_acks(0 downto 0),
      sbox_transformation_return_data => sbox_transformation_return_data(31 downto 0),
      sbox_transformation_return_tag => sbox_transformation_return_tag(3 downto 0),
      shift_row_call_reqs => shift_row_call_reqs(0 downto 0),
      shift_row_call_acks => shift_row_call_acks(0 downto 0),
      shift_row_call_data => shift_row_call_data(127 downto 0),
      shift_row_call_tag => shift_row_call_tag(1 downto 0),
      shift_row_return_reqs => shift_row_return_reqs(0 downto 0),
      shift_row_return_acks => shift_row_return_acks(0 downto 0),
      shift_row_return_data => shift_row_return_data(127 downto 0),
      shift_row_return_tag => shift_row_return_tag(1 downto 0),
      mix_column_call_reqs => mix_column_call_reqs(0 downto 0),
      mix_column_call_acks => mix_column_call_acks(0 downto 0),
      mix_column_call_data => mix_column_call_data(31 downto 0),
      mix_column_call_tag => mix_column_call_tag(2 downto 0),
      mix_column_return_reqs => mix_column_return_reqs(0 downto 0),
      mix_column_return_acks => mix_column_return_acks(0 downto 0),
      mix_column_return_data => mix_column_return_data(31 downto 0),
      mix_column_return_tag => mix_column_return_tag(2 downto 0),
      tag_in => counter_encry_tag_in,
      tag_out => counter_encry_tag_out-- 
    ); -- 
  -- module decryption_engine
  decryption_engine_a0_0 <= decryption_engine_in_args(255 downto 224);
  decryption_engine_a0_1 <= decryption_engine_in_args(223 downto 192);
  decryption_engine_a0_2 <= decryption_engine_in_args(191 downto 160);
  decryption_engine_a0_3 <= decryption_engine_in_args(159 downto 128);
  decryption_engine_decry_counter <= decryption_engine_in_args(127 downto 0);
  -- call arbiter for module decryption_engine
  decryption_engine_arbiter: SplitCallArbiterNoOutargs -- 
    generic map( --
      name => "SplitCallArbiterNoOutargs", num_reqs => 1,
      call_data_width => 256,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => decryption_engine_call_reqs,
      call_acks => decryption_engine_call_acks,
      return_reqs => decryption_engine_return_reqs,
      return_acks => decryption_engine_return_acks,
      call_data  => decryption_engine_call_data,
      call_tag  => decryption_engine_call_tag,
      return_tag  => decryption_engine_return_tag,
      call_mtag => decryption_engine_tag_in,
      return_mtag => decryption_engine_tag_out,
      call_mreq => decryption_engine_start_req,
      call_mack => decryption_engine_start_ack,
      return_mreq => decryption_engine_fin_req,
      return_mack => decryption_engine_fin_ack,
      call_mdata => decryption_engine_in_args,
      clk => clk, 
      reset => reset --
    ); --
  decryption_engine_instance:decryption_engine-- 
    generic map(tag_length => 2)
    port map(-- 
      a0_0 => decryption_engine_a0_0,
      a0_1 => decryption_engine_a0_1,
      a0_2 => decryption_engine_a0_2,
      a0_3 => decryption_engine_a0_3,
      decry_counter => decryption_engine_decry_counter,
      start_req => decryption_engine_start_req,
      start_ack => decryption_engine_start_ack,
      fin_req => decryption_engine_fin_req,
      fin_ack => decryption_engine_fin_ack,
      clk => clk,
      reset => reset,
      memory_space_0_sr_req => memory_space_0_sr_req(1 downto 1),
      memory_space_0_sr_ack => memory_space_0_sr_ack(1 downto 1),
      memory_space_0_sr_addr => memory_space_0_sr_addr(1 downto 1),
      memory_space_0_sr_data => memory_space_0_sr_data(1 downto 1),
      memory_space_0_sr_tag => memory_space_0_sr_tag(37 downto 19),
      memory_space_0_sc_req => memory_space_0_sc_req(1 downto 1),
      memory_space_0_sc_ack => memory_space_0_sc_ack(1 downto 1),
      memory_space_0_sc_tag => memory_space_0_sc_tag(3 downto 2),
      input_d_pipe_read_req => input_d_pipe_read_req(3 downto 3),
      input_d_pipe_read_ack => input_d_pipe_read_ack(3 downto 3),
      input_d_pipe_read_data => input_d_pipe_read_data(31 downto 24),
      out_d_pipe_write_req => out_d_pipe_write_req(1 downto 1),
      out_d_pipe_write_ack => out_d_pipe_write_ack(1 downto 1),
      out_d_pipe_write_data => out_d_pipe_write_data(15 downto 8),
      checksum_calculation_call_reqs => checksum_calculation_call_reqs(1 downto 1),
      checksum_calculation_call_acks => checksum_calculation_call_acks(1 downto 1),
      checksum_calculation_call_data => checksum_calculation_call_data(223 downto 112),
      checksum_calculation_call_tag => checksum_calculation_call_tag(1 downto 1),
      checksum_calculation_return_reqs => checksum_calculation_return_reqs(1 downto 1),
      checksum_calculation_return_acks => checksum_calculation_return_acks(1 downto 1),
      checksum_calculation_return_data => checksum_calculation_return_data(31 downto 16),
      checksum_calculation_return_tag => checksum_calculation_return_tag(1 downto 1),
      counter_encry_call_reqs => counter_encry_call_reqs(2 downto 2),
      counter_encry_call_acks => counter_encry_call_acks(2 downto 2),
      counter_encry_call_data => counter_encry_call_data(767 downto 512),
      counter_encry_call_tag => counter_encry_call_tag(2 downto 2),
      counter_encry_return_reqs => counter_encry_return_reqs(2 downto 2),
      counter_encry_return_acks => counter_encry_return_acks(2 downto 2),
      counter_encry_return_data => counter_encry_return_data(383 downto 256),
      counter_encry_return_tag => counter_encry_return_tag(2 downto 2),
      tag_in => decryption_engine_tag_in,
      tag_out => decryption_engine_tag_out-- 
    ); -- 
  -- module encryption_engine
  encryption_engine_k0_0 <= encryption_engine_in_args(255 downto 224);
  encryption_engine_k0_1 <= encryption_engine_in_args(223 downto 192);
  encryption_engine_k0_2 <= encryption_engine_in_args(191 downto 160);
  encryption_engine_k0_3 <= encryption_engine_in_args(159 downto 128);
  encryption_engine_encry_counter <= encryption_engine_in_args(127 downto 0);
  -- call arbiter for module encryption_engine
  encryption_engine_arbiter: SplitCallArbiterNoOutargs -- 
    generic map( --
      name => "SplitCallArbiterNoOutargs", num_reqs => 1,
      call_data_width => 256,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => encryption_engine_call_reqs,
      call_acks => encryption_engine_call_acks,
      return_reqs => encryption_engine_return_reqs,
      return_acks => encryption_engine_return_acks,
      call_data  => encryption_engine_call_data,
      call_tag  => encryption_engine_call_tag,
      return_tag  => encryption_engine_return_tag,
      call_mtag => encryption_engine_tag_in,
      return_mtag => encryption_engine_tag_out,
      call_mreq => encryption_engine_start_req,
      call_mack => encryption_engine_start_ack,
      return_mreq => encryption_engine_fin_req,
      return_mack => encryption_engine_fin_ack,
      call_mdata => encryption_engine_in_args,
      clk => clk, 
      reset => reset --
    ); --
  encryption_engine_instance:encryption_engine-- 
    generic map(tag_length => 2)
    port map(-- 
      k0_0 => encryption_engine_k0_0,
      k0_1 => encryption_engine_k0_1,
      k0_2 => encryption_engine_k0_2,
      k0_3 => encryption_engine_k0_3,
      encry_counter => encryption_engine_encry_counter,
      start_req => encryption_engine_start_req,
      start_ack => encryption_engine_start_ack,
      fin_req => encryption_engine_fin_req,
      fin_ack => encryption_engine_fin_ack,
      clk => clk,
      reset => reset,
      memory_space_0_lr_req => memory_space_0_lr_req(0 downto 0),
      memory_space_0_lr_ack => memory_space_0_lr_ack(0 downto 0),
      memory_space_0_lr_addr => memory_space_0_lr_addr(0 downto 0),
      memory_space_0_lr_tag => memory_space_0_lr_tag(18 downto 0),
      memory_space_0_lc_req => memory_space_0_lc_req(0 downto 0),
      memory_space_0_lc_ack => memory_space_0_lc_ack(0 downto 0),
      memory_space_0_lc_data => memory_space_0_lc_data(0 downto 0),
      memory_space_0_lc_tag => memory_space_0_lc_tag(1 downto 0),
      input_e_pipe_read_req => input_e_pipe_read_req(3 downto 3),
      input_e_pipe_read_ack => input_e_pipe_read_ack(3 downto 3),
      input_e_pipe_read_data => input_e_pipe_read_data(31 downto 24),
      checksum_calculation_call_reqs => checksum_calculation_call_reqs(0 downto 0),
      checksum_calculation_call_acks => checksum_calculation_call_acks(0 downto 0),
      checksum_calculation_call_data => checksum_calculation_call_data(111 downto 0),
      checksum_calculation_call_tag => checksum_calculation_call_tag(0 downto 0),
      checksum_calculation_return_reqs => checksum_calculation_return_reqs(0 downto 0),
      checksum_calculation_return_acks => checksum_calculation_return_acks(0 downto 0),
      checksum_calculation_return_data => checksum_calculation_return_data(15 downto 0),
      checksum_calculation_return_tag => checksum_calculation_return_tag(0 downto 0),
      counter_encry_call_reqs => counter_encry_call_reqs(1 downto 1),
      counter_encry_call_acks => counter_encry_call_acks(1 downto 1),
      counter_encry_call_data => counter_encry_call_data(511 downto 256),
      counter_encry_call_tag => counter_encry_call_tag(1 downto 1),
      counter_encry_return_reqs => counter_encry_return_reqs(1 downto 1),
      counter_encry_return_acks => counter_encry_return_acks(1 downto 1),
      counter_encry_return_data => counter_encry_return_data(255 downto 128),
      counter_encry_return_tag => counter_encry_return_tag(1 downto 1),
      send_msg_call_reqs => send_msg_call_reqs(0 downto 0),
      send_msg_call_acks => send_msg_call_acks(0 downto 0),
      send_msg_call_data => send_msg_call_data(31 downto 0),
      send_msg_call_tag => send_msg_call_tag(2 downto 0),
      send_msg_return_reqs => send_msg_return_reqs(0 downto 0),
      send_msg_return_acks => send_msg_return_acks(0 downto 0),
      send_msg_return_tag => send_msg_return_tag(2 downto 0),
      tag_in => encryption_engine_tag_in,
      tag_out => encryption_engine_tag_out-- 
    ); -- 
  -- module encryption_key_reception
  encryption_key_reception_out_args <= encryption_key_reception_key_out ;
  -- call arbiter for module encryption_key_reception
  encryption_key_reception_arbiter: SplitCallArbiterNoInargs -- 
    generic map( --
      name => "SplitCallArbiterNoInargs", num_reqs => 1,
      return_data_width => 32,
      callee_tag_length => 1,
      caller_tag_length => 3--
    )
    port map(-- 
      call_reqs => encryption_key_reception_call_reqs,
      call_acks => encryption_key_reception_call_acks,
      return_reqs => encryption_key_reception_return_reqs,
      return_acks => encryption_key_reception_return_acks,
      call_tag  => encryption_key_reception_call_tag,
      return_tag  => encryption_key_reception_return_tag,
      call_mtag => encryption_key_reception_tag_in,
      return_mtag => encryption_key_reception_tag_out,
      return_data =>encryption_key_reception_return_data,
      call_mreq => encryption_key_reception_start_req,
      call_mack => encryption_key_reception_start_ack,
      return_mreq => encryption_key_reception_fin_req,
      return_mack => encryption_key_reception_fin_ack,
      return_mdata => encryption_key_reception_out_args,
      clk => clk, 
      reset => reset --
    ); --
  encryption_key_reception_instance:encryption_key_reception-- 
    generic map(tag_length => 4)
    port map(-- 
      key_out => encryption_key_reception_key_out,
      start_req => encryption_key_reception_start_req,
      start_ack => encryption_key_reception_start_ack,
      fin_req => encryption_key_reception_fin_req,
      fin_ack => encryption_key_reception_fin_ack,
      clk => clk,
      reset => reset,
      input_d_pipe_read_req => input_d_pipe_read_req(2 downto 2),
      input_d_pipe_read_ack => input_d_pipe_read_ack(2 downto 2),
      input_d_pipe_read_data => input_d_pipe_read_data(23 downto 16),
      tag_in => encryption_key_reception_tag_in,
      tag_out => encryption_key_reception_tag_out-- 
    ); -- 
  -- module handshaking
  -- call arbiter for module handshaking
  handshaking_arbiter: SplitCallArbiterNoInargsNoOutargs -- 
    generic map( --
      name => "SplitCallArbiterNoInargsNoOutargs", num_reqs => 1,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => handshaking_call_reqs,
      call_acks => handshaking_call_acks,
      return_reqs => handshaking_return_reqs,
      return_acks => handshaking_return_acks,
      call_tag  => handshaking_call_tag,
      return_tag  => handshaking_return_tag,
      call_mtag => handshaking_tag_in,
      return_mtag => handshaking_tag_out,
      call_mreq => handshaking_start_req,
      call_mack => handshaking_start_ack,
      return_mreq => handshaking_fin_req,
      return_mack => handshaking_fin_ack,
      clk => clk, 
      reset => reset --
    ); --
  handshaking_instance:handshaking-- 
    generic map(tag_length => 2)
    port map(-- 
      start_req => handshaking_start_req,
      start_ack => handshaking_start_ack,
      fin_req => handshaking_fin_req,
      fin_ack => handshaking_fin_ack,
      clk => clk,
      reset => reset,
      input_d_pipe_read_req => input_d_pipe_read_req(0 downto 0),
      input_d_pipe_read_ack => input_d_pipe_read_ack(0 downto 0),
      input_d_pipe_read_data => input_d_pipe_read_data(7 downto 0),
      out_e_pipe_write_req => out_e_pipe_write_req(0 downto 0),
      out_e_pipe_write_ack => out_e_pipe_write_ack(0 downto 0),
      out_e_pipe_write_data => out_e_pipe_write_data(7 downto 0),
      tag_in => handshaking_tag_in,
      tag_out => handshaking_tag_out-- 
    ); -- 
  -- module mix_column
  mix_column_w <= mix_column_in_args(31 downto 0);
  mix_column_out_args <= mix_column_nw ;
  -- call arbiter for module mix_column
  mix_column_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 32,
      return_data_width => 32,
      callee_tag_length => 1,
      caller_tag_length => 3--
    )
    port map(-- 
      call_reqs => mix_column_call_reqs,
      call_acks => mix_column_call_acks,
      return_reqs => mix_column_return_reqs,
      return_acks => mix_column_return_acks,
      call_data  => mix_column_call_data,
      call_tag  => mix_column_call_tag,
      return_tag  => mix_column_return_tag,
      call_mtag => mix_column_tag_in,
      return_mtag => mix_column_tag_out,
      return_data =>mix_column_return_data,
      call_mreq => mix_column_start_req,
      call_mack => mix_column_start_ack,
      return_mreq => mix_column_fin_req,
      return_mack => mix_column_fin_ack,
      call_mdata => mix_column_in_args,
      return_mdata => mix_column_out_args,
      clk => clk, 
      reset => reset --
    ); --
  mix_column_instance:mix_column-- 
    generic map(tag_length => 4)
    port map(-- 
      w => mix_column_w,
      nw => mix_column_nw,
      start_req => mix_column_start_req,
      start_ack => mix_column_start_ack,
      fin_req => mix_column_fin_req,
      fin_ack => mix_column_fin_ack,
      clk => clk,
      reset => reset,
      two_mult_call_reqs => two_mult_call_reqs(0 downto 0),
      two_mult_call_acks => two_mult_call_acks(0 downto 0),
      two_mult_call_data => two_mult_call_data(7 downto 0),
      two_mult_call_tag => two_mult_call_tag(2 downto 0),
      two_mult_return_reqs => two_mult_return_reqs(0 downto 0),
      two_mult_return_acks => two_mult_return_acks(0 downto 0),
      two_mult_return_data => two_mult_return_data(7 downto 0),
      two_mult_return_tag => two_mult_return_tag(2 downto 0),
      tag_in => mix_column_tag_in,
      tag_out => mix_column_tag_out-- 
    ); -- 
  -- module password_sequence
  -- call arbiter for module password_sequence
  password_sequence_arbiter: SplitCallArbiterNoInargsNoOutargs -- 
    generic map( --
      name => "SplitCallArbiterNoInargsNoOutargs", num_reqs => 1,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => password_sequence_call_reqs,
      call_acks => password_sequence_call_acks,
      return_reqs => password_sequence_return_reqs,
      return_acks => password_sequence_return_acks,
      call_tag  => password_sequence_call_tag,
      return_tag  => password_sequence_return_tag,
      call_mtag => password_sequence_tag_in,
      return_mtag => password_sequence_tag_out,
      call_mreq => password_sequence_start_req,
      call_mack => password_sequence_start_ack,
      return_mreq => password_sequence_fin_req,
      return_mack => password_sequence_fin_ack,
      clk => clk, 
      reset => reset --
    ); --
  password_sequence_instance:password_sequence-- 
    generic map(tag_length => 2)
    port map(-- 
      start_req => password_sequence_start_req,
      start_ack => password_sequence_start_ack,
      fin_req => password_sequence_fin_req,
      fin_ack => password_sequence_fin_ack,
      clk => clk,
      reset => reset,
      input_d_pipe_read_req => input_d_pipe_read_req(1 downto 1),
      input_d_pipe_read_ack => input_d_pipe_read_ack(1 downto 1),
      input_d_pipe_read_data => input_d_pipe_read_data(15 downto 8),
      input_e_pipe_read_req => input_e_pipe_read_req(2 downto 2),
      input_e_pipe_read_ack => input_e_pipe_read_ack(2 downto 2),
      input_e_pipe_read_data => input_e_pipe_read_data(23 downto 16),
      out_e_pipe_write_req => out_e_pipe_write_req(2 downto 2),
      out_e_pipe_write_ack => out_e_pipe_write_ack(2 downto 2),
      out_e_pipe_write_data => out_e_pipe_write_data(23 downto 16),
      out_d_pipe_write_req => out_d_pipe_write_req(0 downto 0),
      out_d_pipe_write_ack => out_d_pipe_write_ack(0 downto 0),
      out_d_pipe_write_data => out_d_pipe_write_data(7 downto 0),
      tag_in => password_sequence_tag_in,
      tag_out => password_sequence_tag_out-- 
    ); -- 
  -- module sbox_transform
  sbox_transform_num_0 <= sbox_transform_in_args(7 downto 0);
  sbox_transform_out_args <= sbox_transform_num_1 ;
  -- call arbiter for module sbox_transform
  sbox_transform_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 2,
      call_data_width => 8,
      return_data_width => 8,
      callee_tag_length => 2,
      caller_tag_length => 3--
    )
    port map(-- 
      call_reqs => sbox_transform_call_reqs,
      call_acks => sbox_transform_call_acks,
      return_reqs => sbox_transform_return_reqs,
      return_acks => sbox_transform_return_acks,
      call_data  => sbox_transform_call_data,
      call_tag  => sbox_transform_call_tag,
      return_tag  => sbox_transform_return_tag,
      call_mtag => sbox_transform_tag_in,
      return_mtag => sbox_transform_tag_out,
      return_data =>sbox_transform_return_data,
      call_mreq => sbox_transform_start_req,
      call_mack => sbox_transform_start_ack,
      return_mreq => sbox_transform_fin_req,
      return_mack => sbox_transform_fin_ack,
      call_mdata => sbox_transform_in_args,
      return_mdata => sbox_transform_out_args,
      clk => clk, 
      reset => reset --
    ); --
  sbox_transform_instance:sbox_transform-- 
    generic map(tag_length => 5)
    port map(-- 
      num_0 => sbox_transform_num_0,
      num_1 => sbox_transform_num_1,
      start_req => sbox_transform_start_req,
      start_ack => sbox_transform_start_ack,
      fin_req => sbox_transform_fin_req,
      fin_ack => sbox_transform_fin_ack,
      clk => clk,
      reset => reset,
      memory_space_2_lr_req => memory_space_2_lr_req(0 downto 0),
      memory_space_2_lr_ack => memory_space_2_lr_ack(0 downto 0),
      memory_space_2_lr_addr => memory_space_2_lr_addr(7 downto 0),
      memory_space_2_lr_tag => memory_space_2_lr_tag(17 downto 0),
      memory_space_2_lc_req => memory_space_2_lc_req(0 downto 0),
      memory_space_2_lc_ack => memory_space_2_lc_ack(0 downto 0),
      memory_space_2_lc_data => memory_space_2_lc_data(7 downto 0),
      memory_space_2_lc_tag => memory_space_2_lc_tag(0 downto 0),
      tag_in => sbox_transform_tag_in,
      tag_out => sbox_transform_tag_out-- 
    ); -- 
  -- module sbox_transformation
  sbox_transformation_w <= sbox_transformation_in_args(31 downto 0);
  sbox_transformation_out_args <= sbox_transformation_nw ;
  -- call arbiter for module sbox_transformation
  sbox_transformation_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 32,
      return_data_width => 32,
      callee_tag_length => 1,
      caller_tag_length => 4--
    )
    port map(-- 
      call_reqs => sbox_transformation_call_reqs,
      call_acks => sbox_transformation_call_acks,
      return_reqs => sbox_transformation_return_reqs,
      return_acks => sbox_transformation_return_acks,
      call_data  => sbox_transformation_call_data,
      call_tag  => sbox_transformation_call_tag,
      return_tag  => sbox_transformation_return_tag,
      call_mtag => sbox_transformation_tag_in,
      return_mtag => sbox_transformation_tag_out,
      return_data =>sbox_transformation_return_data,
      call_mreq => sbox_transformation_start_req,
      call_mack => sbox_transformation_start_ack,
      return_mreq => sbox_transformation_fin_req,
      return_mack => sbox_transformation_fin_ack,
      call_mdata => sbox_transformation_in_args,
      return_mdata => sbox_transformation_out_args,
      clk => clk, 
      reset => reset --
    ); --
  sbox_transformation_instance:sbox_transformation-- 
    generic map(tag_length => 5)
    port map(-- 
      w => sbox_transformation_w,
      nw => sbox_transformation_nw,
      start_req => sbox_transformation_start_req,
      start_ack => sbox_transformation_start_ack,
      fin_req => sbox_transformation_fin_req,
      fin_ack => sbox_transformation_fin_ack,
      clk => clk,
      reset => reset,
      sbox_transform_call_reqs => sbox_transform_call_reqs(0 downto 0),
      sbox_transform_call_acks => sbox_transform_call_acks(0 downto 0),
      sbox_transform_call_data => sbox_transform_call_data(7 downto 0),
      sbox_transform_call_tag => sbox_transform_call_tag(2 downto 0),
      sbox_transform_return_reqs => sbox_transform_return_reqs(0 downto 0),
      sbox_transform_return_acks => sbox_transform_return_acks(0 downto 0),
      sbox_transform_return_data => sbox_transform_return_data(7 downto 0),
      sbox_transform_return_tag => sbox_transform_return_tag(2 downto 0),
      tag_in => sbox_transformation_tag_in,
      tag_out => sbox_transformation_tag_out-- 
    ); -- 
  -- module send_msg
  send_msg_msg <= send_msg_in_args(31 downto 0);
  -- call arbiter for module send_msg
  send_msg_arbiter: SplitCallArbiterNoOutargs -- 
    generic map( --
      name => "SplitCallArbiterNoOutargs", num_reqs => 1,
      call_data_width => 32,
      callee_tag_length => 1,
      caller_tag_length => 3--
    )
    port map(-- 
      call_reqs => send_msg_call_reqs,
      call_acks => send_msg_call_acks,
      return_reqs => send_msg_return_reqs,
      return_acks => send_msg_return_acks,
      call_data  => send_msg_call_data,
      call_tag  => send_msg_call_tag,
      return_tag  => send_msg_return_tag,
      call_mtag => send_msg_tag_in,
      return_mtag => send_msg_tag_out,
      call_mreq => send_msg_start_req,
      call_mack => send_msg_start_ack,
      return_mreq => send_msg_fin_req,
      return_mack => send_msg_fin_ack,
      call_mdata => send_msg_in_args,
      clk => clk, 
      reset => reset --
    ); --
  send_msg_instance:send_msg-- 
    generic map(tag_length => 4)
    port map(-- 
      msg => send_msg_msg,
      start_req => send_msg_start_req,
      start_ack => send_msg_start_ack,
      fin_req => send_msg_fin_req,
      fin_ack => send_msg_fin_ack,
      clk => clk,
      reset => reset,
      out_e_pipe_write_req => out_e_pipe_write_req(1 downto 1),
      out_e_pipe_write_ack => out_e_pipe_write_ack(1 downto 1),
      out_e_pipe_write_data => out_e_pipe_write_data(15 downto 8),
      tag_in => send_msg_tag_in,
      tag_out => send_msg_tag_out-- 
    ); -- 
  -- module set_rcon
  -- call arbiter for module set_rcon
  set_rcon_arbiter: SplitCallArbiterNoInargsNoOutargs -- 
    generic map( --
      name => "SplitCallArbiterNoInargsNoOutargs", num_reqs => 1,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => set_rcon_call_reqs,
      call_acks => set_rcon_call_acks,
      return_reqs => set_rcon_return_reqs,
      return_acks => set_rcon_return_acks,
      call_tag  => set_rcon_call_tag,
      return_tag  => set_rcon_return_tag,
      call_mtag => set_rcon_tag_in,
      return_mtag => set_rcon_tag_out,
      call_mreq => set_rcon_start_req,
      call_mack => set_rcon_start_ack,
      return_mreq => set_rcon_fin_req,
      return_mack => set_rcon_fin_ack,
      clk => clk, 
      reset => reset --
    ); --
  set_rcon_instance:set_rcon-- 
    generic map(tag_length => 2)
    port map(-- 
      start_req => set_rcon_start_req,
      start_ack => set_rcon_start_ack,
      fin_req => set_rcon_fin_req,
      fin_ack => set_rcon_fin_ack,
      clk => clk,
      reset => reset,
      memory_space_1_sr_req => memory_space_1_sr_req(0 downto 0),
      memory_space_1_sr_ack => memory_space_1_sr_ack(0 downto 0),
      memory_space_1_sr_addr => memory_space_1_sr_addr(3 downto 0),
      memory_space_1_sr_data => memory_space_1_sr_data(31 downto 0),
      memory_space_1_sr_tag => memory_space_1_sr_tag(17 downto 0),
      memory_space_1_sc_req => memory_space_1_sc_req(0 downto 0),
      memory_space_1_sc_ack => memory_space_1_sc_ack(0 downto 0),
      memory_space_1_sc_tag => memory_space_1_sc_tag(0 downto 0),
      input_e_pipe_read_req => input_e_pipe_read_req(1 downto 1),
      input_e_pipe_read_ack => input_e_pipe_read_ack(1 downto 1),
      input_e_pipe_read_data => input_e_pipe_read_data(15 downto 8),
      tag_in => set_rcon_tag_in,
      tag_out => set_rcon_tag_out-- 
    ); -- 
  -- module set_sbox
  -- call arbiter for module set_sbox
  set_sbox_arbiter: SplitCallArbiterNoInargsNoOutargs -- 
    generic map( --
      name => "SplitCallArbiterNoInargsNoOutargs", num_reqs => 1,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => set_sbox_call_reqs,
      call_acks => set_sbox_call_acks,
      return_reqs => set_sbox_return_reqs,
      return_acks => set_sbox_return_acks,
      call_tag  => set_sbox_call_tag,
      return_tag  => set_sbox_return_tag,
      call_mtag => set_sbox_tag_in,
      return_mtag => set_sbox_tag_out,
      call_mreq => set_sbox_start_req,
      call_mack => set_sbox_start_ack,
      return_mreq => set_sbox_fin_req,
      return_mack => set_sbox_fin_ack,
      clk => clk, 
      reset => reset --
    ); --
  set_sbox_instance:set_sbox-- 
    generic map(tag_length => 2)
    port map(-- 
      start_req => set_sbox_start_req,
      start_ack => set_sbox_start_ack,
      fin_req => set_sbox_fin_req,
      fin_ack => set_sbox_fin_ack,
      clk => clk,
      reset => reset,
      memory_space_2_sr_req => memory_space_2_sr_req(0 downto 0),
      memory_space_2_sr_ack => memory_space_2_sr_ack(0 downto 0),
      memory_space_2_sr_addr => memory_space_2_sr_addr(7 downto 0),
      memory_space_2_sr_data => memory_space_2_sr_data(7 downto 0),
      memory_space_2_sr_tag => memory_space_2_sr_tag(17 downto 0),
      memory_space_2_sc_req => memory_space_2_sc_req(0 downto 0),
      memory_space_2_sc_ack => memory_space_2_sc_ack(0 downto 0),
      memory_space_2_sc_tag => memory_space_2_sc_tag(0 downto 0),
      input_e_pipe_read_req => input_e_pipe_read_req(0 downto 0),
      input_e_pipe_read_ack => input_e_pipe_read_ack(0 downto 0),
      input_e_pipe_read_data => input_e_pipe_read_data(7 downto 0),
      tag_in => set_sbox_tag_in,
      tag_out => set_sbox_tag_out-- 
    ); -- 
  -- module shift_row
  shift_row_w_0 <= shift_row_in_args(127 downto 96);
  shift_row_w_1 <= shift_row_in_args(95 downto 64);
  shift_row_w_2 <= shift_row_in_args(63 downto 32);
  shift_row_w_3 <= shift_row_in_args(31 downto 0);
  shift_row_out_args <= shift_row_nw_0 & shift_row_nw_1 & shift_row_nw_2 & shift_row_nw_3 ;
  -- call arbiter for module shift_row
  shift_row_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 128,
      return_data_width => 128,
      callee_tag_length => 1,
      caller_tag_length => 2--
    )
    port map(-- 
      call_reqs => shift_row_call_reqs,
      call_acks => shift_row_call_acks,
      return_reqs => shift_row_return_reqs,
      return_acks => shift_row_return_acks,
      call_data  => shift_row_call_data,
      call_tag  => shift_row_call_tag,
      return_tag  => shift_row_return_tag,
      call_mtag => shift_row_tag_in,
      return_mtag => shift_row_tag_out,
      return_data =>shift_row_return_data,
      call_mreq => shift_row_start_req,
      call_mack => shift_row_start_ack,
      return_mreq => shift_row_fin_req,
      return_mack => shift_row_fin_ack,
      call_mdata => shift_row_in_args,
      return_mdata => shift_row_out_args,
      clk => clk, 
      reset => reset --
    ); --
  shift_row_instance:shift_row-- 
    generic map(tag_length => 3)
    port map(-- 
      w_0 => shift_row_w_0,
      w_1 => shift_row_w_1,
      w_2 => shift_row_w_2,
      w_3 => shift_row_w_3,
      nw_0 => shift_row_nw_0,
      nw_1 => shift_row_nw_1,
      nw_2 => shift_row_nw_2,
      nw_3 => shift_row_nw_3,
      start_req => shift_row_start_req,
      start_ack => shift_row_start_ack,
      fin_req => shift_row_fin_req,
      fin_ack => shift_row_fin_ack,
      clk => clk,
      reset => reset,
      tag_in => shift_row_tag_in,
      tag_out => shift_row_tag_out-- 
    ); -- 
  -- module top_module
  top_module_instance:top_module-- 
    generic map(tag_length => 2)
    port map(-- 
      start_req => top_module_start_req,
      start_ack => top_module_start_ack,
      fin_req => top_module_fin_req,
      fin_ack => top_module_fin_ack,
      clk => clk,
      reset => reset,
      memory_space_0_sr_req => memory_space_0_sr_req(0 downto 0),
      memory_space_0_sr_ack => memory_space_0_sr_ack(0 downto 0),
      memory_space_0_sr_addr => memory_space_0_sr_addr(0 downto 0),
      memory_space_0_sr_data => memory_space_0_sr_data(0 downto 0),
      memory_space_0_sr_tag => memory_space_0_sr_tag(18 downto 0),
      memory_space_0_sc_req => memory_space_0_sc_req(0 downto 0),
      memory_space_0_sc_ack => memory_space_0_sc_ack(0 downto 0),
      memory_space_0_sc_tag => memory_space_0_sc_tag(1 downto 0),
      counter_encry_call_reqs => counter_encry_call_reqs(0 downto 0),
      counter_encry_call_acks => counter_encry_call_acks(0 downto 0),
      counter_encry_call_data => counter_encry_call_data(255 downto 0),
      counter_encry_call_tag => counter_encry_call_tag(0 downto 0),
      counter_encry_return_reqs => counter_encry_return_reqs(0 downto 0),
      counter_encry_return_acks => counter_encry_return_acks(0 downto 0),
      counter_encry_return_data => counter_encry_return_data(127 downto 0),
      counter_encry_return_tag => counter_encry_return_tag(0 downto 0),
      decryption_engine_call_reqs => decryption_engine_call_reqs(0 downto 0),
      decryption_engine_call_acks => decryption_engine_call_acks(0 downto 0),
      decryption_engine_call_data => decryption_engine_call_data(255 downto 0),
      decryption_engine_call_tag => decryption_engine_call_tag(0 downto 0),
      decryption_engine_return_reqs => decryption_engine_return_reqs(0 downto 0),
      decryption_engine_return_acks => decryption_engine_return_acks(0 downto 0),
      decryption_engine_return_tag => decryption_engine_return_tag(0 downto 0),
      encryption_engine_call_reqs => encryption_engine_call_reqs(0 downto 0),
      encryption_engine_call_acks => encryption_engine_call_acks(0 downto 0),
      encryption_engine_call_data => encryption_engine_call_data(255 downto 0),
      encryption_engine_call_tag => encryption_engine_call_tag(0 downto 0),
      encryption_engine_return_reqs => encryption_engine_return_reqs(0 downto 0),
      encryption_engine_return_acks => encryption_engine_return_acks(0 downto 0),
      encryption_engine_return_tag => encryption_engine_return_tag(0 downto 0),
      encryption_key_reception_call_reqs => encryption_key_reception_call_reqs(0 downto 0),
      encryption_key_reception_call_acks => encryption_key_reception_call_acks(0 downto 0),
      encryption_key_reception_call_tag => encryption_key_reception_call_tag(2 downto 0),
      encryption_key_reception_return_reqs => encryption_key_reception_return_reqs(0 downto 0),
      encryption_key_reception_return_acks => encryption_key_reception_return_acks(0 downto 0),
      encryption_key_reception_return_data => encryption_key_reception_return_data(31 downto 0),
      encryption_key_reception_return_tag => encryption_key_reception_return_tag(2 downto 0),
      handshaking_call_reqs => handshaking_call_reqs(0 downto 0),
      handshaking_call_acks => handshaking_call_acks(0 downto 0),
      handshaking_call_tag => handshaking_call_tag(0 downto 0),
      handshaking_return_reqs => handshaking_return_reqs(0 downto 0),
      handshaking_return_acks => handshaking_return_acks(0 downto 0),
      handshaking_return_tag => handshaking_return_tag(0 downto 0),
      password_sequence_call_reqs => password_sequence_call_reqs(0 downto 0),
      password_sequence_call_acks => password_sequence_call_acks(0 downto 0),
      password_sequence_call_tag => password_sequence_call_tag(0 downto 0),
      password_sequence_return_reqs => password_sequence_return_reqs(0 downto 0),
      password_sequence_return_acks => password_sequence_return_acks(0 downto 0),
      password_sequence_return_tag => password_sequence_return_tag(0 downto 0),
      set_rcon_call_reqs => set_rcon_call_reqs(0 downto 0),
      set_rcon_call_acks => set_rcon_call_acks(0 downto 0),
      set_rcon_call_tag => set_rcon_call_tag(0 downto 0),
      set_rcon_return_reqs => set_rcon_return_reqs(0 downto 0),
      set_rcon_return_acks => set_rcon_return_acks(0 downto 0),
      set_rcon_return_tag => set_rcon_return_tag(0 downto 0),
      set_sbox_call_reqs => set_sbox_call_reqs(0 downto 0),
      set_sbox_call_acks => set_sbox_call_acks(0 downto 0),
      set_sbox_call_tag => set_sbox_call_tag(0 downto 0),
      set_sbox_return_reqs => set_sbox_return_reqs(0 downto 0),
      set_sbox_return_acks => set_sbox_return_acks(0 downto 0),
      set_sbox_return_tag => set_sbox_return_tag(0 downto 0),
      tag_in => top_module_tag_in,
      tag_out => top_module_tag_out-- 
    ); -- 
  -- module will be run forever 
  top_module_tag_in <= (others => '0');
  top_module_auto_run: auto_run generic map(use_delay => true)  port map(clk => clk, reset => reset, start_req => top_module_start_req, start_ack => top_module_start_ack,  fin_req => top_module_fin_req,  fin_ack => top_module_fin_ack);
  -- module two_mult
  two_mult_num_0 <= two_mult_in_args(7 downto 0);
  two_mult_out_args <= two_mult_op_0 ;
  -- call arbiter for module two_mult
  two_mult_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 8,
      return_data_width => 8,
      callee_tag_length => 1,
      caller_tag_length => 3--
    )
    port map(-- 
      call_reqs => two_mult_call_reqs,
      call_acks => two_mult_call_acks,
      return_reqs => two_mult_return_reqs,
      return_acks => two_mult_return_acks,
      call_data  => two_mult_call_data,
      call_tag  => two_mult_call_tag,
      return_tag  => two_mult_return_tag,
      call_mtag => two_mult_tag_in,
      return_mtag => two_mult_tag_out,
      return_data =>two_mult_return_data,
      call_mreq => two_mult_start_req,
      call_mack => two_mult_start_ack,
      return_mreq => two_mult_fin_req,
      return_mack => two_mult_fin_ack,
      call_mdata => two_mult_in_args,
      return_mdata => two_mult_out_args,
      clk => clk, 
      reset => reset --
    ); --
  two_mult_instance:two_mult-- 
    generic map(tag_length => 4)
    port map(-- 
      num_0 => two_mult_num_0,
      op_0 => two_mult_op_0,
      start_req => two_mult_start_req,
      start_ack => two_mult_start_ack,
      fin_req => two_mult_fin_req,
      fin_ack => two_mult_fin_ack,
      clk => clk,
      reset => reset,
      tag_in => two_mult_tag_in,
      tag_out => two_mult_tag_out-- 
    ); -- 
  input_d_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe input_d",
      num_reads => 4,
      num_writes => 1,
      data_width => 8,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 40 --
    )
    port map( -- 
      read_req => input_d_pipe_read_req,
      read_ack => input_d_pipe_read_ack,
      read_data => input_d_pipe_read_data,
      write_req => input_d_pipe_write_req,
      write_ack => input_d_pipe_write_ack,
      write_data => input_d_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  input_e_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe input_e",
      num_reads => 4,
      num_writes => 1,
      data_width => 8,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 40 --
    )
    port map( -- 
      read_req => input_e_pipe_read_req,
      read_ack => input_e_pipe_read_ack,
      read_data => input_e_pipe_read_data,
      write_req => input_e_pipe_write_req,
      write_ack => input_e_pipe_write_ack,
      write_data => input_e_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  out_d_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe out_d",
      num_reads => 1,
      num_writes => 2,
      data_width => 8,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 40 --
    )
    port map( -- 
      read_req => out_d_pipe_read_req,
      read_ack => out_d_pipe_read_ack,
      read_data => out_d_pipe_read_data,
      write_req => out_d_pipe_write_req,
      write_ack => out_d_pipe_write_ack,
      write_data => out_d_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  out_e_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe out_e",
      num_reads => 1,
      num_writes => 3,
      data_width => 8,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 40 --
    )
    port map( -- 
      read_req => out_e_pipe_read_req,
      read_ack => out_e_pipe_read_ack,
      read_data => out_e_pipe_read_data,
      write_req => out_e_pipe_write_req,
      write_ack => out_e_pipe_write_ack,
      write_data => out_e_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  MemorySpace_memory_space_0: ordered_memory_subsystem -- 
    generic map(-- 
      name => "memory_space_0",
      num_loads => 1,
      num_stores => 2,
      addr_width => 1,
      data_width => 1,
      tag_width => 2,
      time_stamp_width => 17,
      number_of_banks => 1,
      mux_degree => 2,
      demux_degree => 2,
      base_bank_addr_width => 1,
      base_bank_data_width => 1
      ) -- 
    port map(-- 
      lr_addr_in => memory_space_0_lr_addr,
      lr_req_in => memory_space_0_lr_req,
      lr_ack_out => memory_space_0_lr_ack,
      lr_tag_in => memory_space_0_lr_tag,
      lc_req_in => memory_space_0_lc_req,
      lc_ack_out => memory_space_0_lc_ack,
      lc_data_out => memory_space_0_lc_data,
      lc_tag_out => memory_space_0_lc_tag,
      sr_addr_in => memory_space_0_sr_addr,
      sr_data_in => memory_space_0_sr_data,
      sr_req_in => memory_space_0_sr_req,
      sr_ack_out => memory_space_0_sr_ack,
      sr_tag_in => memory_space_0_sr_tag,
      sc_req_in=> memory_space_0_sc_req,
      sc_ack_out => memory_space_0_sc_ack,
      sc_tag_out => memory_space_0_sc_tag,
      clock => clk,
      reset => reset); -- 
  MemorySpace_memory_space_1: ordered_memory_subsystem -- 
    generic map(-- 
      name => "memory_space_1",
      num_loads => 1,
      num_stores => 1,
      addr_width => 4,
      data_width => 32,
      tag_width => 1,
      time_stamp_width => 17,
      number_of_banks => 1,
      mux_degree => 2,
      demux_degree => 2,
      base_bank_addr_width => 4,
      base_bank_data_width => 32
      ) -- 
    port map(-- 
      lr_addr_in => memory_space_1_lr_addr,
      lr_req_in => memory_space_1_lr_req,
      lr_ack_out => memory_space_1_lr_ack,
      lr_tag_in => memory_space_1_lr_tag,
      lc_req_in => memory_space_1_lc_req,
      lc_ack_out => memory_space_1_lc_ack,
      lc_data_out => memory_space_1_lc_data,
      lc_tag_out => memory_space_1_lc_tag,
      sr_addr_in => memory_space_1_sr_addr,
      sr_data_in => memory_space_1_sr_data,
      sr_req_in => memory_space_1_sr_req,
      sr_ack_out => memory_space_1_sr_ack,
      sr_tag_in => memory_space_1_sr_tag,
      sc_req_in=> memory_space_1_sc_req,
      sc_ack_out => memory_space_1_sc_ack,
      sc_tag_out => memory_space_1_sc_tag,
      clock => clk,
      reset => reset); -- 
  MemorySpace_memory_space_2: ordered_memory_subsystem -- 
    generic map(-- 
      name => "memory_space_2",
      num_loads => 1,
      num_stores => 1,
      addr_width => 8,
      data_width => 8,
      tag_width => 1,
      time_stamp_width => 17,
      number_of_banks => 1,
      mux_degree => 2,
      demux_degree => 2,
      base_bank_addr_width => 8,
      base_bank_data_width => 8
      ) -- 
    port map(-- 
      lr_addr_in => memory_space_2_lr_addr,
      lr_req_in => memory_space_2_lr_req,
      lr_ack_out => memory_space_2_lr_ack,
      lr_tag_in => memory_space_2_lr_tag,
      lc_req_in => memory_space_2_lc_req,
      lc_ack_out => memory_space_2_lc_ack,
      lc_data_out => memory_space_2_lc_data,
      lc_tag_out => memory_space_2_lc_tag,
      sr_addr_in => memory_space_2_sr_addr,
      sr_data_in => memory_space_2_sr_data,
      sr_req_in => memory_space_2_sr_req,
      sr_ack_out => memory_space_2_sr_ack,
      sr_tag_in => memory_space_2_sr_tag,
      sc_req_in=> memory_space_2_sc_req,
      sc_ack_out => memory_space_2_sc_ack,
      sc_tag_out => memory_space_2_sc_tag,
      clock => clk,
      reset => reset); -- 
  -- 
end ahir_system_arch;
